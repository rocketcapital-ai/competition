{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "competitionName",
          "type": "string"
        }
      ],
      "name": "CompetitionActiveToggled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "competitionName",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newLocation",
          "type": "bytes32"
        }
      ],
      "name": "CompetitionRulesLocationChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "extensionName",
          "type": "string"
        }
      ],
      "name": "ExtensionActiveToggled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "extensionName",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newLocation",
          "type": "bytes32"
        }
      ],
      "name": "ExtensionInfoLocationChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "competitionName",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "competitionAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "rulesLocation",
          "type": "bytes32"
        }
      ],
      "name": "NewCompetitionRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "extensionName",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "extensionAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "informationLocation",
          "type": "bytes32"
        }
      ],
      "name": "NewExtensionRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "TokenAddressChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RCI_CHILD_ADMIN",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RCI_MAIN_ADMIN",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "addresses",
          "type": "address[]"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "batchCall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "competitionName",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "newLocation",
          "type": "bytes32"
        }
      ],
      "name": "changeCompetitionRulesLocation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "extensionName",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "newLocation",
          "type": "bytes32"
        }
      ],
      "name": "changeExtensionInfoLocation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "changeTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "competitionName",
          "type": "string"
        }
      ],
      "name": "getCompetitionActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "competitionName",
          "type": "string"
        }
      ],
      "name": "getCompetitionAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "competitionAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCompetitionList",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "competitionNames",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "competitionName",
          "type": "string"
        }
      ],
      "name": "getCompetitionRulesLocation",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "rulesLocation",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "extensionName",
          "type": "string"
        }
      ],
      "name": "getExtensionActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "extensionName",
          "type": "string"
        }
      ],
      "name": "getExtensionAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "extensionAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "extensionName",
          "type": "string"
        }
      ],
      "name": "getExtensionInfoLocation",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "informationLocation",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getExtensionList",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "extensionNames",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "competitionName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "competitionAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "rulesLocation",
          "type": "bytes32"
        }
      ],
      "name": "registerNewCompetition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "extensionName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "extensionAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "informationLocation",
          "type": "bytes32"
        }
      ],
      "name": "registerNewExtension",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "competitionName",
          "type": "string"
        }
      ],
      "name": "toggleCompetitionActive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "extensionName",
          "type": "string"
        }
      ],
      "name": "toggleExtensionActive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/AccessControlRci.sol",
    "19": "contracts/standard/utils/Context.sol",
    "21": "contracts/standard/utils/introspection/ERC165.sol",
    "22": "contracts/standard/utils/introspection/IERC165.sol",
    "28": "interfaces/IRegistry.sol",
    "5": "contracts/Registry.sol",
    "7": "contracts/standard/access/AccessControl.sol"
  },
  "ast": {
    "absolutePath": "contracts/Registry.sol",
    "exportedSymbols": {
      "AccessControl": [
        4795
      ],
      "AccessControlRci": [
        67
      ],
      "Context": [
        6402
      ],
      "ERC165": [
        6562
      ],
      "IAccessControl": [
        4515
      ],
      "IERC165": [
        6574
      ],
      "IRegistry": [
        10361
      ],
      "Registry": [
        4151
      ]
    },
    "id": 4152,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3586,
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:5"
      },
      {
        "absolutePath": "contracts/AccessControlRci.sol",
        "file": "./AccessControlRci.sol",
        "id": 3587,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4152,
        "sourceUnit": 68,
        "src": "57:32:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IRegistry.sol",
        "file": "./../interfaces/IRegistry.sol",
        "id": 3588,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4152,
        "sourceUnit": 10362,
        "src": "90:39:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3589,
              "name": "AccessControlRci",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 67,
              "src": "153:16:5"
            },
            "id": 3590,
            "nodeType": "InheritanceSpecifier",
            "src": "153:16:5"
          },
          {
            "baseName": {
              "id": 3591,
              "name": "IRegistry",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10361,
              "src": "171:9:5"
            },
            "id": 3592,
            "nodeType": "InheritanceSpecifier",
            "src": "171:9:5"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4151,
        "linearizedBaseContracts": [
          4151,
          10361,
          67,
          4795,
          6562,
          6574,
          4515,
          6402
        ],
        "name": "Registry",
        "nameLocation": "141:8:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Registry.Comp",
            "id": 3599,
            "members": [
              {
                "constant": false,
                "id": 3594,
                "mutability": "mutable",
                "name": "active",
                "nameLocation": "212:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 3599,
                "src": "207:11:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 3593,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "207:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3596,
                "mutability": "mutable",
                "name": "competitionAddress",
                "nameLocation": "236:18:5",
                "nodeType": "VariableDeclaration",
                "scope": 3599,
                "src": "228:26:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3595,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "228:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3598,
                "mutability": "mutable",
                "name": "rulesLocation",
                "nameLocation": "272:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 3599,
                "src": "264:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 3597,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "264:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Comp",
            "nameLocation": "193:4:5",
            "nodeType": "StructDefinition",
            "scope": 4151,
            "src": "186:106:5",
            "visibility": "public"
          },
          {
            "canonicalName": "Registry.Ext",
            "id": 3606,
            "members": [
              {
                "constant": false,
                "id": 3601,
                "mutability": "mutable",
                "name": "active",
                "nameLocation": "323:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 3606,
                "src": "318:11:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 3600,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "318:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3603,
                "mutability": "mutable",
                "name": "extensionAddress",
                "nameLocation": "347:16:5",
                "nodeType": "VariableDeclaration",
                "scope": 3606,
                "src": "339:24:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3602,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "339:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3605,
                "mutability": "mutable",
                "name": "informationLocation",
                "nameLocation": "381:19:5",
                "nodeType": "VariableDeclaration",
                "scope": 3606,
                "src": "373:27:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 3604,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "373:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Ext",
            "nameLocation": "305:3:5",
            "nodeType": "StructDefinition",
            "scope": 4151,
            "src": "298:109:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3608,
            "mutability": "mutable",
            "name": "_token",
            "nameLocation": "428:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 4151,
            "src": "412:22:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3607,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "412:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3613,
            "mutability": "mutable",
            "name": "_competition",
            "nameLocation": "472:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 4151,
            "src": "440:44:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Comp_$3599_storage_$",
              "typeString": "mapping(string => struct Registry.Comp)"
            },
            "typeName": {
              "id": 3612,
              "keyType": {
                "id": 3609,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "448:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "440:23:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Comp_$3599_storage_$",
                "typeString": "mapping(string => struct Registry.Comp)"
              },
              "valueType": {
                "id": 3611,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3610,
                  "name": "Comp",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3599,
                  "src": "458:4:5"
                },
                "referencedDeclaration": 3599,
                "src": "458:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Comp_$3599_storage_ptr",
                  "typeString": "struct Registry.Comp"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3618,
            "mutability": "mutable",
            "name": "_extension",
            "nameLocation": "521:10:5",
            "nodeType": "VariableDeclaration",
            "scope": 4151,
            "src": "490:41:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Ext_$3606_storage_$",
              "typeString": "mapping(string => struct Registry.Ext)"
            },
            "typeName": {
              "id": 3617,
              "keyType": {
                "id": 3614,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "498:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "490:22:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Ext_$3606_storage_$",
                "typeString": "mapping(string => struct Registry.Ext)"
              },
              "valueType": {
                "id": 3616,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3615,
                  "name": "Ext",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3606,
                  "src": "508:3:5"
                },
                "referencedDeclaration": 3606,
                "src": "508:3:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Ext_$3606_storage_ptr",
                  "typeString": "struct Registry.Ext"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3621,
            "mutability": "mutable",
            "name": "_competitionNames",
            "nameLocation": "554:17:5",
            "nodeType": "VariableDeclaration",
            "scope": 4151,
            "src": "537:34:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 3619,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "537:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 3620,
              "nodeType": "ArrayTypeName",
              "src": "537:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3624,
            "mutability": "mutable",
            "name": "_extensionNames",
            "nameLocation": "594:15:5",
            "nodeType": "VariableDeclaration",
            "scope": 4151,
            "src": "577:32:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 3622,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "577:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 3623,
              "nodeType": "ArrayTypeName",
              "src": "577:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3630,
              "nodeType": "Block",
              "src": "635:38:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3627,
                      "name": "_initializeRciAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "645:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "645:21:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3629,
                  "nodeType": "ExpressionStatement",
                  "src": "645:21:5"
                }
              ]
            },
            "id": 3631,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "628:2:5"
            },
            "returnParameters": {
              "id": 3626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "635:0:5"
            },
            "scope": 4151,
            "src": "617:56:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10223
            ],
            "body": {
              "id": 3698,
              "nodeType": "Block",
              "src": "831:647:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3644,
                          "name": "competitionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3635,
                          "src": "849:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "879:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "871:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3645,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "871:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "871:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "849:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265676973747279202d2072656769737465724e6577436f6d7065746974696f6e3a2043616e6e6f74207265676973746572203020616464726573732e",
                        "id": 3650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "883:63:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30af466c9bb9e0705fa9021139cdc0f2b6aa463f1203af539639df848b7b706c",
                          "typeString": "literal_string \"Registry - registerNewCompetition: Cannot register 0 address.\""
                        },
                        "value": "Registry - registerNewCompetition: Cannot register 0 address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30af466c9bb9e0705fa9021139cdc0f2b6aa463f1203af539639df848b7b706c",
                          "typeString": "literal_string \"Registry - registerNewCompetition: Cannot register 0 address.\""
                        }
                      ],
                      "id": 3643,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "841:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "841:106:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3652,
                  "nodeType": "ExpressionStatement",
                  "src": "841:106:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 3659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3654,
                          "name": "rulesLocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3637,
                          "src": "965:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "990:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "982:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 3655,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "982:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "982:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "965:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265676973747279202d2072756c65734c6f636174696f6e3a2043616e6e6f74207365742072756c6573206c6f636174696f6e20746f20302e",
                        "id": 3660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "994:59:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_86dd14996ed4be6b3ef302c0fbfad486195fe3de904e0e4d691a3bec5fbcfdfc",
                          "typeString": "literal_string \"Registry - rulesLocation: Cannot set rules location to 0.\""
                        },
                        "value": "Registry - rulesLocation: Cannot set rules location to 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_86dd14996ed4be6b3ef302c0fbfad486195fe3de904e0e4d691a3bec5fbcfdfc",
                          "typeString": "literal_string \"Registry - rulesLocation: Cannot set rules location to 0.\""
                        }
                      ],
                      "id": 3653,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "957:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "957:97:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3662,
                  "nodeType": "ExpressionStatement",
                  "src": "957:97:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3664,
                              "name": "_competition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3613,
                              "src": "1072:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Comp_$3599_storage_$",
                                "typeString": "mapping(string memory => struct Registry.Comp storage ref)"
                              }
                            },
                            "id": 3666,
                            "indexExpression": {
                              "id": 3665,
                              "name": "competitionName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3633,
                              "src": "1085:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1072:29:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Comp_$3599_storage",
                              "typeString": "struct Registry.Comp storage ref"
                            }
                          },
                          "id": 3667,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "competitionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3596,
                          "src": "1072:48:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1132:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1124:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3668,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1124:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1124:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1072:62:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265676973747279202d2072656769737465724e6577436f6d7065746974696f6e3a20436f6d7065746974696f6e20616c7265616479206578697374732e",
                        "id": 3673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1136:64:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a98fdca0c9f33fcefa970c70ef823e4d8bdd8a5d2d150aee13ee41a7eaabd0b1",
                          "typeString": "literal_string \"Registry - registerNewCompetition: Competition already exists.\""
                        },
                        "value": "Registry - registerNewCompetition: Competition already exists."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a98fdca0c9f33fcefa970c70ef823e4d8bdd8a5d2d150aee13ee41a7eaabd0b1",
                          "typeString": "literal_string \"Registry - registerNewCompetition: Competition already exists.\""
                        }
                      ],
                      "id": 3663,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1064:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1064:137:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3675,
                  "nodeType": "ExpressionStatement",
                  "src": "1064:137:5"
                },
                {
                  "expression": {
                    "id": 3684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3676,
                        "name": "_competition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3613,
                        "src": "1211:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Comp_$3599_storage_$",
                          "typeString": "mapping(string memory => struct Registry.Comp storage ref)"
                        }
                      },
                      "id": 3678,
                      "indexExpression": {
                        "id": 3677,
                        "name": "competitionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3633,
                        "src": "1224:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1211:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Comp_$3599_storage",
                        "typeString": "struct Registry.Comp storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 3680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1256:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "id": 3681,
                          "name": "competitionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3635,
                          "src": "1281:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3682,
                          "name": "rulesLocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3637,
                          "src": "1315:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 3679,
                        "name": "Comp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3599,
                        "src": "1243:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Comp_$3599_storage_ptr_$",
                          "typeString": "type(struct Registry.Comp storage pointer)"
                        }
                      },
                      "id": 3683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "active",
                        "competitionAddress",
                        "rulesLocation"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1243:87:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Comp_$3599_memory_ptr",
                        "typeString": "struct Registry.Comp memory"
                      }
                    },
                    "src": "1211:119:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Comp_$3599_storage",
                      "typeString": "struct Registry.Comp storage ref"
                    }
                  },
                  "id": 3685,
                  "nodeType": "ExpressionStatement",
                  "src": "1211:119:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3689,
                        "name": "competitionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3633,
                        "src": "1363:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 3686,
                        "name": "_competitionNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3621,
                        "src": "1340:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 3688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1340:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$bound_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 3690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1340:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3691,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:39:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3693,
                        "name": "competitionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3633,
                        "src": "1420:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 3694,
                        "name": "competitionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3635,
                        "src": "1437:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3695,
                        "name": "rulesLocation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3637,
                        "src": "1457:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3692,
                      "name": "NewCompetitionRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10328,
                      "src": "1395:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,address,bytes32)"
                      }
                    },
                    "id": 3696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1395:76:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3697,
                  "nodeType": "EmitStatement",
                  "src": "1390:81:5"
                }
              ]
            },
            "functionSelector": "cf4eb013",
            "id": 3699,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3641,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3640,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "817:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "817:9:5"
              }
            ],
            "name": "registerNewCompetition",
            "nameLocation": "688:22:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3639,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "808:8:5"
            },
            "parameters": {
              "id": 3638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3633,
                  "mutability": "mutable",
                  "name": "competitionName",
                  "nameLocation": "727:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3699,
                  "src": "711:31:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3632,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3635,
                  "mutability": "mutable",
                  "name": "competitionAddress",
                  "nameLocation": "752:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3699,
                  "src": "744:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3634,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "744:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3637,
                  "mutability": "mutable",
                  "name": "rulesLocation",
                  "nameLocation": "780:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3699,
                  "src": "772:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3636,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "772:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:84:5"
            },
            "returnParameters": {
              "id": 3642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "831:0:5"
            },
            "scope": 4151,
            "src": "679:799:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10228
            ],
            "body": {
              "id": 3735,
              "nodeType": "Block",
              "src": "1586:345:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3708,
                              "name": "_competition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3613,
                              "src": "1604:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Comp_$3599_storage_$",
                                "typeString": "mapping(string memory => struct Registry.Comp storage ref)"
                              }
                            },
                            "id": 3710,
                            "indexExpression": {
                              "id": 3709,
                              "name": "competitionName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3701,
                              "src": "1617:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1604:29:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Comp_$3599_storage",
                              "typeString": "struct Registry.Comp storage ref"
                            }
                          },
                          "id": 3711,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "competitionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3596,
                          "src": "1604:48:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1664:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1656:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3712,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1656:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1656:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1604:62:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265676973747279202d20746f67676c65436f6d7065746974696f6e4163746976653a20436f6d7065746974696f6e20646f6573206e6f742065786973742e205573652066756e6374696f6e202772656769737465724e6577436f6d7065746974696f6e2720696e73746561642e",
                        "id": 3717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1668:112:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de371222d1297def2bfb138e672842e17876ff1f7683a8a1a2cdd03511d4993f",
                          "typeString": "literal_string \"Registry - toggleCompetitionActive: Competition does not exist. Use function 'registerNewCompetition' instead.\""
                        },
                        "value": "Registry - toggleCompetitionActive: Competition does not exist. Use function 'registerNewCompetition' instead."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de371222d1297def2bfb138e672842e17876ff1f7683a8a1a2cdd03511d4993f",
                          "typeString": "literal_string \"Registry - toggleCompetitionActive: Competition does not exist. Use function 'registerNewCompetition' instead.\""
                        }
                      ],
                      "id": 3707,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1596:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1596:185:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3719,
                  "nodeType": "ExpressionStatement",
                  "src": "1596:185:5"
                },
                {
                  "expression": {
                    "id": 3729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3720,
                          "name": "_competition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3613,
                          "src": "1791:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Comp_$3599_storage_$",
                            "typeString": "mapping(string memory => struct Registry.Comp storage ref)"
                          }
                        },
                        "id": 3722,
                        "indexExpression": {
                          "id": 3721,
                          "name": "competitionName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3701,
                          "src": "1804:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1791:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Comp_$3599_storage",
                          "typeString": "struct Registry.Comp storage ref"
                        }
                      },
                      "id": 3723,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3594,
                      "src": "1791:36:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "1830:37:5",
                      "subExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 3724,
                            "name": "_competition",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3613,
                            "src": "1831:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Comp_$3599_storage_$",
                              "typeString": "mapping(string memory => struct Registry.Comp storage ref)"
                            }
                          },
                          "id": 3726,
                          "indexExpression": {
                            "id": 3725,
                            "name": "competitionName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3701,
                            "src": "1844:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1831:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Comp_$3599_storage",
                            "typeString": "struct Registry.Comp storage ref"
                          }
                        },
                        "id": 3727,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3594,
                        "src": "1831:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1791:76:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3730,
                  "nodeType": "ExpressionStatement",
                  "src": "1791:76:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3732,
                        "name": "competitionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3701,
                        "src": "1908:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 3731,
                      "name": "CompetitionActiveToggled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10332,
                      "src": "1883:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1883:41:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3734,
                  "nodeType": "EmitStatement",
                  "src": "1878:46:5"
                }
              ]
            },
            "functionSelector": "06bbb7f6",
            "id": 3736,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3705,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3704,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "1572:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1572:9:5"
              }
            ],
            "name": "toggleCompetitionActive",
            "nameLocation": "1493:23:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3703,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1563:8:5"
            },
            "parameters": {
              "id": 3702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3701,
                  "mutability": "mutable",
                  "name": "competitionName",
                  "nameLocation": "1533:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3736,
                  "src": "1517:31:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3700,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1517:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1516:33:5"
            },
            "returnParameters": {
              "id": 3706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1586:0:5"
            },
            "scope": 4151,
            "src": "1484:447:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10235
            ],
            "body": {
              "id": 3781,
              "nodeType": "Block",
              "src": "2067:468:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3747,
                              "name": "_competition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3613,
                              "src": "2085:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Comp_$3599_storage_$",
                                "typeString": "mapping(string memory => struct Registry.Comp storage ref)"
                              }
                            },
                            "id": 3749,
                            "indexExpression": {
                              "id": 3748,
                              "name": "competitionName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3738,
                              "src": "2098:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2085:29:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Comp_$3599_storage",
                              "typeString": "struct Registry.Comp storage ref"
                            }
                          },
                          "id": 3750,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "competitionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3596,
                          "src": "2085:48:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3753,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2145:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3752,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2137:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3751,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2137:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2137:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2085:62:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265676973747279202d206368616e6765436f6d7065746974696f6e52756c65734c6f636174696f6e3a20436f6d7065746974696f6e20646f6573206e6f742065786973742e205573652066756e6374696f6e202772656769737465724e6577436f6d7065746974696f6e2720696e73746561642e",
                        "id": 3756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2149:119:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fdfc6ccba0fd85fdf9f1bd56fc67f3ce884457cc092976df41c59a171809c555",
                          "typeString": "literal_string \"Registry - changeCompetitionRulesLocation: Competition does not exist. Use function 'registerNewCompetition' instead.\""
                        },
                        "value": "Registry - changeCompetitionRulesLocation: Competition does not exist. Use function 'registerNewCompetition' instead."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fdfc6ccba0fd85fdf9f1bd56fc67f3ce884457cc092976df41c59a171809c555",
                          "typeString": "literal_string \"Registry - changeCompetitionRulesLocation: Competition does not exist. Use function 'registerNewCompetition' instead.\""
                        }
                      ],
                      "id": 3746,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2077:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2077:192:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3758,
                  "nodeType": "ExpressionStatement",
                  "src": "2077:192:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 3765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3760,
                          "name": "newLocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3740,
                          "src": "2287:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2310:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2302:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 3761,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2302:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2302:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2287:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265676973747279202d206368616e6765436f6d7065746974696f6e52756c65734c6f636174696f6e3a2043616e6e6f742073657420746f203020616464726573732e",
                        "id": 3766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2314:69:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70547884221783ae67e850b88c69356cce41717a35a1f9901e87b2e562ffa6fe",
                          "typeString": "literal_string \"Registry - changeCompetitionRulesLocation: Cannot set to 0 address.\""
                        },
                        "value": "Registry - changeCompetitionRulesLocation: Cannot set to 0 address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70547884221783ae67e850b88c69356cce41717a35a1f9901e87b2e562ffa6fe",
                          "typeString": "literal_string \"Registry - changeCompetitionRulesLocation: Cannot set to 0 address.\""
                        }
                      ],
                      "id": 3759,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2279:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2279:105:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3768,
                  "nodeType": "ExpressionStatement",
                  "src": "2279:105:5"
                },
                {
                  "expression": {
                    "id": 3774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3769,
                          "name": "_competition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3613,
                          "src": "2394:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Comp_$3599_storage_$",
                            "typeString": "mapping(string memory => struct Registry.Comp storage ref)"
                          }
                        },
                        "id": 3771,
                        "indexExpression": {
                          "id": 3770,
                          "name": "competitionName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3738,
                          "src": "2407:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2394:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Comp_$3599_storage",
                          "typeString": "struct Registry.Comp storage ref"
                        }
                      },
                      "id": 3772,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rulesLocation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3598,
                      "src": "2394:43:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3773,
                      "name": "newLocation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3740,
                      "src": "2440:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2394:57:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 3775,
                  "nodeType": "ExpressionStatement",
                  "src": "2394:57:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3777,
                        "name": "competitionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3738,
                        "src": "2499:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 3778,
                        "name": "newLocation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3740,
                        "src": "2516:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3776,
                      "name": "CompetitionRulesLocationChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10338,
                      "src": "2467:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32)"
                      }
                    },
                    "id": 3779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2467:61:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3780,
                  "nodeType": "EmitStatement",
                  "src": "2462:66:5"
                }
              ]
            },
            "functionSelector": "ff280a16",
            "id": 3782,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3744,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3743,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "2053:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2053:9:5"
              }
            ],
            "name": "changeCompetitionRulesLocation",
            "nameLocation": "1946:30:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3742,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2044:8:5"
            },
            "parameters": {
              "id": 3741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3738,
                  "mutability": "mutable",
                  "name": "competitionName",
                  "nameLocation": "1993:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3782,
                  "src": "1977:31:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3737,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1977:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3740,
                  "mutability": "mutable",
                  "name": "newLocation",
                  "nameLocation": "2018:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3782,
                  "src": "2010:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3739,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2010:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1976:54:5"
            },
            "returnParameters": {
              "id": 3745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2067:0:5"
            },
            "scope": 4151,
            "src": "1937:598:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10240
            ],
            "body": {
              "id": 3808,
              "nodeType": "Block",
              "src": "2625:185:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3791,
                          "name": "newAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3784,
                          "src": "2643:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2665:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2657:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3792,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2657:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2657:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2643:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265676973747279202d206368616e6765546f6b656e416464726573733a2043616e6e6f742073657420746f203020616464726573732e",
                        "id": 3797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2669:57:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1b4792d009341355ece03d883e4b3dfa330e36310208b8ab38a2f18d9977d45",
                          "typeString": "literal_string \"Registry - changeTokenAddress: Cannot set to 0 address.\""
                        },
                        "value": "Registry - changeTokenAddress: Cannot set to 0 address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1b4792d009341355ece03d883e4b3dfa330e36310208b8ab38a2f18d9977d45",
                          "typeString": "literal_string \"Registry - changeTokenAddress: Cannot set to 0 address.\""
                        }
                      ],
                      "id": 3790,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2635:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2635:92:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3799,
                  "nodeType": "ExpressionStatement",
                  "src": "2635:92:5"
                },
                {
                  "expression": {
                    "id": 3802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3800,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3608,
                      "src": "2737:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3801,
                      "name": "newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3784,
                      "src": "2746:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2737:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3803,
                  "nodeType": "ExpressionStatement",
                  "src": "2737:19:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3805,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3784,
                        "src": "2792:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3804,
                      "name": "TokenAddressChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10342,
                      "src": "2772:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2772:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3807,
                  "nodeType": "EmitStatement",
                  "src": "2767:36:5"
                }
              ]
            },
            "functionSelector": "c9cda91f",
            "id": 3809,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3788,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3787,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "2611:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2611:9:5"
              }
            ],
            "name": "changeTokenAddress",
            "nameLocation": "2550:18:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3786,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2602:8:5"
            },
            "parameters": {
              "id": 3785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3784,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "2577:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3809,
                  "src": "2569:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2569:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2568:20:5"
            },
            "returnParameters": {
              "id": 3789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2625:0:5"
            },
            "scope": 4151,
            "src": "2541:269:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10249
            ],
            "body": {
              "id": 3876,
              "nodeType": "Block",
              "src": "2967:651:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3822,
                          "name": "extensionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3813,
                          "src": "2985:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3013:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3005:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3823,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3005:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3005:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2985:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265676973747279202d2072656769737465724e6577457874656e73696f6e3a2043616e6e6f74207265676973746572203020616464726573732e",
                        "id": 3828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3017:61:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b54a9898115ad84028617b47cc1178757012aa86249ad2003b79ead00543cb21",
                          "typeString": "literal_string \"Registry - registerNewExtension: Cannot register 0 address.\""
                        },
                        "value": "Registry - registerNewExtension: Cannot register 0 address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b54a9898115ad84028617b47cc1178757012aa86249ad2003b79ead00543cb21",
                          "typeString": "literal_string \"Registry - registerNewExtension: Cannot register 0 address.\""
                        }
                      ],
                      "id": 3821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2977:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2977:102:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3830,
                  "nodeType": "ExpressionStatement",
                  "src": "2977:102:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 3837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3832,
                          "name": "informationLocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3815,
                          "src": "3097:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3128:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3120:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 3833,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3120:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3120:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "3097:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265676973747279202d2072656769737465724e6577457874656e73696f6e3a2043616e6e6f742073657420696e666f726d6174696f6e206c6f636174696f6e20746f20302e",
                        "id": 3838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3132:72:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_caa7584207704dbf1809352e5f60f9eaedd4c6d66cdf28a5338efd04de7d0e64",
                          "typeString": "literal_string \"Registry - registerNewExtension: Cannot set information location to 0.\""
                        },
                        "value": "Registry - registerNewExtension: Cannot set information location to 0."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_caa7584207704dbf1809352e5f60f9eaedd4c6d66cdf28a5338efd04de7d0e64",
                          "typeString": "literal_string \"Registry - registerNewExtension: Cannot set information location to 0.\""
                        }
                      ],
                      "id": 3831,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3089:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3089:116:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3840,
                  "nodeType": "ExpressionStatement",
                  "src": "3089:116:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3842,
                              "name": "_extension",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3618,
                              "src": "3223:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Ext_$3606_storage_$",
                                "typeString": "mapping(string memory => struct Registry.Ext storage ref)"
                              }
                            },
                            "id": 3844,
                            "indexExpression": {
                              "id": 3843,
                              "name": "extensionName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3811,
                              "src": "3234:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3223:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ext_$3606_storage",
                              "typeString": "struct Registry.Ext storage ref"
                            }
                          },
                          "id": 3845,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "extensionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3603,
                          "src": "3223:42:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3277:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3269:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3846,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3269:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3269:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3223:56:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265676973747279202d2072656769737465724e6577457874656e73696f6e3a20457874656e73696f6e20616c7265616479206578697374732e",
                        "id": 3851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3281:60:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9efa177c71ff8f0b339b9f10834754f26bdfa91f3cf41597983c08d6ee8088a5",
                          "typeString": "literal_string \"Registry - registerNewExtension: Extension already exists.\""
                        },
                        "value": "Registry - registerNewExtension: Extension already exists."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9efa177c71ff8f0b339b9f10834754f26bdfa91f3cf41597983c08d6ee8088a5",
                          "typeString": "literal_string \"Registry - registerNewExtension: Extension already exists.\""
                        }
                      ],
                      "id": 3841,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3215:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3215:127:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3853,
                  "nodeType": "ExpressionStatement",
                  "src": "3215:127:5"
                },
                {
                  "expression": {
                    "id": 3862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 3854,
                        "name": "_extension",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3618,
                        "src": "3352:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Ext_$3606_storage_$",
                          "typeString": "mapping(string memory => struct Registry.Ext storage ref)"
                        }
                      },
                      "id": 3856,
                      "indexExpression": {
                        "id": 3855,
                        "name": "extensionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3811,
                        "src": "3363:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3352:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ext_$3606_storage",
                        "typeString": "struct Registry.Ext storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 3858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3392:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "id": 3859,
                          "name": "extensionAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3813,
                          "src": "3415:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3860,
                          "name": "informationLocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3815,
                          "src": "3453:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 3857,
                        "name": "Ext",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3606,
                        "src": "3380:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Ext_$3606_storage_ptr_$",
                          "typeString": "type(struct Registry.Ext storage pointer)"
                        }
                      },
                      "id": 3861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "active",
                        "extensionAddress",
                        "informationLocation"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3380:94:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Ext_$3606_memory_ptr",
                        "typeString": "struct Registry.Ext memory"
                      }
                    },
                    "src": "3352:122:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Ext_$3606_storage",
                      "typeString": "struct Registry.Ext storage ref"
                    }
                  },
                  "id": 3863,
                  "nodeType": "ExpressionStatement",
                  "src": "3352:122:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3867,
                        "name": "extensionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3811,
                        "src": "3505:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 3864,
                        "name": "_extensionNames",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3624,
                        "src": "3484:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 3866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3484:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$bound_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                        "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                      }
                    },
                    "id": 3868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3484:35:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3869,
                  "nodeType": "ExpressionStatement",
                  "src": "3484:35:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3871,
                        "name": "extensionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3811,
                        "src": "3558:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 3872,
                        "name": "extensionAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3813,
                        "src": "3573:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3873,
                        "name": "informationLocation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3815,
                        "src": "3591:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3870,
                      "name": "NewExtensionRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10350,
                      "src": "3535:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,address,bytes32)"
                      }
                    },
                    "id": 3874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3535:76:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3875,
                  "nodeType": "EmitStatement",
                  "src": "3530:81:5"
                }
              ]
            },
            "functionSelector": "35f2d3c6",
            "id": 3877,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3819,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3818,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "2953:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2953:9:5"
              }
            ],
            "name": "registerNewExtension",
            "nameLocation": "2825:20:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3817,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2944:8:5"
            },
            "parameters": {
              "id": 3816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3811,
                  "mutability": "mutable",
                  "name": "extensionName",
                  "nameLocation": "2862:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3877,
                  "src": "2846:29:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3810,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2846:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3813,
                  "mutability": "mutable",
                  "name": "extensionAddress",
                  "nameLocation": "2884:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3877,
                  "src": "2876:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3812,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2876:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3815,
                  "mutability": "mutable",
                  "name": "informationLocation",
                  "nameLocation": "2910:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3877,
                  "src": "2902:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3814,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2902:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2845:85:5"
            },
            "returnParameters": {
              "id": 3820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2967:0:5"
            },
            "scope": 4151,
            "src": "2816:802:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10254
            ],
            "body": {
              "id": 3913,
              "nodeType": "Block",
              "src": "3726:321:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3886,
                              "name": "_extension",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3618,
                              "src": "3744:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Ext_$3606_storage_$",
                                "typeString": "mapping(string memory => struct Registry.Ext storage ref)"
                              }
                            },
                            "id": 3888,
                            "indexExpression": {
                              "id": 3887,
                              "name": "extensionName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3879,
                              "src": "3755:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3744:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ext_$3606_storage",
                              "typeString": "struct Registry.Ext storage ref"
                            }
                          },
                          "id": 3889,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "extensionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3603,
                          "src": "3744:42:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3798:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3790:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3890,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3790:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3790:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3744:56:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265676973747279202d20746f67676c65457874656e73696f6e4163746976653a20457874656e73696f6e20646f6573206e6f742065786973742e205573652066756e6374696f6e202772656769737465724e6577457874656e73696f6e2720696e73746561642e",
                        "id": 3895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3802:106:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c4d74816cdf1df461c532fe5350c59662bb012156687e313962cd71f07d598d",
                          "typeString": "literal_string \"Registry - toggleExtensionActive: Extension does not exist. Use function 'registerNewExtension' instead.\""
                        },
                        "value": "Registry - toggleExtensionActive: Extension does not exist. Use function 'registerNewExtension' instead."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c4d74816cdf1df461c532fe5350c59662bb012156687e313962cd71f07d598d",
                          "typeString": "literal_string \"Registry - toggleExtensionActive: Extension does not exist. Use function 'registerNewExtension' instead.\""
                        }
                      ],
                      "id": 3885,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3736:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3736:173:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3897,
                  "nodeType": "ExpressionStatement",
                  "src": "3736:173:5"
                },
                {
                  "expression": {
                    "id": 3907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3898,
                          "name": "_extension",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3618,
                          "src": "3919:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Ext_$3606_storage_$",
                            "typeString": "mapping(string memory => struct Registry.Ext storage ref)"
                          }
                        },
                        "id": 3900,
                        "indexExpression": {
                          "id": 3899,
                          "name": "extensionName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3879,
                          "src": "3930:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3919:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ext_$3606_storage",
                          "typeString": "struct Registry.Ext storage ref"
                        }
                      },
                      "id": 3901,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3601,
                      "src": "3919:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "3954:33:5",
                      "subExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 3902,
                            "name": "_extension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3618,
                            "src": "3955:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Ext_$3606_storage_$",
                              "typeString": "mapping(string memory => struct Registry.Ext storage ref)"
                            }
                          },
                          "id": 3904,
                          "indexExpression": {
                            "id": 3903,
                            "name": "extensionName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3879,
                            "src": "3966:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3955:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Ext_$3606_storage",
                            "typeString": "struct Registry.Ext storage ref"
                          }
                        },
                        "id": 3905,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "active",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3601,
                        "src": "3955:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3919:68:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3908,
                  "nodeType": "ExpressionStatement",
                  "src": "3919:68:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3910,
                        "name": "extensionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3879,
                        "src": "4026:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 3909,
                      "name": "ExtensionActiveToggled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10354,
                      "src": "4003:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4003:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3912,
                  "nodeType": "EmitStatement",
                  "src": "3998:42:5"
                }
              ]
            },
            "functionSelector": "41d7238e",
            "id": 3914,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3883,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3882,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "3712:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "3712:9:5"
              }
            ],
            "name": "toggleExtensionActive",
            "nameLocation": "3637:21:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3881,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3703:8:5"
            },
            "parameters": {
              "id": 3880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3879,
                  "mutability": "mutable",
                  "name": "extensionName",
                  "nameLocation": "3675:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3914,
                  "src": "3659:29:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3878,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3659:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3658:31:5"
            },
            "returnParameters": {
              "id": 3884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3726:0:5"
            },
            "scope": 4151,
            "src": "3628:419:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10261
            ],
            "body": {
              "id": 3959,
              "nodeType": "Block",
              "src": "4182:453:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 3925,
                              "name": "_extension",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3618,
                              "src": "4200:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Ext_$3606_storage_$",
                                "typeString": "mapping(string memory => struct Registry.Ext storage ref)"
                              }
                            },
                            "id": 3927,
                            "indexExpression": {
                              "id": 3926,
                              "name": "extensionName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3916,
                              "src": "4211:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4200:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Ext_$3606_storage",
                              "typeString": "struct Registry.Ext storage ref"
                            }
                          },
                          "id": 3928,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "extensionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3603,
                          "src": "4200:42:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3931,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4254:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4246:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3929,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4246:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4246:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4200:56:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265676973747279202d206368616e6765457874656e73696f6e496e666f4c6f636174696f6e3a20436f6d7065746974696f6e20646f6573206e6f742065786973742e205573652066756e6374696f6e202772656769737465724e6577436f6d7065746974696f6e2720696e73746561642e",
                        "id": 3934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4258:116:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149718046ca08d2db441ef75608667e338bdcaf071e386015f4638d85af99a7a",
                          "typeString": "literal_string \"Registry - changeExtensionInfoLocation: Competition does not exist. Use function 'registerNewCompetition' instead.\""
                        },
                        "value": "Registry - changeExtensionInfoLocation: Competition does not exist. Use function 'registerNewCompetition' instead."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149718046ca08d2db441ef75608667e338bdcaf071e386015f4638d85af99a7a",
                          "typeString": "literal_string \"Registry - changeExtensionInfoLocation: Competition does not exist. Use function 'registerNewCompetition' instead.\""
                        }
                      ],
                      "id": 3924,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4192:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4192:183:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3936,
                  "nodeType": "ExpressionStatement",
                  "src": "4192:183:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 3943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3938,
                          "name": "newLocation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3918,
                          "src": "4393:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4416:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4408:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 3939,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4408:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4408:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "4393:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265676973747279202d206368616e6765457874656e73696f6e496e666f4c6f636174696f6e3a2043616e6e6f742073657420746f203020616464726573732e",
                        "id": 3944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4420:66:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_053098f405a4eafef6f4c816cd6c1a3bd462a4e4da97939cbc178e3d131ebde9",
                          "typeString": "literal_string \"Registry - changeExtensionInfoLocation: Cannot set to 0 address.\""
                        },
                        "value": "Registry - changeExtensionInfoLocation: Cannot set to 0 address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_053098f405a4eafef6f4c816cd6c1a3bd462a4e4da97939cbc178e3d131ebde9",
                          "typeString": "literal_string \"Registry - changeExtensionInfoLocation: Cannot set to 0 address.\""
                        }
                      ],
                      "id": 3937,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4385:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4385:102:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3946,
                  "nodeType": "ExpressionStatement",
                  "src": "4385:102:5"
                },
                {
                  "expression": {
                    "id": 3952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 3947,
                          "name": "_extension",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3618,
                          "src": "4497:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Ext_$3606_storage_$",
                            "typeString": "mapping(string memory => struct Registry.Ext storage ref)"
                          }
                        },
                        "id": 3949,
                        "indexExpression": {
                          "id": 3948,
                          "name": "extensionName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3916,
                          "src": "4508:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4497:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ext_$3606_storage",
                          "typeString": "struct Registry.Ext storage ref"
                        }
                      },
                      "id": 3950,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "informationLocation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3605,
                      "src": "4497:45:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3951,
                      "name": "newLocation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3918,
                      "src": "4545:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4497:59:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 3953,
                  "nodeType": "ExpressionStatement",
                  "src": "4497:59:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3955,
                        "name": "extensionName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3916,
                        "src": "4601:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 3956,
                        "name": "newLocation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3918,
                        "src": "4616:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 3954,
                      "name": "ExtensionInfoLocationChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10360,
                      "src": "4572:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (string memory,bytes32)"
                      }
                    },
                    "id": 3957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4572:56:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3958,
                  "nodeType": "EmitStatement",
                  "src": "4567:61:5"
                }
              ]
            },
            "functionSelector": "e4bf72cc",
            "id": 3960,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3922,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3921,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "4168:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "4168:9:5"
              }
            ],
            "name": "changeExtensionInfoLocation",
            "nameLocation": "4066:27:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3920,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4159:8:5"
            },
            "parameters": {
              "id": 3919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3916,
                  "mutability": "mutable",
                  "name": "extensionName",
                  "nameLocation": "4110:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3960,
                  "src": "4094:29:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3915,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4094:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3918,
                  "mutability": "mutable",
                  "name": "newLocation",
                  "nameLocation": "4133:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 3960,
                  "src": "4125:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3917,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4125:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4093:52:5"
            },
            "returnParameters": {
              "id": 3923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4182:0:5"
            },
            "scope": 4151,
            "src": "4057:578:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4018,
              "nodeType": "Block",
              "src": "4802:298:5",
              "statements": [
                {
                  "assignments": [
                    3976
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3976,
                      "mutability": "mutable",
                      "name": "returnDataList",
                      "nameLocation": "4827:14:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 4018,
                      "src": "4812:29:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3974,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4812:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 3975,
                        "nodeType": "ArrayTypeName",
                        "src": "4812:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3983,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3980,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3966,
                          "src": "4856:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "bytes calldata[] calldata"
                          }
                        },
                        "id": 3981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "4856:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4844:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3977,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4848:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 3978,
                        "nodeType": "ArrayTypeName",
                        "src": "4848:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 3982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4844:24:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4812:56:5"
                },
                {
                  "body": {
                    "id": 4014,
                    "nodeType": "Block",
                    "src": "4916:147:5",
                    "statements": [
                      {
                        "assignments": [
                          3996,
                          3998
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3996,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "4936:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 4014,
                            "src": "4931:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3995,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4931:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 3998,
                            "mutability": "mutable",
                            "name": "returnedData",
                            "nameLocation": "4958:12:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 4014,
                            "src": "4945:25:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 3997,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4945:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4007,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 4003,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3966,
                                "src": "4998:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "bytes calldata[] calldata"
                                }
                              },
                              "id": 4005,
                              "indexExpression": {
                                "id": 4004,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3985,
                                "src": "5003:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4998:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 3999,
                                "name": "addresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3963,
                                "src": "4974:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 4001,
                              "indexExpression": {
                                "id": 4000,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3985,
                                "src": "4984:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4974:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 4002,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "4974:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 4006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4974:32:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4930:76:5"
                      },
                      {
                        "expression": {
                          "id": 4012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4008,
                              "name": "returnDataList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3976,
                              "src": "5020:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              }
                            },
                            "id": 4010,
                            "indexExpression": {
                              "id": 4009,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3985,
                              "src": "5035:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5020:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4011,
                            "name": "returnedData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3998,
                            "src": "5040:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "5020:32:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 4013,
                        "nodeType": "ExpressionStatement",
                        "src": "5020:32:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3988,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3985,
                      "src": "4895:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 3989,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3966,
                        "src": "4899:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "bytes calldata[] calldata"
                        }
                      },
                      "id": 3990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4899:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4895:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4015,
                  "initializationExpression": {
                    "assignments": [
                      3985
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3985,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4888:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 4015,
                        "src": "4883:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3984,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4883:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3987,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4892:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4883:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4912:3:5",
                      "subExpression": {
                        "id": 3992,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3985,
                        "src": "4912:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3994,
                    "nodeType": "ExpressionStatement",
                    "src": "4912:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "4878:185:5"
                },
                {
                  "expression": {
                    "id": 4016,
                    "name": "returnDataList",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3976,
                    "src": "5079:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "functionReturnParameters": 3971,
                  "id": 4017,
                  "nodeType": "Return",
                  "src": "5072:21:5"
                }
              ]
            },
            "functionSelector": "ff08e07b",
            "id": 4019,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batchCall",
            "nameLocation": "4688:9:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3963,
                  "mutability": "mutable",
                  "name": "addresses",
                  "nameLocation": "4717:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4019,
                  "src": "4698:28:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3961,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4698:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3962,
                    "nodeType": "ArrayTypeName",
                    "src": "4698:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3966,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4745:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4019,
                  "src": "4728:21:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3964,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "4728:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 3965,
                    "nodeType": "ArrayTypeName",
                    "src": "4728:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4697:53:5"
            },
            "returnParameters": {
              "id": 3971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3970,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4019,
                  "src": "4782:14:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3968,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "4782:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 3969,
                    "nodeType": "ArrayTypeName",
                    "src": "4782:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4781:16:5"
            },
            "scope": 4151,
            "src": "4679:421:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10267
            ],
            "body": {
              "id": 4030,
              "nodeType": "Block",
              "src": "5238:53:5",
              "statements": [
                {
                  "expression": {
                    "id": 4028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4026,
                      "name": "competitionNames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4024,
                      "src": "5248:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4027,
                      "name": "_competitionNames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3621,
                      "src": "5267:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "src": "5248:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "id": 4029,
                  "nodeType": "ExpressionStatement",
                  "src": "5248:36:5"
                }
              ]
            },
            "functionSelector": "8b9c0e36",
            "id": 4031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCompetitionList",
            "nameLocation": "5139:18:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4021,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5178:8:5"
            },
            "parameters": {
              "id": 4020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5157:2:5"
            },
            "returnParameters": {
              "id": 4025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4024,
                  "mutability": "mutable",
                  "name": "competitionNames",
                  "nameLocation": "5216:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4031,
                  "src": "5200:32:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4022,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "5200:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 4023,
                    "nodeType": "ArrayTypeName",
                    "src": "5200:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5199:34:5"
            },
            "scope": 4151,
            "src": "5130:161:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10273
            ],
            "body": {
              "id": 4042,
              "nodeType": "Block",
              "src": "5401:49:5",
              "statements": [
                {
                  "expression": {
                    "id": 4040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4038,
                      "name": "extensionNames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4036,
                      "src": "5411:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4039,
                      "name": "_extensionNames",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3624,
                      "src": "5428:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                        "typeString": "string storage ref[] storage ref"
                      }
                    },
                    "src": "5411:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "id": 4041,
                  "nodeType": "ExpressionStatement",
                  "src": "5411:32:5"
                }
              ]
            },
            "functionSelector": "2ac7b757",
            "id": 4043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExtensionList",
            "nameLocation": "5306:16:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4033,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5343:8:5"
            },
            "parameters": {
              "id": 4032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5322:2:5"
            },
            "returnParameters": {
              "id": 4037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4036,
                  "mutability": "mutable",
                  "name": "extensionNames",
                  "nameLocation": "5381:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4043,
                  "src": "5365:30:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4034,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "5365:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 4035,
                    "nodeType": "ArrayTypeName",
                    "src": "5365:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5364:32:5"
            },
            "scope": 4151,
            "src": "5297:153:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10280
            ],
            "body": {
              "id": 4058,
              "nodeType": "Block",
              "src": "5576:62:5",
              "statements": [
                {
                  "expression": {
                    "id": 4056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4051,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4049,
                      "src": "5586:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 4052,
                          "name": "_competition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3613,
                          "src": "5595:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Comp_$3599_storage_$",
                            "typeString": "mapping(string memory => struct Registry.Comp storage ref)"
                          }
                        },
                        "id": 4054,
                        "indexExpression": {
                          "id": 4053,
                          "name": "competitionName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4045,
                          "src": "5608:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5595:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Comp_$3599_storage",
                          "typeString": "struct Registry.Comp storage ref"
                        }
                      },
                      "id": 4055,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3594,
                      "src": "5595:36:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5586:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4057,
                  "nodeType": "ExpressionStatement",
                  "src": "5586:45:5"
                }
              ]
            },
            "functionSelector": "82144989",
            "id": 4059,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCompetitionActive",
            "nameLocation": "5465:20:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4047,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5537:8:5"
            },
            "parameters": {
              "id": 4046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4045,
                  "mutability": "mutable",
                  "name": "competitionName",
                  "nameLocation": "5502:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4059,
                  "src": "5486:31:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4044,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5486:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5485:33:5"
            },
            "returnParameters": {
              "id": 4050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4049,
                  "mutability": "mutable",
                  "name": "active",
                  "nameLocation": "5564:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4059,
                  "src": "5559:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4048,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5559:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5558:13:5"
            },
            "scope": 4151,
            "src": "5456:182:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10287
            ],
            "body": {
              "id": 4074,
              "nodeType": "Block",
              "src": "5780:86:5",
              "statements": [
                {
                  "expression": {
                    "id": 4072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4067,
                      "name": "competitionAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4065,
                      "src": "5790:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 4068,
                          "name": "_competition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3613,
                          "src": "5811:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Comp_$3599_storage_$",
                            "typeString": "mapping(string memory => struct Registry.Comp storage ref)"
                          }
                        },
                        "id": 4070,
                        "indexExpression": {
                          "id": 4069,
                          "name": "competitionName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4061,
                          "src": "5824:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5811:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Comp_$3599_storage",
                          "typeString": "struct Registry.Comp storage ref"
                        }
                      },
                      "id": 4071,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "competitionAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3596,
                      "src": "5811:48:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5790:69:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4073,
                  "nodeType": "ExpressionStatement",
                  "src": "5790:69:5"
                }
              ]
            },
            "functionSelector": "5d58ebc1",
            "id": 4075,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCompetitionAddress",
            "nameLocation": "5653:21:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4063,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5726:8:5"
            },
            "parameters": {
              "id": 4062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4061,
                  "mutability": "mutable",
                  "name": "competitionName",
                  "nameLocation": "5691:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4075,
                  "src": "5675:31:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4060,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5675:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5674:33:5"
            },
            "returnParameters": {
              "id": 4066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4065,
                  "mutability": "mutable",
                  "name": "competitionAddress",
                  "nameLocation": "5756:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4075,
                  "src": "5748:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5748:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5747:28:5"
            },
            "scope": 4151,
            "src": "5644:222:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10294
            ],
            "body": {
              "id": 4090,
              "nodeType": "Block",
              "src": "6009:76:5",
              "statements": [
                {
                  "expression": {
                    "id": 4088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4083,
                      "name": "rulesLocation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4081,
                      "src": "6019:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 4084,
                          "name": "_competition",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3613,
                          "src": "6035:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Comp_$3599_storage_$",
                            "typeString": "mapping(string memory => struct Registry.Comp storage ref)"
                          }
                        },
                        "id": 4086,
                        "indexExpression": {
                          "id": 4085,
                          "name": "competitionName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4077,
                          "src": "6048:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6035:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Comp_$3599_storage",
                          "typeString": "struct Registry.Comp storage ref"
                        }
                      },
                      "id": 4087,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rulesLocation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3598,
                      "src": "6035:43:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6019:59:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 4089,
                  "nodeType": "ExpressionStatement",
                  "src": "6019:59:5"
                }
              ]
            },
            "functionSelector": "3d783740",
            "id": 4091,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCompetitionRulesLocation",
            "nameLocation": "5881:27:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4079,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5960:8:5"
            },
            "parameters": {
              "id": 4078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4077,
                  "mutability": "mutable",
                  "name": "competitionName",
                  "nameLocation": "5925:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4091,
                  "src": "5909:31:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4076,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5909:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5908:33:5"
            },
            "returnParameters": {
              "id": 4082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4081,
                  "mutability": "mutable",
                  "name": "rulesLocation",
                  "nameLocation": "5990:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4091,
                  "src": "5982:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4080,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5982:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5981:23:5"
            },
            "scope": 4151,
            "src": "5872:213:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10299
            ],
            "body": {
              "id": 4101,
              "nodeType": "Block",
              "src": "6177:31:5",
              "statements": [
                {
                  "expression": {
                    "id": 4099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4097,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4095,
                      "src": "6187:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4098,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3608,
                      "src": "6195:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6187:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4100,
                  "nodeType": "ExpressionStatement",
                  "src": "6187:14:5"
                }
              ]
            },
            "functionSelector": "10fe9ae8",
            "id": 4102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenAddress",
            "nameLocation": "6100:15:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4093,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6136:8:5"
            },
            "parameters": {
              "id": 4092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6115:2:5"
            },
            "returnParameters": {
              "id": 4096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4095,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "6166:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4102,
                  "src": "6158:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4094,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6158:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6157:15:5"
            },
            "scope": 4151,
            "src": "6091:117:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10306
            ],
            "body": {
              "id": 4117,
              "nodeType": "Block",
              "src": "6344:78:5",
              "statements": [
                {
                  "expression": {
                    "id": 4115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4110,
                      "name": "extensionAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4108,
                      "src": "6354:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 4111,
                          "name": "_extension",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3618,
                          "src": "6373:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Ext_$3606_storage_$",
                            "typeString": "mapping(string memory => struct Registry.Ext storage ref)"
                          }
                        },
                        "id": 4113,
                        "indexExpression": {
                          "id": 4112,
                          "name": "extensionName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4104,
                          "src": "6384:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6373:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ext_$3606_storage",
                          "typeString": "struct Registry.Ext storage ref"
                        }
                      },
                      "id": 4114,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "extensionAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3603,
                      "src": "6373:42:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6354:61:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4116,
                  "nodeType": "ExpressionStatement",
                  "src": "6354:61:5"
                }
              ]
            },
            "functionSelector": "202a1c65",
            "id": 4118,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExtensionAddress",
            "nameLocation": "6223:19:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4106,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6292:8:5"
            },
            "parameters": {
              "id": 4105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4104,
                  "mutability": "mutable",
                  "name": "extensionName",
                  "nameLocation": "6259:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4118,
                  "src": "6243:29:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4103,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6243:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6242:31:5"
            },
            "returnParameters": {
              "id": 4109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4108,
                  "mutability": "mutable",
                  "name": "extensionAddress",
                  "nameLocation": "6322:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4118,
                  "src": "6314:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6314:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6313:26:5"
            },
            "scope": 4151,
            "src": "6214:208:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10313
            ],
            "body": {
              "id": 4133,
              "nodeType": "Block",
              "src": "6544:58:5",
              "statements": [
                {
                  "expression": {
                    "id": 4131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4126,
                      "name": "active",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4124,
                      "src": "6554:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 4127,
                          "name": "_extension",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3618,
                          "src": "6563:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Ext_$3606_storage_$",
                            "typeString": "mapping(string memory => struct Registry.Ext storage ref)"
                          }
                        },
                        "id": 4129,
                        "indexExpression": {
                          "id": 4128,
                          "name": "extensionName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4120,
                          "src": "6574:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6563:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ext_$3606_storage",
                          "typeString": "struct Registry.Ext storage ref"
                        }
                      },
                      "id": 4130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3601,
                      "src": "6563:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6554:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4132,
                  "nodeType": "ExpressionStatement",
                  "src": "6554:41:5"
                }
              ]
            },
            "functionSelector": "f77d6571",
            "id": 4134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExtensionActive",
            "nameLocation": "6437:18:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4122,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6505:8:5"
            },
            "parameters": {
              "id": 4121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4120,
                  "mutability": "mutable",
                  "name": "extensionName",
                  "nameLocation": "6472:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4134,
                  "src": "6456:29:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4119,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6456:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6455:31:5"
            },
            "returnParameters": {
              "id": 4125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4124,
                  "mutability": "mutable",
                  "name": "active",
                  "nameLocation": "6532:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4134,
                  "src": "6527:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4123,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6527:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6526:13:5"
            },
            "scope": 4151,
            "src": "6428:174:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10320
            ],
            "body": {
              "id": 4149,
              "nodeType": "Block",
              "src": "6746:84:5",
              "statements": [
                {
                  "expression": {
                    "id": 4147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4142,
                      "name": "informationLocation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4140,
                      "src": "6756:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 4143,
                          "name": "_extension",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3618,
                          "src": "6778:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Ext_$3606_storage_$",
                            "typeString": "mapping(string memory => struct Registry.Ext storage ref)"
                          }
                        },
                        "id": 4145,
                        "indexExpression": {
                          "id": 4144,
                          "name": "extensionName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4136,
                          "src": "6789:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6778:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Ext_$3606_storage",
                          "typeString": "struct Registry.Ext storage ref"
                        }
                      },
                      "id": 4146,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "informationLocation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3605,
                      "src": "6778:45:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6756:67:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 4148,
                  "nodeType": "ExpressionStatement",
                  "src": "6756:67:5"
                }
              ]
            },
            "functionSelector": "6ccc2bd6",
            "id": 4150,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExtensionInfoLocation",
            "nameLocation": "6617:24:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4138,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6691:8:5"
            },
            "parameters": {
              "id": 4137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4136,
                  "mutability": "mutable",
                  "name": "extensionName",
                  "nameLocation": "6658:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4150,
                  "src": "6642:29:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4135,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6642:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6641:31:5"
            },
            "returnParameters": {
              "id": 4141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4140,
                  "mutability": "mutable",
                  "name": "informationLocation",
                  "nameLocation": "6721:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 4150,
                  "src": "6713:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4139,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6713:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6712:29:5"
            },
            "scope": 4151,
            "src": "6608:222:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4152,
        "src": "132:6700:5",
        "usedErrors": []
      }
    ],
    "src": "0:6838:5"
  },
  "bytecode": "60806040523480156200001157600080fd5b506200001c62000022565b620001a3565b6200003d60008051602062002048833981519152336200009f565b620000586000805160206200204883398151915280620000af565b6200007360008051602062002028833981519152336200009f565b6200009d6000805160206200202883398151915260008051602062002048833981519152620000af565b565b620000ab828262000103565b5050565b600082815260208190526040902060010154819060405184907fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff90600090a460009182526020829052604090912060010155565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620000ab576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556200015f3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b611e7580620001b36000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80635d58ebc1116100de578063c9cda91f11610097578063e4bf72cc11610071578063e4bf72cc1461037e578063f77d657114610391578063ff08e07b146103a4578063ff280a16146103c457600080fd5b8063c9cda91f14610345578063cf4eb01314610358578063d547741f1461036b57600080fd5b80635d58ebc1146102e95780636ccc2bd6146102fc578063821449891461030f5780638b9c0e361461032257806391d148541461032a578063a217fddf1461033d57600080fd5b8063248a9ca31161014b57806335f2d3c61161012557806335f2d3c61461029d57806336568abe146102b05780633d783740146102c357806341d7238e146102d657600080fd5b8063248a9ca3146102525780632ac7b757146102755780632f2ff15d1461028a57600080fd5b806301ffc9a71461019357806306bbb7f6146101bb57806310fe9ae8146101d05780631442b868146101f557806318b125d114610218578063202a1c651461023f575b600080fd5b6101a66101a1366004611b25565b6103d7565b60405190151581526020015b60405180910390f35b6101ce6101c9366004611b4d565b61040e565b005b6001546001600160a01b03165b6040516001600160a01b0390911681526020016101b2565b61020a600080516020611e2083398151915281565b6040519081526020016101b2565b61020a7fc6497b0d1af5627a7b5dc7995c3c9c668c87bd99ddc7e1609ba9724fe0e860b581565b6101dd61024d366004611b4d565b6105d1565b61020a610260366004611ae2565b60009081526020819052604090206001015490565b61027d61060b565b6040516101b29190611ced565b6101ce610298366004611afa565b6106e4565b6101ce6102ab366004611b8d565b610773565b6101ce6102be366004611afa565b610a6b565b61020a6102d1366004611b4d565b610ae5565b6101ce6102e4366004611b4d565b610b13565b6101dd6102f7366004611b4d565b610cc7565b61020a61030a366004611b4d565b610cdb565b6101a661031d366004611b4d565b610cef565b61027d610d1d565b6101a6610338366004611afa565b610ded565b61020a600081565b6101ce610353366004611a58565b610e16565b6101ce610366366004611b8d565b610f10565b6101ce610379366004611afa565b611202565b6101ce61038c366004611be7565b611282565b6101a661039f366004611b4d565b61148a565b6103b76103b2366004611a79565b61149e565b6040516101b29190611c8c565b6101ce6103d2366004611be7565b61161b565b60006001600160e01b03198216637965db0b60e01b148061040857506301ffc9a760e01b6001600160e01b03198316145b92915050565b610426600080516020611e2083398151915233610ded565b61044b5760405162461bcd60e51b815260040161044290611d41565b60405180910390fd5b60006001600160a01b031660028383604051610468929190611c7c565b908152604051908190036020019020546001600160a01b036101009091041614156105385760405162461bcd60e51b815260206004820152606e60248201527f5265676973747279202d20746f67676c65436f6d7065746974696f6e4163746960448201527f76653a20436f6d7065746974696f6e20646f6573206e6f742065786973742e2060648201527f5573652066756e6374696f6e202772656769737465724e6577436f6d7065746960848201526d3a34b7b7139034b739ba32b0b21760911b60a482015260c401610442565b6002828260405161054a929190611c7c565b9081526040519081900360200181205460ff16159060029061056f9085908590611c7c565b908152604051908190036020018120805492151560ff199093169290921790915561059d9083908390611c7c565b604051908190038120907fb1bdac09178448906c9b70df8b0345ac474bbb794b64a551cfffa0a83a0dfdd990600090a25050565b6000600383836040516105e5929190611c7c565b908152604051908190036020019020546001600160a01b03610100909104169392505050565b60606005805480602002602001604051908101604052809291908181526020016000905b828210156106db57838290600052602060002001805461064e90611dbd565b80601f016020809104026020016040519081016040528092919081815260200182805461067a90611dbd565b80156106c75780601f1061069c576101008083540402835291602001916106c7565b820191906000526020600020905b8154815290600101906020018083116106aa57829003601f168201915b50505050508152602001906001019061062f565b50505050905090565b600082815260208190526040902060010154610701905b33610ded565b6107655760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526e0818591b5a5b881d1bc819dc985b9d608a1b6064820152608401610442565b61076f8282611830565b5050565b61078b600080516020611e2083398151915233610ded565b6107a75760405162461bcd60e51b815260040161044290611d41565b6001600160a01b0382166108235760405162461bcd60e51b815260206004820152603b60248201527f5265676973747279202d2072656769737465724e6577457874656e73696f6e3a60448201527f2043616e6e6f74207265676973746572203020616464726573732e00000000006064820152608401610442565b806108a55760405162461bcd60e51b815260206004820152604660248201527f5265676973747279202d2072656769737465724e6577457874656e73696f6e3a60448201527f2043616e6e6f742073657420696e666f726d6174696f6e206c6f636174696f6e606482015265103a3790181760d11b608482015260a401610442565b60006001600160a01b0316600385856040516108c2929190611c7c565b908152604051908190036020019020546001600160a01b0361010090910416146109545760405162461bcd60e51b815260206004820152603a60248201527f5265676973747279202d2072656769737465724e6577457874656e73696f6e3a60448201527f20457874656e73696f6e20616c7265616479206578697374732e0000000000006064820152608401610442565b60408051606081018252600181526001600160a01b038416602082015280820183905290516003906109899087908790611c7c565b908152604080516020928190038301902083518154938501516001600160a81b0319909416901515610100600160a81b031916176101006001600160a01b03909416939093029290921782559190910151600191820155600580549182018155600052610a19907f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018585611919565b5080826001600160a01b03168585604051610a35929190611c7c565b604051908190038120907fc9ecde0ab371f72e2d34131665b30ce9144ea01e7de4a8d5a14d4720617de99190600090a450505050565b6001600160a01b0381163314610adb5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610442565b61076f82826118b4565b600060028383604051610af9929190611c7c565b908152602001604051809103902060010154905092915050565b610b2b600080516020611e2083398151915233610ded565b610b475760405162461bcd60e51b815260040161044290611d41565b60006001600160a01b031660038383604051610b64929190611c7c565b908152604051908190036020019020546001600160a01b03610100909104161415610c2e5760405162461bcd60e51b815260206004820152606860248201527f5265676973747279202d20746f67676c65457874656e73696f6e41637469766560448201527f3a20457874656e73696f6e20646f6573206e6f742065786973742e205573652060648201527f66756e6374696f6e202772656769737465724e6577457874656e73696f6e272060848201526734b739ba32b0b21760c11b60a482015260c401610442565b60038282604051610c40929190611c7c565b9081526040519081900360200181205460ff161590600390610c659085908590611c7c565b908152604051908190036020018120805492151560ff1990931692909217909155610c939083908390611c7c565b604051908190038120907f83ae5d198de73bba6f0f383b1b155dae2ca94d1d7ecbd63542d0d07635209fdd90600090a25050565b6000600283836040516105e5929190611c7c565b600060038383604051610af9929190611c7c565b600060028383604051610d03929190611c7c565b9081526040519081900360200190205460ff169392505050565b60606004805480602002602001604051908101604052809291908181526020016000905b828210156106db578382906000526020600020018054610d6090611dbd565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8c90611dbd565b8015610dd95780601f10610dae57610100808354040283529160200191610dd9565b820191906000526020600020905b815481529060010190602001808311610dbc57829003601f168201915b505050505081526020019060010190610d41565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b610e2e600080516020611e2083398151915233610ded565b610e4a5760405162461bcd60e51b815260040161044290611d41565b6001600160a01b038116610ec65760405162461bcd60e51b815260206004820152603760248201527f5265676973747279202d206368616e6765546f6b656e416464726573733a204360448201527f616e6e6f742073657420746f203020616464726573732e0000000000000000006064820152608401610442565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f1297217f6da0341ba2cab10677a2e4471c20ebc84acc96ef2339a734a3a233b290600090a250565b610f28600080516020611e2083398151915233610ded565b610f445760405162461bcd60e51b815260040161044290611d41565b6001600160a01b038216610fc05760405162461bcd60e51b815260206004820152603d60248201527f5265676973747279202d2072656769737465724e6577436f6d7065746974696f60448201527f6e3a2043616e6e6f74207265676973746572203020616464726573732e0000006064820152608401610442565b806110335760405162461bcd60e51b815260206004820152603960248201527f5265676973747279202d2072756c65734c6f636174696f6e3a2043616e6e6f7460448201527f207365742072756c6573206c6f636174696f6e20746f20302e000000000000006064820152608401610442565b60006001600160a01b031660028585604051611050929190611c7c565b908152604051908190036020019020546001600160a01b0361010090910416146110e25760405162461bcd60e51b815260206004820152603e60248201527f5265676973747279202d2072656769737465724e6577436f6d7065746974696f60448201527f6e3a20436f6d7065746974696f6e20616c7265616479206578697374732e00006064820152608401610442565b60408051606081018252600181526001600160a01b038416602082015280820183905290516002906111179087908790611c7c565b908152604080516020928190038301902083518154938501516001600160a81b0319909416901515610100600160a81b031916176101006001600160a01b039094169390930292909217825591909101516001918201556004805491820181556000526111a7907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b018585611919565b50816001600160a01b031684846040516111c2929190611c7c565b604051908190038120838252907fe8cdf60632eed712180856cc0945bc61a38a954c7a0c2697944488b63a8861509060200160405180910390a350505050565b60008281526020819052604090206001015461121d906106fb565b610adb5760405162461bcd60e51b815260206004820152603060248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526f2061646d696e20746f207265766f6b6560801b6064820152608401610442565b61129a600080516020611e2083398151915233610ded565b6112b65760405162461bcd60e51b815260040161044290611d41565b60006001600160a01b0316600384846040516112d3929190611c7c565b908152604051908190036020019020546001600160a01b036101009091041614156113a75760405162461bcd60e51b815260206004820152607260248201527f5265676973747279202d206368616e6765457874656e73696f6e496e666f4c6f60448201527f636174696f6e3a20436f6d7065746974696f6e20646f6573206e6f742065786960648201527f73742e205573652066756e6374696f6e202772656769737465724e6577436f6d6084820152713832ba34ba34b7b7139034b739ba32b0b21760711b60a482015260c401610442565b8061141c576040805162461bcd60e51b81526020600482015260248101919091527f5265676973747279202d206368616e6765457874656e73696f6e496e666f4c6f60448201527f636174696f6e3a2043616e6e6f742073657420746f203020616464726573732e6064820152608401610442565b806003848460405161142f929190611c7c565b908152602001604051809103902060010181905550808383604051611455929190611c7c565b604051908190038120907f88bfdf54ce240d8032ad74fde55d2fc88647a35643bd1a8a4bb7bfc6efc6058c90600090a3505050565b600060038383604051610d03929190611c7c565b606060008267ffffffffffffffff8111156114c957634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156114fc57816020015b60608152602001906001900390816114e75790505b50905060005b838110156116115760008088888481811061152d57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906115429190611a58565b6001600160a01b031687878581811061156b57634e487b7160e01b600052603260045260246000fd5b905060200281019061157d9190611d78565b60405161158b929190611c7c565b600060405180830381855afa9150503d80600081146115c6576040519150601f19603f3d011682016040523d82523d6000602084013e6115cb565b606091505b5091509150808484815181106115f157634e487b7160e01b600052603260045260246000fd5b60200260200101819052505050808061160990611df8565b915050611502565b5095945050505050565b611633600080516020611e2083398151915233610ded565b61164f5760405162461bcd60e51b815260040161044290611d41565b60006001600160a01b03166002848460405161166c929190611c7c565b908152604051908190036020019020546001600160a01b036101009091041614156117435760405162461bcd60e51b815260206004820152607560248201527f5265676973747279202d206368616e6765436f6d7065746974696f6e52756c6560448201527f734c6f636174696f6e3a20436f6d7065746974696f6e20646f6573206e6f742060648201527f65786973742e205573652066756e6374696f6e202772656769737465724e657760848201527421b7b6b832ba34ba34b7b7139034b739ba32b0b21760591b60a482015260c401610442565b806117c25760405162461bcd60e51b815260206004820152604360248201527f5265676973747279202d206368616e6765436f6d7065746974696f6e52756c6560448201527f734c6f636174696f6e3a2043616e6e6f742073657420746f203020616464726560648201526239b99760e91b608482015260a401610442565b80600284846040516117d5929190611c7c565b9081526020016040518091039020600101819055508083836040516117fb929190611c7c565b604051908190038120907f090e4275b4012fedfa9b631d72bff03048df6aff9864bc8cdee29aa02360d7fd90600090a3505050565b61183a8282610ded565b61076f576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556118703390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6118be8282610ded565b1561076f576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b82805461192590611dbd565b90600052602060002090601f016020900481019282611947576000855561198d565b82601f106119605782800160ff1982351617855561198d565b8280016001018555821561198d579182015b8281111561198d578235825591602001919060010190611972565b5061199992915061199d565b5090565b5b80821115611999576000815560010161199e565b80356001600160a01b03811681146119c957600080fd5b919050565b60008083601f8401126119df578182fd5b50813567ffffffffffffffff8111156119f6578182fd5b6020830191508360208260051b8501011115611a1157600080fd5b9250929050565b60008083601f840112611a29578182fd5b50813567ffffffffffffffff811115611a40578182fd5b602083019150836020828501011115611a1157600080fd5b600060208284031215611a69578081fd5b611a72826119b2565b9392505050565b60008060008060408587031215611a8e578283fd5b843567ffffffffffffffff80821115611aa5578485fd5b611ab1888389016119ce565b90965094506020870135915080821115611ac9578384fd5b50611ad6878288016119ce565b95989497509550505050565b600060208284031215611af3578081fd5b5035919050565b60008060408385031215611b0c578182fd5b82359150611b1c602084016119b2565b90509250929050565b600060208284031215611b36578081fd5b81356001600160e01b031981168114611a72578182fd5b60008060208385031215611b5f578182fd5b823567ffffffffffffffff811115611b75578283fd5b611b8185828601611a18565b90969095509350505050565b60008060008060608587031215611ba2578384fd5b843567ffffffffffffffff811115611bb8578485fd5b611bc487828801611a18565b9095509350611bd79050602086016119b2565b9396929550929360400135925050565b600080600060408486031215611bfb578283fd5b833567ffffffffffffffff811115611c11578384fd5b611c1d86828701611a18565b909790965060209590950135949350505050565b60008151808452815b81811015611c5657602081850181015186830182015201611c3a565b81811115611c675782602083870101525b50601f01601f19169290920160200192915050565b8183823760009101908152919050565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b82811015611ce057603f19888603018452611cce858351611c31565b94509285019290850190600101611cb2565b5092979650505050505050565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b82811015611ce057603f19888603018452611d2f858351611c31565b94509285019290850190600101611d13565b60208082526017908201527f43616c6c657220697320756e617574686f72697a65642e000000000000000000604082015260600190565b6000808335601e19843603018112611d8e578283fd5b83018035915067ffffffffffffffff821115611da8578283fd5b602001915036819003821315611a1157600080fd5b600181811c90821680611dd157607f821691505b60208210811415611df257634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611e1857634e487b7160e01b81526011600452602481fd5b506001019056fea7c37a885c101433a066f48b62753beb2a7567fe326b80d58772c6ef61e282e7a26469706673582212208a6b1f3e66be749fef757d64d7f59be44eefd44755636e205756109f9512073964736f6c63430008040033a7c37a885c101433a066f48b62753beb2a7567fe326b80d58772c6ef61e282e7c6497b0d1af5627a7b5dc7995c3c9c668c87bd99ddc7e1609ba9724fe0e860b5",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.4+commit.c7e474f2"
  },
  "contractName": "Registry",
  "coverageMap": {
    "branches": {
      "0": {
        "Registry.changeCompetitionRulesLocation": {
          "73": [
            489,
            525,
            true
          ]
        }
      },
      "19": {},
      "21": {},
      "22": {},
      "28": {},
      "5": {
        "Registry.changeCompetitionRulesLocation": {
          "66": [
            2085,
            2147,
            true
          ],
          "67": [
            2287,
            2312,
            true
          ]
        },
        "Registry.changeExtensionInfoLocation": {
          "64": [
            4200,
            4256,
            true
          ],
          "65": [
            4393,
            4418,
            true
          ]
        },
        "Registry.changeTokenAddress": {
          "60": [
            2643,
            2667,
            true
          ]
        },
        "Registry.registerNewCompetition": {
          "61": [
            849,
            881,
            true
          ],
          "62": [
            965,
            992,
            true
          ],
          "63": [
            1072,
            1134,
            true
          ]
        },
        "Registry.registerNewExtension": {
          "56": [
            2985,
            3015,
            true
          ],
          "57": [
            3097,
            3130,
            true
          ],
          "58": [
            3223,
            3279,
            true
          ]
        },
        "Registry.toggleCompetitionActive": {
          "55": [
            1604,
            1666,
            true
          ]
        },
        "Registry.toggleExtensionActive": {
          "59": [
            3744,
            3800,
            true
          ]
        }
      },
      "7": {
        "AccessControl._grantRole": {
          "71": [
            7026,
            7048,
            false
          ]
        },
        "AccessControl._revokeRole": {
          "72": [
            7256,
            7278,
            false
          ]
        },
        "AccessControl.grantRole": {
          "68": [
            4648,
            4689,
            true
          ]
        },
        "AccessControl.renounceRole": {
          "69": [
            5835,
            5858,
            true
          ]
        },
        "AccessControl.revokeRole": {
          "70": [
            5111,
            5152,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "19": {
        "Context._msgSender": {
          "10": [
            658,
            675
          ]
        }
      },
      "21": {
        "ERC165.supportsInterface": {
          "3": [
            864,
            911
          ]
        }
      },
      "22": {},
      "28": {},
      "5": {
        "Registry.batchCall": {
          "44": [
            5020,
            5052
          ],
          "45": [
            4912,
            4915
          ],
          "46": [
            5072,
            5093
          ]
        },
        "Registry.changeCompetitionRulesLocation": {
          "47": [
            2077,
            2269
          ],
          "48": [
            2279,
            2384
          ],
          "49": [
            2394,
            2451
          ],
          "50": [
            2462,
            2528
          ]
        },
        "Registry.changeExtensionInfoLocation": {
          "39": [
            4192,
            4375
          ],
          "40": [
            4385,
            4487
          ],
          "41": [
            4497,
            4556
          ],
          "42": [
            4567,
            4628
          ]
        },
        "Registry.changeTokenAddress": {
          "29": [
            2635,
            2727
          ],
          "30": [
            2737,
            2756
          ],
          "31": [
            2767,
            2803
          ]
        },
        "Registry.getCompetitionActive": {
          "26": [
            5586,
            5631
          ]
        },
        "Registry.getCompetitionAddress": {
          "24": [
            5790,
            5859
          ]
        },
        "Registry.getCompetitionList": {
          "27": [
            5248,
            5284
          ]
        },
        "Registry.getCompetitionRulesLocation": {
          "20": [
            6019,
            6078
          ]
        },
        "Registry.getExtensionActive": {
          "43": [
            6554,
            6595
          ]
        },
        "Registry.getExtensionAddress": {
          "7": [
            6354,
            6415
          ]
        },
        "Registry.getExtensionInfoLocation": {
          "25": [
            6756,
            6823
          ]
        },
        "Registry.getExtensionList": {
          "8": [
            5411,
            5443
          ]
        },
        "Registry.getTokenAddress": {
          "0": [
            6187,
            6201
          ]
        },
        "Registry.registerNewCompetition": {
          "32": [
            841,
            947
          ],
          "33": [
            957,
            1054
          ],
          "34": [
            1064,
            1201
          ],
          "35": [
            1211,
            1330
          ],
          "36": [
            1340,
            1379
          ],
          "37": [
            1390,
            1471
          ]
        },
        "Registry.registerNewExtension": {
          "12": [
            2977,
            3079
          ],
          "13": [
            3089,
            3205
          ],
          "14": [
            3215,
            3342
          ],
          "15": [
            3352,
            3474
          ],
          "16": [
            3484,
            3519
          ],
          "17": [
            3530,
            3611
          ]
        },
        "Registry.toggleCompetitionActive": {
          "4": [
            1596,
            1781
          ],
          "5": [
            1791,
            1867
          ],
          "6": [
            1878,
            1924
          ]
        },
        "Registry.toggleExtensionActive": {
          "21": [
            3736,
            3909
          ],
          "22": [
            3919,
            3987
          ],
          "23": [
            3998,
            4040
          ]
        }
      },
      "7": {
        "AccessControl._grantRole": {
          "51": [
            7064,
            7100
          ],
          "52": [
            7114,
            7159
          ]
        },
        "AccessControl._revokeRole": {
          "53": [
            7294,
            7331
          ],
          "54": [
            7345,
            7390
          ]
        },
        "AccessControl.getRoleAdmin": {
          "1": [
            4270,
            4299
          ]
        },
        "AccessControl.grantRole": {
          "9": [
            4640,
            4741
          ],
          "11": [
            4752,
            4777
          ]
        },
        "AccessControl.hasRole": {
          "28": [
            3961,
            3997
          ]
        },
        "AccessControl.renounceRole": {
          "18": [
            5827,
            5910
          ],
          "19": [
            5921,
            5947
          ]
        },
        "AccessControl.revokeRole": {
          "38": [
            5103,
            5205
          ]
        },
        "AccessControl.supportsInterface": {
          "2": [
            3667,
            3773
          ]
        }
      }
    }
  },
  "dependencies": [
    "AccessControl",
    "AccessControlRci",
    "Context",
    "ERC165",
    "IAccessControl",
    "IERC165",
    "IRegistry"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061018e5760003560e01c80635d58ebc1116100de578063c9cda91f11610097578063e4bf72cc11610071578063e4bf72cc1461037e578063f77d657114610391578063ff08e07b146103a4578063ff280a16146103c457600080fd5b8063c9cda91f14610345578063cf4eb01314610358578063d547741f1461036b57600080fd5b80635d58ebc1146102e95780636ccc2bd6146102fc578063821449891461030f5780638b9c0e361461032257806391d148541461032a578063a217fddf1461033d57600080fd5b8063248a9ca31161014b57806335f2d3c61161012557806335f2d3c61461029d57806336568abe146102b05780633d783740146102c357806341d7238e146102d657600080fd5b8063248a9ca3146102525780632ac7b757146102755780632f2ff15d1461028a57600080fd5b806301ffc9a71461019357806306bbb7f6146101bb57806310fe9ae8146101d05780631442b868146101f557806318b125d114610218578063202a1c651461023f575b600080fd5b6101a66101a1366004611b25565b6103d7565b60405190151581526020015b60405180910390f35b6101ce6101c9366004611b4d565b61040e565b005b6001546001600160a01b03165b6040516001600160a01b0390911681526020016101b2565b61020a600080516020611e2083398151915281565b6040519081526020016101b2565b61020a7fc6497b0d1af5627a7b5dc7995c3c9c668c87bd99ddc7e1609ba9724fe0e860b581565b6101dd61024d366004611b4d565b6105d1565b61020a610260366004611ae2565b60009081526020819052604090206001015490565b61027d61060b565b6040516101b29190611ced565b6101ce610298366004611afa565b6106e4565b6101ce6102ab366004611b8d565b610773565b6101ce6102be366004611afa565b610a6b565b61020a6102d1366004611b4d565b610ae5565b6101ce6102e4366004611b4d565b610b13565b6101dd6102f7366004611b4d565b610cc7565b61020a61030a366004611b4d565b610cdb565b6101a661031d366004611b4d565b610cef565b61027d610d1d565b6101a6610338366004611afa565b610ded565b61020a600081565b6101ce610353366004611a58565b610e16565b6101ce610366366004611b8d565b610f10565b6101ce610379366004611afa565b611202565b6101ce61038c366004611be7565b611282565b6101a661039f366004611b4d565b61148a565b6103b76103b2366004611a79565b61149e565b6040516101b29190611c8c565b6101ce6103d2366004611be7565b61161b565b60006001600160e01b03198216637965db0b60e01b148061040857506301ffc9a760e01b6001600160e01b03198316145b92915050565b610426600080516020611e2083398151915233610ded565b61044b5760405162461bcd60e51b815260040161044290611d41565b60405180910390fd5b60006001600160a01b031660028383604051610468929190611c7c565b908152604051908190036020019020546001600160a01b036101009091041614156105385760405162461bcd60e51b815260206004820152606e60248201527f5265676973747279202d20746f67676c65436f6d7065746974696f6e4163746960448201527f76653a20436f6d7065746974696f6e20646f6573206e6f742065786973742e2060648201527f5573652066756e6374696f6e202772656769737465724e6577436f6d7065746960848201526d3a34b7b7139034b739ba32b0b21760911b60a482015260c401610442565b6002828260405161054a929190611c7c565b9081526040519081900360200181205460ff16159060029061056f9085908590611c7c565b908152604051908190036020018120805492151560ff199093169290921790915561059d9083908390611c7c565b604051908190038120907fb1bdac09178448906c9b70df8b0345ac474bbb794b64a551cfffa0a83a0dfdd990600090a25050565b6000600383836040516105e5929190611c7c565b908152604051908190036020019020546001600160a01b03610100909104169392505050565b60606005805480602002602001604051908101604052809291908181526020016000905b828210156106db57838290600052602060002001805461064e90611dbd565b80601f016020809104026020016040519081016040528092919081815260200182805461067a90611dbd565b80156106c75780601f1061069c576101008083540402835291602001916106c7565b820191906000526020600020905b8154815290600101906020018083116106aa57829003601f168201915b50505050508152602001906001019061062f565b50505050905090565b600082815260208190526040902060010154610701905b33610ded565b6107655760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526e0818591b5a5b881d1bc819dc985b9d608a1b6064820152608401610442565b61076f8282611830565b5050565b61078b600080516020611e2083398151915233610ded565b6107a75760405162461bcd60e51b815260040161044290611d41565b6001600160a01b0382166108235760405162461bcd60e51b815260206004820152603b60248201527f5265676973747279202d2072656769737465724e6577457874656e73696f6e3a60448201527f2043616e6e6f74207265676973746572203020616464726573732e00000000006064820152608401610442565b806108a55760405162461bcd60e51b815260206004820152604660248201527f5265676973747279202d2072656769737465724e6577457874656e73696f6e3a60448201527f2043616e6e6f742073657420696e666f726d6174696f6e206c6f636174696f6e606482015265103a3790181760d11b608482015260a401610442565b60006001600160a01b0316600385856040516108c2929190611c7c565b908152604051908190036020019020546001600160a01b0361010090910416146109545760405162461bcd60e51b815260206004820152603a60248201527f5265676973747279202d2072656769737465724e6577457874656e73696f6e3a60448201527f20457874656e73696f6e20616c7265616479206578697374732e0000000000006064820152608401610442565b60408051606081018252600181526001600160a01b038416602082015280820183905290516003906109899087908790611c7c565b908152604080516020928190038301902083518154938501516001600160a81b0319909416901515610100600160a81b031916176101006001600160a01b03909416939093029290921782559190910151600191820155600580549182018155600052610a19907f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018585611919565b5080826001600160a01b03168585604051610a35929190611c7c565b604051908190038120907fc9ecde0ab371f72e2d34131665b30ce9144ea01e7de4a8d5a14d4720617de99190600090a450505050565b6001600160a01b0381163314610adb5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610442565b61076f82826118b4565b600060028383604051610af9929190611c7c565b908152602001604051809103902060010154905092915050565b610b2b600080516020611e2083398151915233610ded565b610b475760405162461bcd60e51b815260040161044290611d41565b60006001600160a01b031660038383604051610b64929190611c7c565b908152604051908190036020019020546001600160a01b03610100909104161415610c2e5760405162461bcd60e51b815260206004820152606860248201527f5265676973747279202d20746f67676c65457874656e73696f6e41637469766560448201527f3a20457874656e73696f6e20646f6573206e6f742065786973742e205573652060648201527f66756e6374696f6e202772656769737465724e6577457874656e73696f6e272060848201526734b739ba32b0b21760c11b60a482015260c401610442565b60038282604051610c40929190611c7c565b9081526040519081900360200181205460ff161590600390610c659085908590611c7c565b908152604051908190036020018120805492151560ff1990931692909217909155610c939083908390611c7c565b604051908190038120907f83ae5d198de73bba6f0f383b1b155dae2ca94d1d7ecbd63542d0d07635209fdd90600090a25050565b6000600283836040516105e5929190611c7c565b600060038383604051610af9929190611c7c565b600060028383604051610d03929190611c7c565b9081526040519081900360200190205460ff169392505050565b60606004805480602002602001604051908101604052809291908181526020016000905b828210156106db578382906000526020600020018054610d6090611dbd565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8c90611dbd565b8015610dd95780601f10610dae57610100808354040283529160200191610dd9565b820191906000526020600020905b815481529060010190602001808311610dbc57829003601f168201915b505050505081526020019060010190610d41565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b610e2e600080516020611e2083398151915233610ded565b610e4a5760405162461bcd60e51b815260040161044290611d41565b6001600160a01b038116610ec65760405162461bcd60e51b815260206004820152603760248201527f5265676973747279202d206368616e6765546f6b656e416464726573733a204360448201527f616e6e6f742073657420746f203020616464726573732e0000000000000000006064820152608401610442565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f1297217f6da0341ba2cab10677a2e4471c20ebc84acc96ef2339a734a3a233b290600090a250565b610f28600080516020611e2083398151915233610ded565b610f445760405162461bcd60e51b815260040161044290611d41565b6001600160a01b038216610fc05760405162461bcd60e51b815260206004820152603d60248201527f5265676973747279202d2072656769737465724e6577436f6d7065746974696f60448201527f6e3a2043616e6e6f74207265676973746572203020616464726573732e0000006064820152608401610442565b806110335760405162461bcd60e51b815260206004820152603960248201527f5265676973747279202d2072756c65734c6f636174696f6e3a2043616e6e6f7460448201527f207365742072756c6573206c6f636174696f6e20746f20302e000000000000006064820152608401610442565b60006001600160a01b031660028585604051611050929190611c7c565b908152604051908190036020019020546001600160a01b0361010090910416146110e25760405162461bcd60e51b815260206004820152603e60248201527f5265676973747279202d2072656769737465724e6577436f6d7065746974696f60448201527f6e3a20436f6d7065746974696f6e20616c7265616479206578697374732e00006064820152608401610442565b60408051606081018252600181526001600160a01b038416602082015280820183905290516002906111179087908790611c7c565b908152604080516020928190038301902083518154938501516001600160a81b0319909416901515610100600160a81b031916176101006001600160a01b039094169390930292909217825591909101516001918201556004805491820181556000526111a7907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b018585611919565b50816001600160a01b031684846040516111c2929190611c7c565b604051908190038120838252907fe8cdf60632eed712180856cc0945bc61a38a954c7a0c2697944488b63a8861509060200160405180910390a350505050565b60008281526020819052604090206001015461121d906106fb565b610adb5760405162461bcd60e51b815260206004820152603060248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526f2061646d696e20746f207265766f6b6560801b6064820152608401610442565b61129a600080516020611e2083398151915233610ded565b6112b65760405162461bcd60e51b815260040161044290611d41565b60006001600160a01b0316600384846040516112d3929190611c7c565b908152604051908190036020019020546001600160a01b036101009091041614156113a75760405162461bcd60e51b815260206004820152607260248201527f5265676973747279202d206368616e6765457874656e73696f6e496e666f4c6f60448201527f636174696f6e3a20436f6d7065746974696f6e20646f6573206e6f742065786960648201527f73742e205573652066756e6374696f6e202772656769737465724e6577436f6d6084820152713832ba34ba34b7b7139034b739ba32b0b21760711b60a482015260c401610442565b8061141c576040805162461bcd60e51b81526020600482015260248101919091527f5265676973747279202d206368616e6765457874656e73696f6e496e666f4c6f60448201527f636174696f6e3a2043616e6e6f742073657420746f203020616464726573732e6064820152608401610442565b806003848460405161142f929190611c7c565b908152602001604051809103902060010181905550808383604051611455929190611c7c565b604051908190038120907f88bfdf54ce240d8032ad74fde55d2fc88647a35643bd1a8a4bb7bfc6efc6058c90600090a3505050565b600060038383604051610d03929190611c7c565b606060008267ffffffffffffffff8111156114c957634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156114fc57816020015b60608152602001906001900390816114e75790505b50905060005b838110156116115760008088888481811061152d57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906115429190611a58565b6001600160a01b031687878581811061156b57634e487b7160e01b600052603260045260246000fd5b905060200281019061157d9190611d78565b60405161158b929190611c7c565b600060405180830381855afa9150503d80600081146115c6576040519150601f19603f3d011682016040523d82523d6000602084013e6115cb565b606091505b5091509150808484815181106115f157634e487b7160e01b600052603260045260246000fd5b60200260200101819052505050808061160990611df8565b915050611502565b5095945050505050565b611633600080516020611e2083398151915233610ded565b61164f5760405162461bcd60e51b815260040161044290611d41565b60006001600160a01b03166002848460405161166c929190611c7c565b908152604051908190036020019020546001600160a01b036101009091041614156117435760405162461bcd60e51b815260206004820152607560248201527f5265676973747279202d206368616e6765436f6d7065746974696f6e52756c6560448201527f734c6f636174696f6e3a20436f6d7065746974696f6e20646f6573206e6f742060648201527f65786973742e205573652066756e6374696f6e202772656769737465724e657760848201527421b7b6b832ba34ba34b7b7139034b739ba32b0b21760591b60a482015260c401610442565b806117c25760405162461bcd60e51b815260206004820152604360248201527f5265676973747279202d206368616e6765436f6d7065746974696f6e52756c6560448201527f734c6f636174696f6e3a2043616e6e6f742073657420746f203020616464726560648201526239b99760e91b608482015260a401610442565b80600284846040516117d5929190611c7c565b9081526020016040518091039020600101819055508083836040516117fb929190611c7c565b604051908190038120907f090e4275b4012fedfa9b631d72bff03048df6aff9864bc8cdee29aa02360d7fd90600090a3505050565b61183a8282610ded565b61076f576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556118703390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6118be8282610ded565b1561076f576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b82805461192590611dbd565b90600052602060002090601f016020900481019282611947576000855561198d565b82601f106119605782800160ff1982351617855561198d565b8280016001018555821561198d579182015b8281111561198d578235825591602001919060010190611972565b5061199992915061199d565b5090565b5b80821115611999576000815560010161199e565b80356001600160a01b03811681146119c957600080fd5b919050565b60008083601f8401126119df578182fd5b50813567ffffffffffffffff8111156119f6578182fd5b6020830191508360208260051b8501011115611a1157600080fd5b9250929050565b60008083601f840112611a29578182fd5b50813567ffffffffffffffff811115611a40578182fd5b602083019150836020828501011115611a1157600080fd5b600060208284031215611a69578081fd5b611a72826119b2565b9392505050565b60008060008060408587031215611a8e578283fd5b843567ffffffffffffffff80821115611aa5578485fd5b611ab1888389016119ce565b90965094506020870135915080821115611ac9578384fd5b50611ad6878288016119ce565b95989497509550505050565b600060208284031215611af3578081fd5b5035919050565b60008060408385031215611b0c578182fd5b82359150611b1c602084016119b2565b90509250929050565b600060208284031215611b36578081fd5b81356001600160e01b031981168114611a72578182fd5b60008060208385031215611b5f578182fd5b823567ffffffffffffffff811115611b75578283fd5b611b8185828601611a18565b90969095509350505050565b60008060008060608587031215611ba2578384fd5b843567ffffffffffffffff811115611bb8578485fd5b611bc487828801611a18565b9095509350611bd79050602086016119b2565b9396929550929360400135925050565b600080600060408486031215611bfb578283fd5b833567ffffffffffffffff811115611c11578384fd5b611c1d86828701611a18565b909790965060209590950135949350505050565b60008151808452815b81811015611c5657602081850181015186830182015201611c3a565b81811115611c675782602083870101525b50601f01601f19169290920160200192915050565b8183823760009101908152919050565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b82811015611ce057603f19888603018452611cce858351611c31565b94509285019290850190600101611cb2565b5092979650505050505050565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b82811015611ce057603f19888603018452611d2f858351611c31565b94509285019290850190600101611d13565b60208082526017908201527f43616c6c657220697320756e617574686f72697a65642e000000000000000000604082015260600190565b6000808335601e19843603018112611d8e578283fd5b83018035915067ffffffffffffffff821115611da8578283fd5b602001915036819003821315611a1157600080fd5b600181811c90821680611dd157607f821691505b60208210811415611df257634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611e1857634e487b7160e01b81526011600452602481fd5b506001019056fea7c37a885c101433a066f48b62753beb2a7567fe326b80d58772c6ef61e282e7a26469706673582212208a6b1f3e66be749fef757d64d7f59be44eefd44755636e205756109f9512073964736f6c63430008040033",
  "deployedSourceMap": "132:6700:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3566:214:7;;;;;;:::i;:::-;;:::i;:::-;;;7315:14:30;;7308:22;7290:41;;7278:2;7263:18;3566:214:7;;;;;;;;1484:447:5;;;;;;:::i;:::-;;:::i;:::-;;6091:117;6195:6;;-1:-1:-1;;;;;6195:6:5;6091:117;;;-1:-1:-1;;;;;5488:32:30;;;5470:51;;5458:2;5443:18;6091:117:5;5425:102:30;235:70:0;;-1:-1:-1;;;;;;;;;;;235:70:0;;;;;7488:25:30;;;7476:2;7461:18;235:70:0;7443:76:30;161:68:0;;202:27;161:68;;6214:208:5;;;;;;:::i;:::-;;:::i;4185:121:7:-;;;;;;:::i;:::-;4251:7;4277:12;;;;;;;;;;:22;;;;4185:121;5297:153:5;;;:::i;:::-;;;;;;;:::i;4556:228:7:-;;;;;;:::i;:::-;;:::i;2816:802:5:-;;;;;;:::i;:::-;;:::i;5740:214:7:-;;;;;;:::i;:::-;;:::i;5872:213:5:-;;;;;;:::i;:::-;;:::i;3628:419::-;;;;;;:::i;:::-;;:::i;5644:222::-;;;;;;:::i;:::-;;:::i;6608:::-;;;;;;:::i;:::-;;:::i;5456:182::-;;;;;;:::i;:::-;;:::i;5130:161::-;;;:::i;3867:137:7:-;;;;;;:::i;:::-;;:::i;2363:49::-;;2408:4;2363:49;;2541:269:5;;;;;;:::i;:::-;;:::i;679:799::-;;;;;;:::i;:::-;;:::i;5018:231:7:-;;;;;;:::i;:::-;;:::i;4057:578:5:-;;;;;;:::i;:::-;;:::i;6428:174::-;;;;;;:::i;:::-;;:::i;4679:421::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1937:598::-;;;;;;:::i;:::-;;:::i;3566:214:7:-;3651:4;-1:-1:-1;;;;;;3674:47:7;;-1:-1:-1;;;3674:47:7;;:99;;-1:-1:-1;;;;;;;;;;871:40:21;;;3737:36:7;3667:106;3566:214;-1:-1:-1;;3566:214:7:o;1484:447:5:-;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;;;;;;;;;1664:1:5::1;-1:-1:-1::0;;;;;1604:62:5::1;:12;1617:15;;1604:29;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:48;-1:-1:-1;;;;;1604:48:5::1;::::0;;::::1;;:62;;1596:185;;;::::0;-1:-1:-1;;;1596:185:5;;13559:2:30;1596:185:5::1;::::0;::::1;13541:21:30::0;13598:3;13578:18;;;13571:31;13638:34;13618:18;;;13611:62;13709:34;13689:18;;;13682:62;13781:34;13760:19;;;13753:63;-1:-1:-1;;;13832:19:30;;;13825:45;13887:19;;1596:185:5::1;13531:381:30::0;1596:185:5::1;1831:12;1844:15;;1831:29;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:36;::::1;;1830:37;::::0;1791:12:::1;::::0;:29:::1;::::0;1804:15;;;;1791:29:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:76;;;::::1;;-1:-1:-1::0;;1791:76:5;;::::1;::::0;;;::::1;::::0;;;1883:41:::1;::::0;1908:15;;;;1883:41:::1;:::i;:::-;;::::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;1484:447:::0;;:::o;6214:208::-;6314:24;6373:10;6384:13;;6373:25;;;;;;;:::i;:::-;;;;;;;;;;;;;;:42;-1:-1:-1;;;;;6373:42:5;;;;;;6214:208;-1:-1:-1;;;6214:208:5:o;5297:153::-;5365:30;5428:15;5411:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5297:153;:::o;4556:228:7:-;4251:7;4277:12;;;;;;;;;;:22;;;4648:41;;4656:18;665:10:19;3867:137:7;:::i;4648:41::-;4640:101;;;;-1:-1:-1;;;4640:101:7;;8159:2:30;4640:101:7;;;8141:21:30;8198:2;8178:18;;;8171:30;8237:34;8217:18;;;8210:62;-1:-1:-1;;;8288:18:30;;;8281:45;8343:19;;4640:101:7;8131:237:30;4640:101:7;4752:25;4763:4;4769:7;4752:10;:25::i;:::-;4556:228;;:::o;2816:802:5:-;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2985:30:5;::::1;2977:102;;;::::0;-1:-1:-1;;;2977:102:5;;12652:2:30;2977:102:5::1;::::0;::::1;12634:21:30::0;12691:2;12671:18;;;12664:30;12730:34;12710:18;;;12703:62;12801:29;12781:18;;;12774:57;12848:19;;2977:102:5::1;12624:249:30::0;2977:102:5::1;3097:33:::0;3089:116:::1;;;::::0;-1:-1:-1;;;3089:116:5;;13080:2:30;3089:116:5::1;::::0;::::1;13062:21:30::0;13119:2;13099:18;;;13092:30;13158:34;13138:18;;;13131:62;13229:34;13209:18;;;13202:62;-1:-1:-1;;;13280:19:30;;;13273:37;13327:19;;3089:116:5::1;13052:300:30::0;3089:116:5::1;3277:1;-1:-1:-1::0;;;;;3223:56:5::1;:10;3234:13;;3223:25;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:42;-1:-1:-1;;;;;3223:42:5::1;::::0;;::::1;;:56;3215:127;;;::::0;-1:-1:-1;;;3215:127:5;;11794:2:30;3215:127:5::1;::::0;::::1;11776:21:30::0;11833:2;11813:18;;;11806:30;11872:34;11852:18;;;11845:62;11943:28;11923:18;;;11916:56;11989:19;;3215:127:5::1;11766:248:30::0;3215:127:5::1;3380:94;::::0;;::::1;::::0;::::1;::::0;;3392:4:::1;3380:94:::0;;-1:-1:-1;;;;;3380:94:5;::::1;;::::0;::::1;::::0;;;;;;;3352:25;;:10:::1;::::0;:25:::1;::::0;3363:13;;;;3352:25:::1;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;:122;;;;;;::::1;::::0;-1:-1:-1;;;;;;3352:122:5;;;;::::1;;-1:-1:-1::0;;;;;;3352:122:5;;::::1;-1:-1:-1::0;;;;;3352:122:5;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;3352:122:5;;::::1;::::0;3484:15:::1;:35:::0;;;;::::1;::::0;;-1:-1:-1;3484:35:5;::::1;::::0;;::::1;3505:13:::0;;3484:35:::1;:::i;:::-;;3591:19;3573:16;-1:-1:-1::0;;;;;3535:76:5::1;3558:13;;3535:76;;;;;;;:::i;:::-;;::::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;2816:802:::0;;;;:::o;5740:214:7:-;-1:-1:-1;;;;;5835:23:7;;665:10:19;5835:23:7;5827:83;;;;-1:-1:-1;;;5827:83:7;;14543:2:30;5827:83:7;;;14525:21:30;14582:2;14562:18;;;14555:30;14621:34;14601:18;;;14594:62;-1:-1:-1;;;14672:18:30;;;14665:45;14727:19;;5827:83:7;14515:237:30;5827:83:7;5921:26;5933:4;5939:7;5921:11;:26::i;5872:213:5:-;5982:21;6035:12;6048:15;;6035:29;;;;;;;:::i;:::-;;;;;;;;;;;;;:43;;;6019:59;;5872:213;;;;:::o;3628:419::-;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;3798:1:5::1;-1:-1:-1::0;;;;;3744:56:5::1;:10;3755:13;;3744:25;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:42;-1:-1:-1;;;;;3744:42:5::1;::::0;;::::1;;:56;;3736:173;;;::::0;-1:-1:-1;;;3736:173:5;;8575:2:30;3736:173:5::1;::::0;::::1;8557:21:30::0;8614:3;8594:18;;;8587:31;8654:34;8634:18;;;8627:62;8725:34;8705:18;;;8698:62;8797:34;8776:19;;;8769:63;-1:-1:-1;;;8848:19:30;;;8841:39;8897:19;;3736:173:5::1;8547:375:30::0;3736:173:5::1;3955:10;3966:13;;3955:25;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:32;::::1;;3954:33;::::0;3919:10:::1;::::0;:25:::1;::::0;3930:13;;;;3919:25:::1;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:68;;;::::1;;-1:-1:-1::0;;3919:68:5;;::::1;::::0;;;::::1;::::0;;;4003:37:::1;::::0;4026:13;;;;4003:37:::1;:::i;:::-;;::::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;3628:419:::0;;:::o;5644:222::-;5748:26;5811:12;5824:15;;5811:29;;;;;;;:::i;6608:222::-;6713:27;6778:10;6789:13;;6778:25;;;;;;;:::i;5456:182::-;5559:11;5595:12;5608:15;;5595:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;:36;;;;5456:182;-1:-1:-1;;;5456:182:5:o;5130:161::-;5200:32;5267:17;5248:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3867:137:7;3945:4;3968:12;;;;;;;;;;;-1:-1:-1;;;;;3968:29:7;;;;;;;;;;;;;;;3867:137::o;2541:269:5:-;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2643:24:5;::::1;2635:92;;;::::0;-1:-1:-1;;;2635:92:5;;14119:2:30;2635:92:5::1;::::0;::::1;14101:21:30::0;14158:2;14138:18;;;14131:30;14197:34;14177:18;;;14170:62;14268:25;14248:18;;;14241:53;14311:19;;2635:92:5::1;14091:245:30::0;2635:92:5::1;2737:6;:19:::0;;-1:-1:-1;;;;;;2737:19:5::1;-1:-1:-1::0;;;;;2737:19:5;::::1;::::0;;::::1;::::0;;;2772:31:::1;::::0;::::1;::::0;-1:-1:-1;;2772:31:5::1;2541:269:::0;:::o;679:799::-;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;849:32:5;::::1;841:106;;;::::0;-1:-1:-1;;;841:106:5;;9693:2:30;841:106:5::1;::::0;::::1;9675:21:30::0;9732:2;9712:18;;;9705:30;9771:34;9751:18;;;9744:62;9842:31;9822:18;;;9815:59;9891:19;;841:106:5::1;9665:251:30::0;841:106:5::1;965:27:::0;957:97:::1;;;::::0;-1:-1:-1;;;957:97:5;;11368:2:30;957:97:5::1;::::0;::::1;11350:21:30::0;11407:2;11387:18;;;11380:30;11446:34;11426:18;;;11419:62;11517:27;11497:18;;;11490:55;11562:19;;957:97:5::1;11340:247:30::0;957:97:5::1;1132:1;-1:-1:-1::0;;;;;1072:62:5::1;:12;1085:15;;1072:29;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:48;-1:-1:-1;;;;;1072:48:5::1;::::0;;::::1;;:62;1064:137;;;::::0;-1:-1:-1;;;1064:137:5;;12221:2:30;1064:137:5::1;::::0;::::1;12203:21:30::0;12260:2;12240:18;;;12233:30;12299:34;12279:18;;;12272:62;12370:32;12350:18;;;12343:60;12420:19;;1064:137:5::1;12193:252:30::0;1064:137:5::1;1243:87;::::0;;::::1;::::0;::::1;::::0;;1256:4:::1;1243:87:::0;;-1:-1:-1;;;;;1243:87:5;::::1;;::::0;::::1;::::0;;;;;;;1211:29;;:12:::1;::::0;:29:::1;::::0;1224:15;;;;1211:29:::1;:::i;:::-;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;:119;;;;;;::::1;::::0;-1:-1:-1;;;;;;1211:119:5;;;;::::1;;-1:-1:-1::0;;;;;;1211:119:5;;::::1;-1:-1:-1::0;;;;;1211:119:5;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;1211:119:5;;::::1;::::0;1340:17:::1;:39:::0;;;;::::1;::::0;;-1:-1:-1;1340:39:5;::::1;::::0;;::::1;1363:15:::0;;1340:39:::1;:::i;:::-;;1437:18;-1:-1:-1::0;;;;;1395:76:5::1;1420:15;;1395:76;;;;;;;:::i;:::-;;::::0;;;;::::1;::::0;;7488:25:30;;;1395:76:5;::::1;::::0;7476:2:30;7461:18;1395:76:5::1;;;;;;;679:799:::0;;;;:::o;5018:231:7:-;4251:7;4277:12;;;;;;;;;;:22;;;5111:41;;5119:18;4185:121;5111:41;5103:102;;;;-1:-1:-1;;;5103:102:7;;10123:2:30;5103:102:7;;;10105:21:30;10162:2;10142:18;;;10135:30;10201:34;10181:18;;;10174:62;-1:-1:-1;;;10252:18:30;;;10245:46;10308:19;;5103:102:7;10095:238:30;4057:578:5;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;4254:1:5::1;-1:-1:-1::0;;;;;4200:56:5::1;:10;4211:13;;4200:25;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:42;-1:-1:-1;;;;;4200:42:5::1;::::0;;::::1;;:56;;4192:183;;;::::0;-1:-1:-1;;;4192:183:5;;9129:2:30;4192:183:5::1;::::0;::::1;9111:21:30::0;9168:3;9148:18;;;9141:31;9208:34;9188:18;;;9181:62;9279:34;9259:18;;;9252:62;9351:34;9330:19;;;9323:63;-1:-1:-1;;;9402:19:30;;;9395:49;9461:19;;4192:183:5::1;9101:385:30::0;4192:183:5::1;4393:25:::0;4385:102:::1;;;::::0;;-1:-1:-1;;;4385:102:5;;7726:2:30;4385:102:5::1;::::0;::::1;7708:21:30::0;7745:18;;;7738:30;;;;7804:34;7784:18;;;7777:62;7875:34;7855:18;;;7848:62;7927:19;;4385:102:5::1;7698:254:30::0;4385:102:5::1;4545:11;4497:10;4508:13;;4497:25;;;;;;;:::i;:::-;;;;;;;;;;;;;:45;;:59;;;;4616:11;4601:13;;4572:56;;;;;;;:::i;:::-;;::::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;4057:578:::0;;;:::o;6428:174::-;6527:11;6563:10;6574:13;;6563:25;;;;;;;:::i;4679:421::-;4782:14;4812:29;4856:4;4844:24;;;;;;-1:-1:-1;;;4844:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4812:56;;4883:6;4878:185;4895:15;;;4878:185;;;4931:12;4945:25;4974:9;;4984:1;4974:12;;;;;-1:-1:-1;;;4974:12:5;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4974:23:5;4998:4;;5003:1;4998:7;;;;;-1:-1:-1;;;4998:7:5;;;;;;;;;;;;;;;;;;;;:::i;:::-;4974:32;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4930:76;;;;5040:12;5020:14;5035:1;5020:17;;;;;;-1:-1:-1;;;5020:17:5;;;;;;;;;;;;;;:32;;;;4878:185;;4912:3;;;;;:::i;:::-;;;;4878:185;;;-1:-1:-1;5079:14:5;4679:421;-1:-1:-1;;;;;4679:421:5:o;1937:598::-;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;2145:1:5::1;-1:-1:-1::0;;;;;2085:62:5::1;:12;2098:15;;2085:29;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:48;-1:-1:-1;;;;;2085:48:5::1;::::0;;::::1;;:62;;2077:192;;;::::0;-1:-1:-1;;;2077:192:5;;14959:2:30;2077:192:5::1;::::0;::::1;14941:21:30::0;14998:3;14978:18;;;14971:31;15038:34;15018:18;;;15011:62;15109:34;15089:18;;;15082:62;15181:34;15160:19;;;15153:63;-1:-1:-1;;;15232:19:30;;;15225:52;15294:19;;2077:192:5::1;14931:388:30::0;2077:192:5::1;2287:25:::0;2279:105:::1;;;::::0;-1:-1:-1;;;2279:105:5;;10540:2:30;2279:105:5::1;::::0;::::1;10522:21:30::0;10579:2;10559:18;;;10552:30;10618:34;10598:18;;;10591:62;10689:34;10669:18;;;10662:62;-1:-1:-1;;;10740:19:30;;;10733:34;10784:19;;2279:105:5::1;10512:297:30::0;2279:105:5::1;2440:11;2394:12;2407:15;;2394:29;;;;;;;:::i;:::-;;;;;;;;;;;;;:43;;:57;;;;2516:11;2499:15;;2467:61;;;;;;;:::i;:::-;;::::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;1937:598:::0;;;:::o;6952:224:7:-;7026:22;7034:4;7040:7;7026;:22::i;:::-;7021:149;;7064:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7064:29:7;;;;;;;;;:36;;-1:-1:-1;;7064:36:7;7096:4;7064:36;;;7146:12;665:10:19;;586:96;7146:12:7;-1:-1:-1;;;;;7119:40:7;7137:7;-1:-1:-1;;;;;7119:40:7;7131:4;7119:40;;;;;;;;;;6952:224;;:::o;7182:225::-;7256:22;7264:4;7270:7;7256;:22::i;:::-;7252:149;;;7326:5;7294:12;;;;;;;;;;;-1:-1:-1;;;;;7294:29:7;;;;;;;;;;:37;;-1:-1:-1;;7294:37:7;;;7350:40;665:10:19;;7294:12:7;;7350:40;;7326:5;7350:40;7182:225;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:30;82:20;;-1:-1:-1;;;;;131:31:30;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:395::-;255:8;265:6;319:3;312:4;304:6;300:17;296:27;286:2;;344:8;334;327:26;286:2;-1:-1:-1;374:20:30;;417:18;406:30;;403:2;;;456:8;446;439:26;403:2;500:4;492:6;488:17;476:29;;560:3;553:4;543:6;540:1;536:14;528:6;524:27;520:38;517:47;514:2;;;577:1;574;567:12;514:2;276:311;;;;;:::o;592:376::-;644:8;654:6;708:3;701:4;693:6;689:17;685:27;675:2;;733:8;723;716:26;675:2;-1:-1:-1;763:20:30;;806:18;795:30;;792:2;;;845:8;835;828:26;792:2;889:4;881:6;877:17;865:29;;941:3;934:4;925:6;917;913:19;909:30;906:39;903:2;;;958:1;955;948:12;973:196;1032:6;1085:2;1073:9;1064:7;1060:23;1056:32;1053:2;;;1106:6;1098;1091:22;1053:2;1134:29;1153:9;1134:29;:::i;:::-;1124:39;1043:126;-1:-1:-1;;;1043:126:30:o;1174:814::-;1307:6;1315;1323;1331;1384:2;1372:9;1363:7;1359:23;1355:32;1352:2;;;1405:6;1397;1390:22;1352:2;1450:9;1437:23;1479:18;1520:2;1512:6;1509:14;1506:2;;;1541:6;1533;1526:22;1506:2;1585:70;1647:7;1638:6;1627:9;1623:22;1585:70;:::i;:::-;1674:8;;-1:-1:-1;1559:96:30;-1:-1:-1;1762:2:30;1747:18;;1734:32;;-1:-1:-1;1778:16:30;;;1775:2;;;1812:6;1804;1797:22;1775:2;;1856:72;1920:7;1909:8;1898:9;1894:24;1856:72;:::i;:::-;1342:646;;;;-1:-1:-1;1947:8:30;-1:-1:-1;;;;1342:646:30:o;1993:190::-;2052:6;2105:2;2093:9;2084:7;2080:23;2076:32;2073:2;;;2126:6;2118;2111:22;2073:2;-1:-1:-1;2154:23:30;;2063:120;-1:-1:-1;2063:120:30:o;2188:264::-;2256:6;2264;2317:2;2305:9;2296:7;2292:23;2288:32;2285:2;;;2338:6;2330;2323:22;2285:2;2379:9;2366:23;2356:33;;2408:38;2442:2;2431:9;2427:18;2408:38;:::i;:::-;2398:48;;2275:177;;;;;:::o;2457:306::-;2515:6;2568:2;2556:9;2547:7;2543:23;2539:32;2536:2;;;2589:6;2581;2574:22;2536:2;2620:23;;-1:-1:-1;;;;;;2672:32:30;;2662:43;;2652:2;;2724:6;2716;2709:22;2768:431;2839:6;2847;2900:2;2888:9;2879:7;2875:23;2871:32;2868:2;;;2921:6;2913;2906:22;2868:2;2966:9;2953:23;2999:18;2991:6;2988:30;2985:2;;;3036:6;3028;3021:22;2985:2;3080:59;3131:7;3122:6;3111:9;3107:22;3080:59;:::i;:::-;3158:8;;3054:85;;-1:-1:-1;2858:341:30;-1:-1:-1;;;;2858:341:30:o;3204:573::-;3293:6;3301;3309;3317;3370:2;3358:9;3349:7;3345:23;3341:32;3338:2;;;3391:6;3383;3376:22;3338:2;3436:9;3423:23;3469:18;3461:6;3458:30;3455:2;;;3506:6;3498;3491:22;3455:2;3550:59;3601:7;3592:6;3581:9;3577:22;3550:59;:::i;:::-;3628:8;;-1:-1:-1;3524:85:30;-1:-1:-1;3682:38:30;;-1:-1:-1;3716:2:30;3701:18;;3682:38;:::i;:::-;3328:449;;;;-1:-1:-1;3672:48:30;;3767:2;3752:18;3739:32;;-1:-1:-1;;3328:449:30:o;3782:499::-;3862:6;3870;3878;3931:2;3919:9;3910:7;3906:23;3902:32;3899:2;;;3952:6;3944;3937:22;3899:2;3997:9;3984:23;4030:18;4022:6;4019:30;4016:2;;;4067:6;4059;4052:22;4016:2;4111:59;4162:7;4153:6;4142:9;4138:22;4111:59;:::i;:::-;4189:8;;4085:85;;-1:-1:-1;4271:2:30;4256:18;;;;4243:32;;3889:392;-1:-1:-1;;;;3889:392:30:o;4286:475::-;4327:3;4365:5;4359:12;4392:6;4387:3;4380:19;4417:3;4429:162;4443:6;4440:1;4437:13;4429:162;;;4505:4;4561:13;;;4557:22;;4551:29;4533:11;;;4529:20;;4522:59;4458:12;4429:162;;;4609:6;4606:1;4603:13;4600:2;;;4675:3;4668:4;4659:6;4654:3;4650:16;4646:27;4639:40;4600:2;-1:-1:-1;4743:2:30;4722:15;-1:-1:-1;;4718:29:30;4709:39;;;;4750:4;4705:50;;4335:426;-1:-1:-1;;4335:426:30:o;4766:273::-;4949:6;4941;4936:3;4923:33;4905:3;4975:16;;5000:15;;;4975:16;4913:126;-1:-1:-1;4913:126:30:o;5532:803::-;5692:4;5721:2;5761;5750:9;5746:18;5791:2;5780:9;5773:21;5814:6;5849;5843:13;5880:6;5872;5865:22;5918:2;5907:9;5903:18;5896:25;;5980:2;5970:6;5967:1;5963:14;5952:9;5948:30;5944:39;5930:53;;6018:2;6010:6;6006:15;6039:4;6052:254;6066:6;6063:1;6060:13;6052:254;;;6159:2;6155:7;6143:9;6135:6;6131:22;6127:36;6122:3;6115:49;6187:39;6219:6;6210;6204:13;6187:39;:::i;:::-;6177:49;-1:-1:-1;6284:12:30;;;;6249:15;;;;6088:1;6081:9;6052:254;;;-1:-1:-1;6323:6:30;;5701:634;-1:-1:-1;;;;;;;5701:634:30:o;6340:805::-;6502:4;6531:2;6571;6560:9;6556:18;6601:2;6590:9;6583:21;6624:6;6659;6653:13;6690:6;6682;6675:22;6728:2;6717:9;6713:18;6706:25;;6790:2;6780:6;6777:1;6773:14;6762:9;6758:30;6754:39;6740:53;;6828:2;6820:6;6816:15;6849:4;6862:254;6876:6;6873:1;6870:13;6862:254;;;6969:2;6965:7;6953:9;6945:6;6941:22;6937:36;6932:3;6925:49;6997:39;7029:6;7020;7014:13;6997:39;:::i;:::-;6987:49;-1:-1:-1;7094:12:30;;;;7059:15;;;;6898:1;6891:9;6862:254;;10814:347;11016:2;10998:21;;;11055:2;11035:18;;;11028:30;11094:25;11089:2;11074:18;;11067:53;11152:2;11137:18;;10988:173::o;15324:533::-;15401:4;15407:6;15467:11;15454:25;15561:2;15557:7;15546:8;15530:14;15526:29;15522:43;15502:18;15498:68;15488:2;;15583:4;15577;15570:18;15488:2;15613:33;;15665:20;;;-1:-1:-1;15708:18:30;15697:30;;15694:2;;;15743:4;15737;15730:18;15694:2;15779:4;15767:17;;-1:-1:-1;15810:14:30;15806:27;;;15796:38;;15793:2;;;15847:1;15844;15837:12;15862:380;15941:1;15937:12;;;;15984;;;16005:2;;16059:4;16051:6;16047:17;16037:27;;16005:2;16112;16104:6;16101:14;16081:18;16078:38;16075:2;;;16158:10;16153:3;16149:20;16146:1;16139:31;16193:4;16190:1;16183:15;16221:4;16218:1;16211:15;16075:2;;15917:325;;;:::o;16247:236::-;16286:3;-1:-1:-1;;16307:17:30;;16304:2;;;-1:-1:-1;;;16347:33:30;;16403:4;16400:1;16393:15;16433:4;16354:3;16421:17;16304:2;-1:-1:-1;16475:1:30;16464:13;;16294:189::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "offset": [
    132,
    6832
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D58EBC1 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xC9CDA91F GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE4BF72CC GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE4BF72CC EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0xF77D6571 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0xFF08E07B EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0xFF280A16 EQ PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC9CDA91F EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xCF4EB013 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5D58EBC1 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x6CCC2BD6 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x82144989 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x8B9C0E36 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x33D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x35F2D3C6 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x35F2D3C6 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x3D783740 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x41D7238E EQ PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x2AC7B757 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x6BBB7F6 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x10FE9AE8 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x1442B868 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x18B125D1 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x202A1C65 EQ PUSH2 0x23F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B25 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0x40E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x20A PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x20A PUSH32 0xC6497B0D1AF5627A7B5DC7995C3C9C668C87BD99DDC7E1609BA9724FE0E860B5 DUP2 JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0x5D1 JUMP JUMPDEST PUSH2 0x20A PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AE2 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x27D PUSH2 0x60B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AFA JUMP JUMPDEST PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1AFA JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x20A PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0xB13 JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x20A PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0xCDB JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0xCEF JUMP JUMPDEST PUSH2 0x27D PUSH2 0xD1D JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AFA JUMP JUMPDEST PUSH2 0xDED JUMP JUMPDEST PUSH2 0x20A PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x353 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0xE16 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x366 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0xF10 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x379 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AFA JUMP JUMPDEST PUSH2 0x1202 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x38C CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE7 JUMP JUMPDEST PUSH2 0x1282 JUMP JUMPDEST PUSH2 0x1A6 PUSH2 0x39F CALLDATASIZE PUSH1 0x4 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0x148A JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0x3B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A79 JUMP JUMPDEST PUSH2 0x149E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1C8C JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x3D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE7 JUMP JUMPDEST PUSH2 0x161B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x408 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x426 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDED JUMP JUMPDEST PUSH2 0x44B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x442 SWAP1 PUSH2 0x1D41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x468 SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND EQ ISZERO PUSH2 0x538 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265676973747279202D20746F67676C65436F6D7065746974696F6E41637469 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x76653A20436F6D7065746974696F6E20646F6573206E6F742065786973742E20 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x5573652066756E6374696F6E202772656769737465724E6577436F6D70657469 PUSH1 0x84 DUP3 ADD MSTORE PUSH14 0x3A34B7B7139034B739BA32B0B217 PUSH1 0x91 SHL PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x2 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x54A SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO SWAP1 PUSH1 0x2 SWAP1 PUSH2 0x56F SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x59D SWAP1 DUP4 SWAP1 DUP4 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0xB1BDAC09178448906C9B70DF8B0345AC474BBB794B64A551CFFFA0A83A0DFDD9 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x5E5 SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x6DB JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x64E SWAP1 PUSH2 0x1DBD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x67A SWAP1 PUSH2 0x1DBD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x69C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x62F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x701 SWAP1 JUMPDEST CALLER PUSH2 0xDED JUMP JUMPDEST PUSH2 0x765 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x818591B5A5B881D1BC819DC985B9D PUSH1 0x8A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x442 JUMP JUMPDEST PUSH2 0x76F DUP3 DUP3 PUSH2 0x1830 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x78B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDED JUMP JUMPDEST PUSH2 0x7A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x442 SWAP1 PUSH2 0x1D41 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x823 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265676973747279202D2072656769737465724E6577457874656E73696F6E3A PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2043616E6E6F74207265676973746572203020616464726573732E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x442 JUMP JUMPDEST DUP1 PUSH2 0x8A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265676973747279202D2072656769737465724E6577457874656E73696F6E3A PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2043616E6E6F742073657420696E666F726D6174696F6E206C6F636174696F6E PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x103A37901817 PUSH1 0xD1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x8C2 SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND EQ PUSH2 0x954 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265676973747279202D2072656769737465724E6577457874656E73696F6E3A PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20457874656E73696F6E20616C7265616479206578697374732E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x3 SWAP1 PUSH2 0x989 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 DUP4 MLOAD DUP2 SLOAD SWAP4 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP5 AND SWAP1 ISZERO ISZERO PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 SWAP2 DUP3 ADD SSTORE PUSH1 0x5 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE PUSH1 0x0 MSTORE PUSH2 0xA19 SWAP1 PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD DUP6 DUP6 PUSH2 0x1919 JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xA35 SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0xC9ECDE0AB371F72E2D34131665B30CE9144EA01E7DE4A8D5A14D4720617DE991 SWAP1 PUSH1 0x0 SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x442 JUMP JUMPDEST PUSH2 0x76F DUP3 DUP3 PUSH2 0x18B4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xAF9 SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB2B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDED JUMP JUMPDEST PUSH2 0xB47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x442 SWAP1 PUSH2 0x1D41 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x3 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB64 SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND EQ ISZERO PUSH2 0xC2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x68 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265676973747279202D20746F67676C65457874656E73696F6E416374697665 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3A20457874656E73696F6E20646F6573206E6F742065786973742E2055736520 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x66756E6374696F6E202772656769737465724E6577457874656E73696F6E2720 PUSH1 0x84 DUP3 ADD MSTORE PUSH8 0x34B739BA32B0B217 PUSH1 0xC1 SHL PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x3 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xC40 SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO SWAP1 PUSH1 0x3 SWAP1 PUSH2 0xC65 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0xC93 SWAP1 DUP4 SWAP1 DUP4 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0x83AE5D198DE73BBA6F0F383B1B155DAE2CA94D1D7ECBD63542D0D07635209FDD SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x5E5 SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xAF9 SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD03 SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x6DB JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xD60 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD8C SWAP1 PUSH2 0x1DBD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDD9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDAE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDD9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDBC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xE2E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDED JUMP JUMPDEST PUSH2 0xE4A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x442 SWAP1 PUSH2 0x1D41 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265676973747279202D206368616E6765546F6B656E416464726573733A2043 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E6E6F742073657420746F203020616464726573732E000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x1297217F6DA0341BA2CAB10677A2E4471C20EBC84ACC96EF2339A734A3A233B2 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xF28 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDED JUMP JUMPDEST PUSH2 0xF44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x442 SWAP1 PUSH2 0x1D41 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265676973747279202D2072656769737465724E6577436F6D7065746974696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E3A2043616E6E6F74207265676973746572203020616464726573732E000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x442 JUMP JUMPDEST DUP1 PUSH2 0x1033 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265676973747279202D2072756C65734C6F636174696F6E3A2043616E6E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207365742072756C6573206C6F636174696F6E20746F20302E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1050 SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND EQ PUSH2 0x10E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265676973747279202D2072656769737465724E6577436F6D7065746974696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E3A20436F6D7065746974696F6E20616C7265616479206578697374732E0000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x442 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP1 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x2 SWAP1 PUSH2 0x1117 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 SWAP3 DUP2 SWAP1 SUB DUP4 ADD SWAP1 KECCAK256 DUP4 MLOAD DUP2 SLOAD SWAP4 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP5 AND SWAP1 ISZERO ISZERO PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 SWAP2 DUP3 ADD SSTORE PUSH1 0x4 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE PUSH1 0x0 MSTORE PUSH2 0x11A7 SWAP1 PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP6 DUP6 PUSH2 0x1919 JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11C2 SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 DUP4 DUP3 MSTORE SWAP1 PUSH32 0xE8CDF60632EED712180856CC0945BC61A38A954C7A0C2697944488B63A886150 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x121D SWAP1 PUSH2 0x6FB JUMP JUMPDEST PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x2061646D696E20746F207265766F6B65 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x442 JUMP JUMPDEST PUSH2 0x129A PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDED JUMP JUMPDEST PUSH2 0x12B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x442 SWAP1 PUSH2 0x1D41 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x3 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x12D3 SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND EQ ISZERO PUSH2 0x13A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x72 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265676973747279202D206368616E6765457874656E73696F6E496E666F4C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x636174696F6E3A20436F6D7065746974696F6E20646F6573206E6F7420657869 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x73742E205573652066756E6374696F6E202772656769737465724E6577436F6D PUSH1 0x84 DUP3 ADD MSTORE PUSH18 0x3832BA34BA34B7B7139034B739BA32B0B217 PUSH1 0x71 SHL PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0x442 JUMP JUMPDEST DUP1 PUSH2 0x141C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x5265676973747279202D206368616E6765457874656E73696F6E496E666F4C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x636174696F6E3A2043616E6E6F742073657420746F203020616464726573732E PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x442 JUMP JUMPDEST DUP1 PUSH1 0x3 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x142F SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1455 SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0x88BFDF54CE240D8032AD74FDE55D2FC88647A35643BD1A8A4BB7BFC6EFC6058C SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD03 SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14C9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x14FC JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x14E7 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1611 JUMPI PUSH1 0x0 DUP1 DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0x152D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1542 SWAP2 SWAP1 PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x156B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x157D SWAP2 SWAP1 PUSH2 0x1D78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x158B SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x15C6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x15CB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x15F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP DUP1 DUP1 PUSH2 0x1609 SWAP1 PUSH2 0x1DF8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1502 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1633 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1E20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xDED JUMP JUMPDEST PUSH2 0x164F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x442 SWAP1 PUSH2 0x1D41 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x166C SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND EQ ISZERO PUSH2 0x1743 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x75 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265676973747279202D206368616E6765436F6D7065746974696F6E52756C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x734C6F636174696F6E3A20436F6D7065746974696F6E20646F6573206E6F7420 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x65786973742E205573652066756E6374696F6E202772656769737465724E6577 PUSH1 0x84 DUP3 ADD MSTORE PUSH21 0x21B7B6B832BA34BA34B7B7139034B739BA32B0B217 PUSH1 0x59 SHL PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0x442 JUMP JUMPDEST DUP1 PUSH2 0x17C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x43 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265676973747279202D206368616E6765436F6D7065746974696F6E52756C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x734C6F636174696F6E3A2043616E6E6F742073657420746F2030206164647265 PUSH1 0x64 DUP3 ADD MSTORE PUSH3 0x39B997 PUSH1 0xE9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x442 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x17D5 SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x17FB SWAP3 SWAP2 SWAP1 PUSH2 0x1C7C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0x90E4275B4012FEDFA9B631D72BFF03048DF6AFF9864BC8CDEE29AA02360D7FD SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x183A DUP3 DUP3 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x76F JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1870 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x18BE DUP3 DUP3 PUSH2 0xDED JUMP JUMPDEST ISZERO PUSH2 0x76F JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1925 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1947 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x198D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1960 JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x198D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x198D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x198D JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1972 JUMP JUMPDEST POP PUSH2 0x1999 SWAP3 SWAP2 POP PUSH2 0x199D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1999 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x199E JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x19C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x19DF JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19F6 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1A11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1A29 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A40 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1A11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A69 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1A72 DUP3 PUSH2 0x19B2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A8E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1AA5 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x1AB1 DUP9 DUP4 DUP10 ADD PUSH2 0x19CE JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1AC9 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x1AD6 DUP8 DUP3 DUP9 ADD PUSH2 0x19CE JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AF3 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B0C JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1B1C PUSH1 0x20 DUP5 ADD PUSH2 0x19B2 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B36 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1A72 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B5F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B75 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1B81 DUP6 DUP3 DUP7 ADD PUSH2 0x1A18 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1BA2 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BB8 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x1BC4 DUP8 DUP3 DUP9 ADD PUSH2 0x1A18 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0x1BD7 SWAP1 POP PUSH1 0x20 DUP7 ADD PUSH2 0x19B2 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x40 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BFB JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C11 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x1C1D DUP7 DUP3 DUP8 ADD PUSH2 0x1A18 JUMP JUMPDEST SWAP1 SWAP8 SWAP1 SWAP7 POP PUSH1 0x20 SWAP6 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C56 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1C3A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1C67 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1CE0 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x1CCE DUP6 DUP4 MLOAD PUSH2 0x1C31 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1CB2 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1CE0 JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x1D2F DUP6 DUP4 MLOAD PUSH2 0x1C31 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1D13 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C657220697320756E617574686F72697A65642E000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x1D8E JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DA8 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x1A11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1DD1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1DF2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1E18 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID 0xA7 0xC3 PUSH27 0x885C101433A066F48B62753BEB2A7567FE326B80D58772C6EF61E2 DUP3 0xE7 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH12 0x1F3E66BE749FEF757D64D7F5 SWAP12 0xE4 0x4E 0xEF 0xD4 SELFBALANCE SSTORE PUSH4 0x6E205756 LT SWAP16 SWAP6 SLT SMOD CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        132,
        6832
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18E"
    },
    "25": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x5D58EBC1"
    },
    "38": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "GT",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDE"
    },
    "42": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xC9CDA91F"
    },
    "49": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "GT",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "54": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "55": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE4BF72CC"
    },
    "60": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "GT",
      "path": "5"
    },
    "61": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "65": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "66": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE4BF72CC"
    },
    "71": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "72": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x37E"
    },
    "75": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "76": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "77": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF77D6571"
    },
    "82": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "83": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x391"
    },
    "86": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "87": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "88": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFF08E07B"
    },
    "93": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "94": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A4"
    },
    "97": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "98": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "99": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFF280A16"
    },
    "104": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "105": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C4"
    },
    "108": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "109": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "112": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "REVERT",
      "path": "5"
    },
    "113": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "114": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "115": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xC9CDA91F"
    },
    "120": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "121": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x345"
    },
    "124": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "125": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "126": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xCF4EB013"
    },
    "131": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "132": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x358"
    },
    "135": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "136": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "137": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD547741F"
    },
    "142": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "143": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36B"
    },
    "146": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "147": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "150": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "REVERT",
      "path": "5"
    },
    "151": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "152": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "153": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x5D58EBC1"
    },
    "158": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "159": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E9"
    },
    "162": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "163": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "164": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6CCC2BD6"
    },
    "169": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "170": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2FC"
    },
    "173": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "174": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "175": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x82144989"
    },
    "180": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "181": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30F"
    },
    "184": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "185": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "186": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8B9C0E36"
    },
    "191": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "192": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x322"
    },
    "195": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "196": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "197": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x91D14854"
    },
    "202": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "203": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x32A"
    },
    "206": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "207": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "208": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA217FDDF"
    },
    "213": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "214": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x33D"
    },
    "217": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "218": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "220": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "221": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "REVERT",
      "path": "5"
    },
    "222": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "223": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "224": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x248A9CA3"
    },
    "229": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "GT",
      "path": "5"
    },
    "230": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14B"
    },
    "233": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "234": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "235": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x35F2D3C6"
    },
    "240": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "GT",
      "path": "5"
    },
    "241": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x125"
    },
    "244": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "245": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "246": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x35F2D3C6"
    },
    "251": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "252": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x29D"
    },
    "255": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "256": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "257": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x36568ABE"
    },
    "262": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "263": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B0"
    },
    "266": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "267": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "268": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3D783740"
    },
    "273": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "274": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C3"
    },
    "277": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "278": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "279": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x41D7238E"
    },
    "284": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "285": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D6"
    },
    "288": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "289": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "291": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "292": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "REVERT",
      "path": "5"
    },
    "293": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "294": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "295": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x248A9CA3"
    },
    "300": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "301": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x252"
    },
    "304": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "305": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "306": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x2AC7B757"
    },
    "311": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "312": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x275"
    },
    "315": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "316": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "317": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x2F2FF15D"
    },
    "322": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "323": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28A"
    },
    "326": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "327": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "329": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "330": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "REVERT",
      "path": "5"
    },
    "331": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "332": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "333": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1FFC9A7"
    },
    "338": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "339": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x193"
    },
    "342": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "343": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "344": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6BBB7F6"
    },
    "349": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "350": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BB"
    },
    "353": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "354": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "355": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x10FE9AE8"
    },
    "360": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "361": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D0"
    },
    "364": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "365": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "366": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1442B868"
    },
    "371": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "372": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F5"
    },
    "375": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "376": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "377": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x18B125D1"
    },
    "382": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "383": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x218"
    },
    "386": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "387": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "388": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x202A1C65"
    },
    "393": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "EQ",
      "path": "5"
    },
    "394": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23F"
    },
    "397": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "398": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "399": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "401": {
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "DUP1",
      "path": "5"
    },
    "402": {
      "first_revert": true,
      "fn": null,
      "offset": [
        132,
        6832
      ],
      "op": "REVERT",
      "path": "5"
    },
    "403": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "404": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A6"
    },
    "407": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A1"
    },
    "410": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "411": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "413": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1B25"
    },
    "416": {
      "fn": "AccessControl.supportsInterface",
      "jump": "i",
      "offset": [
        3566,
        3780
      ],
      "op": "JUMP",
      "path": "7"
    },
    "417": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "418": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3D7"
    },
    "421": {
      "fn": "AccessControl.supportsInterface",
      "jump": "i",
      "offset": [
        3566,
        3780
      ],
      "op": "JUMP",
      "path": "7"
    },
    "422": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "423": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "425": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "426": {
      "op": "SWAP1"
    },
    "427": {
      "op": "ISZERO"
    },
    "428": {
      "op": "ISZERO"
    },
    "429": {
      "op": "DUP2"
    },
    "430": {
      "op": "MSTORE"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "433": {
      "op": "ADD"
    },
    "434": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "435": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "437": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "438": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "DUP1",
      "path": "7"
    },
    "439": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "440": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "SUB",
      "path": "7"
    },
    "441": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "442": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "RETURN",
      "path": "7"
    },
    "443": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1484,
        1931
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "444": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1484,
        1931
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CE"
    },
    "447": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1484,
        1931
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C9"
    },
    "450": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1484,
        1931
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "451": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1484,
        1931
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "453": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1484,
        1931
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B4D"
    },
    "456": {
      "fn": "Registry.toggleCompetitionActive",
      "jump": "i",
      "offset": [
        1484,
        1931
      ],
      "op": "JUMP",
      "path": "5"
    },
    "457": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1484,
        1931
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "458": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1484,
        1931
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x40E"
    },
    "461": {
      "fn": "Registry.toggleCompetitionActive",
      "jump": "i",
      "offset": [
        1484,
        1931
      ],
      "op": "JUMP",
      "path": "5"
    },
    "462": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1484,
        1931
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "463": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1484,
        1931
      ],
      "op": "STOP",
      "path": "5"
    },
    "464": {
      "fn": "Registry.getTokenAddress",
      "offset": [
        6091,
        6208
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "465": {
      "fn": "Registry.getTokenAddress",
      "offset": [
        6195,
        6201
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 0,
      "value": "0x1"
    },
    "467": {
      "fn": "Registry.getTokenAddress",
      "offset": [
        6195,
        6201
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "472": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "474": {
      "op": "SHL"
    },
    "475": {
      "op": "SUB"
    },
    "476": {
      "fn": "Registry.getTokenAddress",
      "offset": [
        6195,
        6201
      ],
      "op": "AND",
      "path": "5"
    },
    "477": {
      "fn": "Registry.getTokenAddress",
      "offset": [
        6091,
        6208
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "478": {
      "fn": "Registry.getTokenAddress",
      "offset": [
        6091,
        6208
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "480": {
      "fn": "Registry.getTokenAddress",
      "offset": [
        6091,
        6208
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "481": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "485": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "487": {
      "op": "SHL"
    },
    "488": {
      "op": "SUB"
    },
    "489": {
      "op": "SWAP1"
    },
    "490": {
      "op": "SWAP2"
    },
    "491": {
      "op": "AND"
    },
    "492": {
      "op": "DUP2"
    },
    "493": {
      "op": "MSTORE"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "496": {
      "op": "ADD"
    },
    "497": {
      "fn": "Registry.getTokenAddress",
      "offset": [
        6091,
        6208
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B2"
    },
    "500": {
      "op": "JUMP"
    },
    "501": {
      "offset": [
        235,
        305
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "502": {
      "fn": "Registry.getTokenAddress",
      "offset": [
        235,
        305
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20A"
    },
    "505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "507": {
      "op": "DUP1"
    },
    "508": {
      "op": "MLOAD"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "511": {
      "op": "PUSH2",
      "value": "0x1E20"
    },
    "514": {
      "op": "DUP4"
    },
    "515": {
      "op": "CODECOPY"
    },
    "516": {
      "op": "DUP2"
    },
    "517": {
      "op": "MLOAD"
    },
    "518": {
      "op": "SWAP2"
    },
    "519": {
      "op": "MSTORE"
    },
    "520": {
      "offset": [
        235,
        305
      ],
      "op": "DUP2",
      "path": "0"
    },
    "521": {
      "fn": "Registry.getTokenAddress",
      "offset": [
        235,
        305
      ],
      "op": "JUMP",
      "path": "0"
    },
    "522": {
      "fn": "Registry.getTokenAddress",
      "offset": [
        235,
        305
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "523": {
      "fn": "Registry.getTokenAddress",
      "offset": [
        235,
        305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "525": {
      "fn": "Registry.getTokenAddress",
      "offset": [
        235,
        305
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "526": {
      "op": "SWAP1"
    },
    "527": {
      "op": "DUP2"
    },
    "528": {
      "op": "MSTORE"
    },
    "529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "531": {
      "op": "ADD"
    },
    "532": {
      "offset": [
        235,
        305
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B2"
    },
    "535": {
      "op": "JUMP"
    },
    "536": {
      "offset": [
        161,
        229
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "537": {
      "fn": "Registry.getTokenAddress",
      "offset": [
        161,
        229
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20A"
    },
    "540": {
      "offset": [
        202,
        229
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC6497B0D1AF5627A7B5DC7995C3C9C668C87BD99DDC7E1609BA9724FE0E860B5"
    },
    "573": {
      "offset": [
        161,
        229
      ],
      "op": "DUP2",
      "path": "0"
    },
    "574": {
      "fn": "Registry.getTokenAddress",
      "offset": [
        161,
        229
      ],
      "op": "JUMP",
      "path": "0"
    },
    "575": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6214,
        6422
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "576": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6214,
        6422
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DD"
    },
    "579": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6214,
        6422
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x24D"
    },
    "582": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6214,
        6422
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "583": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6214,
        6422
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "585": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6214,
        6422
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B4D"
    },
    "588": {
      "fn": "Registry.getExtensionAddress",
      "jump": "i",
      "offset": [
        6214,
        6422
      ],
      "op": "JUMP",
      "path": "5"
    },
    "589": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6214,
        6422
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "590": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6214,
        6422
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5D1"
    },
    "593": {
      "fn": "Registry.getExtensionAddress",
      "jump": "i",
      "offset": [
        6214,
        6422
      ],
      "op": "JUMP",
      "path": "5"
    },
    "594": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4185,
        4306
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "595": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4185,
        4306
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20A"
    },
    "598": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4185,
        4306
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x260"
    },
    "601": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4185,
        4306
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "602": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4185,
        4306
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "604": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4185,
        4306
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AE2"
    },
    "607": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        4185,
        4306
      ],
      "op": "JUMP",
      "path": "7"
    },
    "608": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4185,
        4306
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "609": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4251,
        4258
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "611": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 1
    },
    "612": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "DUP2",
      "path": "7"
    },
    "613": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "614": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "616": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "DUP2",
      "path": "7"
    },
    "617": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "618": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "619": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "621": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "622": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "623": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "625": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "ADD",
      "path": "7"
    },
    "626": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "627": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "628": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4185,
        4306
      ],
      "op": "JUMP",
      "path": "7"
    },
    "629": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5297,
        5450
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "630": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5297,
        5450
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27D"
    },
    "633": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5297,
        5450
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x60B"
    },
    "636": {
      "fn": "Registry.getExtensionList",
      "jump": "i",
      "offset": [
        5297,
        5450
      ],
      "op": "JUMP",
      "path": "5"
    },
    "637": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5297,
        5450
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "638": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5297,
        5450
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "640": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5297,
        5450
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "641": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5297,
        5450
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B2"
    },
    "644": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5297,
        5450
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "645": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5297,
        5450
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "646": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5297,
        5450
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CED"
    },
    "649": {
      "fn": "Registry.getExtensionList",
      "jump": "i",
      "offset": [
        5297,
        5450
      ],
      "op": "JUMP",
      "path": "5"
    },
    "650": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "651": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CE"
    },
    "654": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x298"
    },
    "657": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "658": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "660": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AFA"
    },
    "663": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4556,
        4784
      ],
      "op": "JUMP",
      "path": "7"
    },
    "664": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "665": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6E4"
    },
    "668": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4556,
        4784
      ],
      "op": "JUMP",
      "path": "7"
    },
    "669": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2816,
        3618
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "670": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2816,
        3618
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CE"
    },
    "673": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2816,
        3618
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2AB"
    },
    "676": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2816,
        3618
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "677": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2816,
        3618
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "679": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2816,
        3618
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B8D"
    },
    "682": {
      "fn": "Registry.registerNewExtension",
      "jump": "i",
      "offset": [
        2816,
        3618
      ],
      "op": "JUMP",
      "path": "5"
    },
    "683": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2816,
        3618
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "684": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2816,
        3618
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x773"
    },
    "687": {
      "fn": "Registry.registerNewExtension",
      "jump": "i",
      "offset": [
        2816,
        3618
      ],
      "op": "JUMP",
      "path": "5"
    },
    "688": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5740,
        5954
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "689": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5740,
        5954
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CE"
    },
    "692": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5740,
        5954
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2BE"
    },
    "695": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5740,
        5954
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "696": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5740,
        5954
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "698": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5740,
        5954
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AFA"
    },
    "701": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5740,
        5954
      ],
      "op": "JUMP",
      "path": "7"
    },
    "702": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5740,
        5954
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "703": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5740,
        5954
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA6B"
    },
    "706": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5740,
        5954
      ],
      "op": "JUMP",
      "path": "7"
    },
    "707": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        5872,
        6085
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "708": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        5872,
        6085
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20A"
    },
    "711": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        5872,
        6085
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D1"
    },
    "714": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        5872,
        6085
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "715": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        5872,
        6085
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "717": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        5872,
        6085
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B4D"
    },
    "720": {
      "fn": "Registry.getCompetitionRulesLocation",
      "jump": "i",
      "offset": [
        5872,
        6085
      ],
      "op": "JUMP",
      "path": "5"
    },
    "721": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        5872,
        6085
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "722": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        5872,
        6085
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAE5"
    },
    "725": {
      "fn": "Registry.getCompetitionRulesLocation",
      "jump": "i",
      "offset": [
        5872,
        6085
      ],
      "op": "JUMP",
      "path": "5"
    },
    "726": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3628,
        4047
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "727": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3628,
        4047
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CE"
    },
    "730": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3628,
        4047
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E4"
    },
    "733": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3628,
        4047
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "734": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3628,
        4047
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "736": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3628,
        4047
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B4D"
    },
    "739": {
      "fn": "Registry.toggleExtensionActive",
      "jump": "i",
      "offset": [
        3628,
        4047
      ],
      "op": "JUMP",
      "path": "5"
    },
    "740": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3628,
        4047
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "741": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3628,
        4047
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB13"
    },
    "744": {
      "fn": "Registry.toggleExtensionActive",
      "jump": "i",
      "offset": [
        3628,
        4047
      ],
      "op": "JUMP",
      "path": "5"
    },
    "745": {
      "fn": "Registry.getCompetitionAddress",
      "offset": [
        5644,
        5866
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "746": {
      "fn": "Registry.getCompetitionAddress",
      "offset": [
        5644,
        5866
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DD"
    },
    "749": {
      "fn": "Registry.getCompetitionAddress",
      "offset": [
        5644,
        5866
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F7"
    },
    "752": {
      "fn": "Registry.getCompetitionAddress",
      "offset": [
        5644,
        5866
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "753": {
      "fn": "Registry.getCompetitionAddress",
      "offset": [
        5644,
        5866
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "755": {
      "fn": "Registry.getCompetitionAddress",
      "offset": [
        5644,
        5866
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B4D"
    },
    "758": {
      "fn": "Registry.getCompetitionAddress",
      "jump": "i",
      "offset": [
        5644,
        5866
      ],
      "op": "JUMP",
      "path": "5"
    },
    "759": {
      "fn": "Registry.getCompetitionAddress",
      "offset": [
        5644,
        5866
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "760": {
      "fn": "Registry.getCompetitionAddress",
      "offset": [
        5644,
        5866
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC7"
    },
    "763": {
      "fn": "Registry.getCompetitionAddress",
      "jump": "i",
      "offset": [
        5644,
        5866
      ],
      "op": "JUMP",
      "path": "5"
    },
    "764": {
      "fn": "Registry.getExtensionInfoLocation",
      "offset": [
        6608,
        6830
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "765": {
      "fn": "Registry.getExtensionInfoLocation",
      "offset": [
        6608,
        6830
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20A"
    },
    "768": {
      "fn": "Registry.getExtensionInfoLocation",
      "offset": [
        6608,
        6830
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30A"
    },
    "771": {
      "fn": "Registry.getExtensionInfoLocation",
      "offset": [
        6608,
        6830
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "772": {
      "fn": "Registry.getExtensionInfoLocation",
      "offset": [
        6608,
        6830
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "774": {
      "fn": "Registry.getExtensionInfoLocation",
      "offset": [
        6608,
        6830
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B4D"
    },
    "777": {
      "fn": "Registry.getExtensionInfoLocation",
      "jump": "i",
      "offset": [
        6608,
        6830
      ],
      "op": "JUMP",
      "path": "5"
    },
    "778": {
      "fn": "Registry.getExtensionInfoLocation",
      "offset": [
        6608,
        6830
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "779": {
      "fn": "Registry.getExtensionInfoLocation",
      "offset": [
        6608,
        6830
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCDB"
    },
    "782": {
      "fn": "Registry.getExtensionInfoLocation",
      "jump": "i",
      "offset": [
        6608,
        6830
      ],
      "op": "JUMP",
      "path": "5"
    },
    "783": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5456,
        5638
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "784": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5456,
        5638
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A6"
    },
    "787": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5456,
        5638
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31D"
    },
    "790": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5456,
        5638
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "791": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5456,
        5638
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "793": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5456,
        5638
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B4D"
    },
    "796": {
      "fn": "Registry.getCompetitionActive",
      "jump": "i",
      "offset": [
        5456,
        5638
      ],
      "op": "JUMP",
      "path": "5"
    },
    "797": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5456,
        5638
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "798": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5456,
        5638
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCEF"
    },
    "801": {
      "fn": "Registry.getCompetitionActive",
      "jump": "i",
      "offset": [
        5456,
        5638
      ],
      "op": "JUMP",
      "path": "5"
    },
    "802": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5130,
        5291
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "803": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5130,
        5291
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27D"
    },
    "806": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5130,
        5291
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD1D"
    },
    "809": {
      "fn": "Registry.getCompetitionList",
      "jump": "i",
      "offset": [
        5130,
        5291
      ],
      "op": "JUMP",
      "path": "5"
    },
    "810": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3867,
        4004
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "811": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3867,
        4004
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A6"
    },
    "814": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3867,
        4004
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x338"
    },
    "817": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3867,
        4004
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "818": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3867,
        4004
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "820": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3867,
        4004
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AFA"
    },
    "823": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        3867,
        4004
      ],
      "op": "JUMP",
      "path": "7"
    },
    "824": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3867,
        4004
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "825": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3867,
        4004
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDED"
    },
    "828": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        3867,
        4004
      ],
      "op": "JUMP",
      "path": "7"
    },
    "829": {
      "offset": [
        2363,
        2412
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "830": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2363,
        2412
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20A"
    },
    "833": {
      "offset": [
        2408,
        2412
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "835": {
      "offset": [
        2363,
        2412
      ],
      "op": "DUP2",
      "path": "7"
    },
    "836": {
      "fn": "AccessControl.hasRole",
      "offset": [
        2363,
        2412
      ],
      "op": "JUMP",
      "path": "7"
    },
    "837": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2541,
        2810
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "838": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2541,
        2810
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CE"
    },
    "841": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2541,
        2810
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x353"
    },
    "844": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2541,
        2810
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "845": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2541,
        2810
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "847": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2541,
        2810
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A58"
    },
    "850": {
      "fn": "Registry.changeTokenAddress",
      "jump": "i",
      "offset": [
        2541,
        2810
      ],
      "op": "JUMP",
      "path": "5"
    },
    "851": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2541,
        2810
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "852": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2541,
        2810
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE16"
    },
    "855": {
      "fn": "Registry.changeTokenAddress",
      "jump": "i",
      "offset": [
        2541,
        2810
      ],
      "op": "JUMP",
      "path": "5"
    },
    "856": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        679,
        1478
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "857": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        679,
        1478
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CE"
    },
    "860": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        679,
        1478
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x366"
    },
    "863": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        679,
        1478
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "864": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        679,
        1478
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "866": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        679,
        1478
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B8D"
    },
    "869": {
      "fn": "Registry.registerNewCompetition",
      "jump": "i",
      "offset": [
        679,
        1478
      ],
      "op": "JUMP",
      "path": "5"
    },
    "870": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        679,
        1478
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "871": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        679,
        1478
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF10"
    },
    "874": {
      "fn": "Registry.registerNewCompetition",
      "jump": "i",
      "offset": [
        679,
        1478
      ],
      "op": "JUMP",
      "path": "5"
    },
    "875": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5018,
        5249
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "876": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5018,
        5249
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CE"
    },
    "879": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5018,
        5249
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x379"
    },
    "882": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5018,
        5249
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "883": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5018,
        5249
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "885": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5018,
        5249
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1AFA"
    },
    "888": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5018,
        5249
      ],
      "op": "JUMP",
      "path": "7"
    },
    "889": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5018,
        5249
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "890": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5018,
        5249
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1202"
    },
    "893": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5018,
        5249
      ],
      "op": "JUMP",
      "path": "7"
    },
    "894": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4057,
        4635
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "895": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4057,
        4635
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CE"
    },
    "898": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4057,
        4635
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x38C"
    },
    "901": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4057,
        4635
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "902": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4057,
        4635
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "904": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4057,
        4635
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BE7"
    },
    "907": {
      "fn": "Registry.changeExtensionInfoLocation",
      "jump": "i",
      "offset": [
        4057,
        4635
      ],
      "op": "JUMP",
      "path": "5"
    },
    "908": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4057,
        4635
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "909": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4057,
        4635
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1282"
    },
    "912": {
      "fn": "Registry.changeExtensionInfoLocation",
      "jump": "i",
      "offset": [
        4057,
        4635
      ],
      "op": "JUMP",
      "path": "5"
    },
    "913": {
      "fn": "Registry.getExtensionActive",
      "offset": [
        6428,
        6602
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "914": {
      "fn": "Registry.getExtensionActive",
      "offset": [
        6428,
        6602
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A6"
    },
    "917": {
      "fn": "Registry.getExtensionActive",
      "offset": [
        6428,
        6602
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x39F"
    },
    "920": {
      "fn": "Registry.getExtensionActive",
      "offset": [
        6428,
        6602
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "921": {
      "fn": "Registry.getExtensionActive",
      "offset": [
        6428,
        6602
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "923": {
      "fn": "Registry.getExtensionActive",
      "offset": [
        6428,
        6602
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B4D"
    },
    "926": {
      "fn": "Registry.getExtensionActive",
      "jump": "i",
      "offset": [
        6428,
        6602
      ],
      "op": "JUMP",
      "path": "5"
    },
    "927": {
      "fn": "Registry.getExtensionActive",
      "offset": [
        6428,
        6602
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "928": {
      "fn": "Registry.getExtensionActive",
      "offset": [
        6428,
        6602
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x148A"
    },
    "931": {
      "fn": "Registry.getExtensionActive",
      "jump": "i",
      "offset": [
        6428,
        6602
      ],
      "op": "JUMP",
      "path": "5"
    },
    "932": {
      "fn": "Registry.batchCall",
      "offset": [
        4679,
        5100
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "933": {
      "fn": "Registry.batchCall",
      "offset": [
        4679,
        5100
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B7"
    },
    "936": {
      "fn": "Registry.batchCall",
      "offset": [
        4679,
        5100
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B2"
    },
    "939": {
      "fn": "Registry.batchCall",
      "offset": [
        4679,
        5100
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "940": {
      "fn": "Registry.batchCall",
      "offset": [
        4679,
        5100
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "942": {
      "fn": "Registry.batchCall",
      "offset": [
        4679,
        5100
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A79"
    },
    "945": {
      "fn": "Registry.batchCall",
      "jump": "i",
      "offset": [
        4679,
        5100
      ],
      "op": "JUMP",
      "path": "5"
    },
    "946": {
      "fn": "Registry.batchCall",
      "offset": [
        4679,
        5100
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "947": {
      "fn": "Registry.batchCall",
      "offset": [
        4679,
        5100
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x149E"
    },
    "950": {
      "fn": "Registry.batchCall",
      "jump": "i",
      "offset": [
        4679,
        5100
      ],
      "op": "JUMP",
      "path": "5"
    },
    "951": {
      "fn": "Registry.batchCall",
      "offset": [
        4679,
        5100
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "952": {
      "fn": "Registry.batchCall",
      "offset": [
        4679,
        5100
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "954": {
      "fn": "Registry.batchCall",
      "offset": [
        4679,
        5100
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "955": {
      "fn": "Registry.batchCall",
      "offset": [
        4679,
        5100
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B2"
    },
    "958": {
      "fn": "Registry.batchCall",
      "offset": [
        4679,
        5100
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "959": {
      "fn": "Registry.batchCall",
      "offset": [
        4679,
        5100
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "960": {
      "fn": "Registry.batchCall",
      "offset": [
        4679,
        5100
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C8C"
    },
    "963": {
      "fn": "Registry.batchCall",
      "jump": "i",
      "offset": [
        4679,
        5100
      ],
      "op": "JUMP",
      "path": "5"
    },
    "964": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        1937,
        2535
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "965": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        1937,
        2535
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1CE"
    },
    "968": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        1937,
        2535
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3D2"
    },
    "971": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        1937,
        2535
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "972": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        1937,
        2535
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "974": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        1937,
        2535
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BE7"
    },
    "977": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "jump": "i",
      "offset": [
        1937,
        2535
      ],
      "op": "JUMP",
      "path": "5"
    },
    "978": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        1937,
        2535
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "979": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        1937,
        2535
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x161B"
    },
    "982": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "jump": "i",
      "offset": [
        1937,
        2535
      ],
      "op": "JUMP",
      "path": "5"
    },
    "983": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "984": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3651,
        3655
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "990": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "992": {
      "op": "SHL"
    },
    "993": {
      "op": "SUB"
    },
    "994": {
      "op": "NOT"
    },
    "995": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3674,
        3721
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 2
    },
    "996": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3674,
        3721
      ],
      "op": "AND",
      "path": "7"
    },
    "997": {
      "op": "PUSH4",
      "value": "0x7965DB0B"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1004": {
      "op": "SHL"
    },
    "1005": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3674,
        3721
      ],
      "op": "EQ",
      "path": "7"
    },
    "1006": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3674,
        3721
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1007": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3674,
        3773
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x408"
    },
    "1010": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3674,
        3773
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1011": {
      "op": "POP"
    },
    "1012": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1019": {
      "op": "SHL"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1026": {
      "op": "SHL"
    },
    "1027": {
      "op": "SUB"
    },
    "1028": {
      "op": "NOT"
    },
    "1029": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "21",
      "statement": 3
    },
    "1030": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "21"
    },
    "1031": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "21"
    },
    "1032": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3737,
        3773
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1033": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3667,
        3773
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1034": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1035": {
      "op": "POP"
    },
    "1036": {
      "op": "POP"
    },
    "1037": {
      "fn": "AccessControl.supportsInterface",
      "jump": "o",
      "offset": [
        3566,
        3780
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1038": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1484,
        1931
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1039": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x426"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1044": {
      "op": "DUP1"
    },
    "1045": {
      "op": "MLOAD"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1048": {
      "op": "PUSH2",
      "value": "0x1E20"
    },
    "1051": {
      "op": "DUP4"
    },
    "1052": {
      "op": "CODECOPY"
    },
    "1053": {
      "op": "DUP2"
    },
    "1054": {
      "op": "MLOAD"
    },
    "1055": {
      "op": "SWAP2"
    },
    "1056": {
      "op": "MSTORE"
    },
    "1057": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1058": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDED"
    },
    "1061": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1062": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1063": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44B"
    },
    "1066": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1067": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1069": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1070": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1076": {
      "op": "SHL"
    },
    "1077": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1078": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1079": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1081": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "1082": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x442"
    },
    "1085": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1086": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D41"
    },
    "1089": {
      "fn": "Registry.toggleCompetitionActive",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1090": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1091": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1093": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1094": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        481,
        553
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1095": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        481,
        553
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1096": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        481,
        553
      ],
      "op": "SUB",
      "path": "0"
    },
    "1097": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1098": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        481,
        553
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1099": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1100": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1664,
        1665
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0x0"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1108": {
      "op": "SHL"
    },
    "1109": {
      "op": "SUB"
    },
    "1110": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1666
      ],
      "op": "AND",
      "path": "5"
    },
    "1111": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1616
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1113": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1617,
        1632
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1114": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1617,
        1632
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1115": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1633
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1117": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1633
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1118": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1633
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x468"
    },
    "1121": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1633
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1122": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1633
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1123": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1633
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1124": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1633
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "1127": {
      "fn": "Registry.toggleCompetitionActive",
      "jump": "i",
      "offset": [
        1604,
        1633
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1128": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1633
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1129": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1633
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1130": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1633
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1131": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1633
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1132": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1633
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1134": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1633
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1135": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1633
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1136": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1633
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1137": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1633
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1138": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1633
      ],
      "op": "SUB",
      "path": "5"
    },
    "1139": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1633
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1141": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1633
      ],
      "op": "ADD",
      "path": "5"
    },
    "1142": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1633
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1143": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1633
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1144": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1652
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1151": {
      "op": "SHL"
    },
    "1152": {
      "op": "SUB"
    },
    "1153": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1652
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "1156": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1652
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1157": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1652
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1158": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1652
      ],
      "op": "DIV",
      "path": "5"
    },
    "1159": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1652
      ],
      "op": "AND",
      "path": "5"
    },
    "1160": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1666
      ],
      "op": "EQ",
      "path": "5"
    },
    "1161": {
      "branch": 55,
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1604,
        1666
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1162": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1596,
        1781
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x538"
    },
    "1165": {
      "branch": 55,
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1596,
        1781
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1166": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1596,
        1781
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1168": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1596,
        1781
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1169": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1175": {
      "op": "SHL"
    },
    "1176": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1596,
        1781
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1177": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1596,
        1781
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1180": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1596,
        1781
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1182": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1596,
        1781
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1183": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1596,
        1781
      ],
      "op": "ADD",
      "path": "5"
    },
    "1184": {
      "op": "MSTORE"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x6E"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1189": {
      "op": "DUP3"
    },
    "1190": {
      "op": "ADD"
    },
    "1191": {
      "op": "MSTORE"
    },
    "1192": {
      "op": "PUSH32",
      "value": "0x5265676973747279202D20746F67676C65436F6D7065746974696F6E41637469"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1227": {
      "op": "DUP3"
    },
    "1228": {
      "op": "ADD"
    },
    "1229": {
      "op": "MSTORE"
    },
    "1230": {
      "op": "PUSH32",
      "value": "0x76653A20436F6D7065746974696F6E20646F6573206E6F742065786973742E20"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1265": {
      "op": "DUP3"
    },
    "1266": {
      "op": "ADD"
    },
    "1267": {
      "op": "MSTORE"
    },
    "1268": {
      "op": "PUSH32",
      "value": "0x5573652066756E6374696F6E202772656769737465724E6577436F6D70657469"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1303": {
      "op": "DUP3"
    },
    "1304": {
      "op": "ADD"
    },
    "1305": {
      "op": "MSTORE"
    },
    "1306": {
      "op": "PUSH14",
      "value": "0x3A34B7B7139034B739BA32B0B217"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "1323": {
      "op": "SHL"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "1326": {
      "op": "DUP3"
    },
    "1327": {
      "op": "ADD"
    },
    "1328": {
      "op": "MSTORE"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "1331": {
      "op": "ADD"
    },
    "1332": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1596,
        1781
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x442"
    },
    "1335": {
      "op": "JUMP"
    },
    "1336": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1596,
        1781
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1337": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1843
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 5,
      "value": "0x2"
    },
    "1339": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1844,
        1859
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1340": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1844,
        1859
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1341": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1860
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1343": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1860
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1344": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1860
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x54A"
    },
    "1347": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1860
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1348": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1860
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1349": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1860
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1350": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1860
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "1353": {
      "fn": "Registry.toggleCompetitionActive",
      "jump": "i",
      "offset": [
        1831,
        1860
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1354": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1860
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1355": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1860
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1356": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1860
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1357": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1860
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1358": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1860
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1360": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1860
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1361": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1860
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1362": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1860
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1363": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1860
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1364": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1860
      ],
      "op": "SUB",
      "path": "5"
    },
    "1365": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1860
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1367": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1860
      ],
      "op": "ADD",
      "path": "5"
    },
    "1368": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1860
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1369": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1860
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1370": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1867
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1371": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1867
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "1373": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1831,
        1867
      ],
      "op": "AND",
      "path": "5"
    },
    "1374": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1830,
        1867
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1375": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1830,
        1867
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1376": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1803
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1378": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1803
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1379": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1820
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x56F"
    },
    "1382": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1820
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1383": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1804,
        1819
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1384": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1804,
        1819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1385": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1804,
        1819
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1386": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1804,
        1819
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1387": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1820
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "1390": {
      "fn": "Registry.toggleCompetitionActive",
      "jump": "i",
      "offset": [
        1791,
        1820
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1391": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1820
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1392": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1820
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1393": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1820
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1394": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1820
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1395": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1820
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1397": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1820
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1398": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1820
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1399": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1820
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1400": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1820
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1401": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1820
      ],
      "op": "SUB",
      "path": "5"
    },
    "1402": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1820
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1404": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1820
      ],
      "op": "ADD",
      "path": "5"
    },
    "1405": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1820
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1406": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1820
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1407": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1867
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1408": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1867
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1409": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1867
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1410": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1867
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1411": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1867
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1414": {
      "op": "NOT"
    },
    "1415": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1867
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1416": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1867
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1417": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1867
      ],
      "op": "AND",
      "path": "5"
    },
    "1418": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1867
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1419": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1867
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1420": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1867
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1421": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1867
      ],
      "op": "OR",
      "path": "5"
    },
    "1422": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1867
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1423": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1867
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1424": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1791,
        1867
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1425": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1883,
        1924
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 6,
      "value": "0x59D"
    },
    "1428": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1883,
        1924
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1429": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1908,
        1923
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1430": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1908,
        1923
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1431": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1908,
        1923
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1432": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1908,
        1923
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1433": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1883,
        1924
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "1436": {
      "fn": "Registry.toggleCompetitionActive",
      "jump": "i",
      "offset": [
        1883,
        1924
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1437": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1883,
        1924
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1438": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1883,
        1924
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1440": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1883,
        1924
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1441": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1883,
        1924
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1442": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1883,
        1924
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1443": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1883,
        1924
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1444": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1883,
        1924
      ],
      "op": "SUB",
      "path": "5"
    },
    "1445": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1883,
        1924
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1446": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1883,
        1924
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1447": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1883,
        1924
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1448": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1883,
        1924
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xB1BDAC09178448906C9B70DF8B0345AC474BBB794B64A551CFFFA0A83A0DFDD9"
    },
    "1481": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1883,
        1924
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1482": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1883,
        1924
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1484": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1883,
        1924
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1485": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1883,
        1924
      ],
      "op": "LOG2",
      "path": "5"
    },
    "1486": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1484,
        1931
      ],
      "op": "POP",
      "path": "5"
    },
    "1487": {
      "fn": "Registry.toggleCompetitionActive",
      "offset": [
        1484,
        1931
      ],
      "op": "POP",
      "path": "5"
    },
    "1488": {
      "fn": "Registry.toggleCompetitionActive",
      "jump": "o",
      "offset": [
        1484,
        1931
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1489": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6214,
        6422
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1490": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6314,
        6338
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1492": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6383
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 7,
      "value": "0x3"
    },
    "1494": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6384,
        6397
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1495": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6384,
        6397
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1496": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6398
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1498": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6398
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1499": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6398
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5E5"
    },
    "1502": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6398
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1503": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6398
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1504": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6398
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1505": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6398
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "1508": {
      "fn": "Registry.getExtensionAddress",
      "jump": "i",
      "offset": [
        6373,
        6398
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1509": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6398
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1510": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6398
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1511": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6398
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1512": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6398
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1513": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6398
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1515": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6398
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1516": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6398
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1517": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6398
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1518": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6398
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1519": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6398
      ],
      "op": "SUB",
      "path": "5"
    },
    "1520": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6398
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1522": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6398
      ],
      "op": "ADD",
      "path": "5"
    },
    "1523": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6398
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1524": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6398
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1525": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6415
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1532": {
      "op": "SHL"
    },
    "1533": {
      "op": "SUB"
    },
    "1534": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6415
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "1537": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6415
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1538": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6415
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1539": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6415
      ],
      "op": "DIV",
      "path": "5"
    },
    "1540": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6415
      ],
      "op": "AND",
      "path": "5"
    },
    "1541": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6373,
        6415
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1542": {
      "fn": "Registry.getExtensionAddress",
      "offset": [
        6214,
        6422
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1543": {
      "op": "POP"
    },
    "1544": {
      "op": "POP"
    },
    "1545": {
      "op": "POP"
    },
    "1546": {
      "fn": "Registry.getExtensionAddress",
      "jump": "o",
      "offset": [
        6214,
        6422
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1547": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5297,
        5450
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1548": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5365,
        5395
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1550": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5428,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 8,
      "value": "0x5"
    },
    "1552": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1553": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1554": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1555": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1557": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "MUL",
      "path": "5"
    },
    "1558": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1560": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "ADD",
      "path": "5"
    },
    "1561": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1563": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1564": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1565": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1566": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "ADD",
      "path": "5"
    },
    "1567": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1569": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1570": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1571": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1572": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1573": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1574": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1575": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1576": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1577": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1579": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "ADD",
      "path": "5"
    },
    "1580": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1582": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1583": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1584": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1585": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1586": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "LT",
      "path": "5"
    },
    "1587": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1588": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6DB"
    },
    "1591": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1592": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1593": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1594": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1595": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1597": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1598": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1600": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1602": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1603": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "ADD",
      "path": "5"
    },
    "1604": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1605": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1606": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x64E"
    },
    "1609": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1610": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DBD"
    },
    "1613": {
      "fn": "Registry.getExtensionList",
      "jump": "i",
      "offset": [
        5411,
        5443
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1614": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1615": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1616": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1618": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "ADD",
      "path": "5"
    },
    "1619": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1621": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1622": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1623": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DIV",
      "path": "5"
    },
    "1624": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "MUL",
      "path": "5"
    },
    "1625": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1627": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "ADD",
      "path": "5"
    },
    "1628": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1630": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1631": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1632": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1633": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "ADD",
      "path": "5"
    },
    "1634": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1636": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1637": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1638": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1639": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1640": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1641": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1642": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1643": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1644": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1646": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "ADD",
      "path": "5"
    },
    "1647": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1648": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1649": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1650": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x67A"
    },
    "1653": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1654": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DBD"
    },
    "1657": {
      "fn": "Registry.getExtensionList",
      "jump": "i",
      "offset": [
        5411,
        5443
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1658": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1659": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1660": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1661": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6C7"
    },
    "1664": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1665": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1666": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1668": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "LT",
      "path": "5"
    },
    "1669": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x69C"
    },
    "1672": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1673": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "1676": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1677": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1678": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1679": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DIV",
      "path": "5"
    },
    "1680": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "MUL",
      "path": "5"
    },
    "1681": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1682": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1683": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1684": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1686": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "ADD",
      "path": "5"
    },
    "1687": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1688": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6C7"
    },
    "1691": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1692": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1693": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1694": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "ADD",
      "path": "5"
    },
    "1695": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1696": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1697": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1699": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1700": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1702": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1704": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1705": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1706": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1707": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1708": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1709": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1710": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1711": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1712": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1714": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "ADD",
      "path": "5"
    },
    "1715": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1716": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1718": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "ADD",
      "path": "5"
    },
    "1719": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1720": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1721": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "GT",
      "path": "5"
    },
    "1722": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6AA"
    },
    "1725": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1726": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1727": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1728": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SUB",
      "path": "5"
    },
    "1729": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1731": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "AND",
      "path": "5"
    },
    "1732": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1733": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "ADD",
      "path": "5"
    },
    "1734": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1735": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1736": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "POP",
      "path": "5"
    },
    "1737": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "POP",
      "path": "5"
    },
    "1738": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "POP",
      "path": "5"
    },
    "1739": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "POP",
      "path": "5"
    },
    "1740": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "POP",
      "path": "5"
    },
    "1741": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1742": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1743": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1745": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "ADD",
      "path": "5"
    },
    "1746": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1747": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1749": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "ADD",
      "path": "5"
    },
    "1750": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1751": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x62F"
    },
    "1754": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1755": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1756": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "POP",
      "path": "5"
    },
    "1757": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "POP",
      "path": "5"
    },
    "1758": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "POP",
      "path": "5"
    },
    "1759": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "POP",
      "path": "5"
    },
    "1760": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1761": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5411,
        5443
      ],
      "op": "POP",
      "path": "5"
    },
    "1762": {
      "fn": "Registry.getExtensionList",
      "offset": [
        5297,
        5450
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1763": {
      "fn": "Registry.getExtensionList",
      "jump": "o",
      "offset": [
        5297,
        5450
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1764": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1765": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4251,
        4258
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1767": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1768": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1769": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1770": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1772": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1773": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1774": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1775": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1777": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1778": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1779": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1781": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "ADD",
      "path": "7"
    },
    "1782": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1783": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4648,
        4689
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 9,
      "value": "0x701"
    },
    "1786": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4648,
        4689
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1787": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4656,
        4674
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1788": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "19",
      "statement": 10
    },
    "1789": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3867,
        4004
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDED"
    },
    "1792": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        3867,
        4004
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1793": {
      "branch": 68,
      "fn": "AccessControl.grantRole",
      "offset": [
        4648,
        4689
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1794": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x765"
    },
    "1797": {
      "branch": 68,
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1798": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1800": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1801": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1809": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1812": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1814": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1815": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "ADD",
      "path": "7"
    },
    "1816": {
      "op": "MSTORE"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1821": {
      "op": "DUP3"
    },
    "1822": {
      "op": "ADD"
    },
    "1823": {
      "op": "MSTORE"
    },
    "1824": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1859": {
      "op": "DUP3"
    },
    "1860": {
      "op": "ADD"
    },
    "1861": {
      "op": "MSTORE"
    },
    "1862": {
      "op": "PUSH15",
      "value": "0x818591B5A5B881D1BC819DC985B9D"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "1880": {
      "op": "SHL"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1883": {
      "op": "DUP3"
    },
    "1884": {
      "op": "ADD"
    },
    "1885": {
      "op": "MSTORE"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1888": {
      "op": "ADD"
    },
    "1889": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x442"
    },
    "1892": {
      "op": "JUMP"
    },
    "1893": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1894": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4752,
        4777
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 11,
      "value": "0x76F"
    },
    "1897": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4763,
        4767
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1898": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4769,
        4776
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1899": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4752,
        4762
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1830"
    },
    "1902": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4752,
        4777
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1903": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4752,
        4777
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1904": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "POP",
      "path": "7"
    },
    "1905": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "POP",
      "path": "7"
    },
    "1906": {
      "fn": "AccessControl.grantRole",
      "jump": "o",
      "offset": [
        4556,
        4784
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1907": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2816,
        3618
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1908": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x78B"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1913": {
      "op": "DUP1"
    },
    "1914": {
      "op": "MLOAD"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1917": {
      "op": "PUSH2",
      "value": "0x1E20"
    },
    "1920": {
      "op": "DUP4"
    },
    "1921": {
      "op": "CODECOPY"
    },
    "1922": {
      "op": "DUP2"
    },
    "1923": {
      "op": "MLOAD"
    },
    "1924": {
      "op": "SWAP2"
    },
    "1925": {
      "op": "MSTORE"
    },
    "1926": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1927": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDED"
    },
    "1930": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1931": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1932": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A7"
    },
    "1935": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1936": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1938": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1939": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1945": {
      "op": "SHL"
    },
    "1946": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1947": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1948": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1950": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "1951": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x442"
    },
    "1954": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1955": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D41"
    },
    "1958": {
      "fn": "Registry.registerNewExtension",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1959": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1966": {
      "op": "SHL"
    },
    "1967": {
      "op": "SUB"
    },
    "1968": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2985,
        3015
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 12
    },
    "1969": {
      "branch": 56,
      "fn": "Registry.registerNewExtension",
      "offset": [
        2985,
        3015
      ],
      "op": "AND",
      "path": "5"
    },
    "1970": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2977,
        3079
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x823"
    },
    "1973": {
      "branch": 56,
      "fn": "Registry.registerNewExtension",
      "offset": [
        2977,
        3079
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1974": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2977,
        3079
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1976": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2977,
        3079
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1977": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1983": {
      "op": "SHL"
    },
    "1984": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2977,
        3079
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1985": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2977,
        3079
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1988": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2977,
        3079
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1990": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2977,
        3079
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1991": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2977,
        3079
      ],
      "op": "ADD",
      "path": "5"
    },
    "1992": {
      "op": "MSTORE"
    },
    "1993": {
      "op": "PUSH1",
      "value": "0x3B"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1997": {
      "op": "DUP3"
    },
    "1998": {
      "op": "ADD"
    },
    "1999": {
      "op": "MSTORE"
    },
    "2000": {
      "op": "PUSH32",
      "value": "0x5265676973747279202D2072656769737465724E6577457874656E73696F6E3A"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2035": {
      "op": "DUP3"
    },
    "2036": {
      "op": "ADD"
    },
    "2037": {
      "op": "MSTORE"
    },
    "2038": {
      "op": "PUSH32",
      "value": "0x2043616E6E6F74207265676973746572203020616464726573732E0000000000"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2073": {
      "op": "DUP3"
    },
    "2074": {
      "op": "ADD"
    },
    "2075": {
      "op": "MSTORE"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2078": {
      "op": "ADD"
    },
    "2079": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2977,
        3079
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x442"
    },
    "2082": {
      "op": "JUMP"
    },
    "2083": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2977,
        3079
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2084": {
      "branch": 57,
      "fn": "Registry.registerNewExtension",
      "offset": [
        3097,
        3130
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 13
    },
    "2085": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3089,
        3205
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8A5"
    },
    "2088": {
      "branch": 57,
      "fn": "Registry.registerNewExtension",
      "offset": [
        3089,
        3205
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2089": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3089,
        3205
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2091": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3089,
        3205
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2092": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2098": {
      "op": "SHL"
    },
    "2099": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3089,
        3205
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2100": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3089,
        3205
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2103": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3089,
        3205
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2105": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3089,
        3205
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2106": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3089,
        3205
      ],
      "op": "ADD",
      "path": "5"
    },
    "2107": {
      "op": "MSTORE"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x46"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2112": {
      "op": "DUP3"
    },
    "2113": {
      "op": "ADD"
    },
    "2114": {
      "op": "MSTORE"
    },
    "2115": {
      "op": "PUSH32",
      "value": "0x5265676973747279202D2072656769737465724E6577457874656E73696F6E3A"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2150": {
      "op": "DUP3"
    },
    "2151": {
      "op": "ADD"
    },
    "2152": {
      "op": "MSTORE"
    },
    "2153": {
      "op": "PUSH32",
      "value": "0x2043616E6E6F742073657420696E666F726D6174696F6E206C6F636174696F6E"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2188": {
      "op": "DUP3"
    },
    "2189": {
      "op": "ADD"
    },
    "2190": {
      "op": "MSTORE"
    },
    "2191": {
      "op": "PUSH6",
      "value": "0x103A37901817"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "2200": {
      "op": "SHL"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2203": {
      "op": "DUP3"
    },
    "2204": {
      "op": "ADD"
    },
    "2205": {
      "op": "MSTORE"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "2208": {
      "op": "ADD"
    },
    "2209": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3089,
        3205
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x442"
    },
    "2212": {
      "op": "JUMP"
    },
    "2213": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3089,
        3205
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2214": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3277,
        3278
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 14,
      "value": "0x0"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2222": {
      "op": "SHL"
    },
    "2223": {
      "op": "SUB"
    },
    "2224": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3279
      ],
      "op": "AND",
      "path": "5"
    },
    "2225": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3233
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2227": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3234,
        3247
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2228": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3234,
        3247
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2229": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3248
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2231": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3248
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2232": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3248
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8C2"
    },
    "2235": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3248
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2236": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3248
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2237": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3248
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2238": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3248
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "2241": {
      "fn": "Registry.registerNewExtension",
      "jump": "i",
      "offset": [
        3223,
        3248
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2242": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3248
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2243": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3248
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2244": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3248
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2245": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3248
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2246": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3248
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2248": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3248
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2249": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3248
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2250": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3248
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2251": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3248
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2252": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3248
      ],
      "op": "SUB",
      "path": "5"
    },
    "2253": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3248
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2255": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3248
      ],
      "op": "ADD",
      "path": "5"
    },
    "2256": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3248
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2257": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3248
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2258": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3265
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2265": {
      "op": "SHL"
    },
    "2266": {
      "op": "SUB"
    },
    "2267": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3265
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2270": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3265
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2271": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3265
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2272": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3265
      ],
      "op": "DIV",
      "path": "5"
    },
    "2273": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3265
      ],
      "op": "AND",
      "path": "5"
    },
    "2274": {
      "branch": 58,
      "fn": "Registry.registerNewExtension",
      "offset": [
        3223,
        3279
      ],
      "op": "EQ",
      "path": "5"
    },
    "2275": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3215,
        3342
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x954"
    },
    "2278": {
      "branch": 58,
      "fn": "Registry.registerNewExtension",
      "offset": [
        3215,
        3342
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2279": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3215,
        3342
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2281": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3215,
        3342
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2282": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2288": {
      "op": "SHL"
    },
    "2289": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3215,
        3342
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2290": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3215,
        3342
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2293": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3215,
        3342
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2295": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3215,
        3342
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2296": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3215,
        3342
      ],
      "op": "ADD",
      "path": "5"
    },
    "2297": {
      "op": "MSTORE"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2302": {
      "op": "DUP3"
    },
    "2303": {
      "op": "ADD"
    },
    "2304": {
      "op": "MSTORE"
    },
    "2305": {
      "op": "PUSH32",
      "value": "0x5265676973747279202D2072656769737465724E6577457874656E73696F6E3A"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2340": {
      "op": "DUP3"
    },
    "2341": {
      "op": "ADD"
    },
    "2342": {
      "op": "MSTORE"
    },
    "2343": {
      "op": "PUSH32",
      "value": "0x20457874656E73696F6E20616C7265616479206578697374732E000000000000"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2378": {
      "op": "DUP3"
    },
    "2379": {
      "op": "ADD"
    },
    "2380": {
      "op": "MSTORE"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2383": {
      "op": "ADD"
    },
    "2384": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3215,
        3342
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x442"
    },
    "2387": {
      "op": "JUMP"
    },
    "2388": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3215,
        3342
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2389": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 15,
      "value": "0x40"
    },
    "2391": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2392": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2393": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2395": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2396": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "ADD",
      "path": "5"
    },
    "2397": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2398": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2399": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3392,
        3396
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2401": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2402": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2409": {
      "op": "SHL"
    },
    "2410": {
      "op": "SUB"
    },
    "2411": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2412": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "AND",
      "path": "5"
    },
    "2413": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2415": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2416": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "ADD",
      "path": "5"
    },
    "2417": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2418": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2419": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2420": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "ADD",
      "path": "5"
    },
    "2421": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2422": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2423": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3380,
        3474
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2424": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3377
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2425": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3377
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2426": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3362
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2428": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3362
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2429": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3377
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x989"
    },
    "2432": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3377
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2433": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3363,
        3376
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2434": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3363,
        3376
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2435": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3363,
        3376
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2436": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3363,
        3376
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2437": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3377
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "2440": {
      "fn": "Registry.registerNewExtension",
      "jump": "i",
      "offset": [
        3352,
        3377
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2441": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3377
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2442": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3377
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2443": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3377
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2444": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3377
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2445": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3377
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2447": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3377
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2448": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3377
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2449": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3377
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2451": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3377
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2452": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3377
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2453": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3377
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2454": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3377
      ],
      "op": "SUB",
      "path": "5"
    },
    "2455": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3377
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2456": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3377
      ],
      "op": "ADD",
      "path": "5"
    },
    "2457": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3377
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2458": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3377
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2459": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2460": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2461": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2462": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2463": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2464": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2465": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "ADD",
      "path": "5"
    },
    "2466": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2473": {
      "op": "SHL"
    },
    "2474": {
      "op": "SUB"
    },
    "2475": {
      "op": "NOT"
    },
    "2476": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2477": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2478": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "AND",
      "path": "5"
    },
    "2479": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2480": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2481": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2482": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2487": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2489": {
      "op": "SHL"
    },
    "2490": {
      "op": "SUB"
    },
    "2491": {
      "op": "NOT"
    },
    "2492": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "AND",
      "path": "5"
    },
    "2493": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "OR",
      "path": "5"
    },
    "2494": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2503": {
      "op": "SHL"
    },
    "2504": {
      "op": "SUB"
    },
    "2505": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2506": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2507": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "AND",
      "path": "5"
    },
    "2508": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2509": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2510": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2511": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "MUL",
      "path": "5"
    },
    "2512": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2513": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2514": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2515": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "OR",
      "path": "5"
    },
    "2516": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2517": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2518": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2519": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2520": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2521": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "ADD",
      "path": "5"
    },
    "2522": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2525": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2526": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2527": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "ADD",
      "path": "5"
    },
    "2528": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3352,
        3474
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2529": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3484,
        3499
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 16,
      "value": "0x5"
    },
    "2531": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3484,
        3519
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2532": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3484,
        3519
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2533": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3484,
        3519
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2534": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3484,
        3519
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2535": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3484,
        3519
      ],
      "op": "ADD",
      "path": "5"
    },
    "2536": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3484,
        3519
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2537": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3484,
        3519
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2540": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3484,
        3519
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2541": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3484,
        3519
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA19"
    },
    "2544": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3484,
        3519
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2545": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3484,
        3519
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "2578": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3484,
        3519
      ],
      "op": "ADD",
      "path": "5"
    },
    "2579": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3505,
        3518
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2580": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3505,
        3518
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2581": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3484,
        3519
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1919"
    },
    "2584": {
      "fn": "Registry.registerNewExtension",
      "jump": "i",
      "offset": [
        3484,
        3519
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2585": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3484,
        3519
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2586": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3484,
        3519
      ],
      "op": "POP",
      "path": "5"
    },
    "2587": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3591,
        3610
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 17
    },
    "2588": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3573,
        3589
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2595": {
      "op": "SHL"
    },
    "2596": {
      "op": "SUB"
    },
    "2597": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "AND",
      "path": "5"
    },
    "2598": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3558,
        3571
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2599": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3558,
        3571
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2600": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2602": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2603": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA35"
    },
    "2606": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2607": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2608": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2609": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "2612": {
      "fn": "Registry.registerNewExtension",
      "jump": "i",
      "offset": [
        3535,
        3611
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2613": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2614": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2616": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2617": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2618": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2619": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2620": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "SUB",
      "path": "5"
    },
    "2621": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2622": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2623": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2624": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xC9ECDE0AB371F72E2D34131665B30CE9144EA01E7DE4A8D5A14D4720617DE991"
    },
    "2657": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2658": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2660": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2661": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        3535,
        3611
      ],
      "op": "LOG4",
      "path": "5"
    },
    "2662": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2816,
        3618
      ],
      "op": "POP",
      "path": "5"
    },
    "2663": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2816,
        3618
      ],
      "op": "POP",
      "path": "5"
    },
    "2664": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2816,
        3618
      ],
      "op": "POP",
      "path": "5"
    },
    "2665": {
      "fn": "Registry.registerNewExtension",
      "offset": [
        2816,
        3618
      ],
      "op": "POP",
      "path": "5"
    },
    "2666": {
      "fn": "Registry.registerNewExtension",
      "jump": "o",
      "offset": [
        2816,
        3618
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2667": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5740,
        5954
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2672": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2674": {
      "op": "SHL"
    },
    "2675": {
      "op": "SUB"
    },
    "2676": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5835,
        5858
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 18
    },
    "2677": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5835,
        5858
      ],
      "op": "AND",
      "path": "7"
    },
    "2678": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "19"
    },
    "2679": {
      "branch": 69,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5835,
        5858
      ],
      "op": "EQ",
      "path": "7"
    },
    "2680": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xADB"
    },
    "2683": {
      "branch": 69,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2684": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2686": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2687": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2693": {
      "op": "SHL"
    },
    "2694": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2695": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2698": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2700": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2701": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "ADD",
      "path": "7"
    },
    "2702": {
      "op": "MSTORE"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2707": {
      "op": "DUP3"
    },
    "2708": {
      "op": "ADD"
    },
    "2709": {
      "op": "MSTORE"
    },
    "2710": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2745": {
      "op": "DUP3"
    },
    "2746": {
      "op": "ADD"
    },
    "2747": {
      "op": "MSTORE"
    },
    "2748": {
      "op": "PUSH15",
      "value": "0x103937B632B9903337B91039B2B633"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "2766": {
      "op": "SHL"
    },
    "2767": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2769": {
      "op": "DUP3"
    },
    "2770": {
      "op": "ADD"
    },
    "2771": {
      "op": "MSTORE"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2774": {
      "op": "ADD"
    },
    "2775": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x442"
    },
    "2778": {
      "op": "JUMP"
    },
    "2779": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2780": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5921,
        5947
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 19,
      "value": "0x76F"
    },
    "2783": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5933,
        5937
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2784": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5939,
        5946
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2785": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5921,
        5932
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18B4"
    },
    "2788": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5921,
        5947
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2789": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        5872,
        6085
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2790": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        5982,
        6003
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2792": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6047
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 20,
      "value": "0x2"
    },
    "2794": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6048,
        6063
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2795": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6048,
        6063
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2796": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6064
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2798": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6064
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2799": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6064
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAF9"
    },
    "2802": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6064
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2803": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6064
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2804": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6064
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2805": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6064
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "2808": {
      "fn": "Registry.getCompetitionRulesLocation",
      "jump": "i",
      "offset": [
        6035,
        6064
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2809": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6064
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2810": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6064
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2811": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6064
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2812": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6064
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2813": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6064
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2815": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6064
      ],
      "op": "ADD",
      "path": "5"
    },
    "2816": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6064
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2818": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6064
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2819": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6064
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2820": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6064
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2821": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6064
      ],
      "op": "SUB",
      "path": "5"
    },
    "2822": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6064
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2823": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6064
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2824": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6078
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2826": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6078
      ],
      "op": "ADD",
      "path": "5"
    },
    "2827": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6035,
        6078
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2828": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6019,
        6078
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2829": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        6019,
        6078
      ],
      "op": "POP",
      "path": "5"
    },
    "2830": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        5872,
        6085
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2831": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        5872,
        6085
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2832": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        5872,
        6085
      ],
      "op": "POP",
      "path": "5"
    },
    "2833": {
      "fn": "Registry.getCompetitionRulesLocation",
      "offset": [
        5872,
        6085
      ],
      "op": "POP",
      "path": "5"
    },
    "2834": {
      "fn": "Registry.getCompetitionRulesLocation",
      "jump": "o",
      "offset": [
        5872,
        6085
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2835": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3628,
        4047
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2836": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB2B"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2841": {
      "op": "DUP1"
    },
    "2842": {
      "op": "MLOAD"
    },
    "2843": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2845": {
      "op": "PUSH2",
      "value": "0x1E20"
    },
    "2848": {
      "op": "DUP4"
    },
    "2849": {
      "op": "CODECOPY"
    },
    "2850": {
      "op": "DUP2"
    },
    "2851": {
      "op": "MLOAD"
    },
    "2852": {
      "op": "SWAP2"
    },
    "2853": {
      "op": "MSTORE"
    },
    "2854": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2855": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDED"
    },
    "2858": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2859": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2860": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB47"
    },
    "2863": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2864": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2866": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2867": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2873": {
      "op": "SHL"
    },
    "2874": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2875": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2876": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2878": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "2879": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x442"
    },
    "2882": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2883": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D41"
    },
    "2886": {
      "fn": "Registry.toggleExtensionActive",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2887": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2888": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3798,
        3799
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 21,
      "value": "0x0"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2896": {
      "op": "SHL"
    },
    "2897": {
      "op": "SUB"
    },
    "2898": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3800
      ],
      "op": "AND",
      "path": "5"
    },
    "2899": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3754
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2901": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3755,
        3768
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2902": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3755,
        3768
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2903": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3769
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2905": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3769
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2906": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3769
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB64"
    },
    "2909": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3769
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2910": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3769
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2911": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3769
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2912": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3769
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "2915": {
      "fn": "Registry.toggleExtensionActive",
      "jump": "i",
      "offset": [
        3744,
        3769
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2916": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3769
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2917": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3769
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2918": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3769
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2919": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3769
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2920": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3769
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2922": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3769
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2923": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3769
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2924": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3769
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2925": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3769
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2926": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3769
      ],
      "op": "SUB",
      "path": "5"
    },
    "2927": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3769
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2929": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3769
      ],
      "op": "ADD",
      "path": "5"
    },
    "2930": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3769
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2931": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3769
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2932": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3786
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2939": {
      "op": "SHL"
    },
    "2940": {
      "op": "SUB"
    },
    "2941": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3786
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "2944": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3786
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2945": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3786
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2946": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3786
      ],
      "op": "DIV",
      "path": "5"
    },
    "2947": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3786
      ],
      "op": "AND",
      "path": "5"
    },
    "2948": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3800
      ],
      "op": "EQ",
      "path": "5"
    },
    "2949": {
      "branch": 59,
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3744,
        3800
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2950": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3736,
        3909
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC2E"
    },
    "2953": {
      "branch": 59,
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3736,
        3909
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2954": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3736,
        3909
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2956": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3736,
        3909
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2957": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2963": {
      "op": "SHL"
    },
    "2964": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3736,
        3909
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2965": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3736,
        3909
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2968": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3736,
        3909
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2970": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3736,
        3909
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2971": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3736,
        3909
      ],
      "op": "ADD",
      "path": "5"
    },
    "2972": {
      "op": "MSTORE"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x68"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2977": {
      "op": "DUP3"
    },
    "2978": {
      "op": "ADD"
    },
    "2979": {
      "op": "MSTORE"
    },
    "2980": {
      "op": "PUSH32",
      "value": "0x5265676973747279202D20746F67676C65457874656E73696F6E416374697665"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3015": {
      "op": "DUP3"
    },
    "3016": {
      "op": "ADD"
    },
    "3017": {
      "op": "MSTORE"
    },
    "3018": {
      "op": "PUSH32",
      "value": "0x3A20457874656E73696F6E20646F6573206E6F742065786973742E2055736520"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3053": {
      "op": "DUP3"
    },
    "3054": {
      "op": "ADD"
    },
    "3055": {
      "op": "MSTORE"
    },
    "3056": {
      "op": "PUSH32",
      "value": "0x66756E6374696F6E202772656769737465724E6577457874656E73696F6E2720"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3091": {
      "op": "DUP3"
    },
    "3092": {
      "op": "ADD"
    },
    "3093": {
      "op": "MSTORE"
    },
    "3094": {
      "op": "PUSH8",
      "value": "0x34B739BA32B0B217"
    },
    "3103": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "3105": {
      "op": "SHL"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "3108": {
      "op": "DUP3"
    },
    "3109": {
      "op": "ADD"
    },
    "3110": {
      "op": "MSTORE"
    },
    "3111": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "3113": {
      "op": "ADD"
    },
    "3114": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3736,
        3909
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x442"
    },
    "3117": {
      "op": "JUMP"
    },
    "3118": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3736,
        3909
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3119": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3965
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 22,
      "value": "0x3"
    },
    "3121": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3966,
        3979
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3122": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3966,
        3979
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3123": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3980
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3125": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3980
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3126": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3980
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC40"
    },
    "3129": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3980
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3130": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3980
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3131": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3980
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3132": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3980
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "3135": {
      "fn": "Registry.toggleExtensionActive",
      "jump": "i",
      "offset": [
        3955,
        3980
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3136": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3980
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3137": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3980
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3138": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3980
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3139": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3980
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3140": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3980
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3142": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3980
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3143": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3980
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3144": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3980
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3145": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3980
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3146": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3980
      ],
      "op": "SUB",
      "path": "5"
    },
    "3147": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3980
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3149": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3980
      ],
      "op": "ADD",
      "path": "5"
    },
    "3150": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3980
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3151": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3980
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3152": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3987
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3153": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3987
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "3155": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3955,
        3987
      ],
      "op": "AND",
      "path": "5"
    },
    "3156": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3954,
        3987
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3157": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3954,
        3987
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3158": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3929
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3160": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3929
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3161": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3944
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC65"
    },
    "3164": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3944
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3165": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3930,
        3943
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3166": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3930,
        3943
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3167": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3930,
        3943
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3168": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3930,
        3943
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3169": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3944
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "3172": {
      "fn": "Registry.toggleExtensionActive",
      "jump": "i",
      "offset": [
        3919,
        3944
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3173": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3944
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3174": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3944
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3175": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3944
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3176": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3944
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3177": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3944
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3179": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3944
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3180": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3944
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3181": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3944
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3182": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3944
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3183": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3944
      ],
      "op": "SUB",
      "path": "5"
    },
    "3184": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3944
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3186": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3944
      ],
      "op": "ADD",
      "path": "5"
    },
    "3187": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3944
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3188": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3944
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3189": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3987
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3190": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3987
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3191": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3987
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3192": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3987
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3193": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3987
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3194": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3196": {
      "op": "NOT"
    },
    "3197": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3987
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3198": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3987
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3199": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3987
      ],
      "op": "AND",
      "path": "5"
    },
    "3200": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3987
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3201": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3987
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3202": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3987
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3203": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3987
      ],
      "op": "OR",
      "path": "5"
    },
    "3204": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3987
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3205": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3987
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3206": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3919,
        3987
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3207": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4003,
        4040
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 23,
      "value": "0xC93"
    },
    "3210": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4003,
        4040
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3211": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4026,
        4039
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3212": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4026,
        4039
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3213": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4026,
        4039
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3214": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4026,
        4039
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3215": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4003,
        4040
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "3218": {
      "fn": "Registry.toggleExtensionActive",
      "jump": "i",
      "offset": [
        4003,
        4040
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3219": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4003,
        4040
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3220": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4003,
        4040
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3222": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4003,
        4040
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3223": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4003,
        4040
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3224": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4003,
        4040
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3225": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4003,
        4040
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3226": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4003,
        4040
      ],
      "op": "SUB",
      "path": "5"
    },
    "3227": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4003,
        4040
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3228": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4003,
        4040
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3229": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4003,
        4040
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3230": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4003,
        4040
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x83AE5D198DE73BBA6F0F383B1B155DAE2CA94D1D7ECBD63542D0D07635209FDD"
    },
    "3263": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4003,
        4040
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3264": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4003,
        4040
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3266": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4003,
        4040
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3267": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        4003,
        4040
      ],
      "op": "LOG2",
      "path": "5"
    },
    "3268": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3628,
        4047
      ],
      "op": "POP",
      "path": "5"
    },
    "3269": {
      "fn": "Registry.toggleExtensionActive",
      "offset": [
        3628,
        4047
      ],
      "op": "POP",
      "path": "5"
    },
    "3270": {
      "fn": "Registry.toggleExtensionActive",
      "jump": "o",
      "offset": [
        3628,
        4047
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3271": {
      "fn": "Registry.getCompetitionAddress",
      "offset": [
        5644,
        5866
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3272": {
      "fn": "Registry.getCompetitionAddress",
      "offset": [
        5748,
        5774
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3274": {
      "fn": "Registry.getCompetitionAddress",
      "offset": [
        5811,
        5823
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 24,
      "value": "0x2"
    },
    "3276": {
      "fn": "Registry.getCompetitionAddress",
      "offset": [
        5824,
        5839
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3277": {
      "fn": "Registry.getCompetitionAddress",
      "offset": [
        5824,
        5839
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3278": {
      "fn": "Registry.getCompetitionAddress",
      "offset": [
        5811,
        5840
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3280": {
      "fn": "Registry.getCompetitionAddress",
      "offset": [
        5811,
        5840
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3281": {
      "fn": "Registry.getCompetitionAddress",
      "offset": [
        5811,
        5840
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5E5"
    },
    "3284": {
      "fn": "Registry.getCompetitionAddress",
      "offset": [
        5811,
        5840
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3285": {
      "fn": "Registry.getCompetitionAddress",
      "offset": [
        5811,
        5840
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3286": {
      "fn": "Registry.getCompetitionAddress",
      "offset": [
        5811,
        5840
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3287": {
      "fn": "Registry.getCompetitionAddress",
      "offset": [
        5811,
        5840
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "3290": {
      "fn": "Registry.getCompetitionAddress",
      "jump": "i",
      "offset": [
        5811,
        5840
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3291": {
      "fn": "Registry.getExtensionInfoLocation",
      "offset": [
        6608,
        6830
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3292": {
      "fn": "Registry.getExtensionInfoLocation",
      "offset": [
        6713,
        6740
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3294": {
      "fn": "Registry.getExtensionInfoLocation",
      "offset": [
        6778,
        6788
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 25,
      "value": "0x3"
    },
    "3296": {
      "fn": "Registry.getExtensionInfoLocation",
      "offset": [
        6789,
        6802
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3297": {
      "fn": "Registry.getExtensionInfoLocation",
      "offset": [
        6789,
        6802
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3298": {
      "fn": "Registry.getExtensionInfoLocation",
      "offset": [
        6778,
        6803
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3300": {
      "fn": "Registry.getExtensionInfoLocation",
      "offset": [
        6778,
        6803
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3301": {
      "fn": "Registry.getExtensionInfoLocation",
      "offset": [
        6778,
        6803
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAF9"
    },
    "3304": {
      "fn": "Registry.getExtensionInfoLocation",
      "offset": [
        6778,
        6803
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3305": {
      "fn": "Registry.getExtensionInfoLocation",
      "offset": [
        6778,
        6803
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3306": {
      "fn": "Registry.getExtensionInfoLocation",
      "offset": [
        6778,
        6803
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3307": {
      "fn": "Registry.getExtensionInfoLocation",
      "offset": [
        6778,
        6803
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "3310": {
      "fn": "Registry.getExtensionInfoLocation",
      "jump": "i",
      "offset": [
        6778,
        6803
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3311": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5456,
        5638
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3312": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5559,
        5570
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3314": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5607
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 26,
      "value": "0x2"
    },
    "3316": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5608,
        5623
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3317": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5608,
        5623
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3318": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5624
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3320": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5624
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3321": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5624
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD03"
    },
    "3324": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5624
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3325": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5624
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3326": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5624
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3327": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5624
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "3330": {
      "fn": "Registry.getCompetitionActive",
      "jump": "i",
      "offset": [
        5595,
        5624
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3331": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5624
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3332": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5624
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3333": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5624
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3334": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5624
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3335": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5624
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3337": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5624
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3338": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5624
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3339": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5624
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3340": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5624
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3341": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5624
      ],
      "op": "SUB",
      "path": "5"
    },
    "3342": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5624
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3344": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5624
      ],
      "op": "ADD",
      "path": "5"
    },
    "3345": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5624
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3346": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5624
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3347": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5631
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3348": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5631
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "3350": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5631
      ],
      "op": "AND",
      "path": "5"
    },
    "3351": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5595,
        5631
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3352": {
      "fn": "Registry.getCompetitionActive",
      "offset": [
        5456,
        5638
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3353": {
      "op": "POP"
    },
    "3354": {
      "op": "POP"
    },
    "3355": {
      "op": "POP"
    },
    "3356": {
      "fn": "Registry.getCompetitionActive",
      "jump": "o",
      "offset": [
        5456,
        5638
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3357": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5130,
        5291
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3358": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5200,
        5232
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "3360": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5267,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 27,
      "value": "0x4"
    },
    "3362": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3363": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3364": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3365": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3367": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "MUL",
      "path": "5"
    },
    "3368": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3370": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "ADD",
      "path": "5"
    },
    "3371": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3373": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3374": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3375": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3376": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "ADD",
      "path": "5"
    },
    "3377": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3379": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3380": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3381": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3382": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3383": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3384": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3385": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3386": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3387": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3389": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "ADD",
      "path": "5"
    },
    "3390": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3392": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3393": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3394": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3395": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3396": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "LT",
      "path": "5"
    },
    "3397": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3398": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6DB"
    },
    "3401": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3402": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3403": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3404": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3405": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3407": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3408": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3410": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3412": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3413": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "ADD",
      "path": "5"
    },
    "3414": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3415": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3416": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD60"
    },
    "3419": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3420": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DBD"
    },
    "3423": {
      "fn": "Registry.getCompetitionList",
      "jump": "i",
      "offset": [
        5248,
        5284
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3424": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3425": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3426": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3428": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "ADD",
      "path": "5"
    },
    "3429": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3431": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3432": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3433": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DIV",
      "path": "5"
    },
    "3434": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "MUL",
      "path": "5"
    },
    "3435": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3437": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "ADD",
      "path": "5"
    },
    "3438": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3440": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3441": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3442": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3443": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "ADD",
      "path": "5"
    },
    "3444": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3446": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3447": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3448": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3449": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3450": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3451": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3452": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3453": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3454": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3456": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "ADD",
      "path": "5"
    },
    "3457": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3458": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3459": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3460": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD8C"
    },
    "3463": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3464": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DBD"
    },
    "3467": {
      "fn": "Registry.getCompetitionList",
      "jump": "i",
      "offset": [
        5248,
        5284
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3468": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3469": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3470": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3471": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDD9"
    },
    "3474": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3475": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3476": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3478": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "LT",
      "path": "5"
    },
    "3479": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDAE"
    },
    "3482": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3483": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "3486": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3487": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3488": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3489": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DIV",
      "path": "5"
    },
    "3490": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "MUL",
      "path": "5"
    },
    "3491": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3492": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3493": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3494": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3496": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "ADD",
      "path": "5"
    },
    "3497": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3498": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDD9"
    },
    "3501": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3502": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3503": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3504": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "ADD",
      "path": "5"
    },
    "3505": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3506": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3507": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3509": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3510": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3512": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3514": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3515": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3516": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3517": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3518": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3519": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3520": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3521": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3522": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3524": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "ADD",
      "path": "5"
    },
    "3525": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3526": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3528": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "ADD",
      "path": "5"
    },
    "3529": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3530": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3531": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "GT",
      "path": "5"
    },
    "3532": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDBC"
    },
    "3535": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3536": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3537": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3538": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SUB",
      "path": "5"
    },
    "3539": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3541": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "AND",
      "path": "5"
    },
    "3542": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3543": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "ADD",
      "path": "5"
    },
    "3544": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3545": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3546": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "POP",
      "path": "5"
    },
    "3547": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "POP",
      "path": "5"
    },
    "3548": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "POP",
      "path": "5"
    },
    "3549": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "POP",
      "path": "5"
    },
    "3550": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "POP",
      "path": "5"
    },
    "3551": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3552": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3553": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3555": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "ADD",
      "path": "5"
    },
    "3556": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3557": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3559": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "ADD",
      "path": "5"
    },
    "3560": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3561": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD41"
    },
    "3564": {
      "fn": "Registry.getCompetitionList",
      "offset": [
        5248,
        5284
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3565": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3867,
        4004
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3566": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3945,
        3949
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3568": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 28
    },
    "3569": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3570": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3571": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3573": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3574": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3575": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3576": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3578": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3579": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3580": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3587": {
      "op": "SHL"
    },
    "3588": {
      "op": "SUB"
    },
    "3589": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3590": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3591": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3592": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "AND",
      "path": "7"
    },
    "3593": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3594": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3595": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3596": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3597": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3598": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3599": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3600": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3601": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "3603": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "AND",
      "path": "7"
    },
    "3604": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3605": {
      "fn": "AccessControl.hasRole",
      "jump": "o",
      "offset": [
        3867,
        4004
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3606": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2541,
        2810
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3607": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE2E"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3612": {
      "op": "DUP1"
    },
    "3613": {
      "op": "MLOAD"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3616": {
      "op": "PUSH2",
      "value": "0x1E20"
    },
    "3619": {
      "op": "DUP4"
    },
    "3620": {
      "op": "CODECOPY"
    },
    "3621": {
      "op": "DUP2"
    },
    "3622": {
      "op": "MLOAD"
    },
    "3623": {
      "op": "SWAP2"
    },
    "3624": {
      "op": "MSTORE"
    },
    "3625": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3626": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDED"
    },
    "3629": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3630": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3631": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE4A"
    },
    "3634": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3635": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3637": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3638": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3642": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3644": {
      "op": "SHL"
    },
    "3645": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3646": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3647": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3649": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "3650": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x442"
    },
    "3653": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3654": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D41"
    },
    "3657": {
      "fn": "Registry.changeTokenAddress",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3658": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3665": {
      "op": "SHL"
    },
    "3666": {
      "op": "SUB"
    },
    "3667": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2643,
        2667
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 29
    },
    "3668": {
      "branch": 60,
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2643,
        2667
      ],
      "op": "AND",
      "path": "5"
    },
    "3669": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2635,
        2727
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEC6"
    },
    "3672": {
      "branch": 60,
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2635,
        2727
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3673": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2635,
        2727
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3675": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2635,
        2727
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3676": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3680": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3682": {
      "op": "SHL"
    },
    "3683": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2635,
        2727
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3684": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2635,
        2727
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3687": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2635,
        2727
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3689": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2635,
        2727
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3690": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2635,
        2727
      ],
      "op": "ADD",
      "path": "5"
    },
    "3691": {
      "op": "MSTORE"
    },
    "3692": {
      "op": "PUSH1",
      "value": "0x37"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3696": {
      "op": "DUP3"
    },
    "3697": {
      "op": "ADD"
    },
    "3698": {
      "op": "MSTORE"
    },
    "3699": {
      "op": "PUSH32",
      "value": "0x5265676973747279202D206368616E6765546F6B656E416464726573733A2043"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3734": {
      "op": "DUP3"
    },
    "3735": {
      "op": "ADD"
    },
    "3736": {
      "op": "MSTORE"
    },
    "3737": {
      "op": "PUSH32",
      "value": "0x616E6E6F742073657420746F203020616464726573732E000000000000000000"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3772": {
      "op": "DUP3"
    },
    "3773": {
      "op": "ADD"
    },
    "3774": {
      "op": "MSTORE"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3777": {
      "op": "ADD"
    },
    "3778": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2635,
        2727
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x442"
    },
    "3781": {
      "op": "JUMP"
    },
    "3782": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2635,
        2727
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3783": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2737,
        2743
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 30,
      "value": "0x1"
    },
    "3785": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2737,
        2756
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3786": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2737,
        2756
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3793": {
      "op": "SHL"
    },
    "3794": {
      "op": "SUB"
    },
    "3795": {
      "op": "NOT"
    },
    "3796": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2737,
        2756
      ],
      "op": "AND",
      "path": "5"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3803": {
      "op": "SHL"
    },
    "3804": {
      "op": "SUB"
    },
    "3805": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2737,
        2756
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3806": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2737,
        2756
      ],
      "op": "AND",
      "path": "5"
    },
    "3807": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2737,
        2756
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3808": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2737,
        2756
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3809": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2737,
        2756
      ],
      "op": "OR",
      "path": "5"
    },
    "3810": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2737,
        2756
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3811": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2737,
        2756
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3812": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2737,
        2756
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3813": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2772,
        2803
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 31,
      "value": "0x40"
    },
    "3815": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2772,
        2803
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3816": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2772,
        2803
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x1297217F6DA0341BA2CAB10677A2E4471C20EBC84ACC96EF2339A734A3A233B2"
    },
    "3849": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2772,
        2803
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3852": {
      "op": "SWAP1"
    },
    "3853": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2772,
        2803
      ],
      "op": "LOG2",
      "path": "5"
    },
    "3854": {
      "fn": "Registry.changeTokenAddress",
      "offset": [
        2541,
        2810
      ],
      "op": "POP",
      "path": "5"
    },
    "3855": {
      "fn": "Registry.changeTokenAddress",
      "jump": "o",
      "offset": [
        2541,
        2810
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3856": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        679,
        1478
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3857": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF28"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3862": {
      "op": "DUP1"
    },
    "3863": {
      "op": "MLOAD"
    },
    "3864": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3866": {
      "op": "PUSH2",
      "value": "0x1E20"
    },
    "3869": {
      "op": "DUP4"
    },
    "3870": {
      "op": "CODECOPY"
    },
    "3871": {
      "op": "DUP2"
    },
    "3872": {
      "op": "MLOAD"
    },
    "3873": {
      "op": "SWAP2"
    },
    "3874": {
      "op": "MSTORE"
    },
    "3875": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3876": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDED"
    },
    "3879": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3880": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3881": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF44"
    },
    "3884": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3885": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3887": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3888": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3894": {
      "op": "SHL"
    },
    "3895": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3896": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3897": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3899": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "3900": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x442"
    },
    "3903": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3904": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D41"
    },
    "3907": {
      "fn": "Registry.registerNewCompetition",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3908": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3913": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3915": {
      "op": "SHL"
    },
    "3916": {
      "op": "SUB"
    },
    "3917": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        849,
        881
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 32
    },
    "3918": {
      "branch": 61,
      "fn": "Registry.registerNewCompetition",
      "offset": [
        849,
        881
      ],
      "op": "AND",
      "path": "5"
    },
    "3919": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        841,
        947
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFC0"
    },
    "3922": {
      "branch": 61,
      "fn": "Registry.registerNewCompetition",
      "offset": [
        841,
        947
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3923": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        841,
        947
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3925": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        841,
        947
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3926": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3932": {
      "op": "SHL"
    },
    "3933": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        841,
        947
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3934": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        841,
        947
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3937": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        841,
        947
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3939": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        841,
        947
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3940": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        841,
        947
      ],
      "op": "ADD",
      "path": "5"
    },
    "3941": {
      "op": "MSTORE"
    },
    "3942": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "3944": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3946": {
      "op": "DUP3"
    },
    "3947": {
      "op": "ADD"
    },
    "3948": {
      "op": "MSTORE"
    },
    "3949": {
      "op": "PUSH32",
      "value": "0x5265676973747279202D2072656769737465724E6577436F6D7065746974696F"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3984": {
      "op": "DUP3"
    },
    "3985": {
      "op": "ADD"
    },
    "3986": {
      "op": "MSTORE"
    },
    "3987": {
      "op": "PUSH32",
      "value": "0x6E3A2043616E6E6F74207265676973746572203020616464726573732E000000"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4022": {
      "op": "DUP3"
    },
    "4023": {
      "op": "ADD"
    },
    "4024": {
      "op": "MSTORE"
    },
    "4025": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4027": {
      "op": "ADD"
    },
    "4028": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        841,
        947
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x442"
    },
    "4031": {
      "op": "JUMP"
    },
    "4032": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        841,
        947
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4033": {
      "branch": 62,
      "fn": "Registry.registerNewCompetition",
      "offset": [
        965,
        992
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 33
    },
    "4034": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        957,
        1054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1033"
    },
    "4037": {
      "branch": 62,
      "fn": "Registry.registerNewCompetition",
      "offset": [
        957,
        1054
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4038": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        957,
        1054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4040": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        957,
        1054
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4041": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4045": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4047": {
      "op": "SHL"
    },
    "4048": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        957,
        1054
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4049": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        957,
        1054
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4052": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        957,
        1054
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4054": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        957,
        1054
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4055": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        957,
        1054
      ],
      "op": "ADD",
      "path": "5"
    },
    "4056": {
      "op": "MSTORE"
    },
    "4057": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4061": {
      "op": "DUP3"
    },
    "4062": {
      "op": "ADD"
    },
    "4063": {
      "op": "MSTORE"
    },
    "4064": {
      "op": "PUSH32",
      "value": "0x5265676973747279202D2072756C65734C6F636174696F6E3A2043616E6E6F74"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4099": {
      "op": "DUP3"
    },
    "4100": {
      "op": "ADD"
    },
    "4101": {
      "op": "MSTORE"
    },
    "4102": {
      "op": "PUSH32",
      "value": "0x207365742072756C6573206C6F636174696F6E20746F20302E00000000000000"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4137": {
      "op": "DUP3"
    },
    "4138": {
      "op": "ADD"
    },
    "4139": {
      "op": "MSTORE"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4142": {
      "op": "ADD"
    },
    "4143": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        957,
        1054
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x442"
    },
    "4146": {
      "op": "JUMP"
    },
    "4147": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        957,
        1054
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4148": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1132,
        1133
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 34,
      "value": "0x0"
    },
    "4150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4156": {
      "op": "SHL"
    },
    "4157": {
      "op": "SUB"
    },
    "4158": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1134
      ],
      "op": "AND",
      "path": "5"
    },
    "4159": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1084
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4161": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1085,
        1100
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4162": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1085,
        1100
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4163": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1101
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4165": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1101
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4166": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1101
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1050"
    },
    "4169": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1101
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4170": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1101
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4171": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1101
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4172": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1101
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "4175": {
      "fn": "Registry.registerNewCompetition",
      "jump": "i",
      "offset": [
        1072,
        1101
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4176": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1101
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4177": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1101
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4178": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1101
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4179": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1101
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4180": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1101
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4182": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1101
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4183": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1101
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4184": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1101
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4185": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1101
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4186": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1101
      ],
      "op": "SUB",
      "path": "5"
    },
    "4187": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1101
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4189": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1101
      ],
      "op": "ADD",
      "path": "5"
    },
    "4190": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1101
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4191": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1101
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4192": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1120
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4199": {
      "op": "SHL"
    },
    "4200": {
      "op": "SUB"
    },
    "4201": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1120
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "4204": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1120
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4205": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1120
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4206": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1120
      ],
      "op": "DIV",
      "path": "5"
    },
    "4207": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1120
      ],
      "op": "AND",
      "path": "5"
    },
    "4208": {
      "branch": 63,
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1072,
        1134
      ],
      "op": "EQ",
      "path": "5"
    },
    "4209": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1064,
        1201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10E2"
    },
    "4212": {
      "branch": 63,
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1064,
        1201
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4213": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1064,
        1201
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4215": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1064,
        1201
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4216": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4222": {
      "op": "SHL"
    },
    "4223": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1064,
        1201
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4224": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1064,
        1201
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4227": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1064,
        1201
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4229": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1064,
        1201
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4230": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1064,
        1201
      ],
      "op": "ADD",
      "path": "5"
    },
    "4231": {
      "op": "MSTORE"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "4234": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4236": {
      "op": "DUP3"
    },
    "4237": {
      "op": "ADD"
    },
    "4238": {
      "op": "MSTORE"
    },
    "4239": {
      "op": "PUSH32",
      "value": "0x5265676973747279202D2072656769737465724E6577436F6D7065746974696F"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4274": {
      "op": "DUP3"
    },
    "4275": {
      "op": "ADD"
    },
    "4276": {
      "op": "MSTORE"
    },
    "4277": {
      "op": "PUSH32",
      "value": "0x6E3A20436F6D7065746974696F6E20616C7265616479206578697374732E0000"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4312": {
      "op": "DUP3"
    },
    "4313": {
      "op": "ADD"
    },
    "4314": {
      "op": "MSTORE"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4317": {
      "op": "ADD"
    },
    "4318": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1064,
        1201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x442"
    },
    "4321": {
      "op": "JUMP"
    },
    "4322": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1064,
        1201
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4323": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 35,
      "value": "0x40"
    },
    "4325": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4326": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4327": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "4329": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4330": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "ADD",
      "path": "5"
    },
    "4331": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4332": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4333": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1256,
        1260
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4335": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4336": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4343": {
      "op": "SHL"
    },
    "4344": {
      "op": "SUB"
    },
    "4345": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4346": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "AND",
      "path": "5"
    },
    "4347": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4349": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4350": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "ADD",
      "path": "5"
    },
    "4351": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4352": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4353": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4354": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "ADD",
      "path": "5"
    },
    "4355": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4356": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4357": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1243,
        1330
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4358": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1240
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4359": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1240
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4360": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1223
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4362": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1223
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4363": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1240
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1117"
    },
    "4366": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1240
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4367": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1224,
        1239
      ],
      "op": "DUP8",
      "path": "5"
    },
    "4368": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1224,
        1239
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4369": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1224,
        1239
      ],
      "op": "DUP8",
      "path": "5"
    },
    "4370": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1224,
        1239
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4371": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1240
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "4374": {
      "fn": "Registry.registerNewCompetition",
      "jump": "i",
      "offset": [
        1211,
        1240
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4375": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1240
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4376": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1240
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4377": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1240
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4378": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1240
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4379": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1240
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4381": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1240
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4382": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1240
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4383": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1240
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4385": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1240
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4386": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1240
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4387": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1240
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4388": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1240
      ],
      "op": "SUB",
      "path": "5"
    },
    "4389": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1240
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4390": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1240
      ],
      "op": "ADD",
      "path": "5"
    },
    "4391": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1240
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4392": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1240
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4393": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4394": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4395": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4396": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4397": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4398": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4399": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "ADD",
      "path": "5"
    },
    "4400": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4407": {
      "op": "SHL"
    },
    "4408": {
      "op": "SUB"
    },
    "4409": {
      "op": "NOT"
    },
    "4410": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4411": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "4412": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "AND",
      "path": "5"
    },
    "4413": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4414": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4415": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4416": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4421": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4423": {
      "op": "SHL"
    },
    "4424": {
      "op": "SUB"
    },
    "4425": {
      "op": "NOT"
    },
    "4426": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "AND",
      "path": "5"
    },
    "4427": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "OR",
      "path": "5"
    },
    "4428": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4437": {
      "op": "SHL"
    },
    "4438": {
      "op": "SUB"
    },
    "4439": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4440": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "4441": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "AND",
      "path": "5"
    },
    "4442": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4443": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4444": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4445": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "MUL",
      "path": "5"
    },
    "4446": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4447": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4448": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4449": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "OR",
      "path": "5"
    },
    "4450": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4451": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4452": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4453": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4454": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4455": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "ADD",
      "path": "5"
    },
    "4456": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4459": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4460": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4461": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "ADD",
      "path": "5"
    },
    "4462": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1211,
        1330
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4463": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1340,
        1357
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 36,
      "value": "0x4"
    },
    "4465": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1340,
        1379
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4466": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1340,
        1379
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4467": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1340,
        1379
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4468": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1340,
        1379
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4469": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1340,
        1379
      ],
      "op": "ADD",
      "path": "5"
    },
    "4470": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1340,
        1379
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4471": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1340,
        1379
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4474": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1340,
        1379
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4475": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1340,
        1379
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11A7"
    },
    "4478": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1340,
        1379
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4479": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1340,
        1379
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "4512": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1340,
        1379
      ],
      "op": "ADD",
      "path": "5"
    },
    "4513": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1363,
        1378
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4514": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1363,
        1378
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4515": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1340,
        1379
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1919"
    },
    "4518": {
      "fn": "Registry.registerNewCompetition",
      "jump": "i",
      "offset": [
        1340,
        1379
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4519": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1340,
        1379
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4520": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1340,
        1379
      ],
      "op": "POP",
      "path": "5"
    },
    "4521": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1437,
        1455
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 37
    },
    "4522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4526": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4528": {
      "op": "SHL"
    },
    "4529": {
      "op": "SUB"
    },
    "4530": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "AND",
      "path": "5"
    },
    "4531": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1420,
        1435
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4532": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1420,
        1435
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4533": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4535": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4536": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11C2"
    },
    "4539": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4540": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4541": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4542": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "4545": {
      "fn": "Registry.registerNewCompetition",
      "jump": "i",
      "offset": [
        1395,
        1471
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4546": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4547": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4549": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4550": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4551": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4552": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4553": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "SUB",
      "path": "5"
    },
    "4554": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4555": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4556": {
      "op": "DUP4"
    },
    "4557": {
      "op": "DUP3"
    },
    "4558": {
      "op": "MSTORE"
    },
    "4559": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4560": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xE8CDF60632EED712180856CC0945BC61A38A954C7A0C2697944488B63A886150"
    },
    "4593": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4596": {
      "op": "ADD"
    },
    "4597": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4599": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4600": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4601": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4602": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "SUB",
      "path": "5"
    },
    "4603": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4604": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        1395,
        1471
      ],
      "op": "LOG3",
      "path": "5"
    },
    "4605": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        679,
        1478
      ],
      "op": "POP",
      "path": "5"
    },
    "4606": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        679,
        1478
      ],
      "op": "POP",
      "path": "5"
    },
    "4607": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        679,
        1478
      ],
      "op": "POP",
      "path": "5"
    },
    "4608": {
      "fn": "Registry.registerNewCompetition",
      "offset": [
        679,
        1478
      ],
      "op": "POP",
      "path": "5"
    },
    "4609": {
      "fn": "Registry.registerNewCompetition",
      "jump": "o",
      "offset": [
        679,
        1478
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4610": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5018,
        5249
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4611": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4251,
        4258
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4613": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4614": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4615": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4616": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4618": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4619": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4620": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4621": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4623": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4624": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4625": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "4627": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "ADD",
      "path": "7"
    },
    "4628": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4629": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5111,
        5152
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 38,
      "value": "0x121D"
    },
    "4632": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5111,
        5152
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4633": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5119,
        5137
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6FB"
    },
    "4636": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4185,
        4306
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4637": {
      "branch": 70,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5111,
        5152
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4638": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5103,
        5205
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xADB"
    },
    "4641": {
      "branch": 70,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5103,
        5205
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4642": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5103,
        5205
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4644": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5103,
        5205
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4645": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4649": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4651": {
      "op": "SHL"
    },
    "4652": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5103,
        5205
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4653": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5103,
        5205
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4654": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4656": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5103,
        5205
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4658": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5103,
        5205
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4659": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5103,
        5205
      ],
      "op": "ADD",
      "path": "7"
    },
    "4660": {
      "op": "MSTORE"
    },
    "4661": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "4663": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4665": {
      "op": "DUP3"
    },
    "4666": {
      "op": "ADD"
    },
    "4667": {
      "op": "MSTORE"
    },
    "4668": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E"
    },
    "4701": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4703": {
      "op": "DUP3"
    },
    "4704": {
      "op": "ADD"
    },
    "4705": {
      "op": "MSTORE"
    },
    "4706": {
      "op": "PUSH16",
      "value": "0x2061646D696E20746F207265766F6B65"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4725": {
      "op": "SHL"
    },
    "4726": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4728": {
      "op": "DUP3"
    },
    "4729": {
      "op": "ADD"
    },
    "4730": {
      "op": "MSTORE"
    },
    "4731": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4733": {
      "op": "ADD"
    },
    "4734": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5103,
        5205
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x442"
    },
    "4737": {
      "op": "JUMP"
    },
    "4738": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4057,
        4635
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4739": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x129A"
    },
    "4742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4744": {
      "op": "DUP1"
    },
    "4745": {
      "op": "MLOAD"
    },
    "4746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4748": {
      "op": "PUSH2",
      "value": "0x1E20"
    },
    "4751": {
      "op": "DUP4"
    },
    "4752": {
      "op": "CODECOPY"
    },
    "4753": {
      "op": "DUP2"
    },
    "4754": {
      "op": "MLOAD"
    },
    "4755": {
      "op": "SWAP2"
    },
    "4756": {
      "op": "MSTORE"
    },
    "4757": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4758": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDED"
    },
    "4761": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4762": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4763": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12B6"
    },
    "4766": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4767": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4769": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4770": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4774": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4776": {
      "op": "SHL"
    },
    "4777": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4778": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4779": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4781": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "4782": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x442"
    },
    "4785": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4786": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D41"
    },
    "4789": {
      "fn": "Registry.changeExtensionInfoLocation",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4790": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4791": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4254,
        4255
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 39,
      "value": "0x0"
    },
    "4793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4797": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4799": {
      "op": "SHL"
    },
    "4800": {
      "op": "SUB"
    },
    "4801": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4256
      ],
      "op": "AND",
      "path": "5"
    },
    "4802": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "4804": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4211,
        4224
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4805": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4211,
        4224
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4806": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4225
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4808": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4225
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4809": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4225
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12D3"
    },
    "4812": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4225
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4813": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4225
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4814": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4225
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4815": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4225
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "4818": {
      "fn": "Registry.changeExtensionInfoLocation",
      "jump": "i",
      "offset": [
        4200,
        4225
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4819": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4225
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4820": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4225
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4821": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4225
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4822": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4225
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4823": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4225
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4825": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4225
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4826": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4225
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4827": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4225
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4828": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4225
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4829": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4225
      ],
      "op": "SUB",
      "path": "5"
    },
    "4830": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4225
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4832": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4225
      ],
      "op": "ADD",
      "path": "5"
    },
    "4833": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4225
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4834": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4225
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4835": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4242
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4842": {
      "op": "SHL"
    },
    "4843": {
      "op": "SUB"
    },
    "4844": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4242
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "4847": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4242
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4848": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4242
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4849": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4242
      ],
      "op": "DIV",
      "path": "5"
    },
    "4850": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4242
      ],
      "op": "AND",
      "path": "5"
    },
    "4851": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4256
      ],
      "op": "EQ",
      "path": "5"
    },
    "4852": {
      "branch": 64,
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4200,
        4256
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4853": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4192,
        4375
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13A7"
    },
    "4856": {
      "branch": 64,
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4192,
        4375
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4857": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4192,
        4375
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4859": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4192,
        4375
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4860": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4864": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4866": {
      "op": "SHL"
    },
    "4867": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4192,
        4375
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4868": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4192,
        4375
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4869": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4871": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4192,
        4375
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4873": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4192,
        4375
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4874": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4192,
        4375
      ],
      "op": "ADD",
      "path": "5"
    },
    "4875": {
      "op": "MSTORE"
    },
    "4876": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "4878": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4880": {
      "op": "DUP3"
    },
    "4881": {
      "op": "ADD"
    },
    "4882": {
      "op": "MSTORE"
    },
    "4883": {
      "op": "PUSH32",
      "value": "0x5265676973747279202D206368616E6765457874656E73696F6E496E666F4C6F"
    },
    "4916": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4918": {
      "op": "DUP3"
    },
    "4919": {
      "op": "ADD"
    },
    "4920": {
      "op": "MSTORE"
    },
    "4921": {
      "op": "PUSH32",
      "value": "0x636174696F6E3A20436F6D7065746974696F6E20646F6573206E6F7420657869"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4956": {
      "op": "DUP3"
    },
    "4957": {
      "op": "ADD"
    },
    "4958": {
      "op": "MSTORE"
    },
    "4959": {
      "op": "PUSH32",
      "value": "0x73742E205573652066756E6374696F6E202772656769737465724E6577436F6D"
    },
    "4992": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4994": {
      "op": "DUP3"
    },
    "4995": {
      "op": "ADD"
    },
    "4996": {
      "op": "MSTORE"
    },
    "4997": {
      "op": "PUSH18",
      "value": "0x3832BA34BA34B7B7139034B739BA32B0B217"
    },
    "5016": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "5018": {
      "op": "SHL"
    },
    "5019": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "5021": {
      "op": "DUP3"
    },
    "5022": {
      "op": "ADD"
    },
    "5023": {
      "op": "MSTORE"
    },
    "5024": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "5026": {
      "op": "ADD"
    },
    "5027": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4192,
        4375
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x442"
    },
    "5030": {
      "op": "JUMP"
    },
    "5031": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4192,
        4375
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5032": {
      "branch": 65,
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4393,
        4418
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 40
    },
    "5033": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4385,
        4487
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x141C"
    },
    "5036": {
      "branch": 65,
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4385,
        4487
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5037": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4385,
        4487
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5039": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4385,
        4487
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5040": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4385,
        4487
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5041": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5047": {
      "op": "SHL"
    },
    "5048": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4385,
        4487
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5049": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4385,
        4487
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5050": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5052": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4385,
        4487
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5054": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4385,
        4487
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5055": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4385,
        4487
      ],
      "op": "ADD",
      "path": "5"
    },
    "5056": {
      "op": "MSTORE"
    },
    "5057": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5059": {
      "op": "DUP2"
    },
    "5060": {
      "op": "ADD"
    },
    "5061": {
      "op": "SWAP2"
    },
    "5062": {
      "op": "SWAP1"
    },
    "5063": {
      "op": "SWAP2"
    },
    "5064": {
      "op": "MSTORE"
    },
    "5065": {
      "op": "PUSH32",
      "value": "0x5265676973747279202D206368616E6765457874656E73696F6E496E666F4C6F"
    },
    "5098": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5100": {
      "op": "DUP3"
    },
    "5101": {
      "op": "ADD"
    },
    "5102": {
      "op": "MSTORE"
    },
    "5103": {
      "op": "PUSH32",
      "value": "0x636174696F6E3A2043616E6E6F742073657420746F203020616464726573732E"
    },
    "5136": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5138": {
      "op": "DUP3"
    },
    "5139": {
      "op": "ADD"
    },
    "5140": {
      "op": "MSTORE"
    },
    "5141": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5143": {
      "op": "ADD"
    },
    "5144": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4385,
        4487
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x442"
    },
    "5147": {
      "op": "JUMP"
    },
    "5148": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4385,
        4487
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5149": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4545,
        4556
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 41
    },
    "5150": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4507
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "5152": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4508,
        4521
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5153": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4508,
        4521
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5154": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4522
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5156": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4522
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5157": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4522
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x142F"
    },
    "5160": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4522
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5161": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4522
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5162": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4522
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5163": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4522
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "5166": {
      "fn": "Registry.changeExtensionInfoLocation",
      "jump": "i",
      "offset": [
        4497,
        4522
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5167": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4522
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5168": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4522
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5169": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4522
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5170": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4522
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5171": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4522
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5173": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4522
      ],
      "op": "ADD",
      "path": "5"
    },
    "5174": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4522
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5176": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4522
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5177": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4522
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5178": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4522
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5179": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4522
      ],
      "op": "SUB",
      "path": "5"
    },
    "5180": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4522
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5181": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4522
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5182": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4542
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5184": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4542
      ],
      "op": "ADD",
      "path": "5"
    },
    "5185": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4556
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5186": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4556
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5187": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4556
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5188": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4497,
        4556
      ],
      "op": "POP",
      "path": "5"
    },
    "5189": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4616,
        4627
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 42
    },
    "5190": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4601,
        4614
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5191": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4601,
        4614
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5192": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5194": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5195": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1455"
    },
    "5198": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5199": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5200": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5201": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "5204": {
      "fn": "Registry.changeExtensionInfoLocation",
      "jump": "i",
      "offset": [
        4572,
        4628
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5205": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5206": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5208": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5209": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5210": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5211": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5212": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "SUB",
      "path": "5"
    },
    "5213": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5214": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5215": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5216": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x88BFDF54CE240D8032AD74FDE55D2FC88647A35643BD1A8A4BB7BFC6EFC6058C"
    },
    "5249": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5250": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5252": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5253": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4572,
        4628
      ],
      "op": "LOG3",
      "path": "5"
    },
    "5254": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4057,
        4635
      ],
      "op": "POP",
      "path": "5"
    },
    "5255": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4057,
        4635
      ],
      "op": "POP",
      "path": "5"
    },
    "5256": {
      "fn": "Registry.changeExtensionInfoLocation",
      "offset": [
        4057,
        4635
      ],
      "op": "POP",
      "path": "5"
    },
    "5257": {
      "fn": "Registry.changeExtensionInfoLocation",
      "jump": "o",
      "offset": [
        4057,
        4635
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5258": {
      "fn": "Registry.getExtensionActive",
      "offset": [
        6428,
        6602
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5259": {
      "fn": "Registry.getExtensionActive",
      "offset": [
        6527,
        6538
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5261": {
      "fn": "Registry.getExtensionActive",
      "offset": [
        6563,
        6573
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 43,
      "value": "0x3"
    },
    "5263": {
      "fn": "Registry.getExtensionActive",
      "offset": [
        6574,
        6587
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5264": {
      "fn": "Registry.getExtensionActive",
      "offset": [
        6574,
        6587
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5265": {
      "fn": "Registry.getExtensionActive",
      "offset": [
        6563,
        6588
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5267": {
      "fn": "Registry.getExtensionActive",
      "offset": [
        6563,
        6588
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5268": {
      "fn": "Registry.getExtensionActive",
      "offset": [
        6563,
        6588
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD03"
    },
    "5271": {
      "fn": "Registry.getExtensionActive",
      "offset": [
        6563,
        6588
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5272": {
      "fn": "Registry.getExtensionActive",
      "offset": [
        6563,
        6588
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5273": {
      "fn": "Registry.getExtensionActive",
      "offset": [
        6563,
        6588
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5274": {
      "fn": "Registry.getExtensionActive",
      "offset": [
        6563,
        6588
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "5277": {
      "fn": "Registry.getExtensionActive",
      "jump": "i",
      "offset": [
        6563,
        6588
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5278": {
      "fn": "Registry.batchCall",
      "offset": [
        4679,
        5100
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5279": {
      "fn": "Registry.batchCall",
      "offset": [
        4782,
        4796
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "5281": {
      "fn": "Registry.batchCall",
      "offset": [
        4812,
        4841
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5283": {
      "fn": "Registry.batchCall",
      "offset": [
        4856,
        4860
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5284": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "PUSH8",
      "path": "5",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5293": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5294": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "GT",
      "path": "5"
    },
    "5295": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5296": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14C9"
    },
    "5299": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5300": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5305": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5307": {
      "op": "SHL"
    },
    "5308": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5310": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5311": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x41"
    },
    "5313": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5315": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5316": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "5318": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5320": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5321": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5322": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5324": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5325": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5326": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5327": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5328": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5329": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5330": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5332": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "MUL",
      "path": "5"
    },
    "5333": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5335": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "ADD",
      "path": "5"
    },
    "5336": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5337": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "ADD",
      "path": "5"
    },
    "5338": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5340": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5341": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5342": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5343": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14FC"
    },
    "5346": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5347": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5348": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5350": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "ADD",
      "path": "5"
    },
    "5351": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5352": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "5354": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5355": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5356": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5358": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "ADD",
      "path": "5"
    },
    "5359": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5360": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5362": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5363": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "SUB",
      "path": "5"
    },
    "5364": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5365": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5366": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14E7"
    },
    "5369": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5370": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5371": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "POP",
      "path": "5"
    },
    "5372": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5373": {
      "fn": "Registry.batchCall",
      "offset": [
        4844,
        4868
      ],
      "op": "POP",
      "path": "5"
    },
    "5374": {
      "fn": "Registry.batchCall",
      "offset": [
        4812,
        4868
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5375": {
      "fn": "Registry.batchCall",
      "offset": [
        4812,
        4868
      ],
      "op": "POP",
      "path": "5"
    },
    "5376": {
      "fn": "Registry.batchCall",
      "offset": [
        4883,
        4889
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5378": {
      "fn": "Registry.batchCall",
      "offset": [
        4878,
        5063
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5379": {
      "fn": "Registry.batchCall",
      "offset": [
        4895,
        4910
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5380": {
      "fn": "Registry.batchCall",
      "offset": [
        4895,
        4910
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5381": {
      "fn": "Registry.batchCall",
      "offset": [
        4895,
        4910
      ],
      "op": "LT",
      "path": "5"
    },
    "5382": {
      "fn": "Registry.batchCall",
      "offset": [
        4878,
        5063
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5383": {
      "fn": "Registry.batchCall",
      "offset": [
        4878,
        5063
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1611"
    },
    "5386": {
      "fn": "Registry.batchCall",
      "offset": [
        4878,
        5063
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5387": {
      "fn": "Registry.batchCall",
      "offset": [
        4931,
        4943
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5389": {
      "fn": "Registry.batchCall",
      "offset": [
        4945,
        4970
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5390": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4983
      ],
      "op": "DUP9",
      "path": "5"
    },
    "5391": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4983
      ],
      "op": "DUP9",
      "path": "5"
    },
    "5392": {
      "fn": "Registry.batchCall",
      "offset": [
        4984,
        4985
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5393": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5394": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5395": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "LT",
      "path": "5"
    },
    "5396": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x152D"
    },
    "5399": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5400": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5405": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5407": {
      "op": "SHL"
    },
    "5408": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5410": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5411": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x32"
    },
    "5413": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5415": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5416": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "5418": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5420": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5421": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5422": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5423": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "POP",
      "path": "5"
    },
    "5424": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5426": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "MUL",
      "path": "5"
    },
    "5427": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "ADD",
      "path": "5"
    },
    "5428": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5430": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5431": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "ADD",
      "path": "5"
    },
    "5432": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5433": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1542"
    },
    "5436": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5437": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5438": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A58"
    },
    "5441": {
      "fn": "Registry.batchCall",
      "jump": "i",
      "offset": [
        4974,
        4986
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5442": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4986
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5449": {
      "op": "SHL"
    },
    "5450": {
      "op": "SUB"
    },
    "5451": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        4997
      ],
      "op": "AND",
      "path": "5"
    },
    "5452": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5002
      ],
      "op": "DUP8",
      "path": "5"
    },
    "5453": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5002
      ],
      "op": "DUP8",
      "path": "5"
    },
    "5454": {
      "fn": "Registry.batchCall",
      "offset": [
        5003,
        5004
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5455": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5456": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5457": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "LT",
      "path": "5"
    },
    "5458": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x156B"
    },
    "5461": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5462": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5467": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5469": {
      "op": "SHL"
    },
    "5470": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5472": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5473": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x32"
    },
    "5475": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5477": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5478": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "5480": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5482": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5483": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5484": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5485": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "POP",
      "path": "5"
    },
    "5486": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5488": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "MUL",
      "path": "5"
    },
    "5489": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5490": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "ADD",
      "path": "5"
    },
    "5491": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5492": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x157D"
    },
    "5495": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5496": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5497": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D78"
    },
    "5500": {
      "fn": "Registry.batchCall",
      "jump": "i",
      "offset": [
        4998,
        5005
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5501": {
      "fn": "Registry.batchCall",
      "offset": [
        4998,
        5005
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5502": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5504": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5505": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x158B"
    },
    "5508": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5509": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5510": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5511": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "5514": {
      "fn": "Registry.batchCall",
      "jump": "i",
      "offset": [
        4974,
        5006
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5515": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5516": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5518": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5520": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5521": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5522": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5523": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "SUB",
      "path": "5"
    },
    "5524": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5525": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5526": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "GAS",
      "path": "5"
    },
    "5527": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "5528": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5529": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "POP",
      "path": "5"
    },
    "5530": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "POP",
      "path": "5"
    },
    "5531": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "5532": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5533": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5535": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5536": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "EQ",
      "path": "5"
    },
    "5537": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15C6"
    },
    "5540": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5541": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5543": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5544": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5545": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "POP",
      "path": "5"
    },
    "5546": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "5548": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "NOT",
      "path": "5"
    },
    "5549": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "5551": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "5552": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "ADD",
      "path": "5"
    },
    "5553": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "AND",
      "path": "5"
    },
    "5554": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5555": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "ADD",
      "path": "5"
    },
    "5556": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5558": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5559": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "5560": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5561": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5562": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "5563": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5565": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5567": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5568": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "ADD",
      "path": "5"
    },
    "5569": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "5570": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15CB"
    },
    "5573": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5574": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5575": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "5577": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5578": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "POP",
      "path": "5"
    },
    "5579": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5580": {
      "fn": "Registry.batchCall",
      "offset": [
        4974,
        5006
      ],
      "op": "POP",
      "path": "5"
    },
    "5581": {
      "fn": "Registry.batchCall",
      "offset": [
        4930,
        5006
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5582": {
      "fn": "Registry.batchCall",
      "offset": [
        4930,
        5006
      ],
      "op": "POP",
      "path": "5"
    },
    "5583": {
      "fn": "Registry.batchCall",
      "offset": [
        4930,
        5006
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5584": {
      "fn": "Registry.batchCall",
      "offset": [
        4930,
        5006
      ],
      "op": "POP",
      "path": "5"
    },
    "5585": {
      "fn": "Registry.batchCall",
      "offset": [
        5040,
        5052
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 44
    },
    "5586": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5034
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5587": {
      "fn": "Registry.batchCall",
      "offset": [
        5035,
        5036
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5588": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5037
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5589": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5037
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5590": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5037
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5591": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5037
      ],
      "op": "LT",
      "path": "5"
    },
    "5592": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5037
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15F1"
    },
    "5595": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5037
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5596": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5601": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5603": {
      "op": "SHL"
    },
    "5604": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5606": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5037
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5607": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x32"
    },
    "5609": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5611": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5037
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5612": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "5614": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5616": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5037
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5617": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5037
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5618": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5620": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5037
      ],
      "op": "MUL",
      "path": "5"
    },
    "5621": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5037
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5623": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5037
      ],
      "op": "ADD",
      "path": "5"
    },
    "5624": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5037
      ],
      "op": "ADD",
      "path": "5"
    },
    "5625": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5052
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5626": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5052
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5627": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5052
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5628": {
      "fn": "Registry.batchCall",
      "offset": [
        5020,
        5052
      ],
      "op": "POP",
      "path": "5"
    },
    "5629": {
      "fn": "Registry.batchCall",
      "offset": [
        4878,
        5063
      ],
      "op": "POP",
      "path": "5"
    },
    "5630": {
      "fn": "Registry.batchCall",
      "offset": [
        4878,
        5063
      ],
      "op": "POP",
      "path": "5"
    },
    "5631": {
      "fn": "Registry.batchCall",
      "offset": [
        4912,
        4915
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 45
    },
    "5632": {
      "fn": "Registry.batchCall",
      "offset": [
        4912,
        4915
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5633": {
      "fn": "Registry.batchCall",
      "offset": [
        4912,
        4915
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1609"
    },
    "5636": {
      "fn": "Registry.batchCall",
      "offset": [
        4912,
        4915
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5637": {
      "fn": "Registry.batchCall",
      "offset": [
        4912,
        4915
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DF8"
    },
    "5640": {
      "fn": "Registry.batchCall",
      "jump": "i",
      "offset": [
        4912,
        4915
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5641": {
      "fn": "Registry.batchCall",
      "offset": [
        4912,
        4915
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5642": {
      "fn": "Registry.batchCall",
      "offset": [
        4912,
        4915
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5643": {
      "fn": "Registry.batchCall",
      "offset": [
        4912,
        4915
      ],
      "op": "POP",
      "path": "5"
    },
    "5644": {
      "fn": "Registry.batchCall",
      "offset": [
        4912,
        4915
      ],
      "op": "POP",
      "path": "5"
    },
    "5645": {
      "fn": "Registry.batchCall",
      "offset": [
        4878,
        5063
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1502"
    },
    "5648": {
      "fn": "Registry.batchCall",
      "offset": [
        4878,
        5063
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5649": {
      "fn": "Registry.batchCall",
      "offset": [
        4878,
        5063
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5650": {
      "op": "POP"
    },
    "5651": {
      "fn": "Registry.batchCall",
      "offset": [
        5079,
        5093
      ],
      "op": "SWAP6",
      "path": "5",
      "statement": 46
    },
    "5652": {
      "fn": "Registry.batchCall",
      "offset": [
        4679,
        5100
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "5653": {
      "op": "POP"
    },
    "5654": {
      "op": "POP"
    },
    "5655": {
      "op": "POP"
    },
    "5656": {
      "op": "POP"
    },
    "5657": {
      "op": "POP"
    },
    "5658": {
      "fn": "Registry.batchCall",
      "jump": "o",
      "offset": [
        4679,
        5100
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5659": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        1937,
        2535
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5660": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1633"
    },
    "5663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5665": {
      "op": "DUP1"
    },
    "5666": {
      "op": "MLOAD"
    },
    "5667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5669": {
      "op": "PUSH2",
      "value": "0x1E20"
    },
    "5672": {
      "op": "DUP4"
    },
    "5673": {
      "op": "CODECOPY"
    },
    "5674": {
      "op": "DUP2"
    },
    "5675": {
      "op": "MLOAD"
    },
    "5676": {
      "op": "SWAP2"
    },
    "5677": {
      "op": "MSTORE"
    },
    "5678": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5679": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDED"
    },
    "5682": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5683": {
      "branch": 73,
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5684": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164F"
    },
    "5687": {
      "branch": 73,
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5688": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5690": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5691": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5695": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5697": {
      "op": "SHL"
    },
    "5698": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5699": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5700": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5702": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "5703": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x442"
    },
    "5706": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5707": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D41"
    },
    "5710": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5711": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5712": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2145,
        2146
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 47,
      "value": "0x0"
    },
    "5714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5720": {
      "op": "SHL"
    },
    "5721": {
      "op": "SUB"
    },
    "5722": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2147
      ],
      "op": "AND",
      "path": "5"
    },
    "5723": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2097
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "5725": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2098,
        2113
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5726": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2098,
        2113
      ],
      "op": "DUP5",
      "path": "5"
    },
    "5727": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2114
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5729": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2114
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5730": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2114
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x166C"
    },
    "5733": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2114
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "5734": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2114
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5735": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2114
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5736": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2114
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "5739": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "jump": "i",
      "offset": [
        2085,
        2114
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5740": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2114
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5741": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2114
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5742": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2114
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5743": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2114
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5744": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2114
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5746": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2114
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5747": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2114
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5748": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2114
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5749": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2114
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5750": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2114
      ],
      "op": "SUB",
      "path": "5"
    },
    "5751": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2114
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5753": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2114
      ],
      "op": "ADD",
      "path": "5"
    },
    "5754": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2114
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5755": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2114
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5756": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2133
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5763": {
      "op": "SHL"
    },
    "5764": {
      "op": "SUB"
    },
    "5765": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2133
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "5768": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2133
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5769": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2133
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5770": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2133
      ],
      "op": "DIV",
      "path": "5"
    },
    "5771": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2133
      ],
      "op": "AND",
      "path": "5"
    },
    "5772": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2147
      ],
      "op": "EQ",
      "path": "5"
    },
    "5773": {
      "branch": 66,
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2085,
        2147
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5774": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2077,
        2269
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1743"
    },
    "5777": {
      "branch": 66,
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2077,
        2269
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5778": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2077,
        2269
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5780": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2077,
        2269
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5781": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5785": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5787": {
      "op": "SHL"
    },
    "5788": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2077,
        2269
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5789": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2077,
        2269
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5792": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2077,
        2269
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5794": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2077,
        2269
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5795": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2077,
        2269
      ],
      "op": "ADD",
      "path": "5"
    },
    "5796": {
      "op": "MSTORE"
    },
    "5797": {
      "op": "PUSH1",
      "value": "0x75"
    },
    "5799": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5801": {
      "op": "DUP3"
    },
    "5802": {
      "op": "ADD"
    },
    "5803": {
      "op": "MSTORE"
    },
    "5804": {
      "op": "PUSH32",
      "value": "0x5265676973747279202D206368616E6765436F6D7065746974696F6E52756C65"
    },
    "5837": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5839": {
      "op": "DUP3"
    },
    "5840": {
      "op": "ADD"
    },
    "5841": {
      "op": "MSTORE"
    },
    "5842": {
      "op": "PUSH32",
      "value": "0x734C6F636174696F6E3A20436F6D7065746974696F6E20646F6573206E6F7420"
    },
    "5875": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5877": {
      "op": "DUP3"
    },
    "5878": {
      "op": "ADD"
    },
    "5879": {
      "op": "MSTORE"
    },
    "5880": {
      "op": "PUSH32",
      "value": "0x65786973742E205573652066756E6374696F6E202772656769737465724E6577"
    },
    "5913": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5915": {
      "op": "DUP3"
    },
    "5916": {
      "op": "ADD"
    },
    "5917": {
      "op": "MSTORE"
    },
    "5918": {
      "op": "PUSH21",
      "value": "0x21B7B6B832BA34BA34B7B7139034B739BA32B0B217"
    },
    "5940": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "5942": {
      "op": "SHL"
    },
    "5943": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "5945": {
      "op": "DUP3"
    },
    "5946": {
      "op": "ADD"
    },
    "5947": {
      "op": "MSTORE"
    },
    "5948": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "5950": {
      "op": "ADD"
    },
    "5951": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2077,
        2269
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x442"
    },
    "5954": {
      "op": "JUMP"
    },
    "5955": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2077,
        2269
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5956": {
      "branch": 67,
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2287,
        2312
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 48
    },
    "5957": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2279,
        2384
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17C2"
    },
    "5960": {
      "branch": 67,
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2279,
        2384
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5961": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2279,
        2384
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5963": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2279,
        2384
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5964": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5968": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5970": {
      "op": "SHL"
    },
    "5971": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2279,
        2384
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5972": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2279,
        2384
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5975": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2279,
        2384
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5977": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2279,
        2384
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5978": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2279,
        2384
      ],
      "op": "ADD",
      "path": "5"
    },
    "5979": {
      "op": "MSTORE"
    },
    "5980": {
      "op": "PUSH1",
      "value": "0x43"
    },
    "5982": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5984": {
      "op": "DUP3"
    },
    "5985": {
      "op": "ADD"
    },
    "5986": {
      "op": "MSTORE"
    },
    "5987": {
      "op": "PUSH32",
      "value": "0x5265676973747279202D206368616E6765436F6D7065746974696F6E52756C65"
    },
    "6020": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6022": {
      "op": "DUP3"
    },
    "6023": {
      "op": "ADD"
    },
    "6024": {
      "op": "MSTORE"
    },
    "6025": {
      "op": "PUSH32",
      "value": "0x734C6F636174696F6E3A2043616E6E6F742073657420746F2030206164647265"
    },
    "6058": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6060": {
      "op": "DUP3"
    },
    "6061": {
      "op": "ADD"
    },
    "6062": {
      "op": "MSTORE"
    },
    "6063": {
      "op": "PUSH3",
      "value": "0x39B997"
    },
    "6067": {
      "op": "PUSH1",
      "value": "0xE9"
    },
    "6069": {
      "op": "SHL"
    },
    "6070": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6072": {
      "op": "DUP3"
    },
    "6073": {
      "op": "ADD"
    },
    "6074": {
      "op": "MSTORE"
    },
    "6075": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "6077": {
      "op": "ADD"
    },
    "6078": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2279,
        2384
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x442"
    },
    "6081": {
      "op": "JUMP"
    },
    "6082": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2279,
        2384
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6083": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2440,
        2451
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 49
    },
    "6084": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2406
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "6086": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2407,
        2422
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6087": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2407,
        2422
      ],
      "op": "DUP5",
      "path": "5"
    },
    "6088": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2423
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6090": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2423
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6091": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2423
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17D5"
    },
    "6094": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2423
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6095": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2423
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6096": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2423
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6097": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2423
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "6100": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "jump": "i",
      "offset": [
        2394,
        2423
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6101": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2423
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6102": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2423
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6103": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2423
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6104": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2423
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6105": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2423
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "6107": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2423
      ],
      "op": "ADD",
      "path": "5"
    },
    "6108": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2423
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6110": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2423
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6111": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2423
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6112": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2423
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6113": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2423
      ],
      "op": "SUB",
      "path": "5"
    },
    "6114": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2423
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6115": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2423
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6116": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2437
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "6118": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2437
      ],
      "op": "ADD",
      "path": "5"
    },
    "6119": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2451
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6120": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2451
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6121": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2451
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "6122": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2394,
        2451
      ],
      "op": "POP",
      "path": "5"
    },
    "6123": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2516,
        2527
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 50
    },
    "6124": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2499,
        2514
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6125": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2499,
        2514
      ],
      "op": "DUP4",
      "path": "5"
    },
    "6126": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6128": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6129": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17FB"
    },
    "6132": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "6133": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "6134": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6135": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7C"
    },
    "6138": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "jump": "i",
      "offset": [
        2467,
        2528
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6139": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6140": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6142": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6143": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6144": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6145": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6146": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "SUB",
      "path": "5"
    },
    "6147": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6148": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "6149": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6150": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x90E4275B4012FEDFA9B631D72BFF03048DF6AFF9864BC8CDEE29AA02360D7FD"
    },
    "6183": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6184": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6186": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6187": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        2467,
        2528
      ],
      "op": "LOG3",
      "path": "5"
    },
    "6188": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        1937,
        2535
      ],
      "op": "POP",
      "path": "5"
    },
    "6189": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        1937,
        2535
      ],
      "op": "POP",
      "path": "5"
    },
    "6190": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "offset": [
        1937,
        2535
      ],
      "op": "POP",
      "path": "5"
    },
    "6191": {
      "fn": "Registry.changeCompetitionRulesLocation",
      "jump": "o",
      "offset": [
        1937,
        2535
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6192": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6952,
        7176
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6193": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7026,
        7048
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x183A"
    },
    "6196": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7034,
        7038
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6197": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7040,
        7047
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6198": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7026,
        7033
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDED"
    },
    "6201": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        7026,
        7048
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6202": {
      "branch": 71,
      "fn": "AccessControl._grantRole",
      "offset": [
        7026,
        7048
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6203": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7021,
        7170
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x76F"
    },
    "6206": {
      "branch": 71,
      "fn": "AccessControl._grantRole",
      "offset": [
        7021,
        7170
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6207": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7070
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 51,
      "value": "0x0"
    },
    "6209": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6210": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6211": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6212": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6214": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6215": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6216": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6217": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6219": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6220": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6221": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6228": {
      "op": "SHL"
    },
    "6229": {
      "op": "SUB"
    },
    "6230": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7093
      ],
      "op": "DUP6",
      "path": "7"
    },
    "6231": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7093
      ],
      "op": "AND",
      "path": "7"
    },
    "6232": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7093
      ],
      "op": "DUP5",
      "path": "7"
    },
    "6233": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7093
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6234": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7093
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6235": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7093
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6236": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7093
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6237": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7093
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6238": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7093
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6239": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7100
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6240": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7100
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6241": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6243": {
      "op": "NOT"
    },
    "6244": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7100
      ],
      "op": "AND",
      "path": "7"
    },
    "6245": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7096,
        7100
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "6247": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7100
      ],
      "op": "OR",
      "path": "7"
    },
    "6248": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7100
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6249": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7100
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "6250": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7146,
        7158
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 52,
      "value": "0x1870"
    },
    "6253": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "19"
    },
    "6254": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "6255": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "19"
    },
    "6256": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7146,
        7158
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6263": {
      "op": "SHL"
    },
    "6264": {
      "op": "SUB"
    },
    "6265": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "AND",
      "path": "7"
    },
    "6266": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7137,
        7144
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6273": {
      "op": "SHL"
    },
    "6274": {
      "op": "SUB"
    },
    "6275": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "AND",
      "path": "7"
    },
    "6276": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7131,
        7135
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6277": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
    },
    "6310": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6312": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6313": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6315": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6316": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6317": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6318": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "SUB",
      "path": "7"
    },
    "6319": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6320": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "LOG4",
      "path": "7"
    },
    "6321": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6952,
        7176
      ],
      "op": "POP",
      "path": "7"
    },
    "6322": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6952,
        7176
      ],
      "op": "POP",
      "path": "7"
    },
    "6323": {
      "fn": "AccessControl._grantRole",
      "jump": "o",
      "offset": [
        6952,
        7176
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6324": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7182,
        7407
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6325": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7256,
        7278
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18BE"
    },
    "6328": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7264,
        7268
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6329": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7270,
        7277
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6330": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7256,
        7263
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDED"
    },
    "6333": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7256,
        7278
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6334": {
      "branch": 72,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7256,
        7278
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6335": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7252,
        7401
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "6336": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7252,
        7401
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x76F"
    },
    "6339": {
      "branch": 72,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7252,
        7401
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6340": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7326,
        7331
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 53,
      "value": "0x0"
    },
    "6342": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6343": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6344": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6345": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6347": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6348": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6349": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6350": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6352": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6353": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6354": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6361": {
      "op": "SHL"
    },
    "6362": {
      "op": "SUB"
    },
    "6363": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7323
      ],
      "op": "DUP6",
      "path": "7"
    },
    "6364": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7323
      ],
      "op": "AND",
      "path": "7"
    },
    "6365": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7323
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6366": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7323
      ],
      "op": "DUP6",
      "path": "7"
    },
    "6367": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7323
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6368": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7323
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "6369": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7323
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6370": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7323
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6371": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7323
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6372": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7323
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6373": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7331
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6374": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7331
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6375": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6377": {
      "op": "NOT"
    },
    "6378": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7331
      ],
      "op": "AND",
      "path": "7"
    },
    "6379": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7331
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6380": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7331
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "6381": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7350,
        7390
      ],
      "op": "MLOAD",
      "path": "7",
      "statement": 54
    },
    "6382": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "19"
    },
    "6383": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "6384": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "DUP6",
      "path": "7"
    },
    "6385": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6386": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7350,
        7390
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
    },
    "6419": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7350,
        7390
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6420": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7326,
        7331
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6421": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7350,
        7390
      ],
      "op": "LOG4",
      "path": "7"
    },
    "6422": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7182,
        7407
      ],
      "op": "POP",
      "path": "7"
    },
    "6423": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7182,
        7407
      ],
      "op": "POP",
      "path": "7"
    },
    "6424": {
      "fn": "AccessControl._revokeRole",
      "jump": "o",
      "offset": [
        7182,
        7407
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6425": {
      "op": "JUMPDEST"
    },
    "6426": {
      "op": "DUP3"
    },
    "6427": {
      "op": "DUP1"
    },
    "6428": {
      "op": "SLOAD"
    },
    "6429": {
      "op": "PUSH2",
      "value": "0x1925"
    },
    "6432": {
      "op": "SWAP1"
    },
    "6433": {
      "op": "PUSH2",
      "value": "0x1DBD"
    },
    "6436": {
      "jump": "i",
      "op": "JUMP"
    },
    "6437": {
      "op": "JUMPDEST"
    },
    "6438": {
      "op": "SWAP1"
    },
    "6439": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6441": {
      "op": "MSTORE"
    },
    "6442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6446": {
      "op": "KECCAK256"
    },
    "6447": {
      "op": "SWAP1"
    },
    "6448": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6450": {
      "op": "ADD"
    },
    "6451": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6453": {
      "op": "SWAP1"
    },
    "6454": {
      "op": "DIV"
    },
    "6455": {
      "op": "DUP2"
    },
    "6456": {
      "op": "ADD"
    },
    "6457": {
      "op": "SWAP3"
    },
    "6458": {
      "op": "DUP3"
    },
    "6459": {
      "op": "PUSH2",
      "value": "0x1947"
    },
    "6462": {
      "op": "JUMPI"
    },
    "6463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6465": {
      "op": "DUP6"
    },
    "6466": {
      "op": "SSTORE"
    },
    "6467": {
      "op": "PUSH2",
      "value": "0x198D"
    },
    "6470": {
      "op": "JUMP"
    },
    "6471": {
      "op": "JUMPDEST"
    },
    "6472": {
      "op": "DUP3"
    },
    "6473": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6475": {
      "op": "LT"
    },
    "6476": {
      "op": "PUSH2",
      "value": "0x1960"
    },
    "6479": {
      "op": "JUMPI"
    },
    "6480": {
      "op": "DUP3"
    },
    "6481": {
      "op": "DUP1"
    },
    "6482": {
      "op": "ADD"
    },
    "6483": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6485": {
      "op": "NOT"
    },
    "6486": {
      "op": "DUP3"
    },
    "6487": {
      "op": "CALLDATALOAD"
    },
    "6488": {
      "op": "AND"
    },
    "6489": {
      "op": "OR"
    },
    "6490": {
      "op": "DUP6"
    },
    "6491": {
      "op": "SSTORE"
    },
    "6492": {
      "op": "PUSH2",
      "value": "0x198D"
    },
    "6495": {
      "op": "JUMP"
    },
    "6496": {
      "op": "JUMPDEST"
    },
    "6497": {
      "op": "DUP3"
    },
    "6498": {
      "op": "DUP1"
    },
    "6499": {
      "op": "ADD"
    },
    "6500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6502": {
      "op": "ADD"
    },
    "6503": {
      "op": "DUP6"
    },
    "6504": {
      "op": "SSTORE"
    },
    "6505": {
      "op": "DUP3"
    },
    "6506": {
      "op": "ISZERO"
    },
    "6507": {
      "op": "PUSH2",
      "value": "0x198D"
    },
    "6510": {
      "op": "JUMPI"
    },
    "6511": {
      "op": "SWAP2"
    },
    "6512": {
      "op": "DUP3"
    },
    "6513": {
      "op": "ADD"
    },
    "6514": {
      "op": "JUMPDEST"
    },
    "6515": {
      "op": "DUP3"
    },
    "6516": {
      "op": "DUP2"
    },
    "6517": {
      "op": "GT"
    },
    "6518": {
      "op": "ISZERO"
    },
    "6519": {
      "op": "PUSH2",
      "value": "0x198D"
    },
    "6522": {
      "op": "JUMPI"
    },
    "6523": {
      "op": "DUP3"
    },
    "6524": {
      "op": "CALLDATALOAD"
    },
    "6525": {
      "op": "DUP3"
    },
    "6526": {
      "op": "SSTORE"
    },
    "6527": {
      "op": "SWAP2"
    },
    "6528": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6530": {
      "op": "ADD"
    },
    "6531": {
      "op": "SWAP2"
    },
    "6532": {
      "op": "SWAP1"
    },
    "6533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6535": {
      "op": "ADD"
    },
    "6536": {
      "op": "SWAP1"
    },
    "6537": {
      "op": "PUSH2",
      "value": "0x1972"
    },
    "6540": {
      "op": "JUMP"
    },
    "6541": {
      "op": "JUMPDEST"
    },
    "6542": {
      "op": "POP"
    },
    "6543": {
      "op": "PUSH2",
      "value": "0x1999"
    },
    "6546": {
      "op": "SWAP3"
    },
    "6547": {
      "op": "SWAP2"
    },
    "6548": {
      "op": "POP"
    },
    "6549": {
      "op": "PUSH2",
      "value": "0x199D"
    },
    "6552": {
      "jump": "i",
      "op": "JUMP"
    },
    "6553": {
      "op": "JUMPDEST"
    },
    "6554": {
      "op": "POP"
    },
    "6555": {
      "op": "SWAP1"
    },
    "6556": {
      "jump": "o",
      "op": "JUMP"
    },
    "6557": {
      "op": "JUMPDEST"
    },
    "6558": {
      "op": "JUMPDEST"
    },
    "6559": {
      "op": "DUP1"
    },
    "6560": {
      "op": "DUP3"
    },
    "6561": {
      "op": "GT"
    },
    "6562": {
      "op": "ISZERO"
    },
    "6563": {
      "op": "PUSH2",
      "value": "0x1999"
    },
    "6566": {
      "op": "JUMPI"
    },
    "6567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6569": {
      "op": "DUP2"
    },
    "6570": {
      "op": "SSTORE"
    },
    "6571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6573": {
      "op": "ADD"
    },
    "6574": {
      "op": "PUSH2",
      "value": "0x199E"
    },
    "6577": {
      "op": "JUMP"
    },
    "6578": {
      "op": "JUMPDEST"
    },
    "6579": {
      "op": "DUP1"
    },
    "6580": {
      "op": "CALLDATALOAD"
    },
    "6581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6587": {
      "op": "SHL"
    },
    "6588": {
      "op": "SUB"
    },
    "6589": {
      "op": "DUP2"
    },
    "6590": {
      "op": "AND"
    },
    "6591": {
      "op": "DUP2"
    },
    "6592": {
      "op": "EQ"
    },
    "6593": {
      "op": "PUSH2",
      "value": "0x19C9"
    },
    "6596": {
      "op": "JUMPI"
    },
    "6597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6599": {
      "op": "DUP1"
    },
    "6600": {
      "op": "REVERT"
    },
    "6601": {
      "op": "JUMPDEST"
    },
    "6602": {
      "op": "SWAP2"
    },
    "6603": {
      "op": "SWAP1"
    },
    "6604": {
      "op": "POP"
    },
    "6605": {
      "jump": "o",
      "op": "JUMP"
    },
    "6606": {
      "op": "JUMPDEST"
    },
    "6607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6609": {
      "op": "DUP1"
    },
    "6610": {
      "op": "DUP4"
    },
    "6611": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6613": {
      "op": "DUP5"
    },
    "6614": {
      "op": "ADD"
    },
    "6615": {
      "op": "SLT"
    },
    "6616": {
      "op": "PUSH2",
      "value": "0x19DF"
    },
    "6619": {
      "op": "JUMPI"
    },
    "6620": {
      "op": "DUP2"
    },
    "6621": {
      "op": "DUP3"
    },
    "6622": {
      "op": "REVERT"
    },
    "6623": {
      "op": "JUMPDEST"
    },
    "6624": {
      "op": "POP"
    },
    "6625": {
      "op": "DUP2"
    },
    "6626": {
      "op": "CALLDATALOAD"
    },
    "6627": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6636": {
      "op": "DUP2"
    },
    "6637": {
      "op": "GT"
    },
    "6638": {
      "op": "ISZERO"
    },
    "6639": {
      "op": "PUSH2",
      "value": "0x19F6"
    },
    "6642": {
      "op": "JUMPI"
    },
    "6643": {
      "op": "DUP2"
    },
    "6644": {
      "op": "DUP3"
    },
    "6645": {
      "op": "REVERT"
    },
    "6646": {
      "op": "JUMPDEST"
    },
    "6647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6649": {
      "op": "DUP4"
    },
    "6650": {
      "op": "ADD"
    },
    "6651": {
      "op": "SWAP2"
    },
    "6652": {
      "op": "POP"
    },
    "6653": {
      "op": "DUP4"
    },
    "6654": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6656": {
      "op": "DUP3"
    },
    "6657": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6659": {
      "op": "SHL"
    },
    "6660": {
      "op": "DUP6"
    },
    "6661": {
      "op": "ADD"
    },
    "6662": {
      "op": "ADD"
    },
    "6663": {
      "op": "GT"
    },
    "6664": {
      "op": "ISZERO"
    },
    "6665": {
      "op": "PUSH2",
      "value": "0x1A11"
    },
    "6668": {
      "op": "JUMPI"
    },
    "6669": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6671": {
      "op": "DUP1"
    },
    "6672": {
      "op": "REVERT"
    },
    "6673": {
      "op": "JUMPDEST"
    },
    "6674": {
      "op": "SWAP3"
    },
    "6675": {
      "op": "POP"
    },
    "6676": {
      "op": "SWAP3"
    },
    "6677": {
      "op": "SWAP1"
    },
    "6678": {
      "op": "POP"
    },
    "6679": {
      "jump": "o",
      "op": "JUMP"
    },
    "6680": {
      "op": "JUMPDEST"
    },
    "6681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6683": {
      "op": "DUP1"
    },
    "6684": {
      "op": "DUP4"
    },
    "6685": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6687": {
      "op": "DUP5"
    },
    "6688": {
      "op": "ADD"
    },
    "6689": {
      "op": "SLT"
    },
    "6690": {
      "op": "PUSH2",
      "value": "0x1A29"
    },
    "6693": {
      "op": "JUMPI"
    },
    "6694": {
      "op": "DUP2"
    },
    "6695": {
      "op": "DUP3"
    },
    "6696": {
      "op": "REVERT"
    },
    "6697": {
      "op": "JUMPDEST"
    },
    "6698": {
      "op": "POP"
    },
    "6699": {
      "op": "DUP2"
    },
    "6700": {
      "op": "CALLDATALOAD"
    },
    "6701": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6710": {
      "op": "DUP2"
    },
    "6711": {
      "op": "GT"
    },
    "6712": {
      "op": "ISZERO"
    },
    "6713": {
      "op": "PUSH2",
      "value": "0x1A40"
    },
    "6716": {
      "op": "JUMPI"
    },
    "6717": {
      "op": "DUP2"
    },
    "6718": {
      "op": "DUP3"
    },
    "6719": {
      "op": "REVERT"
    },
    "6720": {
      "op": "JUMPDEST"
    },
    "6721": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6723": {
      "op": "DUP4"
    },
    "6724": {
      "op": "ADD"
    },
    "6725": {
      "op": "SWAP2"
    },
    "6726": {
      "op": "POP"
    },
    "6727": {
      "op": "DUP4"
    },
    "6728": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6730": {
      "op": "DUP3"
    },
    "6731": {
      "op": "DUP6"
    },
    "6732": {
      "op": "ADD"
    },
    "6733": {
      "op": "ADD"
    },
    "6734": {
      "op": "GT"
    },
    "6735": {
      "op": "ISZERO"
    },
    "6736": {
      "op": "PUSH2",
      "value": "0x1A11"
    },
    "6739": {
      "op": "JUMPI"
    },
    "6740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6742": {
      "op": "DUP1"
    },
    "6743": {
      "op": "REVERT"
    },
    "6744": {
      "op": "JUMPDEST"
    },
    "6745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6749": {
      "op": "DUP3"
    },
    "6750": {
      "op": "DUP5"
    },
    "6751": {
      "op": "SUB"
    },
    "6752": {
      "op": "SLT"
    },
    "6753": {
      "op": "ISZERO"
    },
    "6754": {
      "op": "PUSH2",
      "value": "0x1A69"
    },
    "6757": {
      "op": "JUMPI"
    },
    "6758": {
      "op": "DUP1"
    },
    "6759": {
      "op": "DUP2"
    },
    "6760": {
      "op": "REVERT"
    },
    "6761": {
      "op": "JUMPDEST"
    },
    "6762": {
      "op": "PUSH2",
      "value": "0x1A72"
    },
    "6765": {
      "op": "DUP3"
    },
    "6766": {
      "op": "PUSH2",
      "value": "0x19B2"
    },
    "6769": {
      "jump": "i",
      "op": "JUMP"
    },
    "6770": {
      "op": "JUMPDEST"
    },
    "6771": {
      "op": "SWAP4"
    },
    "6772": {
      "op": "SWAP3"
    },
    "6773": {
      "op": "POP"
    },
    "6774": {
      "op": "POP"
    },
    "6775": {
      "op": "POP"
    },
    "6776": {
      "jump": "o",
      "op": "JUMP"
    },
    "6777": {
      "op": "JUMPDEST"
    },
    "6778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6780": {
      "op": "DUP1"
    },
    "6781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6783": {
      "op": "DUP1"
    },
    "6784": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6786": {
      "op": "DUP6"
    },
    "6787": {
      "op": "DUP8"
    },
    "6788": {
      "op": "SUB"
    },
    "6789": {
      "op": "SLT"
    },
    "6790": {
      "op": "ISZERO"
    },
    "6791": {
      "op": "PUSH2",
      "value": "0x1A8E"
    },
    "6794": {
      "op": "JUMPI"
    },
    "6795": {
      "op": "DUP3"
    },
    "6796": {
      "op": "DUP4"
    },
    "6797": {
      "op": "REVERT"
    },
    "6798": {
      "op": "JUMPDEST"
    },
    "6799": {
      "op": "DUP5"
    },
    "6800": {
      "op": "CALLDATALOAD"
    },
    "6801": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6810": {
      "op": "DUP1"
    },
    "6811": {
      "op": "DUP3"
    },
    "6812": {
      "op": "GT"
    },
    "6813": {
      "op": "ISZERO"
    },
    "6814": {
      "op": "PUSH2",
      "value": "0x1AA5"
    },
    "6817": {
      "op": "JUMPI"
    },
    "6818": {
      "op": "DUP5"
    },
    "6819": {
      "op": "DUP6"
    },
    "6820": {
      "op": "REVERT"
    },
    "6821": {
      "op": "JUMPDEST"
    },
    "6822": {
      "op": "PUSH2",
      "value": "0x1AB1"
    },
    "6825": {
      "op": "DUP9"
    },
    "6826": {
      "op": "DUP4"
    },
    "6827": {
      "op": "DUP10"
    },
    "6828": {
      "op": "ADD"
    },
    "6829": {
      "op": "PUSH2",
      "value": "0x19CE"
    },
    "6832": {
      "jump": "i",
      "op": "JUMP"
    },
    "6833": {
      "op": "JUMPDEST"
    },
    "6834": {
      "op": "SWAP1"
    },
    "6835": {
      "op": "SWAP7"
    },
    "6836": {
      "op": "POP"
    },
    "6837": {
      "op": "SWAP5"
    },
    "6838": {
      "op": "POP"
    },
    "6839": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6841": {
      "op": "DUP8"
    },
    "6842": {
      "op": "ADD"
    },
    "6843": {
      "op": "CALLDATALOAD"
    },
    "6844": {
      "op": "SWAP2"
    },
    "6845": {
      "op": "POP"
    },
    "6846": {
      "op": "DUP1"
    },
    "6847": {
      "op": "DUP3"
    },
    "6848": {
      "op": "GT"
    },
    "6849": {
      "op": "ISZERO"
    },
    "6850": {
      "op": "PUSH2",
      "value": "0x1AC9"
    },
    "6853": {
      "op": "JUMPI"
    },
    "6854": {
      "op": "DUP4"
    },
    "6855": {
      "op": "DUP5"
    },
    "6856": {
      "op": "REVERT"
    },
    "6857": {
      "op": "JUMPDEST"
    },
    "6858": {
      "op": "POP"
    },
    "6859": {
      "op": "PUSH2",
      "value": "0x1AD6"
    },
    "6862": {
      "op": "DUP8"
    },
    "6863": {
      "op": "DUP3"
    },
    "6864": {
      "op": "DUP9"
    },
    "6865": {
      "op": "ADD"
    },
    "6866": {
      "op": "PUSH2",
      "value": "0x19CE"
    },
    "6869": {
      "jump": "i",
      "op": "JUMP"
    },
    "6870": {
      "op": "JUMPDEST"
    },
    "6871": {
      "op": "SWAP6"
    },
    "6872": {
      "op": "SWAP9"
    },
    "6873": {
      "op": "SWAP5"
    },
    "6874": {
      "op": "SWAP8"
    },
    "6875": {
      "op": "POP"
    },
    "6876": {
      "op": "SWAP6"
    },
    "6877": {
      "op": "POP"
    },
    "6878": {
      "op": "POP"
    },
    "6879": {
      "op": "POP"
    },
    "6880": {
      "op": "POP"
    },
    "6881": {
      "jump": "o",
      "op": "JUMP"
    },
    "6882": {
      "op": "JUMPDEST"
    },
    "6883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6885": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6887": {
      "op": "DUP3"
    },
    "6888": {
      "op": "DUP5"
    },
    "6889": {
      "op": "SUB"
    },
    "6890": {
      "op": "SLT"
    },
    "6891": {
      "op": "ISZERO"
    },
    "6892": {
      "op": "PUSH2",
      "value": "0x1AF3"
    },
    "6895": {
      "op": "JUMPI"
    },
    "6896": {
      "op": "DUP1"
    },
    "6897": {
      "op": "DUP2"
    },
    "6898": {
      "op": "REVERT"
    },
    "6899": {
      "op": "JUMPDEST"
    },
    "6900": {
      "op": "POP"
    },
    "6901": {
      "op": "CALLDATALOAD"
    },
    "6902": {
      "op": "SWAP2"
    },
    "6903": {
      "op": "SWAP1"
    },
    "6904": {
      "op": "POP"
    },
    "6905": {
      "jump": "o",
      "op": "JUMP"
    },
    "6906": {
      "op": "JUMPDEST"
    },
    "6907": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6909": {
      "op": "DUP1"
    },
    "6910": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6912": {
      "op": "DUP4"
    },
    "6913": {
      "op": "DUP6"
    },
    "6914": {
      "op": "SUB"
    },
    "6915": {
      "op": "SLT"
    },
    "6916": {
      "op": "ISZERO"
    },
    "6917": {
      "op": "PUSH2",
      "value": "0x1B0C"
    },
    "6920": {
      "op": "JUMPI"
    },
    "6921": {
      "op": "DUP2"
    },
    "6922": {
      "op": "DUP3"
    },
    "6923": {
      "op": "REVERT"
    },
    "6924": {
      "op": "JUMPDEST"
    },
    "6925": {
      "op": "DUP3"
    },
    "6926": {
      "op": "CALLDATALOAD"
    },
    "6927": {
      "op": "SWAP2"
    },
    "6928": {
      "op": "POP"
    },
    "6929": {
      "op": "PUSH2",
      "value": "0x1B1C"
    },
    "6932": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6934": {
      "op": "DUP5"
    },
    "6935": {
      "op": "ADD"
    },
    "6936": {
      "op": "PUSH2",
      "value": "0x19B2"
    },
    "6939": {
      "jump": "i",
      "op": "JUMP"
    },
    "6940": {
      "op": "JUMPDEST"
    },
    "6941": {
      "op": "SWAP1"
    },
    "6942": {
      "op": "POP"
    },
    "6943": {
      "op": "SWAP3"
    },
    "6944": {
      "op": "POP"
    },
    "6945": {
      "op": "SWAP3"
    },
    "6946": {
      "op": "SWAP1"
    },
    "6947": {
      "op": "POP"
    },
    "6948": {
      "jump": "o",
      "op": "JUMP"
    },
    "6949": {
      "op": "JUMPDEST"
    },
    "6950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6954": {
      "op": "DUP3"
    },
    "6955": {
      "op": "DUP5"
    },
    "6956": {
      "op": "SUB"
    },
    "6957": {
      "op": "SLT"
    },
    "6958": {
      "op": "ISZERO"
    },
    "6959": {
      "op": "PUSH2",
      "value": "0x1B36"
    },
    "6962": {
      "op": "JUMPI"
    },
    "6963": {
      "op": "DUP1"
    },
    "6964": {
      "op": "DUP2"
    },
    "6965": {
      "op": "REVERT"
    },
    "6966": {
      "op": "JUMPDEST"
    },
    "6967": {
      "op": "DUP2"
    },
    "6968": {
      "op": "CALLDATALOAD"
    },
    "6969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6973": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6975": {
      "op": "SHL"
    },
    "6976": {
      "op": "SUB"
    },
    "6977": {
      "op": "NOT"
    },
    "6978": {
      "op": "DUP2"
    },
    "6979": {
      "op": "AND"
    },
    "6980": {
      "op": "DUP2"
    },
    "6981": {
      "op": "EQ"
    },
    "6982": {
      "op": "PUSH2",
      "value": "0x1A72"
    },
    "6985": {
      "op": "JUMPI"
    },
    "6986": {
      "op": "DUP2"
    },
    "6987": {
      "op": "DUP3"
    },
    "6988": {
      "op": "REVERT"
    },
    "6989": {
      "op": "JUMPDEST"
    },
    "6990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6992": {
      "op": "DUP1"
    },
    "6993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6995": {
      "op": "DUP4"
    },
    "6996": {
      "op": "DUP6"
    },
    "6997": {
      "op": "SUB"
    },
    "6998": {
      "op": "SLT"
    },
    "6999": {
      "op": "ISZERO"
    },
    "7000": {
      "op": "PUSH2",
      "value": "0x1B5F"
    },
    "7003": {
      "op": "JUMPI"
    },
    "7004": {
      "op": "DUP2"
    },
    "7005": {
      "op": "DUP3"
    },
    "7006": {
      "op": "REVERT"
    },
    "7007": {
      "op": "JUMPDEST"
    },
    "7008": {
      "op": "DUP3"
    },
    "7009": {
      "op": "CALLDATALOAD"
    },
    "7010": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7019": {
      "op": "DUP2"
    },
    "7020": {
      "op": "GT"
    },
    "7021": {
      "op": "ISZERO"
    },
    "7022": {
      "op": "PUSH2",
      "value": "0x1B75"
    },
    "7025": {
      "op": "JUMPI"
    },
    "7026": {
      "op": "DUP3"
    },
    "7027": {
      "op": "DUP4"
    },
    "7028": {
      "op": "REVERT"
    },
    "7029": {
      "op": "JUMPDEST"
    },
    "7030": {
      "op": "PUSH2",
      "value": "0x1B81"
    },
    "7033": {
      "op": "DUP6"
    },
    "7034": {
      "op": "DUP3"
    },
    "7035": {
      "op": "DUP7"
    },
    "7036": {
      "op": "ADD"
    },
    "7037": {
      "op": "PUSH2",
      "value": "0x1A18"
    },
    "7040": {
      "jump": "i",
      "op": "JUMP"
    },
    "7041": {
      "op": "JUMPDEST"
    },
    "7042": {
      "op": "SWAP1"
    },
    "7043": {
      "op": "SWAP7"
    },
    "7044": {
      "op": "SWAP1"
    },
    "7045": {
      "op": "SWAP6"
    },
    "7046": {
      "op": "POP"
    },
    "7047": {
      "op": "SWAP4"
    },
    "7048": {
      "op": "POP"
    },
    "7049": {
      "op": "POP"
    },
    "7050": {
      "op": "POP"
    },
    "7051": {
      "op": "POP"
    },
    "7052": {
      "jump": "o",
      "op": "JUMP"
    },
    "7053": {
      "op": "JUMPDEST"
    },
    "7054": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7056": {
      "op": "DUP1"
    },
    "7057": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7059": {
      "op": "DUP1"
    },
    "7060": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7062": {
      "op": "DUP6"
    },
    "7063": {
      "op": "DUP8"
    },
    "7064": {
      "op": "SUB"
    },
    "7065": {
      "op": "SLT"
    },
    "7066": {
      "op": "ISZERO"
    },
    "7067": {
      "op": "PUSH2",
      "value": "0x1BA2"
    },
    "7070": {
      "op": "JUMPI"
    },
    "7071": {
      "op": "DUP4"
    },
    "7072": {
      "op": "DUP5"
    },
    "7073": {
      "op": "REVERT"
    },
    "7074": {
      "op": "JUMPDEST"
    },
    "7075": {
      "op": "DUP5"
    },
    "7076": {
      "op": "CALLDATALOAD"
    },
    "7077": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7086": {
      "op": "DUP2"
    },
    "7087": {
      "op": "GT"
    },
    "7088": {
      "op": "ISZERO"
    },
    "7089": {
      "op": "PUSH2",
      "value": "0x1BB8"
    },
    "7092": {
      "op": "JUMPI"
    },
    "7093": {
      "op": "DUP5"
    },
    "7094": {
      "op": "DUP6"
    },
    "7095": {
      "op": "REVERT"
    },
    "7096": {
      "op": "JUMPDEST"
    },
    "7097": {
      "op": "PUSH2",
      "value": "0x1BC4"
    },
    "7100": {
      "op": "DUP8"
    },
    "7101": {
      "op": "DUP3"
    },
    "7102": {
      "op": "DUP9"
    },
    "7103": {
      "op": "ADD"
    },
    "7104": {
      "op": "PUSH2",
      "value": "0x1A18"
    },
    "7107": {
      "jump": "i",
      "op": "JUMP"
    },
    "7108": {
      "op": "JUMPDEST"
    },
    "7109": {
      "op": "SWAP1"
    },
    "7110": {
      "op": "SWAP6"
    },
    "7111": {
      "op": "POP"
    },
    "7112": {
      "op": "SWAP4"
    },
    "7113": {
      "op": "POP"
    },
    "7114": {
      "op": "PUSH2",
      "value": "0x1BD7"
    },
    "7117": {
      "op": "SWAP1"
    },
    "7118": {
      "op": "POP"
    },
    "7119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7121": {
      "op": "DUP7"
    },
    "7122": {
      "op": "ADD"
    },
    "7123": {
      "op": "PUSH2",
      "value": "0x19B2"
    },
    "7126": {
      "jump": "i",
      "op": "JUMP"
    },
    "7127": {
      "op": "JUMPDEST"
    },
    "7128": {
      "op": "SWAP4"
    },
    "7129": {
      "op": "SWAP7"
    },
    "7130": {
      "op": "SWAP3"
    },
    "7131": {
      "op": "SWAP6"
    },
    "7132": {
      "op": "POP"
    },
    "7133": {
      "op": "SWAP3"
    },
    "7134": {
      "op": "SWAP4"
    },
    "7135": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7137": {
      "op": "ADD"
    },
    "7138": {
      "op": "CALLDATALOAD"
    },
    "7139": {
      "op": "SWAP3"
    },
    "7140": {
      "op": "POP"
    },
    "7141": {
      "op": "POP"
    },
    "7142": {
      "jump": "o",
      "op": "JUMP"
    },
    "7143": {
      "op": "JUMPDEST"
    },
    "7144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7146": {
      "op": "DUP1"
    },
    "7147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7149": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7151": {
      "op": "DUP5"
    },
    "7152": {
      "op": "DUP7"
    },
    "7153": {
      "op": "SUB"
    },
    "7154": {
      "op": "SLT"
    },
    "7155": {
      "op": "ISZERO"
    },
    "7156": {
      "op": "PUSH2",
      "value": "0x1BFB"
    },
    "7159": {
      "op": "JUMPI"
    },
    "7160": {
      "op": "DUP3"
    },
    "7161": {
      "op": "DUP4"
    },
    "7162": {
      "op": "REVERT"
    },
    "7163": {
      "op": "JUMPDEST"
    },
    "7164": {
      "op": "DUP4"
    },
    "7165": {
      "op": "CALLDATALOAD"
    },
    "7166": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7175": {
      "op": "DUP2"
    },
    "7176": {
      "op": "GT"
    },
    "7177": {
      "op": "ISZERO"
    },
    "7178": {
      "op": "PUSH2",
      "value": "0x1C11"
    },
    "7181": {
      "op": "JUMPI"
    },
    "7182": {
      "op": "DUP4"
    },
    "7183": {
      "op": "DUP5"
    },
    "7184": {
      "op": "REVERT"
    },
    "7185": {
      "op": "JUMPDEST"
    },
    "7186": {
      "op": "PUSH2",
      "value": "0x1C1D"
    },
    "7189": {
      "op": "DUP7"
    },
    "7190": {
      "op": "DUP3"
    },
    "7191": {
      "op": "DUP8"
    },
    "7192": {
      "op": "ADD"
    },
    "7193": {
      "op": "PUSH2",
      "value": "0x1A18"
    },
    "7196": {
      "jump": "i",
      "op": "JUMP"
    },
    "7197": {
      "op": "JUMPDEST"
    },
    "7198": {
      "op": "SWAP1"
    },
    "7199": {
      "op": "SWAP8"
    },
    "7200": {
      "op": "SWAP1"
    },
    "7201": {
      "op": "SWAP7"
    },
    "7202": {
      "op": "POP"
    },
    "7203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7205": {
      "op": "SWAP6"
    },
    "7206": {
      "op": "SWAP1"
    },
    "7207": {
      "op": "SWAP6"
    },
    "7208": {
      "op": "ADD"
    },
    "7209": {
      "op": "CALLDATALOAD"
    },
    "7210": {
      "op": "SWAP5"
    },
    "7211": {
      "op": "SWAP4"
    },
    "7212": {
      "op": "POP"
    },
    "7213": {
      "op": "POP"
    },
    "7214": {
      "op": "POP"
    },
    "7215": {
      "op": "POP"
    },
    "7216": {
      "jump": "o",
      "op": "JUMP"
    },
    "7217": {
      "op": "JUMPDEST"
    },
    "7218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7220": {
      "op": "DUP2"
    },
    "7221": {
      "op": "MLOAD"
    },
    "7222": {
      "op": "DUP1"
    },
    "7223": {
      "op": "DUP5"
    },
    "7224": {
      "op": "MSTORE"
    },
    "7225": {
      "op": "DUP2"
    },
    "7226": {
      "op": "JUMPDEST"
    },
    "7227": {
      "op": "DUP2"
    },
    "7228": {
      "op": "DUP2"
    },
    "7229": {
      "op": "LT"
    },
    "7230": {
      "op": "ISZERO"
    },
    "7231": {
      "op": "PUSH2",
      "value": "0x1C56"
    },
    "7234": {
      "op": "JUMPI"
    },
    "7235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7237": {
      "op": "DUP2"
    },
    "7238": {
      "op": "DUP6"
    },
    "7239": {
      "op": "ADD"
    },
    "7240": {
      "op": "DUP2"
    },
    "7241": {
      "op": "ADD"
    },
    "7242": {
      "op": "MLOAD"
    },
    "7243": {
      "op": "DUP7"
    },
    "7244": {
      "op": "DUP4"
    },
    "7245": {
      "op": "ADD"
    },
    "7246": {
      "op": "DUP3"
    },
    "7247": {
      "op": "ADD"
    },
    "7248": {
      "op": "MSTORE"
    },
    "7249": {
      "op": "ADD"
    },
    "7250": {
      "op": "PUSH2",
      "value": "0x1C3A"
    },
    "7253": {
      "op": "JUMP"
    },
    "7254": {
      "op": "JUMPDEST"
    },
    "7255": {
      "op": "DUP2"
    },
    "7256": {
      "op": "DUP2"
    },
    "7257": {
      "op": "GT"
    },
    "7258": {
      "op": "ISZERO"
    },
    "7259": {
      "op": "PUSH2",
      "value": "0x1C67"
    },
    "7262": {
      "op": "JUMPI"
    },
    "7263": {
      "op": "DUP3"
    },
    "7264": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7266": {
      "op": "DUP4"
    },
    "7267": {
      "op": "DUP8"
    },
    "7268": {
      "op": "ADD"
    },
    "7269": {
      "op": "ADD"
    },
    "7270": {
      "op": "MSTORE"
    },
    "7271": {
      "op": "JUMPDEST"
    },
    "7272": {
      "op": "POP"
    },
    "7273": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7275": {
      "op": "ADD"
    },
    "7276": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7278": {
      "op": "NOT"
    },
    "7279": {
      "op": "AND"
    },
    "7280": {
      "op": "SWAP3"
    },
    "7281": {
      "op": "SWAP1"
    },
    "7282": {
      "op": "SWAP3"
    },
    "7283": {
      "op": "ADD"
    },
    "7284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7286": {
      "op": "ADD"
    },
    "7287": {
      "op": "SWAP3"
    },
    "7288": {
      "op": "SWAP2"
    },
    "7289": {
      "op": "POP"
    },
    "7290": {
      "op": "POP"
    },
    "7291": {
      "jump": "o",
      "op": "JUMP"
    },
    "7292": {
      "op": "JUMPDEST"
    },
    "7293": {
      "op": "DUP2"
    },
    "7294": {
      "op": "DUP4"
    },
    "7295": {
      "op": "DUP3"
    },
    "7296": {
      "op": "CALLDATACOPY"
    },
    "7297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7299": {
      "op": "SWAP2"
    },
    "7300": {
      "op": "ADD"
    },
    "7301": {
      "op": "SWAP1"
    },
    "7302": {
      "op": "DUP2"
    },
    "7303": {
      "op": "MSTORE"
    },
    "7304": {
      "op": "SWAP2"
    },
    "7305": {
      "op": "SWAP1"
    },
    "7306": {
      "op": "POP"
    },
    "7307": {
      "jump": "o",
      "op": "JUMP"
    },
    "7308": {
      "op": "JUMPDEST"
    },
    "7309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7313": {
      "op": "DUP1"
    },
    "7314": {
      "op": "DUP4"
    },
    "7315": {
      "op": "ADD"
    },
    "7316": {
      "op": "DUP2"
    },
    "7317": {
      "op": "DUP5"
    },
    "7318": {
      "op": "MSTORE"
    },
    "7319": {
      "op": "DUP1"
    },
    "7320": {
      "op": "DUP6"
    },
    "7321": {
      "op": "MLOAD"
    },
    "7322": {
      "op": "DUP1"
    },
    "7323": {
      "op": "DUP4"
    },
    "7324": {
      "op": "MSTORE"
    },
    "7325": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7327": {
      "op": "DUP7"
    },
    "7328": {
      "op": "ADD"
    },
    "7329": {
      "op": "SWAP2"
    },
    "7330": {
      "op": "POP"
    },
    "7331": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7333": {
      "op": "DUP2"
    },
    "7334": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7336": {
      "op": "SHL"
    },
    "7337": {
      "op": "DUP8"
    },
    "7338": {
      "op": "ADD"
    },
    "7339": {
      "op": "ADD"
    },
    "7340": {
      "op": "SWAP3"
    },
    "7341": {
      "op": "POP"
    },
    "7342": {
      "op": "DUP4"
    },
    "7343": {
      "op": "DUP8"
    },
    "7344": {
      "op": "ADD"
    },
    "7345": {
      "op": "DUP6"
    },
    "7346": {
      "op": "JUMPDEST"
    },
    "7347": {
      "op": "DUP3"
    },
    "7348": {
      "op": "DUP2"
    },
    "7349": {
      "op": "LT"
    },
    "7350": {
      "op": "ISZERO"
    },
    "7351": {
      "op": "PUSH2",
      "value": "0x1CE0"
    },
    "7354": {
      "op": "JUMPI"
    },
    "7355": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "7357": {
      "op": "NOT"
    },
    "7358": {
      "op": "DUP9"
    },
    "7359": {
      "op": "DUP7"
    },
    "7360": {
      "op": "SUB"
    },
    "7361": {
      "op": "ADD"
    },
    "7362": {
      "op": "DUP5"
    },
    "7363": {
      "op": "MSTORE"
    },
    "7364": {
      "op": "PUSH2",
      "value": "0x1CCE"
    },
    "7367": {
      "op": "DUP6"
    },
    "7368": {
      "op": "DUP4"
    },
    "7369": {
      "op": "MLOAD"
    },
    "7370": {
      "op": "PUSH2",
      "value": "0x1C31"
    },
    "7373": {
      "jump": "i",
      "op": "JUMP"
    },
    "7374": {
      "op": "JUMPDEST"
    },
    "7375": {
      "op": "SWAP5"
    },
    "7376": {
      "op": "POP"
    },
    "7377": {
      "op": "SWAP3"
    },
    "7378": {
      "op": "DUP6"
    },
    "7379": {
      "op": "ADD"
    },
    "7380": {
      "op": "SWAP3"
    },
    "7381": {
      "op": "SWAP1"
    },
    "7382": {
      "op": "DUP6"
    },
    "7383": {
      "op": "ADD"
    },
    "7384": {
      "op": "SWAP1"
    },
    "7385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7387": {
      "op": "ADD"
    },
    "7388": {
      "op": "PUSH2",
      "value": "0x1CB2"
    },
    "7391": {
      "op": "JUMP"
    },
    "7392": {
      "op": "JUMPDEST"
    },
    "7393": {
      "op": "POP"
    },
    "7394": {
      "op": "SWAP3"
    },
    "7395": {
      "op": "SWAP8"
    },
    "7396": {
      "op": "SWAP7"
    },
    "7397": {
      "op": "POP"
    },
    "7398": {
      "op": "POP"
    },
    "7399": {
      "op": "POP"
    },
    "7400": {
      "op": "POP"
    },
    "7401": {
      "op": "POP"
    },
    "7402": {
      "op": "POP"
    },
    "7403": {
      "op": "POP"
    },
    "7404": {
      "jump": "o",
      "op": "JUMP"
    },
    "7405": {
      "op": "JUMPDEST"
    },
    "7406": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7410": {
      "op": "DUP1"
    },
    "7411": {
      "op": "DUP4"
    },
    "7412": {
      "op": "ADD"
    },
    "7413": {
      "op": "DUP2"
    },
    "7414": {
      "op": "DUP5"
    },
    "7415": {
      "op": "MSTORE"
    },
    "7416": {
      "op": "DUP1"
    },
    "7417": {
      "op": "DUP6"
    },
    "7418": {
      "op": "MLOAD"
    },
    "7419": {
      "op": "DUP1"
    },
    "7420": {
      "op": "DUP4"
    },
    "7421": {
      "op": "MSTORE"
    },
    "7422": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7424": {
      "op": "DUP7"
    },
    "7425": {
      "op": "ADD"
    },
    "7426": {
      "op": "SWAP2"
    },
    "7427": {
      "op": "POP"
    },
    "7428": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7430": {
      "op": "DUP2"
    },
    "7431": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7433": {
      "op": "SHL"
    },
    "7434": {
      "op": "DUP8"
    },
    "7435": {
      "op": "ADD"
    },
    "7436": {
      "op": "ADD"
    },
    "7437": {
      "op": "SWAP3"
    },
    "7438": {
      "op": "POP"
    },
    "7439": {
      "op": "DUP4"
    },
    "7440": {
      "op": "DUP8"
    },
    "7441": {
      "op": "ADD"
    },
    "7442": {
      "op": "DUP6"
    },
    "7443": {
      "op": "JUMPDEST"
    },
    "7444": {
      "op": "DUP3"
    },
    "7445": {
      "op": "DUP2"
    },
    "7446": {
      "op": "LT"
    },
    "7447": {
      "op": "ISZERO"
    },
    "7448": {
      "op": "PUSH2",
      "value": "0x1CE0"
    },
    "7451": {
      "op": "JUMPI"
    },
    "7452": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "7454": {
      "op": "NOT"
    },
    "7455": {
      "op": "DUP9"
    },
    "7456": {
      "op": "DUP7"
    },
    "7457": {
      "op": "SUB"
    },
    "7458": {
      "op": "ADD"
    },
    "7459": {
      "op": "DUP5"
    },
    "7460": {
      "op": "MSTORE"
    },
    "7461": {
      "op": "PUSH2",
      "value": "0x1D2F"
    },
    "7464": {
      "op": "DUP6"
    },
    "7465": {
      "op": "DUP4"
    },
    "7466": {
      "op": "MLOAD"
    },
    "7467": {
      "op": "PUSH2",
      "value": "0x1C31"
    },
    "7470": {
      "jump": "i",
      "op": "JUMP"
    },
    "7471": {
      "op": "JUMPDEST"
    },
    "7472": {
      "op": "SWAP5"
    },
    "7473": {
      "op": "POP"
    },
    "7474": {
      "op": "SWAP3"
    },
    "7475": {
      "op": "DUP6"
    },
    "7476": {
      "op": "ADD"
    },
    "7477": {
      "op": "SWAP3"
    },
    "7478": {
      "op": "SWAP1"
    },
    "7479": {
      "op": "DUP6"
    },
    "7480": {
      "op": "ADD"
    },
    "7481": {
      "op": "SWAP1"
    },
    "7482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7484": {
      "op": "ADD"
    },
    "7485": {
      "op": "PUSH2",
      "value": "0x1D13"
    },
    "7488": {
      "op": "JUMP"
    },
    "7489": {
      "op": "JUMPDEST"
    },
    "7490": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7492": {
      "op": "DUP1"
    },
    "7493": {
      "op": "DUP3"
    },
    "7494": {
      "op": "MSTORE"
    },
    "7495": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "7497": {
      "op": "SWAP1"
    },
    "7498": {
      "op": "DUP3"
    },
    "7499": {
      "op": "ADD"
    },
    "7500": {
      "op": "MSTORE"
    },
    "7501": {
      "op": "PUSH32",
      "value": "0x43616C6C657220697320756E617574686F72697A65642E000000000000000000"
    },
    "7534": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7536": {
      "op": "DUP3"
    },
    "7537": {
      "op": "ADD"
    },
    "7538": {
      "op": "MSTORE"
    },
    "7539": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7541": {
      "op": "ADD"
    },
    "7542": {
      "op": "SWAP1"
    },
    "7543": {
      "jump": "o",
      "op": "JUMP"
    },
    "7544": {
      "op": "JUMPDEST"
    },
    "7545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7547": {
      "op": "DUP1"
    },
    "7548": {
      "op": "DUP4"
    },
    "7549": {
      "op": "CALLDATALOAD"
    },
    "7550": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "7552": {
      "op": "NOT"
    },
    "7553": {
      "op": "DUP5"
    },
    "7554": {
      "op": "CALLDATASIZE"
    },
    "7555": {
      "op": "SUB"
    },
    "7556": {
      "op": "ADD"
    },
    "7557": {
      "op": "DUP2"
    },
    "7558": {
      "op": "SLT"
    },
    "7559": {
      "op": "PUSH2",
      "value": "0x1D8E"
    },
    "7562": {
      "op": "JUMPI"
    },
    "7563": {
      "op": "DUP3"
    },
    "7564": {
      "op": "DUP4"
    },
    "7565": {
      "op": "REVERT"
    },
    "7566": {
      "op": "JUMPDEST"
    },
    "7567": {
      "op": "DUP4"
    },
    "7568": {
      "op": "ADD"
    },
    "7569": {
      "op": "DUP1"
    },
    "7570": {
      "op": "CALLDATALOAD"
    },
    "7571": {
      "op": "SWAP2"
    },
    "7572": {
      "op": "POP"
    },
    "7573": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7582": {
      "op": "DUP3"
    },
    "7583": {
      "op": "GT"
    },
    "7584": {
      "op": "ISZERO"
    },
    "7585": {
      "op": "PUSH2",
      "value": "0x1DA8"
    },
    "7588": {
      "op": "JUMPI"
    },
    "7589": {
      "op": "DUP3"
    },
    "7590": {
      "op": "DUP4"
    },
    "7591": {
      "op": "REVERT"
    },
    "7592": {
      "op": "JUMPDEST"
    },
    "7593": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7595": {
      "op": "ADD"
    },
    "7596": {
      "op": "SWAP2"
    },
    "7597": {
      "op": "POP"
    },
    "7598": {
      "op": "CALLDATASIZE"
    },
    "7599": {
      "op": "DUP2"
    },
    "7600": {
      "op": "SWAP1"
    },
    "7601": {
      "op": "SUB"
    },
    "7602": {
      "op": "DUP3"
    },
    "7603": {
      "op": "SGT"
    },
    "7604": {
      "op": "ISZERO"
    },
    "7605": {
      "op": "PUSH2",
      "value": "0x1A11"
    },
    "7608": {
      "op": "JUMPI"
    },
    "7609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7611": {
      "op": "DUP1"
    },
    "7612": {
      "op": "REVERT"
    },
    "7613": {
      "op": "JUMPDEST"
    },
    "7614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7616": {
      "op": "DUP2"
    },
    "7617": {
      "op": "DUP2"
    },
    "7618": {
      "op": "SHR"
    },
    "7619": {
      "op": "SWAP1"
    },
    "7620": {
      "op": "DUP3"
    },
    "7621": {
      "op": "AND"
    },
    "7622": {
      "op": "DUP1"
    },
    "7623": {
      "op": "PUSH2",
      "value": "0x1DD1"
    },
    "7626": {
      "op": "JUMPI"
    },
    "7627": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "7629": {
      "op": "DUP3"
    },
    "7630": {
      "op": "AND"
    },
    "7631": {
      "op": "SWAP2"
    },
    "7632": {
      "op": "POP"
    },
    "7633": {
      "op": "JUMPDEST"
    },
    "7634": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7636": {
      "op": "DUP3"
    },
    "7637": {
      "op": "LT"
    },
    "7638": {
      "op": "DUP2"
    },
    "7639": {
      "op": "EQ"
    },
    "7640": {
      "op": "ISZERO"
    },
    "7641": {
      "op": "PUSH2",
      "value": "0x1DF2"
    },
    "7644": {
      "op": "JUMPI"
    },
    "7645": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7650": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7652": {
      "op": "SHL"
    },
    "7653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7655": {
      "op": "MSTORE"
    },
    "7656": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "7658": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7660": {
      "op": "MSTORE"
    },
    "7661": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7665": {
      "op": "REVERT"
    },
    "7666": {
      "op": "JUMPDEST"
    },
    "7667": {
      "op": "POP"
    },
    "7668": {
      "op": "SWAP2"
    },
    "7669": {
      "op": "SWAP1"
    },
    "7670": {
      "op": "POP"
    },
    "7671": {
      "jump": "o",
      "op": "JUMP"
    },
    "7672": {
      "op": "JUMPDEST"
    },
    "7673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7677": {
      "op": "NOT"
    },
    "7678": {
      "op": "DUP3"
    },
    "7679": {
      "op": "EQ"
    },
    "7680": {
      "op": "ISZERO"
    },
    "7681": {
      "op": "PUSH2",
      "value": "0x1E18"
    },
    "7684": {
      "op": "JUMPI"
    },
    "7685": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7690": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7692": {
      "op": "SHL"
    },
    "7693": {
      "op": "DUP2"
    },
    "7694": {
      "op": "MSTORE"
    },
    "7695": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "7697": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7699": {
      "op": "MSTORE"
    },
    "7700": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7702": {
      "op": "DUP2"
    },
    "7703": {
      "op": "REVERT"
    },
    "7704": {
      "op": "JUMPDEST"
    },
    "7705": {
      "op": "POP"
    },
    "7706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7708": {
      "op": "ADD"
    },
    "7709": {
      "op": "SWAP1"
    },
    "7710": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "d3d00423dcb0711343fc9685f7686672d44fb00c",
  "source": "pragma solidity 0.8.4;\n\n// SPDX-License-Identifier: MIT\n\nimport './AccessControlRci.sol';\nimport './../interfaces/IRegistry.sol';\n\n\ncontract Registry is AccessControlRci, IRegistry{\n    struct Comp{\n        bool active;\n        address competitionAddress;\n        bytes32 rulesLocation;\n    }\n\n    struct Ext{\n        bool active;\n        address extensionAddress;\n        bytes32 informationLocation;\n    }\n    address private _token;\n    mapping(string => Comp) private _competition;\n    mapping(string => Ext) private _extension;\n    string[] private _competitionNames;\n    string[] private _extensionNames;\n\n\n    constructor()\n    {\n        _initializeRciAdmin();\n    }\n\n    function registerNewCompetition(string calldata competitionName, address competitionAddress, bytes32 rulesLocation)\n    external override onlyAdmin\n    {\n        require(competitionAddress != address(0), \"Registry - registerNewCompetition: Cannot register 0 address.\");\n        require(rulesLocation != bytes32(0), \"Registry - rulesLocation: Cannot set rules location to 0.\");\n        require(_competition[competitionName].competitionAddress == address(0), \"Registry - registerNewCompetition: Competition already exists.\");\n        _competition[competitionName] = Comp({active:true, competitionAddress:competitionAddress, rulesLocation:rulesLocation});\n        _competitionNames.push(competitionName);\n\n        emit NewCompetitionRegistered(competitionName, competitionAddress, rulesLocation);\n    }\n\n    function toggleCompetitionActive(string calldata competitionName)\n    external override onlyAdmin\n    {\n        require(_competition[competitionName].competitionAddress != address(0), \"Registry - toggleCompetitionActive: Competition does not exist. Use function 'registerNewCompetition' instead.\");\n        _competition[competitionName].active = !_competition[competitionName].active;\n\n        emit CompetitionActiveToggled(competitionName);\n    }\n\n    function changeCompetitionRulesLocation(string calldata competitionName, bytes32 newLocation)\n    external override onlyAdmin\n    {\n        require(_competition[competitionName].competitionAddress != address(0), \"Registry - changeCompetitionRulesLocation: Competition does not exist. Use function 'registerNewCompetition' instead.\");\n        require(newLocation != bytes32(0), \"Registry - changeCompetitionRulesLocation: Cannot set to 0 address.\");\n        _competition[competitionName].rulesLocation = newLocation;\n\n        emit CompetitionRulesLocationChanged(competitionName, newLocation);\n    }\n\n    function changeTokenAddress(address newAddress)\n    external override onlyAdmin\n    {\n        require(newAddress != address(0), \"Registry - changeTokenAddress: Cannot set to 0 address.\");\n        _token = newAddress;\n\n        emit TokenAddressChanged(newAddress);\n    }\n\n    function registerNewExtension(string calldata extensionName,address extensionAddress, bytes32 informationLocation)\n    external override onlyAdmin\n    {\n        require(extensionAddress != address(0), \"Registry - registerNewExtension: Cannot register 0 address.\");\n        require(informationLocation != bytes32(0), \"Registry - registerNewExtension: Cannot set information location to 0.\");\n        require(_extension[extensionName].extensionAddress == address(0), \"Registry - registerNewExtension: Extension already exists.\");\n        _extension[extensionName] = Ext({active:true, extensionAddress:extensionAddress, informationLocation:informationLocation});\n        _extensionNames.push(extensionName);\n\n        emit NewExtensionRegistered(extensionName, extensionAddress, informationLocation);\n    }\n    \n    function toggleExtensionActive(string calldata extensionName)\n    external override onlyAdmin\n    {\n        require(_extension[extensionName].extensionAddress != address(0), \"Registry - toggleExtensionActive: Extension does not exist. Use function 'registerNewExtension' instead.\");\n        _extension[extensionName].active = !_extension[extensionName].active;\n\n        emit ExtensionActiveToggled(extensionName);\n    }\n    \n    function changeExtensionInfoLocation(string calldata extensionName, bytes32 newLocation)\n    external override onlyAdmin\n    {\n        require(_extension[extensionName].extensionAddress != address(0), \"Registry - changeExtensionInfoLocation: Competition does not exist. Use function 'registerNewCompetition' instead.\");\n        require(newLocation != bytes32(0), \"Registry - changeExtensionInfoLocation: Cannot set to 0 address.\");\n        _extension[extensionName].informationLocation = newLocation;\n\n        emit ExtensionInfoLocationChanged(extensionName, newLocation);\n    }\n\n    // convenience function for DAPP.\n    function batchCall(address[] calldata addresses, bytes[] calldata data)\n    external view\n    returns (bytes[] memory)\n    {\n        bytes[] memory returnDataList = new bytes[](data.length);\n        for (uint i = 0; i < data.length; i++){\n            (bool success, bytes memory returnedData) = addresses[i].staticcall(data[i]);\n            returnDataList[i] = returnedData;\n        }\n        return returnDataList;\n    }\n\n    /* READ METHODS */\n\n    function getCompetitionList()\n    view external override\n    returns (string[] memory competitionNames)\n    {\n        competitionNames = _competitionNames;\n    }\n\n    function getExtensionList()\n    view external override\n    returns (string[] memory extensionNames)\n    {\n        extensionNames = _extensionNames;\n    }\n\n    function getCompetitionActive(string calldata competitionName)\n    view external override\n    returns (bool active)\n    {\n        active = _competition[competitionName].active;\n    }\n\n    function getCompetitionAddress(string calldata competitionName)\n    view external override\n    returns (address competitionAddress)\n    {\n        competitionAddress = _competition[competitionName].competitionAddress;\n    }\n\n    function getCompetitionRulesLocation(string calldata competitionName)\n    view external override\n    returns (bytes32 rulesLocation)\n    {\n        rulesLocation = _competition[competitionName].rulesLocation;\n    }\n\n    function getTokenAddress()\n    view external override\n    returns (address token)\n    {\n        token = _token;\n    }\n\n    function getExtensionAddress(string calldata extensionName)\n    view external override\n    returns (address extensionAddress)\n    {\n        extensionAddress = _extension[extensionName].extensionAddress;\n    }\n\n    function getExtensionActive(string calldata extensionName)\n    view external override\n    returns (bool active)\n    {\n        active = _extension[extensionName].active;\n    }\n\n    function getExtensionInfoLocation(string calldata extensionName)\n    view external override\n    returns (bytes32 informationLocation)\n    {\n        informationLocation = _extension[extensionName].informationLocation;\n    }\n}\n\n\n\n\n\n",
  "sourceMap": "132:6700:5:-:0;;;617:56;;;;;;;;;-1:-1:-1;645:21:5;:19;:21::i;:::-;132:6700;;577:264:0;635:38;-1:-1:-1;;;;;;;;;;;662:10:0;635;:38::i;:::-;683:45;-1:-1:-1;;;;;;;;;;;202:27:0;683:13;:45::i;:::-;739:39;-1:-1:-1;;;;;;;;;;;767:10:0;739;:39::i;:::-;788:46;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;788:13:0;:46::i;:::-;577:264::o;6519:110:7:-;6597:25;6608:4;6614:7;6597:10;:25::i;:::-;6519:110;;:::o;6754:192::-;4251:7;4277:12;;;;;;;;;;:22;;;6885:9;;6842:53;;6859:4;;6842:53;;;;;6905:6;:12;;;;;;;;;;;:22;;:34;6754:192::o;6952:224::-;3945:4;3968:12;;;;;;;;;;;-1:-1:-1;;;;;3968:29:7;;;;;;;;;;;;7021:149;;7064:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7064:29:7;;;;;;;;;:36;;-1:-1:-1;;7064:36:7;7096:4;7064:36;;;7146:12;665:10:19;;586:96;7146:12:7;-1:-1:-1;;;;;7119:40:7;7137:7;-1:-1:-1;;;;;7119:40:7;7131:4;7119:40;;;;;;;;;;6952:224;;:::o;132:6700:5:-;;;;;;;",
  "sourcePath": "contracts/Registry.sol",
  "type": "contract"
}