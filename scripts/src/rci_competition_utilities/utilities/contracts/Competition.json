{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "itemNumber",
          "type": "uint256"
        }
      ],
      "name": "BatchInformationUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "name": "ChallengeAndTournamentScoresUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "name": "ChallengeOpened",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newPercentage",
          "type": "uint256"
        }
      ],
      "name": "ChallengeRewardsPercentageInWeiUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "oldDatasetHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newDatasetHash",
          "type": "bytes32"
        }
      ],
      "name": "DatasetUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "oldKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newKeyHash",
          "type": "bytes32"
        }
      ],
      "name": "KeyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MessageUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newPrivateKeyHash",
          "type": "bytes32"
        }
      ],
      "name": "PrivateKeyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "remainder",
          "type": "uint256"
        }
      ],
      "name": "RemainderMovedToPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "oldResultsHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newResultsHash",
          "type": "bytes32"
        }
      ],
      "name": "ResultsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "submitter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stakingReward",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "challengeReward",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tournamentReward",
          "type": "uint256"
        }
      ],
      "name": "RewardsPayment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newRewardsThreshold",
          "type": "uint256"
        }
      ],
      "name": "RewardsThresholdUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsorAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "sponsorAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "poolTotal",
          "type": "uint256"
        }
      ],
      "name": "Sponsor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeDecreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeIncreased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newStakeThreshold",
          "type": "uint256"
        }
      ],
      "name": "StakeThresholdUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "name": "SubmissionClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "participantAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newSubmissionHash",
          "type": "bytes32"
        }
      ],
      "name": "SubmissionUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "totalStakingAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "totalChallengeAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "totalTournamentAmount",
          "type": "uint256"
        }
      ],
      "name": "TotalRewardsPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newPercentage",
          "type": "uint256"
        }
      ],
      "name": "TournamentRewardsPercentageInWeiUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RCI_CHILD_ADMIN",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RCI_MAIN_ADMIN",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "phase",
          "type": "uint8"
        }
      ],
      "name": "advanceToPhase",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeSubmission",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        }
      ],
      "name": "decreaseStake",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "participant",
          "type": "address"
        }
      ],
      "name": "getChallengeRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "challengeRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChallengeRewardsPercentageInWei",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "challengeRewardsPercentageInWei",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "participant",
          "type": "address"
        }
      ],
      "name": "getChallengeScores",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "challengeScores",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCompetitionPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "competitionPool",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentChallengeRewardsBudget",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentChallengeRewardsBudget",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentStakingRewardsBudget",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentStakingRewardsBudget",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTotalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentTotalStaked",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTournamentRewardsBudget",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "currentTournamentRewardsBudget",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "name": "getDatasetHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "dataset",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getDeadlines",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "participant",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "itemNumber",
          "type": "uint256"
        }
      ],
      "name": "getInformation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "name": "getKeyHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestChallengeNumber",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "latestChallengeNumber",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMessage",
      "outputs": [
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "participant",
          "type": "address"
        }
      ],
      "name": "getOverallRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "overallRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "name": "getPhase",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "phase",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "name": "getPrivateKeyHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "privateKey",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRemainder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "remainder",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "name": "getResultsHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "results",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardsThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rewardsThreshold",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "participant",
          "type": "address"
        }
      ],
      "name": "getStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakeThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakeThreshold",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "participant",
          "type": "address"
        }
      ],
      "name": "getStakedAmountForChallenge",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "staked",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "participant",
          "type": "address"
        }
      ],
      "name": "getStakingRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakingRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "participant",
          "type": "address"
        }
      ],
      "name": "getSubmission",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "submissionHash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "name": "getSubmissionCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "submissionCounter",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "startIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endIndex",
          "type": "uint256"
        }
      ],
      "name": "getSubmitters",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "participant",
          "type": "address"
        }
      ],
      "name": "getTournamentRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tournamentRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTournamentRewardsPercentageInWei",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tournamentRewardsPercentageInWei",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "participant",
          "type": "address"
        }
      ],
      "name": "getTournamentScores",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tournamentScores",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        }
      ],
      "name": "increaseStake",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stakeThreshold_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardsThreshold_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAddress_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "moveRemainderToPool",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "datasetHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "keyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "submissionCloseDeadline",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nextChallengeDeadline",
          "type": "uint256"
        }
      ],
      "name": "openChallenge",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "submitters",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "stakingRewards",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "challengeRewards",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tournamentRewards",
          "type": "uint256[]"
        }
      ],
      "name": "payRewards",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToken",
          "type": "uint256"
        }
      ],
      "name": "sponsor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "submissionHash",
          "type": "bytes32"
        }
      ],
      "name": "submitNewPredictions",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "resultsHash",
          "type": "bytes32"
        }
      ],
      "name": "submitResults",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "internalType": "address[]",
          "name": "participants",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "challengeScores",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tournamentScores",
          "type": "uint256[]"
        }
      ],
      "name": "updateChallengeAndTournamentScores",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPercentage",
          "type": "uint256"
        }
      ],
      "name": "updateChallengeRewardsPercentageInWei",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "oldDatasetHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "newDatasetHash",
          "type": "bytes32"
        }
      ],
      "name": "updateDataset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "updateDeadlines",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "internalType": "address[]",
          "name": "participants",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "itemNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "updateInformationBatch",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "oldKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "newKeyHash",
          "type": "bytes32"
        }
      ],
      "name": "updateKey",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newMessage",
          "type": "string"
        }
      ],
      "name": "updateMessage",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        },
        {
          "internalType": "bytes32",
          "name": "newKeyHash",
          "type": "bytes32"
        }
      ],
      "name": "updatePrivateKey",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "oldResultsHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "newResultsHash",
          "type": "bytes32"
        }
      ],
      "name": "updateResults",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newThreshold",
          "type": "uint256"
        }
      ],
      "name": "updateRewardsThreshold",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newStakeThreshold",
          "type": "uint256"
        }
      ],
      "name": "updateStakeThreshold",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "oldSubmissionHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "newSubmissionHash",
          "type": "bytes32"
        }
      ],
      "name": "updateSubmission",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "challengeNumber",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPercentage",
          "type": "uint256"
        }
      ],
      "name": "updateTournamentRewardsPercentageInWei",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/AccessControlRci.sol",
    "13": "contracts/standard/proxy/utils/Initializable.sol",
    "19": "contracts/standard/utils/Context.sol",
    "2": "contracts/Competition.sol",
    "21": "contracts/standard/utils/introspection/ERC165.sol",
    "22": "contracts/standard/utils/introspection/IERC165.sol",
    "23": "contracts/standard/utils/structs/EnumerableSet.sol",
    "27": "interfaces/ICompetition.sol",
    "29": "interfaces/IToken.sol",
    "3": "contracts/CompetitionStorage.sol",
    "7": "contracts/standard/access/AccessControl.sol"
  },
  "ast": {
    "absolutePath": "contracts/Competition.sol",
    "exportedSymbols": {
      "AccessControl": [
        4795
      ],
      "AccessControlRci": [
        67
      ],
      "Address": [
        6379
      ],
      "Competition": [
        2430
      ],
      "CompetitionStorage": [
        2512
      ],
      "Context": [
        6402
      ],
      "ERC165": [
        6562
      ],
      "EnumerableSet": [
        7089
      ],
      "IAccessControl": [
        4515
      ],
      "ICompetition": [
        10096
      ],
      "IERC165": [
        6574
      ],
      "IToken": [
        10212
      ],
      "Initializable": [
        5452
      ]
    },
    "id": 2431,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 182,
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:2"
      },
      {
        "absolutePath": "interfaces/ICompetition.sol",
        "file": "./../interfaces/ICompetition.sol",
        "id": 183,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2431,
        "sourceUnit": 10097,
        "src": "57:42:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IToken.sol",
        "file": "./../interfaces/IToken.sol",
        "id": 184,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2431,
        "sourceUnit": 10213,
        "src": "100:36:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/CompetitionStorage.sol",
        "file": "./CompetitionStorage.sol",
        "id": 185,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2431,
        "sourceUnit": 2513,
        "src": "137:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/AccessControlRci.sol",
        "file": "./AccessControlRci.sol",
        "id": 186,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2431,
        "sourceUnit": 68,
        "src": "172:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/standard/proxy/utils/Initializable.sol",
        "file": "./standard/proxy/utils/Initializable.sol",
        "id": 187,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2431,
        "sourceUnit": 5453,
        "src": "205:50:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 189,
              "name": "AccessControlRci",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 67,
              "src": "597:16:2"
            },
            "id": 190,
            "nodeType": "InheritanceSpecifier",
            "src": "597:16:2"
          },
          {
            "baseName": {
              "id": 191,
              "name": "ICompetition",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10096,
              "src": "615:12:2"
            },
            "id": 192,
            "nodeType": "InheritanceSpecifier",
            "src": "615:12:2"
          },
          {
            "baseName": {
              "id": 193,
              "name": "CompetitionStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2512,
              "src": "629:18:2"
            },
            "id": 194,
            "nodeType": "InheritanceSpecifier",
            "src": "629:18:2"
          },
          {
            "baseName": {
              "id": 195,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5452,
              "src": "649:13:2"
            },
            "id": 196,
            "nodeType": "InheritanceSpecifier",
            "src": "649:13:2"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 188,
          "nodeType": "StructuredDocumentation",
          "src": "257:315:2",
          "text": " @title RCI Tournament(Competition) Contract\n @author Rocket Capital Investment Pte Ltd\n @dev This contract manages registration and reward payouts for the RCI Tournament.\n @dev IPFS hash format: Hash Identifier (2 bytes), Actual Hash (May eventually take on other formats but currently 32 bytes)"
        },
        "fullyImplemented": true,
        "id": 2430,
        "linearizedBaseContracts": [
          2430,
          5452,
          2512,
          10096,
          67,
          4795,
          6562,
          6574,
          4515,
          6402
        ],
        "name": "Competition",
        "nameLocation": "582:11:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "683:2:2",
              "statements": []
            },
            "id": 200,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:2:2"
            },
            "returnParameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "683:0:2"
            },
            "scope": 2430,
            "src": "670:15:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 257,
              "nodeType": "Block",
              "src": "819:423:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 212,
                          "name": "tokenAddress_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 206,
                          "src": "837:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "862:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "854:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 213,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "854:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "854:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "837:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20746f6b656e206164647265737320666f756e642e",
                        "id": 218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "866:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f2a364926bda23624f5d60beb9b60994567a34603a8bfcfb6aedc99a72c7014a",
                          "typeString": "literal_string \"No token address found.\""
                        },
                        "value": "No token address found."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f2a364926bda23624f5d60beb9b60994567a34603a8bfcfb6aedc99a72c7014a",
                          "typeString": "literal_string \"No token address found.\""
                        }
                      ],
                      "id": 211,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "829:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "829:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 220,
                  "nodeType": "ExpressionStatement",
                  "src": "829:63:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 221,
                      "name": "_initializeRciAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "902:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "902:21:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "902:21:2"
                },
                {
                  "expression": {
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 224,
                      "name": "_stakeThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2484,
                      "src": "933:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 225,
                      "name": "stakeThreshold_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "951:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "933:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "933:33:2"
                },
                {
                  "expression": {
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 228,
                      "name": "_rewardsThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2488,
                      "src": "976:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 229,
                      "name": "rewardsThreshold_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 204,
                      "src": "996:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "976:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "976:37:2"
                },
                {
                  "expression": {
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 232,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2480,
                      "src": "1023:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IToken_$10212",
                        "typeString": "contract IToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 234,
                          "name": "tokenAddress_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 206,
                          "src": "1039:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 233,
                        "name": "IToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10212,
                        "src": "1032:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IToken_$10212_$",
                          "typeString": "type(contract IToken)"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1032:21:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IToken_$10212",
                        "typeString": "contract IToken"
                      }
                    },
                    "src": "1023:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IToken_$10212",
                      "typeString": "contract IToken"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "1023:30:2"
                },
                {
                  "expression": {
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 238,
                      "name": "_challengeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2482,
                      "src": "1063:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1083:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1063:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "1063:21:2"
                },
                {
                  "expression": {
                    "id": 247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 242,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2511,
                          "src": "1094:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                            "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                          }
                        },
                        "id": 244,
                        "indexExpression": {
                          "id": 243,
                          "name": "_challengeCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2482,
                          "src": "1106:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1094:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                          "typeString": "struct CompetitionStorage.Challenge storage ref"
                        }
                      },
                      "id": 245,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "phase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2464,
                      "src": "1094:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "34",
                      "id": 246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1133:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "src": "1094:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 248,
                  "nodeType": "ExpressionStatement",
                  "src": "1094:40:2"
                },
                {
                  "expression": {
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 249,
                      "name": "_challengeRewardsPercentageInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2498,
                      "src": "1144:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3230653136",
                      "id": 250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1179:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200000000000000000_by_1",
                        "typeString": "int_const 200000000000000000"
                      },
                      "value": "20e16"
                    },
                    "src": "1144:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:40:2"
                },
                {
                  "expression": {
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 253,
                      "name": "_tournamentRewardsPercentageInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2500,
                      "src": "1194:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3630653136",
                      "id": 254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1230:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_600000000000000000_by_1",
                        "typeString": "int_const 600000000000000000"
                      },
                      "value": "60e16"
                    },
                    "src": "1194:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "1194:41:2"
                }
              ]
            },
            "functionSelector": "a6ab36f2",
            "id": 258,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 209,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 208,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5451,
                  "src": "803:11:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "803:11:2"
              }
            ],
            "name": "initialize",
            "nameLocation": "700:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "stakeThreshold_",
                  "nameLocation": "719:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "711:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 204,
                  "mutability": "mutable",
                  "name": "rewardsThreshold_",
                  "nameLocation": "744:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "736:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "736:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "tokenAddress_",
                  "nameLocation": "771:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 258,
                  "src": "763:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "763:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:75:2"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "819:0:2"
            },
            "scope": 2430,
            "src": "691:551:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9506
            ],
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "1408:771:2",
              "statements": [
                {
                  "assignments": [
                    270
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 270,
                      "mutability": "mutable",
                      "name": "challengeNumber",
                      "nameLocation": "1425:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 347,
                      "src": "1418:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 269,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1418:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 272,
                  "initialValue": {
                    "id": 271,
                    "name": "_challengeCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2482,
                    "src": "1443:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1418:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 274,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1478:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1478:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 278,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2480,
                              "src": "1500:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IToken_$10212",
                                "typeString": "contract IToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IToken_$10212",
                                "typeString": "contract IToken"
                              }
                            ],
                            "id": 277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1492:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 276,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1492:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1492:15:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1478:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20696e6372656173655374616b653a20506c656173652063616c6c20746869732066756e6374696f6e207669612074686520746f6b656e20636f6e74726163742e",
                        "id": 281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1509:80:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d97fd2c8d087878c21540460d1ffbcb2ee5c843d1d9c2aecc2ddb0246549116",
                          "typeString": "literal_string \"Competition - increaseStake: Please call this function via the token contract.\""
                        },
                        "value": "Competition - increaseStake: Please call this function via the token contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d97fd2c8d087878c21540460d1ffbcb2ee5c843d1d9c2aecc2ddb0246549116",
                          "typeString": "literal_string \"Competition - increaseStake: Please call this function via the token contract.\""
                        }
                      ],
                      "id": 273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1470:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1470:120:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "1470:120:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 285,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "1608:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 287,
                            "indexExpression": {
                              "id": 286,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 270,
                              "src": "1620:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1608:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 288,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2464,
                          "src": "1608:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1646:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "1608:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20696e6372656173655374616b653a20506c65617365207761697420666f7220746865207374616b696e6720706572696f6420746f20756e6c6f636b206265666f7265206d6f64696679696e6720796f7572207374616b652e",
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1649:104:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d93c7b7f5a71ebe616a0f23f0f6ae0567c46abbe82d82d198528996906dc786b",
                          "typeString": "literal_string \"Competition - increaseStake: Please wait for the staking period to unlock before modifying your stake.\""
                        },
                        "value": "Competition - increaseStake: Please wait for the staking period to unlock before modifying your stake."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d93c7b7f5a71ebe616a0f23f0f6ae0567c46abbe82d82d198528996906dc786b",
                          "typeString": "literal_string \"Competition - increaseStake: Please wait for the staking period to unlock before modifying your stake.\""
                        }
                      ],
                      "id": 284,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1600:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1600:154:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "1600:154:2"
                },
                {
                  "assignments": [
                    295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 295,
                      "mutability": "mutable",
                      "name": "currentBal",
                      "nameLocation": "1773:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 347,
                      "src": "1765:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 294,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1765:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 299,
                  "initialValue": {
                    "baseExpression": {
                      "id": 296,
                      "name": "_stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2506,
                      "src": "1786:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 298,
                    "indexExpression": {
                      "id": 297,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 261,
                      "src": "1794:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1786:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1765:36:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 300,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "1815:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 302,
                            "indexExpression": {
                              "id": 301,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 270,
                              "src": "1827:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1815:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 303,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "submitterInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2469,
                          "src": "1815:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                            "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                          }
                        },
                        "id": 305,
                        "indexExpression": {
                          "id": 304,
                          "name": "staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 261,
                          "src": "1858:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1815:50:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Information_$2454_storage",
                          "typeString": "struct CompetitionStorage.Information storage ref"
                        }
                      },
                      "id": 306,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submission",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2437,
                      "src": "1815:61:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1888:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1880:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 307,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1880:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1880:10:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1815:75:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 325,
                  "nodeType": "IfStatement",
                  "src": "1811:189:2",
                  "trueBody": {
                    "id": 324,
                    "nodeType": "Block",
                    "src": "1891:109:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 312,
                                    "name": "_challenges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2511,
                                    "src": "1905:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                      "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                                    }
                                  },
                                  "id": 314,
                                  "indexExpression": {
                                    "id": 313,
                                    "name": "challengeNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 270,
                                    "src": "1917:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1905:28:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                                    "typeString": "struct CompetitionStorage.Challenge storage ref"
                                  }
                                },
                                "id": 315,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "submitterInfo",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2469,
                                "src": "1905:42:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                                  "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                                }
                              },
                              "id": 317,
                              "indexExpression": {
                                "id": 316,
                                "name": "staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 261,
                                "src": "1948:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1905:50:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Information_$2454_storage",
                                "typeString": "struct CompetitionStorage.Information storage ref"
                              }
                            },
                            "id": 318,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "staked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2439,
                            "src": "1905:57:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 319,
                              "name": "currentBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 295,
                              "src": "1965:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 320,
                              "name": "amountToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 263,
                              "src": "1978:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1965:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1905:84:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 323,
                        "nodeType": "ExpressionStatement",
                        "src": "1905:84:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 326,
                        "name": "_stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2506,
                        "src": "2010:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 328,
                      "indexExpression": {
                        "id": 327,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 261,
                        "src": "2018:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2010:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 329,
                        "name": "currentBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 295,
                        "src": "2028:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 330,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "2041:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2028:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2010:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "2010:42:2"
                },
                {
                  "expression": {
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 334,
                      "name": "_currentTotalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2490,
                      "src": "2062:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 335,
                      "name": "amountToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "2085:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2062:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "2062:34:2"
                },
                {
                  "expression": {
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 338,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 267,
                      "src": "2107:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2117:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2107:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "2107:14:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 343,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 261,
                        "src": "2152:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 344,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "2160:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 342,
                      "name": "StakeIncreased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9983,
                      "src": "2137:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2137:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 346,
                  "nodeType": "EmitStatement",
                  "src": "2132:40:2"
                }
              ]
            },
            "documentation": {
              "id": 259,
              "nodeType": "StructuredDocumentation",
              "src": "1248:41:2",
              "text": "PARTICIPANT WRITE METHODS*"
            },
            "functionSelector": "5d7e9467",
            "id": 348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseStake",
            "nameLocation": "1304:13:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 265,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1368:8:2"
            },
            "parameters": {
              "id": 264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "1326:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "1318:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1318:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 263,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "1342:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "1334:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1334:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1317:37:2"
            },
            "returnParameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 267,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "1395:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "1390:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 266,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1390:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1389:14:2"
            },
            "scope": 2430,
            "src": "1295:884:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9516
            ],
            "body": {
              "id": 457,
              "nodeType": "Block",
              "src": "2298:1104:2",
              "statements": [
                {
                  "assignments": [
                    359
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 359,
                      "mutability": "mutable",
                      "name": "challengeNumber",
                      "nameLocation": "2315:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 457,
                      "src": "2308:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 358,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2308:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 361,
                  "initialValue": {
                    "id": 360,
                    "name": "_challengeCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2482,
                    "src": "2333:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2308:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 363,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2368:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2368:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 367,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2480,
                              "src": "2390:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IToken_$10212",
                                "typeString": "contract IToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IToken_$10212",
                                "typeString": "contract IToken"
                              }
                            ],
                            "id": 366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2382:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 365,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2382:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2382:15:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2368:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d2064656372656173655374616b653a20506c656173652063616c6c20746869732066756e6374696f6e207669612074686520746f6b656e20636f6e74726163742e",
                        "id": 370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2399:80:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5928b7d913c7e80ed499b0cd9fa209c541c4ea5dd923003131fef04ccb38d84d",
                          "typeString": "literal_string \"Competition - decreaseStake: Please call this function via the token contract.\""
                        },
                        "value": "Competition - decreaseStake: Please call this function via the token contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5928b7d913c7e80ed499b0cd9fa209c541c4ea5dd923003131fef04ccb38d84d",
                          "typeString": "literal_string \"Competition - decreaseStake: Please call this function via the token contract.\""
                        }
                      ],
                      "id": 362,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2360:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2360:120:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "2360:120:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 374,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "2498:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 376,
                            "indexExpression": {
                              "id": 375,
                              "name": "_challengeCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2482,
                              "src": "2510:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2498:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 377,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2464,
                          "src": "2498:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2538:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "2498:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d2064656372656173655374616b653a20506c65617365207761697420666f7220746865207374616b696e6720706572696f6420746f20756e6c6f636b206265666f7265206d6f64696679696e6720796f7572207374616b652e",
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2541:104:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f2c7519bd0947d1e31b0197865c655497e811e9a1e0dbcf0c7e9617e2fa93b4",
                          "typeString": "literal_string \"Competition - decreaseStake: Please wait for the staking period to unlock before modifying your stake.\""
                        },
                        "value": "Competition - decreaseStake: Please wait for the staking period to unlock before modifying your stake."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f2c7519bd0947d1e31b0197865c655497e811e9a1e0dbcf0c7e9617e2fa93b4",
                          "typeString": "literal_string \"Competition - decreaseStake: Please wait for the staking period to unlock before modifying your stake.\""
                        }
                      ],
                      "id": 373,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2490:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2490:156:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "2490:156:2"
                },
                {
                  "assignments": [
                    384
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 384,
                      "mutability": "mutable",
                      "name": "currentBal",
                      "nameLocation": "2665:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 457,
                      "src": "2657:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 383,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2657:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 388,
                  "initialValue": {
                    "baseExpression": {
                      "id": 385,
                      "name": "_stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2506,
                      "src": "2678:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 387,
                    "indexExpression": {
                      "id": 386,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 350,
                      "src": "2686:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2678:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2657:36:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 390,
                          "name": "amountToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 352,
                          "src": "2711:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 391,
                          "name": "currentBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 384,
                          "src": "2726:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2711:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d2064656372656173655374616b653a20496e73756666696369656e742066756e647320666f72207769746864726177616c2e",
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2738:65:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc0b87d1fafacf1963b156fcfc5d8f0fdb4dabcdefc948857cddc45407ff7031",
                          "typeString": "literal_string \"Competition - decreaseStake: Insufficient funds for withdrawal.\""
                        },
                        "value": "Competition - decreaseStake: Insufficient funds for withdrawal."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dc0b87d1fafacf1963b156fcfc5d8f0fdb4dabcdefc948857cddc45407ff7031",
                          "typeString": "literal_string \"Competition - decreaseStake: Insufficient funds for withdrawal.\""
                        }
                      ],
                      "id": 389,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2703:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2703:101:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 395,
                  "nodeType": "ExpressionStatement",
                  "src": "2703:101:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 396,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "2819:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 398,
                            "indexExpression": {
                              "id": 397,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 359,
                              "src": "2831:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2819:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 399,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "submitterInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2469,
                          "src": "2819:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                            "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                          }
                        },
                        "id": 401,
                        "indexExpression": {
                          "id": 400,
                          "name": "staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "2862:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2819:50:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Information_$2454_storage",
                          "typeString": "struct CompetitionStorage.Information storage ref"
                        }
                      },
                      "id": 402,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submission",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2437,
                      "src": "2819:61:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2892:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2884:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 403,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2884:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2884:10:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2819:75:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 431,
                  "nodeType": "IfStatement",
                  "src": "2815:377:2",
                  "trueBody": {
                    "id": 430,
                    "nodeType": "Block",
                    "src": "2895:297:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 411,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 409,
                                      "name": "currentBal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 384,
                                      "src": "2918:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 410,
                                      "name": "amountToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 352,
                                      "src": "2931:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "2918:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 412,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2917:26:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 413,
                                "name": "_stakeThreshold",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2484,
                                "src": "2947:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2917:45:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6d7065746974696f6e202d2064656372656173655374616b653a20596f75206d6179206e6f74206c6f77657220796f7572207374616b652062656c6f7720746865207468726573686f6c64207768696c6520796f75206861766520616e206578697374696e67207375626d697373696f6e2e",
                              "id": 415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2964:118:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5922bb7454cebecf0fba6361d962397ecfdb2e75a8ceebfcbf8fe9a9cd9662e2",
                                "typeString": "literal_string \"Competition - decreaseStake: You may not lower your stake below the threshold while you have an existing submission.\""
                              },
                              "value": "Competition - decreaseStake: You may not lower your stake below the threshold while you have an existing submission."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5922bb7454cebecf0fba6361d962397ecfdb2e75a8ceebfcbf8fe9a9cd9662e2",
                                "typeString": "literal_string \"Competition - decreaseStake: You may not lower your stake below the threshold while you have an existing submission.\""
                              }
                            ],
                            "id": 408,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2909:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2909:174:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 417,
                        "nodeType": "ExpressionStatement",
                        "src": "2909:174:2"
                      },
                      {
                        "expression": {
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 418,
                                    "name": "_challenges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2511,
                                    "src": "3097:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                      "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                                    }
                                  },
                                  "id": 420,
                                  "indexExpression": {
                                    "id": 419,
                                    "name": "challengeNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 359,
                                    "src": "3109:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3097:28:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                                    "typeString": "struct CompetitionStorage.Challenge storage ref"
                                  }
                                },
                                "id": 421,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "submitterInfo",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2469,
                                "src": "3097:42:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                                  "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                                }
                              },
                              "id": 423,
                              "indexExpression": {
                                "id": 422,
                                "name": "staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 350,
                                "src": "3140:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3097:50:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Information_$2454_storage",
                                "typeString": "struct CompetitionStorage.Information storage ref"
                              }
                            },
                            "id": 424,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "staked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2439,
                            "src": "3097:57:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 425,
                              "name": "currentBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 384,
                              "src": "3157:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 426,
                              "name": "amountToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 352,
                              "src": "3170:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3157:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3097:84:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 429,
                        "nodeType": "ExpressionStatement",
                        "src": "3097:84:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 432,
                        "name": "_stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2506,
                        "src": "3202:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 434,
                      "indexExpression": {
                        "id": 433,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "3210:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3202:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 435,
                        "name": "currentBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 384,
                        "src": "3220:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 436,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "3233:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3220:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3202:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 439,
                  "nodeType": "ExpressionStatement",
                  "src": "3202:42:2"
                },
                {
                  "expression": {
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 440,
                      "name": "_currentTotalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2490,
                      "src": "3254:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 441,
                      "name": "amountToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "3277:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3254:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "3254:34:2"
                },
                {
                  "expression": {
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 444,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "3298:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 447,
                          "name": "staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 350,
                          "src": "3324:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 448,
                          "name": "amountToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 352,
                          "src": "3332:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 445,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2480,
                          "src": "3308:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IToken_$10212",
                            "typeString": "contract IToken"
                          }
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10120,
                        "src": "3308:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) external returns (bool)"
                        }
                      },
                      "id": 449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3308:36:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3298:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 451,
                  "nodeType": "ExpressionStatement",
                  "src": "3298:46:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 453,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "3375:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 454,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "3383:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 452,
                      "name": "StakeDecreased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9989,
                      "src": "3360:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3360:35:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 456,
                  "nodeType": "EmitStatement",
                  "src": "3355:40:2"
                }
              ]
            },
            "functionSelector": "1a73ba01",
            "id": 458,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseStake",
            "nameLocation": "2194:13:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 354,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2258:8:2"
            },
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 350,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "2216:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "2208:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2208:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 352,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "2232:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "2224:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 351,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2224:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2207:37:2"
            },
            "returnParameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 356,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "2285:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "2280:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2280:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2279:14:2"
            },
            "scope": 2430,
            "src": "2185:1217:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9524
            ],
            "body": {
              "id": 512,
              "nodeType": "Block",
              "src": "3525:407:2",
              "statements": [
                {
                  "assignments": [
                    467
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 467,
                      "mutability": "mutable",
                      "name": "currentBal",
                      "nameLocation": "3543:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 512,
                      "src": "3535:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 466,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3535:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 472,
                  "initialValue": {
                    "baseExpression": {
                      "id": 468,
                      "name": "_stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2506,
                      "src": "3556:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 471,
                    "indexExpression": {
                      "expression": {
                        "id": 469,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3564:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3564:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3556:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3535:40:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 474,
                          "name": "currentBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 467,
                          "src": "3593:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 475,
                          "name": "_stakeThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2484,
                          "src": "3607:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3593:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d207375626d69744e657750726564696374696f6e733a205374616b652069732062656c6f77207468726573686f6c642e",
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3624:63:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_368e8dd051adfee0e33535cf20b0408228457960ebcaa1295b4c7060b07588e0",
                          "typeString": "literal_string \"Competition - submitNewPredictions: Stake is below threshold.\""
                        },
                        "value": "Competition - submitNewPredictions: Stake is below threshold."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_368e8dd051adfee0e33535cf20b0408228457960ebcaa1295b4c7060b07588e0",
                          "typeString": "literal_string \"Competition - submitNewPredictions: Stake is below threshold.\""
                        }
                      ],
                      "id": 473,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3585:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3585:103:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 479,
                  "nodeType": "ExpressionStatement",
                  "src": "3585:103:2"
                },
                {
                  "expression": {
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 480,
                      "name": "challengeNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 464,
                      "src": "3698:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3742:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3734:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 482,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3734:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3734:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 486,
                          "name": "submissionHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 460,
                          "src": "3746:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 481,
                        "name": "_updateSubmission",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 634,
                        "src": "3716:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$_t_uint32_$",
                          "typeString": "function (bytes32,bytes32) returns (uint32)"
                        }
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3716:45:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3698:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "3698:63:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 493,
                            "name": "_challenges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2511,
                            "src": "3789:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                              "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                            }
                          },
                          "id": 495,
                          "indexExpression": {
                            "id": 494,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 464,
                            "src": "3801:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3789:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                            "typeString": "struct CompetitionStorage.Challenge storage ref"
                          }
                        },
                        "id": 496,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "submitters",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2476,
                        "src": "3789:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$6862_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 497,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3830:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3830:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_AddressSet_$6862_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 490,
                        "name": "EnumerableSet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7089,
                        "src": "3771:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EnumerableSet_$7089_$",
                          "typeString": "type(library EnumerableSet)"
                        }
                      },
                      "id": 492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6889,
                      "src": "3771:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$6862_storage_ptr_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3771:70:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 500,
                  "nodeType": "ExpressionStatement",
                  "src": "3771:70:2"
                },
                {
                  "expression": {
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 501,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "3851:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 503,
                            "indexExpression": {
                              "id": 502,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 464,
                              "src": "3863:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3851:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "submitterInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2469,
                          "src": "3851:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                            "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                          }
                        },
                        "id": 507,
                        "indexExpression": {
                          "expression": {
                            "id": 505,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3894:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3894:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3851:54:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Information_$2454_storage",
                          "typeString": "struct CompetitionStorage.Information storage ref"
                        }
                      },
                      "id": 508,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "staked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2439,
                      "src": "3851:61:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 509,
                      "name": "currentBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 467,
                      "src": "3915:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3851:74:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "3851:74:2"
                }
              ]
            },
            "functionSelector": "9f2492a2",
            "id": 513,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitNewPredictions",
            "nameLocation": "3417:20:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 462,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3475:8:2"
            },
            "parameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "submissionHash",
                  "nameLocation": "3446:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "3438:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3438:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3437:24:2"
            },
            "returnParameters": {
              "id": 465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 464,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "3504:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 513,
                  "src": "3497:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 463,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3497:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3496:24:2"
            },
            "scope": 2430,
            "src": "3408:524:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9534
            ],
            "body": {
              "id": 570,
              "nodeType": "Block",
              "src": "4081:433:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 524,
                          "name": "oldSubmissionHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 515,
                          "src": "4099:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4128:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4120:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 525,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4120:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4120:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "4099:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d207570646174655375626d697373696f6e3a204d7573742068617665207072652d6578697374696e67207375626d697373696f6e2e",
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4132:68:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fdade075d3124d768e00aee4685a35087919ca510b62848af4af242b59e7709d",
                          "typeString": "literal_string \"Competition - updateSubmission: Must have pre-existing submission.\""
                        },
                        "value": "Competition - updateSubmission: Must have pre-existing submission."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fdade075d3124d768e00aee4685a35087919ca510b62848af4af242b59e7709d",
                          "typeString": "literal_string \"Competition - updateSubmission: Must have pre-existing submission.\""
                        }
                      ],
                      "id": 523,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4091:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4091:110:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 532,
                  "nodeType": "ExpressionStatement",
                  "src": "4091:110:2"
                },
                {
                  "expression": {
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 533,
                      "name": "challengeNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "4211:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 535,
                          "name": "oldSubmissionHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 515,
                          "src": "4247:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 536,
                          "name": "newSubmissionHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 517,
                          "src": "4266:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 534,
                        "name": "_updateSubmission",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 634,
                        "src": "4229:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$_t_uint32_$",
                          "typeString": "function (bytes32,bytes32) returns (uint32)"
                        }
                      },
                      "id": 537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4229:55:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4211:73:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 539,
                  "nodeType": "ExpressionStatement",
                  "src": "4211:73:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 540,
                      "name": "newSubmissionHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 517,
                      "src": "4299:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4328:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4320:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 541,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4320:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4320:10:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4299:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 569,
                  "nodeType": "IfStatement",
                  "src": "4295:213:2",
                  "trueBody": {
                    "id": 568,
                    "nodeType": "Block",
                    "src": "4331:177:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 549,
                                  "name": "_challenges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2511,
                                  "src": "4366:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                    "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                                  }
                                },
                                "id": 551,
                                "indexExpression": {
                                  "id": 550,
                                  "name": "challengeNumber",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 521,
                                  "src": "4378:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4366:28:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                                  "typeString": "struct CompetitionStorage.Challenge storage ref"
                                }
                              },
                              "id": 552,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "submitters",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2476,
                              "src": "4366:39:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$6862_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            {
                              "expression": {
                                "id": 553,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4407:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4407:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_AddressSet_$6862_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 546,
                              "name": "EnumerableSet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7089,
                              "src": "4345:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_EnumerableSet_$7089_$",
                                "typeString": "type(library EnumerableSet)"
                              }
                            },
                            "id": 548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "remove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6916,
                            "src": "4345:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$6862_storage_ptr_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                            }
                          },
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4345:73:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 556,
                        "nodeType": "ExpressionStatement",
                        "src": "4345:73:2"
                      },
                      {
                        "expression": {
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 557,
                                    "name": "_challenges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2511,
                                    "src": "4432:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                      "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                                    }
                                  },
                                  "id": 559,
                                  "indexExpression": {
                                    "id": 558,
                                    "name": "challengeNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 521,
                                    "src": "4444:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4432:28:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                                    "typeString": "struct CompetitionStorage.Challenge storage ref"
                                  }
                                },
                                "id": 560,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "submitterInfo",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2469,
                                "src": "4432:42:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                                  "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                                }
                              },
                              "id": 563,
                              "indexExpression": {
                                "expression": {
                                  "id": 561,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4475:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4475:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4432:54:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Information_$2454_storage",
                                "typeString": "struct CompetitionStorage.Information storage ref"
                              }
                            },
                            "id": 564,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "staked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2439,
                            "src": "4432:61:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4496:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4432:65:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 567,
                        "nodeType": "ExpressionStatement",
                        "src": "4432:65:2"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f7fb373d",
            "id": 571,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateSubmission",
            "nameLocation": "3947:16:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 519,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4031:8:2"
            },
            "parameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 515,
                  "mutability": "mutable",
                  "name": "oldSubmissionHash",
                  "nameLocation": "3972:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 571,
                  "src": "3964:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 514,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3964:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 517,
                  "mutability": "mutable",
                  "name": "newSubmissionHash",
                  "nameLocation": "3999:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 571,
                  "src": "3991:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3991:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3963:54:2"
            },
            "returnParameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 521,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "4060:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 571,
                  "src": "4053:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4053:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4052:24:2"
            },
            "scope": 2430,
            "src": "3938:576:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 633,
              "nodeType": "Block",
              "src": "4654:679:2",
              "statements": [
                {
                  "expression": {
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 580,
                      "name": "challengeNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 578,
                      "src": "4664:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 581,
                      "name": "_challengeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2482,
                      "src": "4682:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4664:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 583,
                  "nodeType": "ExpressionStatement",
                  "src": "4664:35:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 585,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "4717:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 587,
                            "indexExpression": {
                              "id": 586,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 578,
                              "src": "4729:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4717:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 588,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2464,
                          "src": "4717:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4755:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4717:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d207570646174655375626d697373696f6e3a204e6f7420617661696c61626c6520666f72207375626d697373696f6e732e",
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4758:64:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ef9dd591605be04ba5d12facfecea7841dcf0b88b1ecbb4b08a503ffced2caa",
                          "typeString": "literal_string \"Competition - updateSubmission: Not available for submissions.\""
                        },
                        "value": "Competition - updateSubmission: Not available for submissions."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ef9dd591605be04ba5d12facfecea7841dcf0b88b1ecbb4b08a503ffced2caa",
                          "typeString": "literal_string \"Competition - updateSubmission: Not available for submissions.\""
                        }
                      ],
                      "id": 584,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4709:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4709:114:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 593,
                  "nodeType": "ExpressionStatement",
                  "src": "4709:114:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 595,
                          "name": "oldSubmissionHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 573,
                          "src": "4841:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 596,
                          "name": "newSubmissionHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 575,
                          "src": "4862:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "4841:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d207570646174655375626d697373696f6e3a2043616e6e6f74207570646174652077697468207468652073616d652068617368206173206265666f72652e",
                        "id": 598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4881:77:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e979c18d10a4abe34e0de6b0de14f9326104ad6f70d5f75db4a4178cf1c681be",
                          "typeString": "literal_string \"Competition - updateSubmission: Cannot update with the same hash as before.\""
                        },
                        "value": "Competition - updateSubmission: Cannot update with the same hash as before."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e979c18d10a4abe34e0de6b0de14f9326104ad6f70d5f75db4a4178cf1c681be",
                          "typeString": "literal_string \"Competition - updateSubmission: Cannot update with the same hash as before.\""
                        }
                      ],
                      "id": 594,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4833:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4833:126:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 600,
                  "nodeType": "ExpressionStatement",
                  "src": "4833:126:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 602,
                                  "name": "_challenges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2511,
                                  "src": "4977:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                    "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                                  }
                                },
                                "id": 604,
                                "indexExpression": {
                                  "id": 603,
                                  "name": "challengeNumber",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 578,
                                  "src": "4989:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4977:28:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                                  "typeString": "struct CompetitionStorage.Challenge storage ref"
                                }
                              },
                              "id": 605,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "submitterInfo",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2469,
                              "src": "4977:42:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                                "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                              }
                            },
                            "id": 608,
                            "indexExpression": {
                              "expression": {
                                "id": 606,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5020:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5020:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4977:54:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Information_$2454_storage",
                              "typeString": "struct CompetitionStorage.Information storage ref"
                            }
                          },
                          "id": 609,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "submission",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2437,
                          "src": "4977:65:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 610,
                          "name": "oldSubmissionHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 573,
                          "src": "5046:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "4977:86:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d207570646174655375626d697373696f6e3a20436c61736820696e206578697374696e67207375626d697373696f6e20686173682e",
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5081:68:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f37b2edb3b9a813d49e781e426698a691c6e307e5da204fc7f4d9d27c209131",
                          "typeString": "literal_string \"Competition - updateSubmission: Clash in existing submission hash.\""
                        },
                        "value": "Competition - updateSubmission: Clash in existing submission hash."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f37b2edb3b9a813d49e781e426698a691c6e307e5da204fc7f4d9d27c209131",
                          "typeString": "literal_string \"Competition - updateSubmission: Clash in existing submission hash.\""
                        }
                      ],
                      "id": 601,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4969:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4969:181:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 614,
                  "nodeType": "ExpressionStatement",
                  "src": "4969:181:2"
                },
                {
                  "expression": {
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 615,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "5160:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 617,
                            "indexExpression": {
                              "id": 616,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 578,
                              "src": "5172:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5160:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 618,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "submitterInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2469,
                          "src": "5160:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                            "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                          }
                        },
                        "id": 621,
                        "indexExpression": {
                          "expression": {
                            "id": 619,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5203:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5203:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5160:54:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Information_$2454_storage",
                          "typeString": "struct CompetitionStorage.Information storage ref"
                        }
                      },
                      "id": 622,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "submission",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2437,
                      "src": "5160:65:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 623,
                      "name": "newSubmissionHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 575,
                      "src": "5228:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5160:85:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 625,
                  "nodeType": "ExpressionStatement",
                  "src": "5160:85:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 627,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "5279:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "expression": {
                          "id": 628,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5296:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5296:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 630,
                        "name": "newSubmissionHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 575,
                        "src": "5308:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 626,
                      "name": "SubmissionUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9997,
                      "src": "5261:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint32,address,bytes32)"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5261:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 632,
                  "nodeType": "EmitStatement",
                  "src": "5256:70:2"
                }
              ]
            },
            "id": 634,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateSubmission",
            "nameLocation": "4529:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 573,
                  "mutability": "mutable",
                  "name": "oldSubmissionHash",
                  "nameLocation": "4555:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "4547:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 572,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4547:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 575,
                  "mutability": "mutable",
                  "name": "newSubmissionHash",
                  "nameLocation": "4582:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "4574:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 574,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4574:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4546:54:2"
            },
            "returnParameters": {
              "id": 579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 578,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "4633:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 634,
                  "src": "4626:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 577,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4626:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4625:24:2"
            },
            "scope": 2430,
            "src": "4520:813:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              9542
            ],
            "body": {
              "id": 656,
              "nodeType": "Block",
              "src": "5497:94:2",
              "statements": [
                {
                  "expression": {
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 645,
                      "name": "_message",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2502,
                      "src": "5507:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 646,
                      "name": "newMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 637,
                      "src": "5518:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "5507:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 648,
                  "nodeType": "ExpressionStatement",
                  "src": "5507:21:2"
                },
                {
                  "expression": {
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 649,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 643,
                      "src": "5538:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5548:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5538:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 652,
                  "nodeType": "ExpressionStatement",
                  "src": "5538:14:2"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 653,
                      "name": "MessageUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9999,
                      "src": "5568:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5568:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 655,
                  "nodeType": "EmitStatement",
                  "src": "5563:21:2"
                }
              ]
            },
            "documentation": {
              "id": 635,
              "nodeType": "StructuredDocumentation",
              "src": "5339:39:2",
              "text": "ORGANIZER WRITE METHODS*"
            },
            "functionSelector": "1923be24",
            "id": 657,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 641,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 640,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "5456:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "5456:9:2"
              }
            ],
            "name": "updateMessage",
            "nameLocation": "5392:13:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 639,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5447:8:2"
            },
            "parameters": {
              "id": 638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 637,
                  "mutability": "mutable",
                  "name": "newMessage",
                  "nameLocation": "5422:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "5406:26:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 636,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5406:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5405:28:2"
            },
            "returnParameters": {
              "id": 644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 643,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5484:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "5479:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 642,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5479:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5478:14:2"
            },
            "scope": 2430,
            "src": "5383:208:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9554
            ],
            "body": {
              "id": 679,
              "nodeType": "Block",
              "src": "5743:78:2",
              "statements": [
                {
                  "expression": {
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 671,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 669,
                      "src": "5753:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 673,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 659,
                          "src": "5780:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 674,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 661,
                          "src": "5797:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 675,
                          "name": "timestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 663,
                          "src": "5804:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 672,
                        "name": "_updateDeadlines",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 705,
                        "src": "5763:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint32,uint256,uint256) returns (bool)"
                        }
                      },
                      "id": 676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5763:51:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5753:61:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "5753:61:2"
                }
              ]
            },
            "functionSelector": "2d071f1a",
            "id": 680,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 667,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 666,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "5702:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "5702:9:2"
              }
            ],
            "name": "updateDeadlines",
            "nameLocation": "5606:15:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 665,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5693:8:2"
            },
            "parameters": {
              "id": 664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 659,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "5629:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 680,
                  "src": "5622:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5622:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 661,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "5654:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 680,
                  "src": "5646:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5646:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 663,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "5669:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 680,
                  "src": "5661:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5661:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5621:58:2"
            },
            "returnParameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 669,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5730:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 680,
                  "src": "5725:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5725:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5724:14:2"
            },
            "scope": 2430,
            "src": "5597:224:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 704,
              "nodeType": "Block",
              "src": "5954:98:2",
              "statements": [
                {
                  "expression": {
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 691,
                            "name": "_challenges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2511,
                            "src": "5964:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                              "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                            }
                          },
                          "id": 693,
                          "indexExpression": {
                            "id": 692,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 682,
                            "src": "5976:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5964:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                            "typeString": "struct CompetitionStorage.Challenge storage ref"
                          }
                        },
                        "id": 694,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deadlines",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2473,
                        "src": "5964:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 696,
                      "indexExpression": {
                        "id": 695,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 684,
                        "src": "6003:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5964:45:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 697,
                      "name": "timestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 686,
                      "src": "6012:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5964:57:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 699,
                  "nodeType": "ExpressionStatement",
                  "src": "5964:57:2"
                },
                {
                  "expression": {
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 700,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 689,
                      "src": "6031:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6041:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6031:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 703,
                  "nodeType": "ExpressionStatement",
                  "src": "6031:14:2"
                }
              ]
            },
            "id": 705,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateDeadlines",
            "nameLocation": "5836:16:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 682,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "5860:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "5853:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 681,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5853:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 684,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "5885:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "5877:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 683,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5877:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 686,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "5900:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "5892:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 685,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5892:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5852:58:2"
            },
            "returnParameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 689,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5941:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "5936:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 688,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5936:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5935:14:2"
            },
            "scope": 2430,
            "src": "5827:225:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              9562
            ],
            "body": {
              "id": 727,
              "nodeType": "Block",
              "src": "6175:126:2",
              "statements": [
                {
                  "expression": {
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 715,
                      "name": "_rewardsThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2488,
                      "src": "6185:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 716,
                      "name": "newThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 707,
                      "src": "6205:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6185:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 718,
                  "nodeType": "ExpressionStatement",
                  "src": "6185:32:2"
                },
                {
                  "expression": {
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 719,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 713,
                      "src": "6227:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6237:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6227:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 722,
                  "nodeType": "ExpressionStatement",
                  "src": "6227:14:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 724,
                        "name": "newThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 707,
                        "src": "6281:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 723,
                      "name": "RewardsThresholdUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10003,
                      "src": "6257:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6257:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 726,
                  "nodeType": "EmitStatement",
                  "src": "6252:42:2"
                }
              ]
            },
            "functionSelector": "572c686a",
            "id": 728,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 711,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 710,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "6134:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "6134:9:2"
              }
            ],
            "name": "updateRewardsThreshold",
            "nameLocation": "6067:22:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 709,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6125:8:2"
            },
            "parameters": {
              "id": 708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 707,
                  "mutability": "mutable",
                  "name": "newThreshold",
                  "nameLocation": "6098:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "6090:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 706,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6090:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6089:22:2"
            },
            "returnParameters": {
              "id": 714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 713,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "6162:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "6157:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 712,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6157:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6156:14:2"
            },
            "scope": 2430,
            "src": "6058:243:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9570
            ],
            "body": {
              "id": 750,
              "nodeType": "Block",
              "src": "6427:132:2",
              "statements": [
                {
                  "expression": {
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 738,
                      "name": "_stakeThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2484,
                      "src": "6437:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 739,
                      "name": "newStakeThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 730,
                      "src": "6455:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6437:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 741,
                  "nodeType": "ExpressionStatement",
                  "src": "6437:35:2"
                },
                {
                  "expression": {
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 742,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 736,
                      "src": "6482:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6492:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6482:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 745,
                  "nodeType": "ExpressionStatement",
                  "src": "6482:14:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 747,
                        "name": "newStakeThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "6534:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 746,
                      "name": "StakeThresholdUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10007,
                      "src": "6512:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6512:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 749,
                  "nodeType": "EmitStatement",
                  "src": "6507:45:2"
                }
              ]
            },
            "functionSelector": "5ef53329",
            "id": 751,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 734,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 733,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "6386:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "6386:9:2"
              }
            ],
            "name": "updateStakeThreshold",
            "nameLocation": "6316:20:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 732,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6377:8:2"
            },
            "parameters": {
              "id": 731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 730,
                  "mutability": "mutable",
                  "name": "newStakeThreshold",
                  "nameLocation": "6345:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 751,
                  "src": "6337:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6337:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6336:27:2"
            },
            "returnParameters": {
              "id": 737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 736,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "6414:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 751,
                  "src": "6409:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 735,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6409:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6408:14:2"
            },
            "scope": 2430,
            "src": "6307:252:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9578
            ],
            "body": {
              "id": 773,
              "nodeType": "Block",
              "src": "6698:158:2",
              "statements": [
                {
                  "expression": {
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 761,
                      "name": "_challengeRewardsPercentageInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2498,
                      "src": "6708:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 762,
                      "name": "newPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 753,
                      "src": "6743:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6708:48:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 764,
                  "nodeType": "ExpressionStatement",
                  "src": "6708:48:2"
                },
                {
                  "expression": {
                    "id": 767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 765,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 759,
                      "src": "6766:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6776:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6766:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 768,
                  "nodeType": "ExpressionStatement",
                  "src": "6766:14:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 770,
                        "name": "newPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 753,
                        "src": "6835:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 769,
                      "name": "ChallengeRewardsPercentageInWeiUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10011,
                      "src": "6796:38:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6796:53:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 772,
                  "nodeType": "EmitStatement",
                  "src": "6791:58:2"
                }
              ]
            },
            "functionSelector": "7bfc90b2",
            "id": 774,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 757,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 756,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "6657:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "6657:9:2"
              }
            ],
            "name": "updateChallengeRewardsPercentageInWei",
            "nameLocation": "6574:37:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 755,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6648:8:2"
            },
            "parameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 753,
                  "mutability": "mutable",
                  "name": "newPercentage",
                  "nameLocation": "6620:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "6612:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6612:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6611:23:2"
            },
            "returnParameters": {
              "id": 760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 759,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "6685:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 774,
                  "src": "6680:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 758,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6680:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6679:14:2"
            },
            "scope": 2430,
            "src": "6565:291:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9586
            ],
            "body": {
              "id": 796,
              "nodeType": "Block",
              "src": "6996:160:2",
              "statements": [
                {
                  "expression": {
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 784,
                      "name": "_tournamentRewardsPercentageInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2500,
                      "src": "7006:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 785,
                      "name": "newPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 776,
                      "src": "7042:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7006:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 787,
                  "nodeType": "ExpressionStatement",
                  "src": "7006:49:2"
                },
                {
                  "expression": {
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 788,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 782,
                      "src": "7065:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7075:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7065:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 791,
                  "nodeType": "ExpressionStatement",
                  "src": "7065:14:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 793,
                        "name": "newPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 776,
                        "src": "7135:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 792,
                      "name": "TournamentRewardsPercentageInWeiUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10015,
                      "src": "7095:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7095:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 795,
                  "nodeType": "EmitStatement",
                  "src": "7090:59:2"
                }
              ]
            },
            "functionSelector": "5e35d498",
            "id": 797,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 780,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 779,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "6955:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "6955:9:2"
              }
            ],
            "name": "updateTournamentRewardsPercentageInWei",
            "nameLocation": "6871:38:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 778,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6946:8:2"
            },
            "parameters": {
              "id": 777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 776,
                  "mutability": "mutable",
                  "name": "newPercentage",
                  "nameLocation": "6918:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 797,
                  "src": "6910:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6910:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6909:23:2"
            },
            "returnParameters": {
              "id": 783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "6983:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 797,
                  "src": "6978:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6978:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6977:14:2"
            },
            "scope": 2430,
            "src": "6862:294:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9596
            ],
            "body": {
              "id": 824,
              "nodeType": "Block",
              "src": "7296:138:2",
              "statements": [
                {
                  "expression": {
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 809,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2511,
                          "src": "7306:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                            "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                          }
                        },
                        "id": 811,
                        "indexExpression": {
                          "id": 810,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 799,
                          "src": "7318:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7306:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                          "typeString": "struct CompetitionStorage.Challenge storage ref"
                        }
                      },
                      "id": 812,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "privateKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2462,
                      "src": "7306:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 813,
                      "name": "newKeyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 801,
                      "src": "7348:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "7306:52:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 815,
                  "nodeType": "ExpressionStatement",
                  "src": "7306:52:2"
                },
                {
                  "expression": {
                    "id": 818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 816,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 807,
                      "src": "7368:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7378:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7368:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 819,
                  "nodeType": "ExpressionStatement",
                  "src": "7368:14:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 821,
                        "name": "newKeyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 801,
                        "src": "7416:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 820,
                      "name": "PrivateKeyUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10019,
                      "src": "7398:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7398:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 823,
                  "nodeType": "EmitStatement",
                  "src": "7393:34:2"
                }
              ]
            },
            "functionSelector": "02881b52",
            "id": 825,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 805,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 804,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "7255:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7255:9:2"
              }
            ],
            "name": "updatePrivateKey",
            "nameLocation": "7172:16:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 803,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7246:8:2"
            },
            "parameters": {
              "id": 802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 799,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "7196:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 825,
                  "src": "7189:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7189:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 801,
                  "mutability": "mutable",
                  "name": "newKeyHash",
                  "nameLocation": "7221:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 825,
                  "src": "7213:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7213:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7188:44:2"
            },
            "returnParameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 807,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "7283:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 825,
                  "src": "7278:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7278:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7277:14:2"
            },
            "scope": 2430,
            "src": "7163:271:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9610
            ],
            "body": {
              "id": 940,
              "nodeType": "Block",
              "src": "7628:1076:2",
              "statements": [
                {
                  "assignments": [
                    842
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 842,
                      "mutability": "mutable",
                      "name": "challengeNumber",
                      "nameLocation": "7645:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 940,
                      "src": "7638:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 841,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7638:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 844,
                  "initialValue": {
                    "id": 843,
                    "name": "_challengeCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2482,
                    "src": "7663:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7638:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 846,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "7698:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 848,
                            "indexExpression": {
                              "id": 847,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 842,
                              "src": "7710:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7698:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 849,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2464,
                          "src": "7698:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7736:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "7698:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d206f70656e4368616c6c656e67653a2050726576696f757320706861736520697320696e636f6d706c6574652e",
                        "id": 852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7739:60:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ecf727e850e1fe8884970aa94992c3738daed8644c0c8236ee230bfddd72ae87",
                          "typeString": "literal_string \"Competition - openChallenge: Previous phase is incomplete.\""
                        },
                        "value": "Competition - openChallenge: Previous phase is incomplete."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ecf727e850e1fe8884970aa94992c3738daed8644c0c8236ee230bfddd72ae87",
                          "typeString": "literal_string \"Competition - openChallenge: Previous phase is incomplete.\""
                        }
                      ],
                      "id": 845,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7690:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7690:110:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 854,
                  "nodeType": "ExpressionStatement",
                  "src": "7690:110:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 856,
                          "name": "_competitionPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2486,
                          "src": "7818:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 857,
                          "name": "_rewardsThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2488,
                          "src": "7838:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7818:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d70657469746f6e202d206f70656e4368616c6c656e67653a204e6f7420656e6f75676820726577617264732e",
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7857:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c7889d239271913f85e348a345bb2aae8825d12fb0c2cf68aaf99e43ca07db0",
                          "typeString": "literal_string \"Competiton - openChallenge: Not enough rewards.\""
                        },
                        "value": "Competiton - openChallenge: Not enough rewards."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c7889d239271913f85e348a345bb2aae8825d12fb0c2cf68aaf99e43ca07db0",
                          "typeString": "literal_string \"Competiton - openChallenge: Not enough rewards.\""
                        }
                      ],
                      "id": 855,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7810:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7810:97:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 861,
                  "nodeType": "ExpressionStatement",
                  "src": "7810:97:2"
                },
                {
                  "expression": {
                    "id": 863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7918:17:2",
                    "subExpression": {
                      "id": 862,
                      "name": "challengeNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "7918:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 864,
                  "nodeType": "ExpressionStatement",
                  "src": "7918:17:2"
                },
                {
                  "expression": {
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 865,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2511,
                          "src": "7946:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                            "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                          }
                        },
                        "id": 867,
                        "indexExpression": {
                          "id": 866,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 842,
                          "src": "7958:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7946:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                          "typeString": "struct CompetitionStorage.Challenge storage ref"
                        }
                      },
                      "id": 868,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "phase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2464,
                      "src": "7946:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7983:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7946:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 871,
                  "nodeType": "ExpressionStatement",
                  "src": "7946:38:2"
                },
                {
                  "expression": {
                    "id": 874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 872,
                      "name": "_challengeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2482,
                      "src": "7994:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 873,
                      "name": "challengeNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 842,
                      "src": "8014:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "7994:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 875,
                  "nodeType": "ExpressionStatement",
                  "src": "7994:35:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 877,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "8055:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8080:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8072:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 878,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "8072:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8072:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 882,
                        "name": "datasetHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 827,
                        "src": "8084:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 876,
                      "name": "_updateDataset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1077,
                      "src": "8040:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (uint32,bytes32,bytes32) returns (bool)"
                      }
                    },
                    "id": 883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8040:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 884,
                  "nodeType": "ExpressionStatement",
                  "src": "8040:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 886,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "8117:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8142:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8134:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 887,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "8134:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8134:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 891,
                        "name": "keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 829,
                        "src": "8146:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 885,
                      "name": "_updateKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1123,
                      "src": "8106:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (uint32,bytes32,bytes32) returns (bool)"
                      }
                    },
                    "id": 892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8106:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 893,
                  "nodeType": "ExpressionStatement",
                  "src": "8106:48:2"
                },
                {
                  "expression": {
                    "id": 901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 894,
                      "name": "_currentChallengeRewardsBudget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2494,
                      "src": "8165:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 900,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 895,
                          "name": "_competitionPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2486,
                          "src": "8198:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 896,
                          "name": "_challengeRewardsPercentageInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2498,
                          "src": "8217:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8198:51:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "components": [
                          {
                            "hexValue": "31653138",
                            "id": 898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8251:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          }
                        ],
                        "id": 899,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8250:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "8198:58:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8165:91:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 902,
                  "nodeType": "ExpressionStatement",
                  "src": "8165:91:2"
                },
                {
                  "expression": {
                    "id": 910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 903,
                      "name": "_currentTournamentRewardsBudget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2496,
                      "src": "8266:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 904,
                          "name": "_competitionPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2486,
                          "src": "8300:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 905,
                          "name": "_tournamentRewardsPercentageInWei",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2500,
                          "src": "8319:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8300:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "components": [
                          {
                            "hexValue": "31653138",
                            "id": 907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8354:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          }
                        ],
                        "id": 908,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8353:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "8300:59:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8266:93:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 911,
                  "nodeType": "ExpressionStatement",
                  "src": "8266:93:2"
                },
                {
                  "expression": {
                    "id": 918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 912,
                      "name": "_currentStakingRewardsBudget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2492,
                      "src": "8369:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 913,
                          "name": "_competitionPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2486,
                          "src": "8400:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 914,
                          "name": "_currentChallengeRewardsBudget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2494,
                          "src": "8419:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8400:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 916,
                        "name": "_currentTournamentRewardsBudget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2496,
                        "src": "8452:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8400:83:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8369:114:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 919,
                  "nodeType": "ExpressionStatement",
                  "src": "8369:114:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 921,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "8511:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8528:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 923,
                        "name": "submissionCloseDeadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "8531:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 920,
                      "name": "_updateDeadlines",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 705,
                      "src": "8494:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint32,uint256,uint256) returns (bool)"
                      }
                    },
                    "id": 924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8494:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 925,
                  "nodeType": "ExpressionStatement",
                  "src": "8494:61:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 927,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "8582:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8599:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 929,
                        "name": "nextChallengeDeadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 833,
                        "src": "8602:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 926,
                      "name": "_updateDeadlines",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 705,
                      "src": "8565:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint32,uint256,uint256) returns (bool)"
                      }
                    },
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8565:59:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 931,
                  "nodeType": "ExpressionStatement",
                  "src": "8565:59:2"
                },
                {
                  "expression": {
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 932,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 839,
                      "src": "8635:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8645:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8635:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 935,
                  "nodeType": "ExpressionStatement",
                  "src": "8635:14:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 937,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 842,
                        "src": "8681:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 936,
                      "name": "ChallengeOpened",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10023,
                      "src": "8665:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32)"
                      }
                    },
                    "id": 938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8665:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 939,
                  "nodeType": "EmitStatement",
                  "src": "8660:37:2"
                }
              ]
            },
            "functionSelector": "dc1e207c",
            "id": 941,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 837,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 836,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "7587:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7587:9:2"
              }
            ],
            "name": "openChallenge",
            "nameLocation": "7449:13:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 835,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7578:8:2"
            },
            "parameters": {
              "id": 834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 827,
                  "mutability": "mutable",
                  "name": "datasetHash",
                  "nameLocation": "7471:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "7463:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7463:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 829,
                  "mutability": "mutable",
                  "name": "keyHash",
                  "nameLocation": "7492:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "7484:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7484:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 831,
                  "mutability": "mutable",
                  "name": "submissionCloseDeadline",
                  "nameLocation": "7509:23:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "7501:31:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7501:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 833,
                  "mutability": "mutable",
                  "name": "nextChallengeDeadline",
                  "nameLocation": "7542:21:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "7534:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7534:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7462:102:2"
            },
            "returnParameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 839,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "7615:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "7610:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7610:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7609:14:2"
            },
            "scope": 2430,
            "src": "7440:1264:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9620
            ],
            "body": {
              "id": 985,
              "nodeType": "Block",
              "src": "8844:364:2",
              "statements": [
                {
                  "assignments": [
                    954
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 954,
                      "mutability": "mutable",
                      "name": "challengeNumber",
                      "nameLocation": "8861:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 985,
                      "src": "8854:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 953,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8854:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 956,
                  "initialValue": {
                    "id": 955,
                    "name": "_challengeCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2482,
                    "src": "8879:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8854:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 958,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "8914:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 960,
                            "indexExpression": {
                              "id": 959,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 954,
                              "src": "8926:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8914:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 961,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2464,
                          "src": "8914:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8952:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "8914:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20757064617465446174617365743a204368616c6c656e676520697320636c6f7365642e",
                        "id": 964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8955:51:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_edc17a376d2d94db38c0b908b7455791a72d11a0683b43c2059983e390862d81",
                          "typeString": "literal_string \"Competition - updateDataset: Challenge is closed.\""
                        },
                        "value": "Competition - updateDataset: Challenge is closed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_edc17a376d2d94db38c0b908b7455791a72d11a0683b43c2059983e390862d81",
                          "typeString": "literal_string \"Competition - updateDataset: Challenge is closed.\""
                        }
                      ],
                      "id": 957,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8906:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8906:101:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 966,
                  "nodeType": "ExpressionStatement",
                  "src": "8906:101:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 968,
                          "name": "oldDatasetHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 943,
                          "src": "9025:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 971,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9051:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9043:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 969,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9043:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9043:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "9025:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20757064617465446174617365743a204d7573742068617665207072652d6578697374696e6720646174617365742e",
                        "id": 974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9055:62:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac52b622e90dffc21e309e01ce0b5ed2e86ba5975b97b3509c615f2023ff13ae",
                          "typeString": "literal_string \"Competition - updateDataset: Must have pre-existing dataset.\""
                        },
                        "value": "Competition - updateDataset: Must have pre-existing dataset."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac52b622e90dffc21e309e01ce0b5ed2e86ba5975b97b3509c615f2023ff13ae",
                          "typeString": "literal_string \"Competition - updateDataset: Must have pre-existing dataset.\""
                        }
                      ],
                      "id": 967,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9017:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9017:101:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 976,
                  "nodeType": "ExpressionStatement",
                  "src": "9017:101:2"
                },
                {
                  "expression": {
                    "id": 983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 977,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "9128:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 979,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 954,
                          "src": "9153:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 980,
                          "name": "oldDatasetHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 943,
                          "src": "9170:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 981,
                          "name": "newDatasetHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 945,
                          "src": "9186:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 978,
                        "name": "_updateDataset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1077,
                        "src": "9138:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                          "typeString": "function (uint32,bytes32,bytes32) returns (bool)"
                        }
                      },
                      "id": 982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9138:63:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9128:73:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 984,
                  "nodeType": "ExpressionStatement",
                  "src": "9128:73:2"
                }
              ]
            },
            "functionSelector": "3f230915",
            "id": 986,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 949,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 948,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "8803:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "8803:9:2"
              }
            ],
            "name": "updateDataset",
            "nameLocation": "8719:13:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 947,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8794:8:2"
            },
            "parameters": {
              "id": 946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 943,
                  "mutability": "mutable",
                  "name": "oldDatasetHash",
                  "nameLocation": "8741:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 986,
                  "src": "8733:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8733:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 945,
                  "mutability": "mutable",
                  "name": "newDatasetHash",
                  "nameLocation": "8765:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 986,
                  "src": "8757:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 944,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8757:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8732:48:2"
            },
            "returnParameters": {
              "id": 952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 951,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "8831:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 986,
                  "src": "8826:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 950,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8826:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8825:14:2"
            },
            "scope": 2430,
            "src": "8710:498:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9630
            ],
            "body": {
              "id": 1030,
              "nodeType": "Block",
              "src": "9336:336:2",
              "statements": [
                {
                  "assignments": [
                    999
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 999,
                      "mutability": "mutable",
                      "name": "challengeNumber",
                      "nameLocation": "9353:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1030,
                      "src": "9346:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 998,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9346:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1001,
                  "initialValue": {
                    "id": 1000,
                    "name": "_challengeCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2482,
                    "src": "9371:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9346:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1003,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "9406:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 1005,
                            "indexExpression": {
                              "id": 1004,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 999,
                              "src": "9418:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9406:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2464,
                          "src": "9406:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9444:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9406:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d207570646174654b65793a204368616c6c656e676520697320636c6f7365642e",
                        "id": 1009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9447:47:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3608fbede83be93ae2dd7cb850bb376af48e3767d277fc82dff053783fc0fa6e",
                          "typeString": "literal_string \"Competition - updateKey: Challenge is closed.\""
                        },
                        "value": "Competition - updateKey: Challenge is closed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3608fbede83be93ae2dd7cb850bb376af48e3767d277fc82dff053783fc0fa6e",
                          "typeString": "literal_string \"Competition - updateKey: Challenge is closed.\""
                        }
                      ],
                      "id": 1002,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9398:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9398:97:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1011,
                  "nodeType": "ExpressionStatement",
                  "src": "9398:97:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1013,
                          "name": "oldKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 988,
                          "src": "9513:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1016,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9535:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9527:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 1014,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9527:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9527:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "9513:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d207570646174654b65793a204d7573742068617665207072652d6578697374696e67206b65792e",
                        "id": 1019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9539:54:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee6cd6eb02e3aa3a6c1b16813c13bd677546bbea83bdffef199d40297490f1ca",
                          "typeString": "literal_string \"Competition - updateKey: Must have pre-existing key.\""
                        },
                        "value": "Competition - updateKey: Must have pre-existing key."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee6cd6eb02e3aa3a6c1b16813c13bd677546bbea83bdffef199d40297490f1ca",
                          "typeString": "literal_string \"Competition - updateKey: Must have pre-existing key.\""
                        }
                      ],
                      "id": 1012,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9505:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9505:89:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1021,
                  "nodeType": "ExpressionStatement",
                  "src": "9505:89:2"
                },
                {
                  "expression": {
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1022,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 996,
                      "src": "9604:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1024,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 999,
                          "src": "9625:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 1025,
                          "name": "oldKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 988,
                          "src": "9642:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 1026,
                          "name": "newKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 990,
                          "src": "9654:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1023,
                        "name": "_updateKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1123,
                        "src": "9614:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                          "typeString": "function (uint32,bytes32,bytes32) returns (bool)"
                        }
                      },
                      "id": 1027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9614:51:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9604:61:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1029,
                  "nodeType": "ExpressionStatement",
                  "src": "9604:61:2"
                }
              ]
            },
            "functionSelector": "73af6745",
            "id": 1031,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 994,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 993,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "9295:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "9295:9:2"
              }
            ],
            "name": "updateKey",
            "nameLocation": "9223:9:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 992,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9286:8:2"
            },
            "parameters": {
              "id": 991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 988,
                  "mutability": "mutable",
                  "name": "oldKeyHash",
                  "nameLocation": "9241:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1031,
                  "src": "9233:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 987,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9233:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 990,
                  "mutability": "mutable",
                  "name": "newKeyHash",
                  "nameLocation": "9261:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1031,
                  "src": "9253:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 989,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9253:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9232:40:2"
            },
            "returnParameters": {
              "id": 997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 996,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "9323:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1031,
                  "src": "9318:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 995,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9318:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9317:14:2"
            },
            "scope": 2430,
            "src": "9214:458:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1076,
              "nodeType": "Block",
              "src": "9817:438:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1043,
                          "name": "oldDatasetHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1035,
                          "src": "9835:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1044,
                          "name": "newDatasetHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1037,
                          "src": "9853:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "9835:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20757064617465446174617365743a2043616e6e6f74207570646174652077697468207468652073616d652068617368206173206265666f72652e",
                        "id": 1046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9869:74:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f67a091b48dbc1f35afb8d1167ae58c8d395c23ca36a11f0b1e5b34166209f3",
                          "typeString": "literal_string \"Competition - updateDataset: Cannot update with the same hash as before.\""
                        },
                        "value": "Competition - updateDataset: Cannot update with the same hash as before."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f67a091b48dbc1f35afb8d1167ae58c8d395c23ca36a11f0b1e5b34166209f3",
                          "typeString": "literal_string \"Competition - updateDataset: Cannot update with the same hash as before.\""
                        }
                      ],
                      "id": 1042,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9827:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9827:117:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "9827:117:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1050,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "9962:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 1052,
                            "indexExpression": {
                              "id": 1051,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1033,
                              "src": "9974:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9962:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 1053,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dataset",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2456,
                          "src": "9962:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1054,
                          "name": "oldDatasetHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1035,
                          "src": "10002:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "9962:54:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20757064617465446174617365743a20496e636f7272656374206f6c642064617461736574207265666572656e63652e",
                        "id": 1056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10018:63:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6e394bed57cd000ee2e800320c9985c42fe315cc470d6e04ed45f81e4a5006f",
                          "typeString": "literal_string \"Competition - updateDataset: Incorrect old dataset reference.\""
                        },
                        "value": "Competition - updateDataset: Incorrect old dataset reference."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6e394bed57cd000ee2e800320c9985c42fe315cc470d6e04ed45f81e4a5006f",
                          "typeString": "literal_string \"Competition - updateDataset: Incorrect old dataset reference.\""
                        }
                      ],
                      "id": 1049,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9954:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9954:128:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1058,
                  "nodeType": "ExpressionStatement",
                  "src": "9954:128:2"
                },
                {
                  "expression": {
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1059,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2511,
                          "src": "10092:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                            "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                          }
                        },
                        "id": 1061,
                        "indexExpression": {
                          "id": 1060,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1033,
                          "src": "10104:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10092:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                          "typeString": "struct CompetitionStorage.Challenge storage ref"
                        }
                      },
                      "id": 1062,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dataset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2456,
                      "src": "10092:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1063,
                      "name": "newDatasetHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1037,
                      "src": "10131:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "10092:53:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1065,
                  "nodeType": "ExpressionStatement",
                  "src": "10092:53:2"
                },
                {
                  "expression": {
                    "id": 1068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1066,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1040,
                      "src": "10155:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10165:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "10155:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1069,
                  "nodeType": "ExpressionStatement",
                  "src": "10155:14:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1071,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "10200:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1072,
                        "name": "oldDatasetHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1035,
                        "src": "10217:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1073,
                        "name": "newDatasetHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1037,
                        "src": "10233:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1070,
                      "name": "DatasetUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10031,
                      "src": "10185:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint32,bytes32,bytes32)"
                      }
                    },
                    "id": 1074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10185:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1075,
                  "nodeType": "EmitStatement",
                  "src": "10180:68:2"
                }
              ]
            },
            "id": 1077,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateDataset",
            "nameLocation": "9687:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1033,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "9709:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1077,
                  "src": "9702:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1032,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9702:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1035,
                  "mutability": "mutable",
                  "name": "oldDatasetHash",
                  "nameLocation": "9734:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1077,
                  "src": "9726:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1034,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9726:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1037,
                  "mutability": "mutable",
                  "name": "newDatasetHash",
                  "nameLocation": "9758:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1077,
                  "src": "9750:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1036,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9750:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9701:72:2"
            },
            "returnParameters": {
              "id": 1041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1040,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "9804:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1077,
                  "src": "9799:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1039,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9799:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9798:14:2"
            },
            "scope": 2430,
            "src": "9678:577:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1122,
              "nodeType": "Block",
              "src": "10388:392:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1089,
                          "name": "oldKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1081,
                          "src": "10406:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1090,
                          "name": "newKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1083,
                          "src": "10420:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "10406:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d205f7570646174654b65793a2043616e6e6f74207570646174652077697468207468652073616d652068617368206173206265666f72652e",
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10432:71:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d96e661a8da0050b6db0ce14c02c3720a30c29c2344461655d16a672723d2225",
                          "typeString": "literal_string \"Competition - _updateKey: Cannot update with the same hash as before.\""
                        },
                        "value": "Competition - _updateKey: Cannot update with the same hash as before."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d96e661a8da0050b6db0ce14c02c3720a30c29c2344461655d16a672723d2225",
                          "typeString": "literal_string \"Competition - _updateKey: Cannot update with the same hash as before.\""
                        }
                      ],
                      "id": 1088,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10398:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10398:106:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1094,
                  "nodeType": "ExpressionStatement",
                  "src": "10398:106:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1096,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "10522:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 1098,
                            "indexExpression": {
                              "id": 1097,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1079,
                              "src": "10534:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10522:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 1099,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "key",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2460,
                          "src": "10522:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1100,
                          "name": "oldKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1081,
                          "src": "10558:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "10522:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d205f7570646174654b65793a20496e636f7272656374206f6c64206b6579207265666572656e63652e",
                        "id": 1102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10570:56:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_91fe120db46e828ee7e7f2ff46ab4ec58934860ac4d9f6ffead2a441d9866a25",
                          "typeString": "literal_string \"Competition - _updateKey: Incorrect old key reference.\""
                        },
                        "value": "Competition - _updateKey: Incorrect old key reference."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_91fe120db46e828ee7e7f2ff46ab4ec58934860ac4d9f6ffead2a441d9866a25",
                          "typeString": "literal_string \"Competition - _updateKey: Incorrect old key reference.\""
                        }
                      ],
                      "id": 1095,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10514:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10514:113:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1104,
                  "nodeType": "ExpressionStatement",
                  "src": "10514:113:2"
                },
                {
                  "expression": {
                    "id": 1110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1105,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2511,
                          "src": "10637:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                            "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                          }
                        },
                        "id": 1107,
                        "indexExpression": {
                          "id": 1106,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1079,
                          "src": "10649:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10637:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                          "typeString": "struct CompetitionStorage.Challenge storage ref"
                        }
                      },
                      "id": 1108,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "key",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2460,
                      "src": "10637:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1109,
                      "name": "newKeyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1083,
                      "src": "10672:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "10637:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1111,
                  "nodeType": "ExpressionStatement",
                  "src": "10637:45:2"
                },
                {
                  "expression": {
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1112,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1086,
                      "src": "10692:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10702:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "10692:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1115,
                  "nodeType": "ExpressionStatement",
                  "src": "10692:14:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1117,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1079,
                        "src": "10733:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1118,
                        "name": "oldKeyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1081,
                        "src": "10750:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1119,
                        "name": "newKeyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1083,
                        "src": "10762:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1116,
                      "name": "KeyUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10039,
                      "src": "10722:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint32,bytes32,bytes32)"
                      }
                    },
                    "id": 1120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10722:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1121,
                  "nodeType": "EmitStatement",
                  "src": "10717:56:2"
                }
              ]
            },
            "id": 1123,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateKey",
            "nameLocation": "10270:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1079,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "10288:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "10281:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1078,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10281:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1081,
                  "mutability": "mutable",
                  "name": "oldKeyHash",
                  "nameLocation": "10313:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "10305:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1080,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10305:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1083,
                  "mutability": "mutable",
                  "name": "newKeyHash",
                  "nameLocation": "10333:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "10325:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1082,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10325:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10280:64:2"
            },
            "returnParameters": {
              "id": 1087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1086,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "10375:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "10370:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1085,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10370:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10369:14:2"
            },
            "scope": 2430,
            "src": "10261:519:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              9636
            ],
            "body": {
              "id": 1160,
              "nodeType": "Block",
              "src": "10876:303:2",
              "statements": [
                {
                  "assignments": [
                    1132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1132,
                      "mutability": "mutable",
                      "name": "challengeNumber",
                      "nameLocation": "10893:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1160,
                      "src": "10886:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1131,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10886:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1134,
                  "initialValue": {
                    "id": 1133,
                    "name": "_challengeCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2482,
                    "src": "10911:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10886:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1136,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "10946:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 1138,
                            "indexExpression": {
                              "id": 1137,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1132,
                              "src": "10958:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10946:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2464,
                          "src": "10946:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10984:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "10946:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20636c6f73655375626d697373696f6e3a204368616c6c656e676520696e20756e65787065637465642073746174652e",
                        "id": 1142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10987:63:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_072053b40828734e9e29cc8fec9220e78c6f8f485358eb2f9b22d96cb9ac57e7",
                          "typeString": "literal_string \"Competition - closeSubmission: Challenge in unexpected state.\""
                        },
                        "value": "Competition - closeSubmission: Challenge in unexpected state."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_072053b40828734e9e29cc8fec9220e78c6f8f485358eb2f9b22d96cb9ac57e7",
                          "typeString": "literal_string \"Competition - closeSubmission: Challenge in unexpected state.\""
                        }
                      ],
                      "id": 1135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10938:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10938:113:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1144,
                  "nodeType": "ExpressionStatement",
                  "src": "10938:113:2"
                },
                {
                  "expression": {
                    "id": 1150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1145,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2511,
                          "src": "11061:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                            "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                          }
                        },
                        "id": 1147,
                        "indexExpression": {
                          "id": 1146,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1132,
                          "src": "11073:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11061:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                          "typeString": "struct CompetitionStorage.Challenge storage ref"
                        }
                      },
                      "id": 1148,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "phase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2464,
                      "src": "11061:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 1149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11098:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "11061:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1151,
                  "nodeType": "ExpressionStatement",
                  "src": "11061:38:2"
                },
                {
                  "expression": {
                    "id": 1154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1152,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1129,
                      "src": "11109:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11119:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "11109:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1155,
                  "nodeType": "ExpressionStatement",
                  "src": "11109:14:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1157,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "11156:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 1156,
                      "name": "SubmissionClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10043,
                      "src": "11139:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32)"
                      }
                    },
                    "id": 1158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11139:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1159,
                  "nodeType": "EmitStatement",
                  "src": "11134:38:2"
                }
              ]
            },
            "functionSelector": "ffc6ff1e",
            "id": 1161,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1127,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1126,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "10835:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "10835:9:2"
              }
            ],
            "name": "closeSubmission",
            "nameLocation": "10795:15:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1125,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10826:8:2"
            },
            "parameters": {
              "id": 1124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10810:2:2"
            },
            "returnParameters": {
              "id": 1130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1129,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "10863:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1161,
                  "src": "10858:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1128,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10858:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10857:14:2"
            },
            "scope": 2430,
            "src": "10786:393:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9644
            ],
            "body": {
              "id": 1181,
              "nodeType": "Block",
              "src": "11292:66:2",
              "statements": [
                {
                  "expression": {
                    "id": 1179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1171,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1169,
                      "src": "11302:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11335:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11327:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 1173,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "11327:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11327:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 1177,
                          "name": "resultsHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1163,
                          "src": "11339:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1172,
                        "name": "_updateResults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1270,
                        "src": "11312:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                          "typeString": "function (bytes32,bytes32) returns (bool)"
                        }
                      },
                      "id": 1178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11312:39:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11302:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1180,
                  "nodeType": "ExpressionStatement",
                  "src": "11302:49:2"
                }
              ]
            },
            "functionSelector": "315c455e",
            "id": 1182,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1167,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1166,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "11251:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "11251:9:2"
              }
            ],
            "name": "submitResults",
            "nameLocation": "11194:13:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1165,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11242:8:2"
            },
            "parameters": {
              "id": 1164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1163,
                  "mutability": "mutable",
                  "name": "resultsHash",
                  "nameLocation": "11216:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1182,
                  "src": "11208:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1162,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11208:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11207:21:2"
            },
            "returnParameters": {
              "id": 1170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1169,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "11279:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1182,
                  "src": "11274:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1168,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11274:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11273:14:2"
            },
            "scope": 2430,
            "src": "11185:173:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9654
            ],
            "body": {
              "id": 1211,
              "nodeType": "Block",
              "src": "11498:184:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1195,
                          "name": "oldResultsHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "11516:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11542:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11534:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 1196,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "11534:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11534:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "11516:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20757064617465526573756c74733a204d7573742068617665207072652d6578697374696e6720726573756c74732e",
                        "id": 1201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11546:62:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7eb86a9e3116a8ad60accc68462eeac5b2cf633c6592d42b9f1d5bc96bdfc2bf",
                          "typeString": "literal_string \"Competition - updateResults: Must have pre-existing results.\""
                        },
                        "value": "Competition - updateResults: Must have pre-existing results."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7eb86a9e3116a8ad60accc68462eeac5b2cf633c6592d42b9f1d5bc96bdfc2bf",
                          "typeString": "literal_string \"Competition - updateResults: Must have pre-existing results.\""
                        }
                      ],
                      "id": 1194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11508:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11508:101:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1203,
                  "nodeType": "ExpressionStatement",
                  "src": "11508:101:2"
                },
                {
                  "expression": {
                    "id": 1209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1204,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1192,
                      "src": "11619:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1206,
                          "name": "oldResultsHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "11644:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 1207,
                          "name": "newResultsHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1186,
                          "src": "11660:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 1205,
                        "name": "_updateResults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1270,
                        "src": "11629:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                          "typeString": "function (bytes32,bytes32) returns (bool)"
                        }
                      },
                      "id": 1208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11629:46:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11619:56:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1210,
                  "nodeType": "ExpressionStatement",
                  "src": "11619:56:2"
                }
              ]
            },
            "functionSelector": "c55e86b1",
            "id": 1212,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1190,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1189,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "11457:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "11457:9:2"
              }
            ],
            "name": "updateResults",
            "nameLocation": "11373:13:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1188,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11448:8:2"
            },
            "parameters": {
              "id": 1187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1184,
                  "mutability": "mutable",
                  "name": "oldResultsHash",
                  "nameLocation": "11395:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1212,
                  "src": "11387:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1183,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11387:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1186,
                  "mutability": "mutable",
                  "name": "newResultsHash",
                  "nameLocation": "11419:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1212,
                  "src": "11411:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1185,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11411:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11386:48:2"
            },
            "returnParameters": {
              "id": 1193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1192,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "11485:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1212,
                  "src": "11480:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1191,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11480:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11479:14:2"
            },
            "scope": 2430,
            "src": "11364:318:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1269,
              "nodeType": "Block",
              "src": "11803:610:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1222,
                          "name": "oldResultsHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1214,
                          "src": "11821:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1223,
                          "name": "newResultsHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1216,
                          "src": "11839:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "11821:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20757064617465526573756c74733a2043616e6e6f74207570646174652077697468207468652073616d652068617368206173206265666f72652e",
                        "id": 1225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11855:74:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ac275a4ee9624976537900d871bf570b6e16966cbd73acc4fc49ccaad80fed6",
                          "typeString": "literal_string \"Competition - updateResults: Cannot update with the same hash as before.\""
                        },
                        "value": "Competition - updateResults: Cannot update with the same hash as before."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ac275a4ee9624976537900d871bf570b6e16966cbd73acc4fc49ccaad80fed6",
                          "typeString": "literal_string \"Competition - updateResults: Cannot update with the same hash as before.\""
                        }
                      ],
                      "id": 1221,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11813:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11813:117:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1227,
                  "nodeType": "ExpressionStatement",
                  "src": "11813:117:2"
                },
                {
                  "assignments": [
                    1229
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1229,
                      "mutability": "mutable",
                      "name": "challengeNumber",
                      "nameLocation": "11947:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1269,
                      "src": "11940:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1228,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11940:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1231,
                  "initialValue": {
                    "id": 1230,
                    "name": "_challengeCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2482,
                    "src": "11965:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11940:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1233,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "12000:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 1235,
                            "indexExpression": {
                              "id": 1234,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1229,
                              "src": "12012:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12000:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 1236,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2464,
                          "src": "12000:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 1237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12038:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "12000:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20757064617465526573756c74733a204368616c6c656e676520696e20756e65787065637465642073746174652e",
                        "id": 1239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12041:61:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_891e28c63259cb81e465124f887c019cc31169e3451a60222ecf57c19d0fec99",
                          "typeString": "literal_string \"Competition - updateResults: Challenge in unexpected state.\""
                        },
                        "value": "Competition - updateResults: Challenge in unexpected state."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_891e28c63259cb81e465124f887c019cc31169e3451a60222ecf57c19d0fec99",
                          "typeString": "literal_string \"Competition - updateResults: Challenge in unexpected state.\""
                        }
                      ],
                      "id": 1232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11992:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11992:111:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1241,
                  "nodeType": "ExpressionStatement",
                  "src": "11992:111:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1243,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "12121:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 1245,
                            "indexExpression": {
                              "id": 1244,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1229,
                              "src": "12133:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12121:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 1246,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "results",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2458,
                          "src": "12121:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1247,
                          "name": "oldResultsHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1214,
                          "src": "12161:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "12121:54:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20757064617465526573756c74733a20436c61736820696e206578697374696e6720726573756c747320686173682e",
                        "id": 1249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12177:62:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a1914860dc25623475aeb177953538de1f6d18e86c3fe0442a505b7ae268bae",
                          "typeString": "literal_string \"Competition - updateResults: Clash in existing results hash.\""
                        },
                        "value": "Competition - updateResults: Clash in existing results hash."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a1914860dc25623475aeb177953538de1f6d18e86c3fe0442a505b7ae268bae",
                          "typeString": "literal_string \"Competition - updateResults: Clash in existing results hash.\""
                        }
                      ],
                      "id": 1242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12113:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12113:127:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1251,
                  "nodeType": "ExpressionStatement",
                  "src": "12113:127:2"
                },
                {
                  "expression": {
                    "id": 1257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1252,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2511,
                          "src": "12250:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                            "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                          }
                        },
                        "id": 1254,
                        "indexExpression": {
                          "id": 1253,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1229,
                          "src": "12262:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12250:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                          "typeString": "struct CompetitionStorage.Challenge storage ref"
                        }
                      },
                      "id": 1255,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "results",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2458,
                      "src": "12250:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1256,
                      "name": "newResultsHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1216,
                      "src": "12289:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "12250:53:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1258,
                  "nodeType": "ExpressionStatement",
                  "src": "12250:53:2"
                },
                {
                  "expression": {
                    "id": 1261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1259,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1219,
                      "src": "12313:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12323:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "12313:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1262,
                  "nodeType": "ExpressionStatement",
                  "src": "12313:14:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1264,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1229,
                        "src": "12358:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1265,
                        "name": "oldResultsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1214,
                        "src": "12375:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1266,
                        "name": "newResultsHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1216,
                        "src": "12391:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1263,
                      "name": "ResultsUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10051,
                      "src": "12343:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint32,bytes32,bytes32)"
                      }
                    },
                    "id": 1267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12343:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1268,
                  "nodeType": "EmitStatement",
                  "src": "12338:68:2"
                }
              ]
            },
            "id": 1270,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateResults",
            "nameLocation": "11697:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1214,
                  "mutability": "mutable",
                  "name": "oldResultsHash",
                  "nameLocation": "11720:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1270,
                  "src": "11712:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1213,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11712:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1216,
                  "mutability": "mutable",
                  "name": "newResultsHash",
                  "nameLocation": "11744:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1270,
                  "src": "11736:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1215,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11736:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11711:48:2"
            },
            "returnParameters": {
              "id": 1220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1219,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "11790:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1270,
                  "src": "11785:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1218,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11785:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11784:14:2"
            },
            "scope": 2430,
            "src": "11688:725:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              9672
            ],
            "body": {
              "id": 1300,
              "nodeType": "Block",
              "src": "12643:122:2",
              "statements": [
                {
                  "expression": {
                    "id": 1298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1290,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1288,
                      "src": "12653:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1292,
                          "name": "_challengeCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2482,
                          "src": "12675:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 1293,
                          "name": "submitters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1273,
                          "src": "12694:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[] calldata"
                          }
                        },
                        {
                          "id": 1294,
                          "name": "stakingRewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1276,
                          "src": "12706:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        {
                          "id": 1295,
                          "name": "challengeRewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1279,
                          "src": "12722:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        {
                          "id": 1296,
                          "name": "tournamentRewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1282,
                          "src": "12740:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[] calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        ],
                        "id": 1291,
                        "name": "_payRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1450,
                        "src": "12663:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_array$_t_address_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$_t_bool_$",
                          "typeString": "function (uint32,address[] calldata,uint256[] calldata,uint256[] calldata,uint256[] calldata) returns (bool)"
                        }
                      },
                      "id": 1297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12663:95:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12653:105:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1299,
                  "nodeType": "ExpressionStatement",
                  "src": "12653:105:2"
                }
              ]
            },
            "functionSelector": "d09e2c21",
            "id": 1301,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1286,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1285,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "12602:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "12602:9:2"
              }
            ],
            "name": "payRewards",
            "nameLocation": "12428:10:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1284,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12593:8:2"
            },
            "parameters": {
              "id": 1283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1273,
                  "mutability": "mutable",
                  "name": "submitters",
                  "nameLocation": "12458:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1301,
                  "src": "12439:29:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1271,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "12439:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1272,
                    "nodeType": "ArrayTypeName",
                    "src": "12439:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1276,
                  "mutability": "mutable",
                  "name": "stakingRewards",
                  "nameLocation": "12489:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1301,
                  "src": "12470:33:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1274,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12470:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1275,
                    "nodeType": "ArrayTypeName",
                    "src": "12470:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1279,
                  "mutability": "mutable",
                  "name": "challengeRewards",
                  "nameLocation": "12524:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1301,
                  "src": "12505:35:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1277,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12505:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1278,
                    "nodeType": "ArrayTypeName",
                    "src": "12505:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1282,
                  "mutability": "mutable",
                  "name": "tournamentRewards",
                  "nameLocation": "12561:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1301,
                  "src": "12542:36:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1280,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12542:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1281,
                    "nodeType": "ArrayTypeName",
                    "src": "12542:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12438:141:2"
            },
            "returnParameters": {
              "id": 1289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1288,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "12630:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1301,
                  "src": "12625:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1287,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12625:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12624:14:2"
            },
            "scope": 2430,
            "src": "12419:346:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1449,
              "nodeType": "Block",
              "src": "13000:1575:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1321,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "13018:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 1323,
                            "indexExpression": {
                              "id": 1322,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1303,
                              "src": "13030:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13018:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 1324,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2464,
                          "src": "13018:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 1325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13056:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "13018:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20706179526577617264733a204368616c6c656e676520697320696e20756e65787065637465642073746174652e",
                        "id": 1327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13059:61:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_576e050076a95c1ed9d021453006c99d33a06562fa3bd9f24c22b8c3885552d6",
                          "typeString": "literal_string \"Competition - payRewards: Challenge is in unexpected state.\""
                        },
                        "value": "Competition - payRewards: Challenge is in unexpected state."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_576e050076a95c1ed9d021453006c99d33a06562fa3bd9f24c22b8c3885552d6",
                          "typeString": "literal_string \"Competition - payRewards: Challenge is in unexpected state.\""
                        }
                      ],
                      "id": 1320,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13010:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13010:111:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1329,
                  "nodeType": "ExpressionStatement",
                  "src": "13010:111:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1335,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1331,
                                    "name": "submitters",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1306,
                                    "src": "13140:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                      "typeString": "address[] calldata"
                                    }
                                  },
                                  "id": 1332,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "13140:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1333,
                                    "name": "stakingRewards",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1309,
                                    "src": "13161:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                      "typeString": "uint256[] calldata"
                                    }
                                  },
                                  "id": 1334,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "13161:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13140:42:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1336,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "13139:44:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1337,
                                    "name": "submitters",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1306,
                                    "src": "13200:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                      "typeString": "address[] calldata"
                                    }
                                  },
                                  "id": 1338,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "13200:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1339,
                                    "name": "challengeRewards",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1312,
                                    "src": "13221:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                      "typeString": "uint256[] calldata"
                                    }
                                  },
                                  "id": 1340,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "13221:23:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13200:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1342,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "13199:46:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13139:106:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1344,
                                  "name": "submitters",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1306,
                                  "src": "13262:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 1345,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "13262:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1346,
                                  "name": "tournamentRewards",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1315,
                                  "src": "13283:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                    "typeString": "uint256[] calldata"
                                  }
                                },
                                "id": 1347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "13283:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13262:45:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1349,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13261:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13139:169:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20706179526577617264733a204e756d626572206f66207375626d69747465727320616e6420726577617264732061726520646966666572656e742e",
                        "id": 1351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13322:75:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f20c9e4a62f872ba80d1435068ab74fc0d3e67538168ecf91cc2e4f649a54851",
                          "typeString": "literal_string \"Competition - payRewards: Number of submitters and rewards are different.\""
                        },
                        "value": "Competition - payRewards: Number of submitters and rewards are different."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f20c9e4a62f872ba80d1435068ab74fc0d3e67538168ecf91cc2e4f649a54851",
                          "typeString": "literal_string \"Competition - payRewards: Number of submitters and rewards are different.\""
                        }
                      ],
                      "id": 1330,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13131:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13131:267:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1353,
                  "nodeType": "ExpressionStatement",
                  "src": "13131:267:2"
                },
                {
                  "assignments": [
                    1355
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1355,
                      "mutability": "mutable",
                      "name": "totalStakingAmount",
                      "nameLocation": "13417:18:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1449,
                      "src": "13409:26:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1354,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13409:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1356,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13409:26:2"
                },
                {
                  "assignments": [
                    1358
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1358,
                      "mutability": "mutable",
                      "name": "totalChallengeAmount",
                      "nameLocation": "13453:20:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1449,
                      "src": "13445:28:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1357,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13445:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1359,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13445:28:2"
                },
                {
                  "assignments": [
                    1361
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1361,
                      "mutability": "mutable",
                      "name": "totalTournamentAmount",
                      "nameLocation": "13491:21:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1449,
                      "src": "13483:29:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1360,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13483:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1362,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13483:29:2"
                },
                {
                  "body": {
                    "id": 1408,
                    "nodeType": "Block",
                    "src": "13576:432:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1374,
                            "name": "totalStakingAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1355,
                            "src": "13716:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1375,
                              "name": "stakingRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1309,
                              "src": "13738:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 1377,
                            "indexExpression": {
                              "id": 1376,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1364,
                              "src": "13753:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13738:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13716:39:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1379,
                        "nodeType": "ExpressionStatement",
                        "src": "13716:39:2"
                      },
                      {
                        "expression": {
                          "id": 1384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1380,
                            "name": "totalChallengeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1358,
                            "src": "13769:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1381,
                              "name": "challengeRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1312,
                              "src": "13793:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 1383,
                            "indexExpression": {
                              "id": 1382,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1364,
                              "src": "13810:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13793:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13769:43:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1385,
                        "nodeType": "ExpressionStatement",
                        "src": "13769:43:2"
                      },
                      {
                        "expression": {
                          "id": 1390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1386,
                            "name": "totalTournamentAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1361,
                            "src": "13826:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1387,
                              "name": "tournamentRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1315,
                              "src": "13851:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 1389,
                            "indexExpression": {
                              "id": 1388,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1364,
                              "src": "13869:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13851:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13826:45:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1391,
                        "nodeType": "ExpressionStatement",
                        "src": "13826:45:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1393,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1303,
                              "src": "13904:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1394,
                                "name": "submitters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1306,
                                "src": "13921:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 1396,
                              "indexExpression": {
                                "id": 1395,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1364,
                                "src": "13932:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13921:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1397,
                                "name": "stakingRewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1309,
                                "src": "13936:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 1399,
                              "indexExpression": {
                                "id": 1398,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1364,
                                "src": "13951:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13936:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1400,
                                "name": "challengeRewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1312,
                                "src": "13955:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 1402,
                              "indexExpression": {
                                "id": 1401,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1364,
                                "src": "13972:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13955:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1403,
                                "name": "tournamentRewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1315,
                                "src": "13976:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 1405,
                              "indexExpression": {
                                "id": 1404,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1364,
                                "src": "13994:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13976:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1392,
                            "name": "_paySingleAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1527,
                            "src": "13886:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint32,address,uint256,uint256,uint256)"
                            }
                          },
                          "id": 1406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13886:111:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1407,
                        "nodeType": "ExpressionStatement",
                        "src": "13886:111:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1367,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1364,
                      "src": "13540:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1368,
                        "name": "submitters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1306,
                        "src": "13544:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 1369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "13544:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13540:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1409,
                  "initializationExpression": {
                    "assignments": [
                      1364
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1364,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "13533:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1409,
                        "src": "13528:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1363,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13528:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1366,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13537:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13528:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13563:3:2",
                      "subExpression": {
                        "id": 1371,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "13563:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1373,
                    "nodeType": "ExpressionStatement",
                    "src": "13563:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "13523:485:2"
                },
                {
                  "expression": {
                    "id": 1412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1410,
                      "name": "_currentStakingRewardsBudget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2492,
                      "src": "14062:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1411,
                      "name": "totalStakingAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1355,
                      "src": "14094:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14062:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1413,
                  "nodeType": "ExpressionStatement",
                  "src": "14062:50:2"
                },
                {
                  "expression": {
                    "id": 1416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1414,
                      "name": "_currentChallengeRewardsBudget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2494,
                      "src": "14122:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1415,
                      "name": "totalChallengeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1358,
                      "src": "14156:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14122:54:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1417,
                  "nodeType": "ExpressionStatement",
                  "src": "14122:54:2"
                },
                {
                  "expression": {
                    "id": 1420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1418,
                      "name": "_currentTournamentRewardsBudget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2496,
                      "src": "14186:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1419,
                      "name": "totalTournamentAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1361,
                      "src": "14221:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14186:56:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1421,
                  "nodeType": "ExpressionStatement",
                  "src": "14186:56:2"
                },
                {
                  "expression": {
                    "id": 1428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1422,
                      "name": "_competitionPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2486,
                      "src": "14253:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1423,
                          "name": "totalStakingAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1355,
                          "src": "14273:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 1424,
                          "name": "totalChallengeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1358,
                          "src": "14294:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14273:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1426,
                        "name": "totalTournamentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1361,
                        "src": "14317:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14273:65:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14253:85:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1429,
                  "nodeType": "ExpressionStatement",
                  "src": "14253:85:2"
                },
                {
                  "expression": {
                    "id": 1436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1430,
                      "name": "_currentTotalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2490,
                      "src": "14348:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1431,
                          "name": "totalStakingAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1355,
                          "src": "14371:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 1432,
                          "name": "totalChallengeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1358,
                          "src": "14392:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14371:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1434,
                        "name": "totalTournamentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1361,
                        "src": "14415:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14371:65:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14348:88:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1437,
                  "nodeType": "ExpressionStatement",
                  "src": "14348:88:2"
                },
                {
                  "expression": {
                    "id": 1440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1438,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1318,
                      "src": "14446:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14456:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "14446:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1441,
                  "nodeType": "ExpressionStatement",
                  "src": "14446:14:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1443,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1303,
                        "src": "14487:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1444,
                        "name": "totalStakingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1355,
                        "src": "14504:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1445,
                        "name": "totalChallengeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1358,
                        "src": "14524:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1446,
                        "name": "totalTournamentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1361,
                        "src": "14546:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1442,
                      "name": "_logRewardsPaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1546,
                      "src": "14471:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint32,uint256,uint256,uint256)"
                      }
                    },
                    "id": 1447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14471:97:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1448,
                  "nodeType": "ExpressionStatement",
                  "src": "14471:97:2"
                }
              ]
            },
            "id": 1450,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payRewards",
            "nameLocation": "12780:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1303,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "12799:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1450,
                  "src": "12792:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1302,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12792:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1306,
                  "mutability": "mutable",
                  "name": "submitters",
                  "nameLocation": "12835:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1450,
                  "src": "12816:29:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1304,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "12816:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1305,
                    "nodeType": "ArrayTypeName",
                    "src": "12816:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1309,
                  "mutability": "mutable",
                  "name": "stakingRewards",
                  "nameLocation": "12866:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1450,
                  "src": "12847:33:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1307,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12847:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1308,
                    "nodeType": "ArrayTypeName",
                    "src": "12847:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1312,
                  "mutability": "mutable",
                  "name": "challengeRewards",
                  "nameLocation": "12901:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1450,
                  "src": "12882:35:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1310,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12882:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1311,
                    "nodeType": "ArrayTypeName",
                    "src": "12882:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1315,
                  "mutability": "mutable",
                  "name": "tournamentRewards",
                  "nameLocation": "12938:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1450,
                  "src": "12919:36:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1313,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12919:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1314,
                    "nodeType": "ArrayTypeName",
                    "src": "12919:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12791:165:2"
            },
            "returnParameters": {
              "id": 1319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1318,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "12987:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1450,
                  "src": "12982:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1317,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12982:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12981:14:2"
            },
            "scope": 2430,
            "src": "12771:1804:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1526,
              "nodeType": "Block",
              "src": "14741:638:2",
              "statements": [
                {
                  "expression": {
                    "id": 1471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1463,
                        "name": "_stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2506,
                        "src": "14751:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1465,
                      "indexExpression": {
                        "id": 1464,
                        "name": "submitter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1454,
                        "src": "14759:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14751:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1466,
                          "name": "stakingReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1456,
                          "src": "14773:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 1467,
                          "name": "challengeReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1458,
                          "src": "14789:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14773:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1469,
                        "name": "tournamentReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1460,
                        "src": "14807:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "14773:50:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14751:72:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1472,
                  "nodeType": "ExpressionStatement",
                  "src": "14751:72:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1473,
                      "name": "stakingReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1456,
                      "src": "14838:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14854:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14838:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1487,
                  "nodeType": "IfStatement",
                  "src": "14834:132:2",
                  "trueBody": {
                    "id": 1486,
                    "nodeType": "Block",
                    "src": "14856:110:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1476,
                                    "name": "_challenges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2511,
                                    "src": "14870:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                      "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                                    }
                                  },
                                  "id": 1478,
                                  "indexExpression": {
                                    "id": 1477,
                                    "name": "challengeNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1452,
                                    "src": "14882:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14870:28:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                                    "typeString": "struct CompetitionStorage.Challenge storage ref"
                                  }
                                },
                                "id": 1479,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "submitterInfo",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2469,
                                "src": "14870:42:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                                  "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                                }
                              },
                              "id": 1481,
                              "indexExpression": {
                                "id": 1480,
                                "name": "submitter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1454,
                                "src": "14913:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14870:53:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Information_$2454_storage",
                                "typeString": "struct CompetitionStorage.Information storage ref"
                              }
                            },
                            "id": 1482,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "stakingRewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2441,
                            "src": "14870:68:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1483,
                            "name": "stakingReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1456,
                            "src": "14942:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14870:85:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1485,
                        "nodeType": "ExpressionStatement",
                        "src": "14870:85:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1488,
                      "name": "challengeReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1458,
                      "src": "14980:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14998:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14980:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1502,
                  "nodeType": "IfStatement",
                  "src": "14976:138:2",
                  "trueBody": {
                    "id": 1501,
                    "nodeType": "Block",
                    "src": "15000:114:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1491,
                                    "name": "_challenges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2511,
                                    "src": "15014:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                      "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                                    }
                                  },
                                  "id": 1493,
                                  "indexExpression": {
                                    "id": 1492,
                                    "name": "challengeNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1452,
                                    "src": "15026:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15014:28:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                                    "typeString": "struct CompetitionStorage.Challenge storage ref"
                                  }
                                },
                                "id": 1494,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "submitterInfo",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2469,
                                "src": "15014:42:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                                  "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                                }
                              },
                              "id": 1496,
                              "indexExpression": {
                                "id": 1495,
                                "name": "submitter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1454,
                                "src": "15057:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15014:53:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Information_$2454_storage",
                                "typeString": "struct CompetitionStorage.Information storage ref"
                              }
                            },
                            "id": 1497,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "challengeRewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2443,
                            "src": "15014:70:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1498,
                            "name": "challengeReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1458,
                            "src": "15088:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15014:89:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1500,
                        "nodeType": "ExpressionStatement",
                        "src": "15014:89:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1503,
                      "name": "tournamentReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1460,
                      "src": "15128:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15147:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "15128:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1517,
                  "nodeType": "IfStatement",
                  "src": "15124:141:2",
                  "trueBody": {
                    "id": 1516,
                    "nodeType": "Block",
                    "src": "15149:116:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1506,
                                    "name": "_challenges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2511,
                                    "src": "15163:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                      "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                                    }
                                  },
                                  "id": 1508,
                                  "indexExpression": {
                                    "id": 1507,
                                    "name": "challengeNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1452,
                                    "src": "15175:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15163:28:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                                    "typeString": "struct CompetitionStorage.Challenge storage ref"
                                  }
                                },
                                "id": 1509,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "submitterInfo",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2469,
                                "src": "15163:42:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                                  "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                                }
                              },
                              "id": 1511,
                              "indexExpression": {
                                "id": 1510,
                                "name": "submitter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1454,
                                "src": "15206:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15163:53:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Information_$2454_storage",
                                "typeString": "struct CompetitionStorage.Information storage ref"
                              }
                            },
                            "id": 1512,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "tournamentRewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2445,
                            "src": "15163:71:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1513,
                            "name": "tournamentReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1460,
                            "src": "15238:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15163:91:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1515,
                        "nodeType": "ExpressionStatement",
                        "src": "15163:91:2"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1519,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1452,
                        "src": "15295:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1520,
                        "name": "submitter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1454,
                        "src": "15312:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1521,
                        "name": "stakingReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1456,
                        "src": "15323:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1522,
                        "name": "challengeReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1458,
                        "src": "15338:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1523,
                        "name": "tournamentReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1460,
                        "src": "15355:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1518,
                      "name": "RewardsPayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10063,
                      "src": "15280:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint32,address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 1524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15280:92:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1525,
                  "nodeType": "EmitStatement",
                  "src": "15275:97:2"
                }
              ]
            },
            "id": 1527,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_paySingleAddress",
            "nameLocation": "14590:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1452,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "14615:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "14608:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1451,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14608:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1454,
                  "mutability": "mutable",
                  "name": "submitter",
                  "nameLocation": "14640:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "14632:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14632:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1456,
                  "mutability": "mutable",
                  "name": "stakingReward",
                  "nameLocation": "14659:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "14651:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14651:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1458,
                  "mutability": "mutable",
                  "name": "challengeReward",
                  "nameLocation": "14682:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "14674:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14674:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1460,
                  "mutability": "mutable",
                  "name": "tournamentReward",
                  "nameLocation": "14707:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "14699:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14699:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14607:117:2"
            },
            "returnParameters": {
              "id": 1462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14741:0:2"
            },
            "scope": 2430,
            "src": "14581:798:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1545,
              "nodeType": "Block",
              "src": "15539:120:2",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1539,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1529,
                        "src": "15571:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1540,
                        "name": "totalStakingAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1531,
                        "src": "15588:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1541,
                        "name": "totalChallengeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1533,
                        "src": "15608:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1542,
                        "name": "totalTournamentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1535,
                        "src": "15630:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1538,
                      "name": "TotalRewardsPaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10073,
                      "src": "15554:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint32,uint256,uint256,uint256)"
                      }
                    },
                    "id": 1543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15554:98:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1544,
                  "nodeType": "EmitStatement",
                  "src": "15549:103:2"
                }
              ]
            },
            "id": 1546,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_logRewardsPaid",
            "nameLocation": "15394:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1529,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "15417:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1546,
                  "src": "15410:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1528,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15410:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1531,
                  "mutability": "mutable",
                  "name": "totalStakingAmount",
                  "nameLocation": "15442:18:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1546,
                  "src": "15434:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15434:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1533,
                  "mutability": "mutable",
                  "name": "totalChallengeAmount",
                  "nameLocation": "15470:20:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1546,
                  "src": "15462:28:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1532,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15462:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1535,
                  "mutability": "mutable",
                  "name": "totalTournamentAmount",
                  "nameLocation": "15500:21:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1546,
                  "src": "15492:29:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1534,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15492:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15409:113:2"
            },
            "returnParameters": {
              "id": 1537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15539:0:2"
            },
            "scope": 2430,
            "src": "15385:274:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              9689
            ],
            "body": {
              "id": 1641,
              "nodeType": "Block",
              "src": "15902:886:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1566,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "15920:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 1568,
                            "indexExpression": {
                              "id": 1567,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1548,
                              "src": "15932:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15920:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 1569,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2464,
                          "src": "15920:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 1570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15958:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "15920:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d207570646174654368616c6c656e6765416e64546f75726e616d656e7453636f7265733a204368616c6c656e676520697320696e20756e65787065637465642073746174652e",
                        "id": 1572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15961:85:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aea35308b5ac337eb1ea661a9a9229d299b24eb7d43747cf97e9876d669bfe73",
                          "typeString": "literal_string \"Competition - updateChallengeAndTournamentScores: Challenge is in unexpected state.\""
                        },
                        "value": "Competition - updateChallengeAndTournamentScores: Challenge is in unexpected state."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aea35308b5ac337eb1ea661a9a9229d299b24eb7d43747cf97e9876d669bfe73",
                          "typeString": "literal_string \"Competition - updateChallengeAndTournamentScores: Challenge is in unexpected state.\""
                        }
                      ],
                      "id": 1565,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15912:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15912:135:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1574,
                  "nodeType": "ExpressionStatement",
                  "src": "15912:135:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1576,
                                  "name": "participants",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1551,
                                  "src": "16066:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 1577,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "16066:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1578,
                                  "name": "challengeScores",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1554,
                                  "src": "16089:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                    "typeString": "uint256[] calldata"
                                  }
                                },
                                "id": 1579,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "16089:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16066:45:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1581,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "16065:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1582,
                                  "name": "participants",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1551,
                                  "src": "16117:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 1583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "16117:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1584,
                                  "name": "tournamentScores",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1557,
                                  "src": "16140:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                    "typeString": "uint256[] calldata"
                                  }
                                },
                                "id": 1585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "16140:23:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16117:46:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1587,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "16116:48:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "16065:99:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d207570646174654368616c6c656e6765416e64546f75726e616d656e7453636f7265733a204e756d626572206f66207061727469636970616e747320616e642073636f7265732061726520646966666572656e742e",
                        "id": 1589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16166:100:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2ca2b3791419a8d7c9520d52e8a4602f5d9a2c003ca25b4f58e2b7231bed887",
                          "typeString": "literal_string \"Competition - updateChallengeAndTournamentScores: Number of participants and scores are different.\""
                        },
                        "value": "Competition - updateChallengeAndTournamentScores: Number of participants and scores are different."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2ca2b3791419a8d7c9520d52e8a4602f5d9a2c003ca25b4f58e2b7231bed887",
                          "typeString": "literal_string \"Competition - updateChallengeAndTournamentScores: Number of participants and scores are different.\""
                        }
                      ],
                      "id": 1575,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16057:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16057:210:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1591,
                  "nodeType": "ExpressionStatement",
                  "src": "16057:210:2"
                },
                {
                  "body": {
                    "id": 1631,
                    "nodeType": "Block",
                    "src": "16333:356:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1603,
                                    "name": "_challenges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2511,
                                    "src": "16470:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                      "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                                    }
                                  },
                                  "id": 1605,
                                  "indexExpression": {
                                    "id": 1604,
                                    "name": "challengeNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1548,
                                    "src": "16482:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16470:28:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                                    "typeString": "struct CompetitionStorage.Challenge storage ref"
                                  }
                                },
                                "id": 1606,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "submitterInfo",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2469,
                                "src": "16470:42:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                                  "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                                }
                              },
                              "id": 1610,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 1607,
                                  "name": "participants",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1551,
                                  "src": "16513:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 1609,
                                "indexExpression": {
                                  "id": 1608,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1593,
                                  "src": "16526:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16513:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16470:59:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Information_$2454_storage",
                                "typeString": "struct CompetitionStorage.Information storage ref"
                              }
                            },
                            "id": 1611,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "challengeScores",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2447,
                            "src": "16470:75:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1612,
                              "name": "challengeScores",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1554,
                              "src": "16548:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 1614,
                            "indexExpression": {
                              "id": 1613,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1593,
                              "src": "16564:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16548:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16470:96:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1616,
                        "nodeType": "ExpressionStatement",
                        "src": "16470:96:2"
                      },
                      {
                        "expression": {
                          "id": 1629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1617,
                                    "name": "_challenges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2511,
                                    "src": "16580:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                      "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                                    }
                                  },
                                  "id": 1619,
                                  "indexExpression": {
                                    "id": 1618,
                                    "name": "challengeNumber",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1548,
                                    "src": "16592:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16580:28:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                                    "typeString": "struct CompetitionStorage.Challenge storage ref"
                                  }
                                },
                                "id": 1620,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "submitterInfo",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2469,
                                "src": "16580:42:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                                  "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                                }
                              },
                              "id": 1624,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 1621,
                                  "name": "participants",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1551,
                                  "src": "16623:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 1623,
                                "indexExpression": {
                                  "id": 1622,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1593,
                                  "src": "16636:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16623:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16580:59:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Information_$2454_storage",
                                "typeString": "struct CompetitionStorage.Information storage ref"
                              }
                            },
                            "id": 1625,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "tournamentScores",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2449,
                            "src": "16580:76:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1626,
                              "name": "tournamentScores",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1557,
                              "src": "16659:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 1628,
                            "indexExpression": {
                              "id": 1627,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1593,
                              "src": "16676:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16659:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16580:98:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1630,
                        "nodeType": "ExpressionStatement",
                        "src": "16580:98:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1596,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1593,
                      "src": "16295:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1597,
                        "name": "participants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1551,
                        "src": "16299:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 1598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "16299:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16295:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1632,
                  "initializationExpression": {
                    "assignments": [
                      1593
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1593,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "16288:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1632,
                        "src": "16283:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1592,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "16283:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1595,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16292:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "16283:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "16320:3:2",
                      "subExpression": {
                        "id": 1600,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1593,
                        "src": "16320:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1602,
                    "nodeType": "ExpressionStatement",
                    "src": "16320:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "16278:411:2"
                },
                {
                  "expression": {
                    "id": 1635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1633,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1563,
                      "src": "16699:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16709:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "16699:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1636,
                  "nodeType": "ExpressionStatement",
                  "src": "16699:14:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1638,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1548,
                        "src": "16765:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 1637,
                      "name": "ChallengeAndTournamentScoresUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10077,
                      "src": "16729:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$returns$__$",
                        "typeString": "function (uint32)"
                      }
                    },
                    "id": 1639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16729:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1640,
                  "nodeType": "EmitStatement",
                  "src": "16724:57:2"
                }
              ]
            },
            "functionSelector": "dec9bf2f",
            "id": 1642,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1561,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1560,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "15861:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "15861:9:2"
              }
            ],
            "name": "updateChallengeAndTournamentScores",
            "nameLocation": "15674:34:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1559,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "15852:8:2"
            },
            "parameters": {
              "id": 1558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1548,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "15716:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1642,
                  "src": "15709:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1547,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15709:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1551,
                  "mutability": "mutable",
                  "name": "participants",
                  "nameLocation": "15752:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1642,
                  "src": "15733:31:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1549,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "15733:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1550,
                    "nodeType": "ArrayTypeName",
                    "src": "15733:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1554,
                  "mutability": "mutable",
                  "name": "challengeScores",
                  "nameLocation": "15785:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1642,
                  "src": "15766:34:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1552,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "15766:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1553,
                    "nodeType": "ArrayTypeName",
                    "src": "15766:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1557,
                  "mutability": "mutable",
                  "name": "tournamentScores",
                  "nameLocation": "15821:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1642,
                  "src": "15802:35:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1555,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "15802:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1556,
                    "nodeType": "ArrayTypeName",
                    "src": "15802:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15708:130:2"
            },
            "returnParameters": {
              "id": 1564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1563,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "15889:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1642,
                  "src": "15884:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1562,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15884:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15883:14:2"
            },
            "scope": 2430,
            "src": "15665:1123:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9705
            ],
            "body": {
              "id": 1717,
              "nodeType": "Block",
              "src": "16990:555:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1661,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "17008:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 1663,
                            "indexExpression": {
                              "id": 1662,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1644,
                              "src": "17020:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17008:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 1664,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2464,
                          "src": "17008:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 1665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17046:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "17008:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20757064617465496e666f726d6174696f6e42617463683a204368616c6c656e676520697320696e20756e65787065637465642073746174652e",
                        "id": 1667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17049:73:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3bb6dc5f740f9fa1d90ae71a0cdf9e5bd0f50baf7452da05e9dc5f058e206d8b",
                          "typeString": "literal_string \"Competition - updateInformationBatch: Challenge is in unexpected state.\""
                        },
                        "value": "Competition - updateInformationBatch: Challenge is in unexpected state."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3bb6dc5f740f9fa1d90ae71a0cdf9e5bd0f50baf7452da05e9dc5f058e206d8b",
                          "typeString": "literal_string \"Competition - updateInformationBatch: Challenge is in unexpected state.\""
                        }
                      ],
                      "id": 1660,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17000:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17000:123:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1669,
                  "nodeType": "ExpressionStatement",
                  "src": "17000:123:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1671,
                            "name": "participants",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1647,
                            "src": "17141:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 1672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "17141:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1673,
                            "name": "values",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1652,
                            "src": "17164:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 1674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "17164:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17141:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20757064617465496e666f726d6174696f6e42617463683a204e756d626572206f66207061727469636970616e747320616e642076616c7565732061726520646966666572656e742e",
                        "id": 1676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17179:88:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_847341517448dcbafa7e7b50d45908de070e3eb4c4f7d741b031326c1618243f",
                          "typeString": "literal_string \"Competition - updateInformationBatch: Number of participants and values are different.\""
                        },
                        "value": "Competition - updateInformationBatch: Number of participants and values are different."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_847341517448dcbafa7e7b50d45908de070e3eb4c4f7d741b031326c1618243f",
                          "typeString": "literal_string \"Competition - updateInformationBatch: Number of participants and values are different.\""
                        }
                      ],
                      "id": 1670,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17133:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17133:135:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1678,
                  "nodeType": "ExpressionStatement",
                  "src": "17133:135:2"
                },
                {
                  "body": {
                    "id": 1706,
                    "nodeType": "Block",
                    "src": "17334:113:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 1704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1690,
                                      "name": "_challenges",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2511,
                                      "src": "17348:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                        "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                                      }
                                    },
                                    "id": 1692,
                                    "indexExpression": {
                                      "id": 1691,
                                      "name": "challengeNumber",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1644,
                                      "src": "17360:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "17348:28:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                                      "typeString": "struct CompetitionStorage.Challenge storage ref"
                                    }
                                  },
                                  "id": 1693,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "submitterInfo",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2469,
                                  "src": "17348:42:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                                    "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                                  }
                                },
                                "id": 1697,
                                "indexExpression": {
                                  "baseExpression": {
                                    "id": 1694,
                                    "name": "participants",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1647,
                                    "src": "17391:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                      "typeString": "address[] calldata"
                                    }
                                  },
                                  "id": 1696,
                                  "indexExpression": {
                                    "id": 1695,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1680,
                                    "src": "17404:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "17391:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17348:59:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Information_$2454_storage",
                                  "typeString": "struct CompetitionStorage.Information storage ref"
                                }
                              },
                              "id": 1698,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "info",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2453,
                              "src": "17348:64:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1700,
                            "indexExpression": {
                              "id": 1699,
                              "name": "itemNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1649,
                              "src": "17413:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "17348:76:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1701,
                              "name": "values",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1652,
                              "src": "17427:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 1703,
                            "indexExpression": {
                              "id": 1702,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1680,
                              "src": "17434:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17427:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17348:88:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1705,
                        "nodeType": "ExpressionStatement",
                        "src": "17348:88:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1683,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1680,
                      "src": "17296:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1684,
                        "name": "participants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1647,
                        "src": "17300:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 1685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "17300:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17296:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1707,
                  "initializationExpression": {
                    "assignments": [
                      1680
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1680,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "17289:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1707,
                        "src": "17284:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1679,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "17284:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1682,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17293:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "17284:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "17321:3:2",
                      "subExpression": {
                        "id": 1687,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1680,
                        "src": "17321:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1689,
                    "nodeType": "ExpressionStatement",
                    "src": "17321:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "17279:168:2"
                },
                {
                  "expression": {
                    "id": 1710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1708,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1658,
                      "src": "17456:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17466:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "17456:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1711,
                  "nodeType": "ExpressionStatement",
                  "src": "17456:14:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1713,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1644,
                        "src": "17510:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1714,
                        "name": "itemNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1649,
                        "src": "17527:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1712,
                      "name": "BatchInformationUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10083,
                      "src": "17486:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_uint256_$returns$__$",
                        "typeString": "function (uint32,uint256)"
                      }
                    },
                    "id": 1715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17486:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1716,
                  "nodeType": "EmitStatement",
                  "src": "17481:57:2"
                }
              ]
            },
            "functionSelector": "3c35f180",
            "id": 1718,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1656,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1655,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "16949:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "16949:9:2"
              }
            ],
            "name": "updateInformationBatch",
            "nameLocation": "16803:22:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1654,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "16940:8:2"
            },
            "parameters": {
              "id": 1653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1644,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "16833:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1718,
                  "src": "16826:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1643,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16826:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1647,
                  "mutability": "mutable",
                  "name": "participants",
                  "nameLocation": "16869:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1718,
                  "src": "16850:31:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1645,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "16850:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1646,
                    "nodeType": "ArrayTypeName",
                    "src": "16850:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1649,
                  "mutability": "mutable",
                  "name": "itemNumber",
                  "nameLocation": "16891:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1718,
                  "src": "16883:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1648,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16883:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1652,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "16919:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1718,
                  "src": "16903:22:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1650,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "16903:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1651,
                    "nodeType": "ArrayTypeName",
                    "src": "16903:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16825:101:2"
            },
            "returnParameters": {
              "id": 1659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1658,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "16977:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1718,
                  "src": "16972:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1657,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16972:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16971:14:2"
            },
            "scope": 2430,
            "src": "16794:751:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9713
            ],
            "body": {
              "id": 1769,
              "nodeType": "Block",
              "src": "17651:415:2",
              "statements": [
                {
                  "assignments": [
                    1729
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1729,
                      "mutability": "mutable",
                      "name": "challengeNumber",
                      "nameLocation": "17668:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1769,
                      "src": "17661:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1728,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "17661:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1731,
                  "initialValue": {
                    "id": 1730,
                    "name": "_challengeCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2482,
                    "src": "17686:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17661:42:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 1735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "32",
                                "id": 1733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17722:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 1734,
                                "name": "phase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1720,
                                "src": "17726:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "17722:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1736,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "17721:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 1739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1737,
                                "name": "phase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1720,
                                "src": "17737:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "hexValue": "35",
                                "id": 1738,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17745:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5_by_1",
                                  "typeString": "int_const 5"
                                },
                                "value": "5"
                              },
                              "src": "17737:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1740,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "17736:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "17721:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20616476616e6365546f50686173653a20596f75206d6179206f6e6c79207573652074686973206d6574686f6420666f7220616476616e63696e6720746f207068617365732033206f7220342e",
                        "id": 1742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17749:92:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbec519a9b3054567cc032590a1276431f6c3978d99cc2cecda04f5b6d498ee5",
                          "typeString": "literal_string \"Competition - advanceToPhase: You may only use this method for advancing to phases 3 or 4.\""
                        },
                        "value": "Competition - advanceToPhase: You may only use this method for advancing to phases 3 or 4."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbec519a9b3054567cc032590a1276431f6c3978d99cc2cecda04f5b6d498ee5",
                          "typeString": "literal_string \"Competition - advanceToPhase: You may only use this method for advancing to phases 3 or 4.\""
                        }
                      ],
                      "id": 1732,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17713:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17713:130:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1744,
                  "nodeType": "ExpressionStatement",
                  "src": "17713:130:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 1748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1746,
                                "name": "phase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1720,
                                "src": "17862:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17868:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "17862:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "id": 1749,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "17861:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1750,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "17874:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 1752,
                            "indexExpression": {
                              "id": 1751,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1729,
                              "src": "17886:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17874:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 1753,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2464,
                          "src": "17874:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "17861:47:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d20616476616e6365546f50686173653a20596f75206d6179206f6e6c7920616476616e636520746f20746865206e6578742070686173652e",
                        "id": 1755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17910:71:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73418aa7853e40b58cb0550170136429ba28eeb56b69d91bf4f694b16202df55",
                          "typeString": "literal_string \"Competition - advanceToPhase: You may only advance to the next phase.\""
                        },
                        "value": "Competition - advanceToPhase: You may only advance to the next phase."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73418aa7853e40b58cb0550170136429ba28eeb56b69d91bf4f694b16202df55",
                          "typeString": "literal_string \"Competition - advanceToPhase: You may only advance to the next phase.\""
                        }
                      ],
                      "id": 1745,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17853:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17853:129:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1757,
                  "nodeType": "ExpressionStatement",
                  "src": "17853:129:2"
                },
                {
                  "expression": {
                    "id": 1763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1758,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2511,
                          "src": "17992:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                            "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                          }
                        },
                        "id": 1760,
                        "indexExpression": {
                          "id": 1759,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1729,
                          "src": "18004:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17992:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                          "typeString": "struct CompetitionStorage.Challenge storage ref"
                        }
                      },
                      "id": 1761,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "phase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2464,
                      "src": "17992:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1762,
                      "name": "phase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1720,
                      "src": "18029:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "17992:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1764,
                  "nodeType": "ExpressionStatement",
                  "src": "17992:42:2"
                },
                {
                  "expression": {
                    "id": 1767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1765,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1726,
                      "src": "18045:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18055:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "18045:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1768,
                  "nodeType": "ExpressionStatement",
                  "src": "18045:14:2"
                }
              ]
            },
            "functionSelector": "dc9f76eb",
            "id": 1770,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1724,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1723,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "17610:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "17610:9:2"
              }
            ],
            "name": "advanceToPhase",
            "nameLocation": "17560:14:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1722,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "17601:8:2"
            },
            "parameters": {
              "id": 1721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1720,
                  "mutability": "mutable",
                  "name": "phase",
                  "nameLocation": "17581:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1770,
                  "src": "17575:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1719,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "17575:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17574:13:2"
            },
            "returnParameters": {
              "id": 1727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1726,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "17638:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1770,
                  "src": "17633:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1725,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17633:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17632:14:2"
            },
            "scope": 2430,
            "src": "17551:515:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9719
            ],
            "body": {
              "id": 1812,
              "nodeType": "Block",
              "src": "18166:412:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1779,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "18184:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 1781,
                            "indexExpression": {
                              "id": 1780,
                              "name": "_challengeCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2482,
                              "src": "18196:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18184:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 1782,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2464,
                          "src": "18184:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 1783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18224:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "18184:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d206d6f766552656d61696e646572546f506f6f6c3a20504c65617365207761697420666f7220746865206368616c6c656e676520746f20636f6d706c657465206265666f72652073706f6e736f72696e672e",
                        "id": 1785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18227:97:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18373126f6b91545b787e5c411b3eaf12f375d6a653ba26eea9b7b749c7a49ea",
                          "typeString": "literal_string \"Competition - moveRemainderToPool: PLease wait for the challenge to complete before sponsoring.\""
                        },
                        "value": "Competition - moveRemainderToPool: PLease wait for the challenge to complete before sponsoring."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_18373126f6b91545b787e5c411b3eaf12f375d6a653ba26eea9b7b749c7a49ea",
                          "typeString": "literal_string \"Competition - moveRemainderToPool: PLease wait for the challenge to complete before sponsoring.\""
                        }
                      ],
                      "id": 1778,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18176:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18176:149:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1787,
                  "nodeType": "ExpressionStatement",
                  "src": "18176:149:2"
                },
                {
                  "assignments": [
                    1789
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1789,
                      "mutability": "mutable",
                      "name": "remainder",
                      "nameLocation": "18343:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1812,
                      "src": "18335:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1788,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18335:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1792,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1790,
                      "name": "getRemainder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2366,
                      "src": "18355:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18355:14:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18335:34:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1794,
                          "name": "remainder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1789,
                          "src": "18387:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18399:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "18387:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d206d6f766552656d61696e646572546f506f6f6c3a204e6f2072656d61696e64657220746f206d6f76652e",
                        "id": 1797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18402:58:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_213d51340f5f46634ed1daa2feb6deed40abe5235b1cc733280652a55ddfa027",
                          "typeString": "literal_string \"Competition - moveRemainderToPool: No remainder to move.\""
                        },
                        "value": "Competition - moveRemainderToPool: No remainder to move."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_213d51340f5f46634ed1daa2feb6deed40abe5235b1cc733280652a55ddfa027",
                          "typeString": "literal_string \"Competition - moveRemainderToPool: No remainder to move.\""
                        }
                      ],
                      "id": 1793,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18379:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18379:82:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1799,
                  "nodeType": "ExpressionStatement",
                  "src": "18379:82:2"
                },
                {
                  "expression": {
                    "id": 1802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1800,
                      "name": "_competitionPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2486,
                      "src": "18471:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1801,
                      "name": "remainder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1789,
                      "src": "18491:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18471:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1803,
                  "nodeType": "ExpressionStatement",
                  "src": "18471:29:2"
                },
                {
                  "expression": {
                    "id": 1806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1804,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1776,
                      "src": "18510:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18520:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "18510:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1807,
                  "nodeType": "ExpressionStatement",
                  "src": "18510:14:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1809,
                        "name": "remainder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1789,
                        "src": "18561:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1808,
                      "name": "RemainderMovedToPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10087,
                      "src": "18540:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18540:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1811,
                  "nodeType": "EmitStatement",
                  "src": "18535:36:2"
                }
              ]
            },
            "functionSelector": "37d6b997",
            "id": 1813,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1774,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1773,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "18125:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "18125:9:2"
              }
            ],
            "name": "moveRemainderToPool",
            "nameLocation": "18081:19:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1772,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18116:8:2"
            },
            "parameters": {
              "id": 1771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18100:2:2"
            },
            "returnParameters": {
              "id": 1777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1776,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "18153:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1813,
                  "src": "18148:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1775,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18148:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18147:14:2"
            },
            "scope": 2430,
            "src": "18072:506:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9731
            ],
            "body": {
              "id": 1824,
              "nodeType": "Block",
              "src": "18717:51:2",
              "statements": [
                {
                  "expression": {
                    "id": 1822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1820,
                      "name": "competitionPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1818,
                      "src": "18727:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1821,
                      "name": "_competitionPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2486,
                      "src": "18745:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18727:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1823,
                  "nodeType": "ExpressionStatement",
                  "src": "18727:34:2"
                }
              ]
            },
            "documentation": {
              "id": 1814,
              "nodeType": "StructuredDocumentation",
              "src": "18584:28:2",
              "text": "READ METHODS*"
            },
            "functionSelector": "d4f4b806",
            "id": 1825,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCompetitionPool",
            "nameLocation": "18627:18:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1816,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18666:8:2"
            },
            "parameters": {
              "id": 1815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18645:2:2"
            },
            "returnParameters": {
              "id": 1819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1818,
                  "mutability": "mutable",
                  "name": "competitionPool",
                  "nameLocation": "18696:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1825,
                  "src": "18688:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18688:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18687:25:2"
            },
            "scope": 2430,
            "src": "18618:150:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9725
            ],
            "body": {
              "id": 1835,
              "nodeType": "Block",
              "src": "18875:53:2",
              "statements": [
                {
                  "expression": {
                    "id": 1833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1831,
                      "name": "rewardsThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1829,
                      "src": "18885:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1832,
                      "name": "_rewardsThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2488,
                      "src": "18904:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18885:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1834,
                  "nodeType": "ExpressionStatement",
                  "src": "18885:36:2"
                }
              ]
            },
            "functionSelector": "18829fc3",
            "id": 1836,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardsThreshold",
            "nameLocation": "18783:19:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1827,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18823:8:2"
            },
            "parameters": {
              "id": 1826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18802:2:2"
            },
            "returnParameters": {
              "id": 1830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1829,
                  "mutability": "mutable",
                  "name": "rewardsThreshold",
                  "nameLocation": "18853:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1836,
                  "src": "18845:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18845:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18844:26:2"
            },
            "scope": 2430,
            "src": "18774:154:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9737
            ],
            "body": {
              "id": 1846,
              "nodeType": "Block",
              "src": "19039:57:2",
              "statements": [
                {
                  "expression": {
                    "id": 1844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1842,
                      "name": "currentTotalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1840,
                      "src": "19049:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1843,
                      "name": "_currentTotalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2490,
                      "src": "19070:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19049:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1845,
                  "nodeType": "ExpressionStatement",
                  "src": "19049:40:2"
                }
              ]
            },
            "functionSelector": "25b06746",
            "id": 1847,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTotalStaked",
            "nameLocation": "18943:21:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1838,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18985:8:2"
            },
            "parameters": {
              "id": 1837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18964:2:2"
            },
            "returnParameters": {
              "id": 1841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1840,
                  "mutability": "mutable",
                  "name": "currentTotalStaked",
                  "nameLocation": "19015:18:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1847,
                  "src": "19007:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1839,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19007:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19006:28:2"
            },
            "scope": 2430,
            "src": "18934:162:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9743
            ],
            "body": {
              "id": 1857,
              "nodeType": "Block",
              "src": "19225:75:2",
              "statements": [
                {
                  "expression": {
                    "id": 1855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1853,
                      "name": "currentStakingRewardsBudget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1851,
                      "src": "19235:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1854,
                      "name": "_currentStakingRewardsBudget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2492,
                      "src": "19265:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19235:58:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1856,
                  "nodeType": "ExpressionStatement",
                  "src": "19235:58:2"
                }
              ]
            },
            "functionSelector": "1e2ff711",
            "id": 1858,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentStakingRewardsBudget",
            "nameLocation": "19111:30:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1849,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "19162:8:2"
            },
            "parameters": {
              "id": 1848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19141:2:2"
            },
            "returnParameters": {
              "id": 1852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1851,
                  "mutability": "mutable",
                  "name": "currentStakingRewardsBudget",
                  "nameLocation": "19192:27:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1858,
                  "src": "19184:35:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19184:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19183:37:2"
            },
            "scope": 2430,
            "src": "19102:198:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9749
            ],
            "body": {
              "id": 1868,
              "nodeType": "Block",
              "src": "19433:79:2",
              "statements": [
                {
                  "expression": {
                    "id": 1866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1864,
                      "name": "currentChallengeRewardsBudget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1862,
                      "src": "19443:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1865,
                      "name": "_currentChallengeRewardsBudget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2494,
                      "src": "19475:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19443:62:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1867,
                  "nodeType": "ExpressionStatement",
                  "src": "19443:62:2"
                }
              ]
            },
            "functionSelector": "d68a7c00",
            "id": 1869,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentChallengeRewardsBudget",
            "nameLocation": "19315:32:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1860,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "19368:8:2"
            },
            "parameters": {
              "id": 1859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19347:2:2"
            },
            "returnParameters": {
              "id": 1863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1862,
                  "mutability": "mutable",
                  "name": "currentChallengeRewardsBudget",
                  "nameLocation": "19398:29:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1869,
                  "src": "19390:37:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19390:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19389:39:2"
            },
            "scope": 2430,
            "src": "19306:206:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9755
            ],
            "body": {
              "id": 1879,
              "nodeType": "Block",
              "src": "19647:81:2",
              "statements": [
                {
                  "expression": {
                    "id": 1877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1875,
                      "name": "currentTournamentRewardsBudget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1873,
                      "src": "19657:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1876,
                      "name": "_currentTournamentRewardsBudget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2496,
                      "src": "19690:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19657:64:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1878,
                  "nodeType": "ExpressionStatement",
                  "src": "19657:64:2"
                }
              ]
            },
            "functionSelector": "3228cf72",
            "id": 1880,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentTournamentRewardsBudget",
            "nameLocation": "19527:33:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1871,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "19581:8:2"
            },
            "parameters": {
              "id": 1870,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19560:2:2"
            },
            "returnParameters": {
              "id": 1874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1873,
                  "mutability": "mutable",
                  "name": "currentTournamentRewardsBudget",
                  "nameLocation": "19611:30:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1880,
                  "src": "19603:38:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19603:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19602:40:2"
            },
            "scope": 2430,
            "src": "19518:210:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9761
            ],
            "body": {
              "id": 1890,
              "nodeType": "Block",
              "src": "19865:83:2",
              "statements": [
                {
                  "expression": {
                    "id": 1888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1886,
                      "name": "challengeRewardsPercentageInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1884,
                      "src": "19875:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1887,
                      "name": "_challengeRewardsPercentageInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2498,
                      "src": "19909:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19875:66:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1889,
                  "nodeType": "ExpressionStatement",
                  "src": "19875:66:2"
                }
              ]
            },
            "functionSelector": "93a9dac7",
            "id": 1891,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChallengeRewardsPercentageInWei",
            "nameLocation": "19743:34:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1882,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "19798:8:2"
            },
            "parameters": {
              "id": 1881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19777:2:2"
            },
            "returnParameters": {
              "id": 1885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1884,
                  "mutability": "mutable",
                  "name": "challengeRewardsPercentageInWei",
                  "nameLocation": "19828:31:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1891,
                  "src": "19820:39:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1883,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19820:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19819:41:2"
            },
            "scope": 2430,
            "src": "19734:214:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9767
            ],
            "body": {
              "id": 1901,
              "nodeType": "Block",
              "src": "20087:85:2",
              "statements": [
                {
                  "expression": {
                    "id": 1899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1897,
                      "name": "tournamentRewardsPercentageInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1895,
                      "src": "20097:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1898,
                      "name": "_tournamentRewardsPercentageInWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2500,
                      "src": "20132:33:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20097:68:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1900,
                  "nodeType": "ExpressionStatement",
                  "src": "20097:68:2"
                }
              ]
            },
            "functionSelector": "920920ba",
            "id": 1902,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTournamentRewardsPercentageInWei",
            "nameLocation": "19963:35:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1893,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "20019:8:2"
            },
            "parameters": {
              "id": 1892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19998:2:2"
            },
            "returnParameters": {
              "id": 1896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1895,
                  "mutability": "mutable",
                  "name": "tournamentRewardsPercentageInWei",
                  "nameLocation": "20049:32:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1902,
                  "src": "20041:40:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20041:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20040:42:2"
            },
            "scope": 2430,
            "src": "19954:218:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9773
            ],
            "body": {
              "id": 1912,
              "nodeType": "Block",
              "src": "20288:58:2",
              "statements": [
                {
                  "expression": {
                    "id": 1910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1908,
                      "name": "latestChallengeNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1906,
                      "src": "20298:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1909,
                      "name": "_challengeCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2482,
                      "src": "20322:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "20298:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 1911,
                  "nodeType": "ExpressionStatement",
                  "src": "20298:41:2"
                }
              ]
            },
            "functionSelector": "736d8c91",
            "id": 1913,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestChallengeNumber",
            "nameLocation": "20187:24:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1904,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "20232:8:2"
            },
            "parameters": {
              "id": 1903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20211:2:2"
            },
            "returnParameters": {
              "id": 1907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1906,
                  "mutability": "mutable",
                  "name": "latestChallengeNumber",
                  "nameLocation": "20261:21:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1913,
                  "src": "20254:28:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1905,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20254:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20253:30:2"
            },
            "scope": 2430,
            "src": "20178:168:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9781
            ],
            "body": {
              "id": 1928,
              "nodeType": "Block",
              "src": "20461:63:2",
              "statements": [
                {
                  "expression": {
                    "id": 1926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1921,
                      "name": "dataset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1919,
                      "src": "20471:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1922,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2511,
                          "src": "20481:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                            "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                          }
                        },
                        "id": 1924,
                        "indexExpression": {
                          "id": 1923,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1915,
                          "src": "20493:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20481:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                          "typeString": "struct CompetitionStorage.Challenge storage ref"
                        }
                      },
                      "id": 1925,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "dataset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2456,
                      "src": "20481:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "20471:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1927,
                  "nodeType": "ExpressionStatement",
                  "src": "20471:46:2"
                }
              ]
            },
            "functionSelector": "39e28777",
            "id": 1929,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDatasetHash",
            "nameLocation": "20361:14:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1917,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "20418:8:2"
            },
            "parameters": {
              "id": 1916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1915,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "20383:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1929,
                  "src": "20376:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1914,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20376:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20375:24:2"
            },
            "returnParameters": {
              "id": 1920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1919,
                  "mutability": "mutable",
                  "name": "dataset",
                  "nameLocation": "20448:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1929,
                  "src": "20440:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1918,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20440:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20439:17:2"
            },
            "scope": 2430,
            "src": "20352:172:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9789
            ],
            "body": {
              "id": 1944,
              "nodeType": "Block",
              "src": "20639:63:2",
              "statements": [
                {
                  "expression": {
                    "id": 1942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1937,
                      "name": "results",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1935,
                      "src": "20649:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1938,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2511,
                          "src": "20659:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                            "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                          }
                        },
                        "id": 1940,
                        "indexExpression": {
                          "id": 1939,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1931,
                          "src": "20671:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20659:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                          "typeString": "struct CompetitionStorage.Challenge storage ref"
                        }
                      },
                      "id": 1941,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "results",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2458,
                      "src": "20659:36:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "20649:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1943,
                  "nodeType": "ExpressionStatement",
                  "src": "20649:46:2"
                }
              ]
            },
            "functionSelector": "eecfc33f",
            "id": 1945,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getResultsHash",
            "nameLocation": "20539:14:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1933,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "20596:8:2"
            },
            "parameters": {
              "id": 1932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1931,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "20561:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1945,
                  "src": "20554:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1930,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20554:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20553:24:2"
            },
            "returnParameters": {
              "id": 1936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1935,
                  "mutability": "mutable",
                  "name": "results",
                  "nameLocation": "20626:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1945,
                  "src": "20618:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1934,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20618:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20617:17:2"
            },
            "scope": 2430,
            "src": "20530:172:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9797
            ],
            "body": {
              "id": 1960,
              "nodeType": "Block",
              "src": "20809:55:2",
              "statements": [
                {
                  "expression": {
                    "id": 1958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1953,
                      "name": "key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1951,
                      "src": "20819:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1954,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2511,
                          "src": "20825:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                            "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                          }
                        },
                        "id": 1956,
                        "indexExpression": {
                          "id": 1955,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1947,
                          "src": "20837:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "20825:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                          "typeString": "struct CompetitionStorage.Challenge storage ref"
                        }
                      },
                      "id": 1957,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "key",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2460,
                      "src": "20825:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "20819:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1959,
                  "nodeType": "ExpressionStatement",
                  "src": "20819:38:2"
                }
              ]
            },
            "functionSelector": "15343c11",
            "id": 1961,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getKeyHash",
            "nameLocation": "20717:10:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1949,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "20770:8:2"
            },
            "parameters": {
              "id": 1948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1947,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "20735:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1961,
                  "src": "20728:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1946,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20728:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20727:24:2"
            },
            "returnParameters": {
              "id": 1952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1951,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "20800:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1961,
                  "src": "20792:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1950,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20792:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20791:13:2"
            },
            "scope": 2430,
            "src": "20708:156:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9805
            ],
            "body": {
              "id": 1976,
              "nodeType": "Block",
              "src": "20985:69:2",
              "statements": [
                {
                  "expression": {
                    "id": 1974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1969,
                      "name": "privateKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1967,
                      "src": "20995:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1970,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2511,
                          "src": "21008:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                            "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                          }
                        },
                        "id": 1972,
                        "indexExpression": {
                          "id": 1971,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1963,
                          "src": "21020:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21008:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                          "typeString": "struct CompetitionStorage.Challenge storage ref"
                        }
                      },
                      "id": 1973,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "privateKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2462,
                      "src": "21008:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "20995:52:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1975,
                  "nodeType": "ExpressionStatement",
                  "src": "20995:52:2"
                }
              ]
            },
            "functionSelector": "4169293b",
            "id": 1977,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrivateKeyHash",
            "nameLocation": "20879:17:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1965,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "20939:8:2"
            },
            "parameters": {
              "id": 1964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1963,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "20904:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1977,
                  "src": "20897:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1962,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20897:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20896:24:2"
            },
            "returnParameters": {
              "id": 1968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1967,
                  "mutability": "mutable",
                  "name": "privateKey",
                  "nameLocation": "20969:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1977,
                  "src": "20961:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1966,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20961:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20960:20:2"
            },
            "scope": 2430,
            "src": "20870:184:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9813
            ],
            "body": {
              "id": 1995,
              "nodeType": "Block",
              "src": "21185:98:2",
              "statements": [
                {
                  "expression": {
                    "id": 1993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1985,
                      "name": "submissionCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1983,
                      "src": "21195:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 1988,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "21236:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 1990,
                            "indexExpression": {
                              "id": 1989,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1979,
                              "src": "21248:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21236:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 1991,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "submitters",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2476,
                          "src": "21236:39:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSet_$6862_storage",
                            "typeString": "struct EnumerableSet.AddressSet storage ref"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_AddressSet_$6862_storage",
                            "typeString": "struct EnumerableSet.AddressSet storage ref"
                          }
                        ],
                        "expression": {
                          "id": 1986,
                          "name": "EnumerableSet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7089,
                          "src": "21215:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_EnumerableSet_$7089_$",
                            "typeString": "type(library EnumerableSet)"
                          }
                        },
                        "id": 1987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6958,
                        "src": "21215:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$6862_storage_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 1992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21215:61:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21195:81:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1994,
                  "nodeType": "ExpressionStatement",
                  "src": "21195:81:2"
                }
              ]
            },
            "functionSelector": "c8f971df",
            "id": 1996,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSubmissionCounter",
            "nameLocation": "21069:20:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1981,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "21132:8:2"
            },
            "parameters": {
              "id": 1980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1979,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "21097:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1996,
                  "src": "21090:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1978,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21090:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21089:24:2"
            },
            "returnParameters": {
              "id": 1984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1983,
                  "mutability": "mutable",
                  "name": "submissionCounter",
                  "nameLocation": "21162:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1996,
                  "src": "21154:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21154:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21153:27:2"
            },
            "scope": 2430,
            "src": "21060:223:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9826
            ],
            "body": {
              "id": 2059,
              "nodeType": "Block",
              "src": "21436:353:2",
              "statements": [
                {
                  "assignments": [
                    2013
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2013,
                      "mutability": "mutable",
                      "name": "submitters",
                      "nameLocation": "21463:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2059,
                      "src": "21446:27:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2011,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "21446:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2012,
                        "nodeType": "ArrayTypeName",
                        "src": "21446:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2021,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2017,
                          "name": "endIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2002,
                          "src": "21490:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 2018,
                          "name": "startIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2000,
                          "src": "21501:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "21490:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "21476:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2014,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "21480:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2015,
                        "nodeType": "ArrayTypeName",
                        "src": "21480:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 2020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21476:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21446:66:2"
                },
                {
                  "assignments": [
                    2026
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2026,
                      "mutability": "mutable",
                      "name": "submittersSet",
                      "nameLocation": "21555:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2059,
                      "src": "21522:46:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AddressSet_$6862_storage_ptr",
                        "typeString": "struct EnumerableSet.AddressSet"
                      },
                      "typeName": {
                        "id": 2025,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2024,
                          "name": "EnumerableSet.AddressSet",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6862,
                          "src": "21522:24:2"
                        },
                        "referencedDeclaration": 6862,
                        "src": "21522:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$6862_storage_ptr",
                          "typeString": "struct EnumerableSet.AddressSet"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2031,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 2027,
                        "name": "_challenges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2511,
                        "src": "21571:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                          "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                        }
                      },
                      "id": 2029,
                      "indexExpression": {
                        "id": 2028,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1998,
                        "src": "21583:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "21571:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                        "typeString": "struct CompetitionStorage.Challenge storage ref"
                      }
                    },
                    "id": 2030,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "submitters",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2476,
                    "src": "21571:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AddressSet_$6862_storage",
                      "typeString": "struct EnumerableSet.AddressSet storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21522:88:2"
                },
                {
                  "body": {
                    "id": 2055,
                    "nodeType": "Block",
                    "src": "21665:90:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 2053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2042,
                              "name": "submitters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2013,
                              "src": "21679:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2046,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2043,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2033,
                                "src": "21690:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2044,
                                "name": "startIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2000,
                                "src": "21694:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "21690:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "21679:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "id": 2049,
                                    "name": "submittersSet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2026,
                                    "src": "21726:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AddressSet_$6862_storage_ptr",
                                      "typeString": "struct EnumerableSet.AddressSet storage pointer"
                                    }
                                  },
                                  {
                                    "id": 2050,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2033,
                                    "src": "21741:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_AddressSet_$6862_storage_ptr",
                                      "typeString": "struct EnumerableSet.AddressSet storage pointer"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2047,
                                    "name": "EnumerableSet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7089,
                                    "src": "21709:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_EnumerableSet_$7089_$",
                                      "typeString": "type(library EnumerableSet)"
                                    }
                                  },
                                  "id": 2048,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "at",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 6985,
                                  "src": "21709:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$6862_storage_ptr_$_t_uint256_$returns$_t_address_$",
                                    "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                                  }
                                },
                                "id": 2051,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21709:34:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "id": 2052,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "21708:36:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "21679:65:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2054,
                        "nodeType": "ExpressionStatement",
                        "src": "21679:65:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2036,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2033,
                      "src": "21646:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2037,
                      "name": "endIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2002,
                      "src": "21650:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21646:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2056,
                  "initializationExpression": {
                    "assignments": [
                      2033
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2033,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "21630:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 2056,
                        "src": "21625:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2032,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "21625:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2035,
                    "initialValue": {
                      "id": 2034,
                      "name": "startIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2000,
                      "src": "21634:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "21625:19:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "21660:3:2",
                      "subExpression": {
                        "id": 2039,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2033,
                        "src": "21660:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2041,
                    "nodeType": "ExpressionStatement",
                    "src": "21660:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "21620:135:2"
                },
                {
                  "expression": {
                    "id": 2057,
                    "name": "submitters",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2013,
                    "src": "21772:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 2008,
                  "id": 2058,
                  "nodeType": "Return",
                  "src": "21765:17:2"
                }
              ]
            },
            "functionSelector": "4a31156f",
            "id": 2060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSubmitters",
            "nameLocation": "21298:13:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2004,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "21392:8:2"
            },
            "parameters": {
              "id": 2003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1998,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "21319:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2060,
                  "src": "21312:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1997,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21312:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2000,
                  "mutability": "mutable",
                  "name": "startIndex",
                  "nameLocation": "21344:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2060,
                  "src": "21336:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1999,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21336:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2002,
                  "mutability": "mutable",
                  "name": "endIndex",
                  "nameLocation": "21364:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2060,
                  "src": "21356:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2001,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21356:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21311:62:2"
            },
            "returnParameters": {
              "id": 2008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2007,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2060,
                  "src": "21414:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2005,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "21414:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2006,
                    "nodeType": "ArrayTypeName",
                    "src": "21414:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21413:18:2"
            },
            "scope": 2430,
            "src": "21289:500:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9834
            ],
            "body": {
              "id": 2075,
              "nodeType": "Block",
              "src": "21894:59:2",
              "statements": [
                {
                  "expression": {
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2068,
                      "name": "phase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2066,
                      "src": "21904:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 2069,
                          "name": "_challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2511,
                          "src": "21912:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                            "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                          }
                        },
                        "id": 2071,
                        "indexExpression": {
                          "id": 2070,
                          "name": "challengeNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2062,
                          "src": "21924:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "21912:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                          "typeString": "struct CompetitionStorage.Challenge storage ref"
                        }
                      },
                      "id": 2072,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "phase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2464,
                      "src": "21912:34:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "21904:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2074,
                  "nodeType": "ExpressionStatement",
                  "src": "21904:42:2"
                }
              ]
            },
            "functionSelector": "af976fec",
            "id": 2076,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPhase",
            "nameLocation": "21804:8:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2064,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "21855:8:2"
            },
            "parameters": {
              "id": 2063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2062,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "21820:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2076,
                  "src": "21813:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2061,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21813:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21812:24:2"
            },
            "returnParameters": {
              "id": 2067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2066,
                  "mutability": "mutable",
                  "name": "phase",
                  "nameLocation": "21883:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2076,
                  "src": "21877:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2065,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "21877:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21876:13:2"
            },
            "scope": 2430,
            "src": "21795:158:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9840
            ],
            "body": {
              "id": 2086,
              "nodeType": "Block",
              "src": "22056:49:2",
              "statements": [
                {
                  "expression": {
                    "id": 2084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2082,
                      "name": "stakeThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2080,
                      "src": "22066:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2083,
                      "name": "_stakeThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2484,
                      "src": "22083:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22066:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2085,
                  "nodeType": "ExpressionStatement",
                  "src": "22066:32:2"
                }
              ]
            },
            "functionSelector": "343cb6be",
            "id": 2087,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakeThreshold",
            "nameLocation": "21968:17:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2078,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22006:8:2"
            },
            "parameters": {
              "id": 2077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21985:2:2"
            },
            "returnParameters": {
              "id": 2081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2080,
                  "mutability": "mutable",
                  "name": "stakeThreshold",
                  "nameLocation": "22036:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2087,
                  "src": "22028:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22028:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22027:24:2"
            },
            "scope": 2430,
            "src": "21959:146:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9848
            ],
            "body": {
              "id": 2101,
              "nodeType": "Block",
              "src": "22209:45:2",
              "statements": [
                {
                  "expression": {
                    "id": 2099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2095,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2093,
                      "src": "22219:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 2096,
                        "name": "_stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2506,
                        "src": "22227:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2098,
                      "indexExpression": {
                        "id": 2097,
                        "name": "participant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2089,
                        "src": "22235:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "22227:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22219:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2100,
                  "nodeType": "ExpressionStatement",
                  "src": "22219:28:2"
                }
              ]
            },
            "functionSelector": "7a766460",
            "id": 2102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStake",
            "nameLocation": "22120:8:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2091,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22168:8:2"
            },
            "parameters": {
              "id": 2090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2089,
                  "mutability": "mutable",
                  "name": "participant",
                  "nameLocation": "22137:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2102,
                  "src": "22129:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2088,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22129:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22128:21:2"
            },
            "returnParameters": {
              "id": 2094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2093,
                  "mutability": "mutable",
                  "name": "stake",
                  "nameLocation": "22198:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2102,
                  "src": "22190:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2092,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22190:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22189:15:2"
            },
            "scope": 2430,
            "src": "22111:143:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9854
            ],
            "body": {
              "id": 2115,
              "nodeType": "Block",
              "src": "22353:47:2",
              "statements": [
                {
                  "expression": {
                    "id": 2113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2108,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2106,
                      "src": "22363:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2111,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2480,
                          "src": "22386:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IToken_$10212",
                            "typeString": "contract IToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IToken_$10212",
                            "typeString": "contract IToken"
                          }
                        ],
                        "id": 2110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "22378:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2109,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "22378:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22378:15:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "22363:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2114,
                  "nodeType": "ExpressionStatement",
                  "src": "22363:30:2"
                }
              ]
            },
            "functionSelector": "10fe9ae8",
            "id": 2116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenAddress",
            "nameLocation": "22269:15:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2104,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22305:8:2"
            },
            "parameters": {
              "id": 2103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22284:2:2"
            },
            "returnParameters": {
              "id": 2107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2106,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "22335:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2116,
                  "src": "22327:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22327:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22326:22:2"
            },
            "scope": 2430,
            "src": "22260:140:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9864
            ],
            "body": {
              "id": 2136,
              "nodeType": "Block",
              "src": "22542:100:2",
              "statements": [
                {
                  "expression": {
                    "id": 2134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2126,
                      "name": "submissionHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2124,
                      "src": "22552:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2127,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "22569:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 2129,
                            "indexExpression": {
                              "id": 2128,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2118,
                              "src": "22581:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "22569:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 2130,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "submitterInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2469,
                          "src": "22569:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                            "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                          }
                        },
                        "id": 2132,
                        "indexExpression": {
                          "id": 2131,
                          "name": "participant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2120,
                          "src": "22612:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "22569:55:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Information_$2454_storage",
                          "typeString": "struct CompetitionStorage.Information storage ref"
                        }
                      },
                      "id": 2133,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submission",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2437,
                      "src": "22569:66:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "22552:83:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2135,
                  "nodeType": "ExpressionStatement",
                  "src": "22552:83:2"
                }
              ]
            },
            "functionSelector": "60cdb6cc",
            "id": 2137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSubmission",
            "nameLocation": "22415:13:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2122,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22492:8:2"
            },
            "parameters": {
              "id": 2121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2118,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "22436:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2137,
                  "src": "22429:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2117,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22429:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2120,
                  "mutability": "mutable",
                  "name": "participant",
                  "nameLocation": "22461:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2137,
                  "src": "22453:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22453:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22428:45:2"
            },
            "returnParameters": {
              "id": 2125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2124,
                  "mutability": "mutable",
                  "name": "submissionHash",
                  "nameLocation": "22522:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2137,
                  "src": "22514:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2123,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22514:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22513:24:2"
            },
            "scope": 2430,
            "src": "22406:236:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9874
            ],
            "body": {
              "id": 2157,
              "nodeType": "Block",
              "src": "22790:88:2",
              "statements": [
                {
                  "expression": {
                    "id": 2155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2147,
                      "name": "staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2145,
                      "src": "22800:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2148,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "22809:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 2150,
                            "indexExpression": {
                              "id": 2149,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2139,
                              "src": "22821:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "22809:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 2151,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "submitterInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2469,
                          "src": "22809:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                            "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                          }
                        },
                        "id": 2153,
                        "indexExpression": {
                          "id": 2152,
                          "name": "participant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2141,
                          "src": "22852:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "22809:55:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Information_$2454_storage",
                          "typeString": "struct CompetitionStorage.Information storage ref"
                        }
                      },
                      "id": 2154,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "staked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2439,
                      "src": "22809:62:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22800:71:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2156,
                  "nodeType": "ExpressionStatement",
                  "src": "22800:71:2"
                }
              ]
            },
            "functionSelector": "e6184ab8",
            "id": 2158,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakedAmountForChallenge",
            "nameLocation": "22657:27:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2143,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22748:8:2"
            },
            "parameters": {
              "id": 2142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2139,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "22692:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2158,
                  "src": "22685:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2138,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22685:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2141,
                  "mutability": "mutable",
                  "name": "participant",
                  "nameLocation": "22717:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2158,
                  "src": "22709:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22709:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22684:45:2"
            },
            "returnParameters": {
              "id": 2146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2145,
                  "mutability": "mutable",
                  "name": "staked",
                  "nameLocation": "22778:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2158,
                  "src": "22770:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22770:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22769:16:2"
            },
            "scope": 2430,
            "src": "22648:230:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9884
            ],
            "body": {
              "id": 2178,
              "nodeType": "Block",
              "src": "23024:104:2",
              "statements": [
                {
                  "expression": {
                    "id": 2176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2168,
                      "name": "stakingRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2166,
                      "src": "23034:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2169,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "23051:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 2171,
                            "indexExpression": {
                              "id": 2170,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2160,
                              "src": "23063:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "23051:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 2172,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "submitterInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2469,
                          "src": "23051:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                            "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                          }
                        },
                        "id": 2174,
                        "indexExpression": {
                          "id": 2173,
                          "name": "participant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2162,
                          "src": "23094:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "23051:55:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Information_$2454_storage",
                          "typeString": "struct CompetitionStorage.Information storage ref"
                        }
                      },
                      "id": 2175,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakingRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2441,
                      "src": "23051:70:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23034:87:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2177,
                  "nodeType": "ExpressionStatement",
                  "src": "23034:87:2"
                }
              ]
            },
            "functionSelector": "6c981570",
            "id": 2179,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingRewards",
            "nameLocation": "22893:17:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2164,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22974:8:2"
            },
            "parameters": {
              "id": 2163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2160,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "22918:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2179,
                  "src": "22911:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2159,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22911:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2162,
                  "mutability": "mutable",
                  "name": "participant",
                  "nameLocation": "22943:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2179,
                  "src": "22935:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22935:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22910:45:2"
            },
            "returnParameters": {
              "id": 2167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2166,
                  "mutability": "mutable",
                  "name": "stakingRewards",
                  "nameLocation": "23004:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2179,
                  "src": "22996:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22996:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22995:24:2"
            },
            "scope": 2430,
            "src": "22884:244:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9894
            ],
            "body": {
              "id": 2199,
              "nodeType": "Block",
              "src": "23278:108:2",
              "statements": [
                {
                  "expression": {
                    "id": 2197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2189,
                      "name": "challengeRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2187,
                      "src": "23288:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2190,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "23307:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 2192,
                            "indexExpression": {
                              "id": 2191,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2181,
                              "src": "23319:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "23307:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 2193,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "submitterInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2469,
                          "src": "23307:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                            "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                          }
                        },
                        "id": 2195,
                        "indexExpression": {
                          "id": 2194,
                          "name": "participant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2183,
                          "src": "23350:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "23307:55:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Information_$2454_storage",
                          "typeString": "struct CompetitionStorage.Information storage ref"
                        }
                      },
                      "id": 2196,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "challengeRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2443,
                      "src": "23307:72:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23288:91:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2198,
                  "nodeType": "ExpressionStatement",
                  "src": "23288:91:2"
                }
              ]
            },
            "functionSelector": "3cbcb53a",
            "id": 2200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChallengeRewards",
            "nameLocation": "23143:19:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2185,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23226:8:2"
            },
            "parameters": {
              "id": 2184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2181,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "23170:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2200,
                  "src": "23163:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2180,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23163:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2183,
                  "mutability": "mutable",
                  "name": "participant",
                  "nameLocation": "23195:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2200,
                  "src": "23187:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23187:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23162:45:2"
            },
            "returnParameters": {
              "id": 2188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2187,
                  "mutability": "mutable",
                  "name": "challengeRewards",
                  "nameLocation": "23256:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2200,
                  "src": "23248:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23248:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23247:26:2"
            },
            "scope": 2430,
            "src": "23134:252:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9904
            ],
            "body": {
              "id": 2220,
              "nodeType": "Block",
              "src": "23538:110:2",
              "statements": [
                {
                  "expression": {
                    "id": 2218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2210,
                      "name": "tournamentRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2208,
                      "src": "23548:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2211,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "23568:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 2213,
                            "indexExpression": {
                              "id": 2212,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2202,
                              "src": "23580:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "23568:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 2214,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "submitterInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2469,
                          "src": "23568:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                            "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                          }
                        },
                        "id": 2216,
                        "indexExpression": {
                          "id": 2215,
                          "name": "participant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2204,
                          "src": "23611:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "23568:55:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Information_$2454_storage",
                          "typeString": "struct CompetitionStorage.Information storage ref"
                        }
                      },
                      "id": 2217,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tournamentRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2445,
                      "src": "23568:73:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23548:93:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2219,
                  "nodeType": "ExpressionStatement",
                  "src": "23548:93:2"
                }
              ]
            },
            "functionSelector": "aa658b69",
            "id": 2221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTournamentRewards",
            "nameLocation": "23401:20:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2206,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23485:8:2"
            },
            "parameters": {
              "id": 2205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2202,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "23429:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "23422:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2201,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23422:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2204,
                  "mutability": "mutable",
                  "name": "participant",
                  "nameLocation": "23454:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "23446:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23446:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23421:45:2"
            },
            "returnParameters": {
              "id": 2209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2208,
                  "mutability": "mutable",
                  "name": "tournamentRewards",
                  "nameLocation": "23515:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2221,
                  "src": "23507:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2207,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23507:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23506:27:2"
            },
            "scope": 2430,
            "src": "23392:256:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9914
            ],
            "body": {
              "id": 2257,
              "nodeType": "Block",
              "src": "23794:279:2",
              "statements": [
                {
                  "expression": {
                    "id": 2255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2231,
                      "name": "overallRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2229,
                      "src": "23804:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2232,
                                  "name": "_challenges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2511,
                                  "src": "23829:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                    "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                                  }
                                },
                                "id": 2234,
                                "indexExpression": {
                                  "id": 2233,
                                  "name": "challengeNumber",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2223,
                                  "src": "23841:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "23829:28:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                                  "typeString": "struct CompetitionStorage.Challenge storage ref"
                                }
                              },
                              "id": 2235,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "submitterInfo",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2469,
                              "src": "23829:42:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                                "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                              }
                            },
                            "id": 2237,
                            "indexExpression": {
                              "id": 2236,
                              "name": "participant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2225,
                              "src": "23872:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "23829:55:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Information_$2454_storage",
                              "typeString": "struct CompetitionStorage.Information storage ref"
                            }
                          },
                          "id": 2238,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stakingRewards",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2441,
                          "src": "23829:70:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2239,
                                  "name": "_challenges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2511,
                                  "src": "23910:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                    "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                                  }
                                },
                                "id": 2241,
                                "indexExpression": {
                                  "id": 2240,
                                  "name": "challengeNumber",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2223,
                                  "src": "23922:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "23910:28:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                                  "typeString": "struct CompetitionStorage.Challenge storage ref"
                                }
                              },
                              "id": 2242,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "submitterInfo",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2469,
                              "src": "23910:42:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                                "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                              }
                            },
                            "id": 2244,
                            "indexExpression": {
                              "id": 2243,
                              "name": "participant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2225,
                              "src": "23953:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "23910:55:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Information_$2454_storage",
                              "typeString": "struct CompetitionStorage.Information storage ref"
                            }
                          },
                          "id": 2245,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "challengeRewards",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2443,
                          "src": "23910:72:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "23829:153:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2247,
                                "name": "_challenges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2511,
                                "src": "23993:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                  "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                                }
                              },
                              "id": 2249,
                              "indexExpression": {
                                "id": 2248,
                                "name": "challengeNumber",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2223,
                                "src": "24005:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "23993:28:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                                "typeString": "struct CompetitionStorage.Challenge storage ref"
                              }
                            },
                            "id": 2250,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "submitterInfo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2469,
                            "src": "23993:42:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                              "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                            }
                          },
                          "id": 2252,
                          "indexExpression": {
                            "id": 2251,
                            "name": "participant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2225,
                            "src": "24036:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23993:55:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Information_$2454_storage",
                            "typeString": "struct CompetitionStorage.Information storage ref"
                          }
                        },
                        "id": 2253,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tournamentRewards",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2445,
                        "src": "23993:73:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "23829:237:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23804:262:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2256,
                  "nodeType": "ExpressionStatement",
                  "src": "23804:262:2"
                }
              ]
            },
            "functionSelector": "97d9abb8",
            "id": 2258,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOverallRewards",
            "nameLocation": "23663:17:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2227,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23744:8:2"
            },
            "parameters": {
              "id": 2226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2223,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "23688:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2258,
                  "src": "23681:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2222,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23681:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2225,
                  "mutability": "mutable",
                  "name": "participant",
                  "nameLocation": "23713:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2258,
                  "src": "23705:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23705:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23680:45:2"
            },
            "returnParameters": {
              "id": 2230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2229,
                  "mutability": "mutable",
                  "name": "overallRewards",
                  "nameLocation": "23774:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2258,
                  "src": "23766:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23766:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23765:24:2"
            },
            "scope": 2430,
            "src": "23654:419:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9924
            ],
            "body": {
              "id": 2278,
              "nodeType": "Block",
              "src": "24221:106:2",
              "statements": [
                {
                  "expression": {
                    "id": 2276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2268,
                      "name": "challengeScores",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2266,
                      "src": "24231:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2269,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "24249:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 2271,
                            "indexExpression": {
                              "id": 2270,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2260,
                              "src": "24261:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "24249:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 2272,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "submitterInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2469,
                          "src": "24249:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                            "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                          }
                        },
                        "id": 2274,
                        "indexExpression": {
                          "id": 2273,
                          "name": "participant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2262,
                          "src": "24292:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "24249:55:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Information_$2454_storage",
                          "typeString": "struct CompetitionStorage.Information storage ref"
                        }
                      },
                      "id": 2275,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "challengeScores",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2447,
                      "src": "24249:71:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24231:89:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2277,
                  "nodeType": "ExpressionStatement",
                  "src": "24231:89:2"
                }
              ]
            },
            "functionSelector": "d885e39b",
            "id": 2279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChallengeScores",
            "nameLocation": "24088:18:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2264,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24170:8:2"
            },
            "parameters": {
              "id": 2263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2260,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "24114:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2279,
                  "src": "24107:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2259,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "24107:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2262,
                  "mutability": "mutable",
                  "name": "participant",
                  "nameLocation": "24139:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2279,
                  "src": "24131:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24131:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24106:45:2"
            },
            "returnParameters": {
              "id": 2267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2266,
                  "mutability": "mutable",
                  "name": "challengeScores",
                  "nameLocation": "24200:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2279,
                  "src": "24192:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2265,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24192:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24191:25:2"
            },
            "scope": 2430,
            "src": "24079:248:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9934
            ],
            "body": {
              "id": 2299,
              "nodeType": "Block",
              "src": "24477:108:2",
              "statements": [
                {
                  "expression": {
                    "id": 2297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2289,
                      "name": "tournamentScores",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2287,
                      "src": "24487:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2290,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "24506:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 2292,
                            "indexExpression": {
                              "id": 2291,
                              "name": "challengeNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2281,
                              "src": "24518:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "24506:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 2293,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "submitterInfo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2469,
                          "src": "24506:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                            "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                          }
                        },
                        "id": 2295,
                        "indexExpression": {
                          "id": 2294,
                          "name": "participant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2283,
                          "src": "24549:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "24506:55:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Information_$2454_storage",
                          "typeString": "struct CompetitionStorage.Information storage ref"
                        }
                      },
                      "id": 2296,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tournamentScores",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2449,
                      "src": "24506:72:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24487:91:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2298,
                  "nodeType": "ExpressionStatement",
                  "src": "24487:91:2"
                }
              ]
            },
            "functionSelector": "7a378430",
            "id": 2300,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTournamentScores",
            "nameLocation": "24342:19:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2285,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24425:8:2"
            },
            "parameters": {
              "id": 2284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2281,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "24369:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2300,
                  "src": "24362:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2280,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "24362:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2283,
                  "mutability": "mutable",
                  "name": "participant",
                  "nameLocation": "24394:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2300,
                  "src": "24386:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2282,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24386:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24361:45:2"
            },
            "returnParameters": {
              "id": 2288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2287,
                  "mutability": "mutable",
                  "name": "tournamentScores",
                  "nameLocation": "24455:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2300,
                  "src": "24447:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24447:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24446:26:2"
            },
            "scope": 2430,
            "src": "24333:252:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9946
            ],
            "body": {
              "id": 2324,
              "nodeType": "Block",
              "src": "24736:97:2",
              "statements": [
                {
                  "expression": {
                    "id": 2322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2312,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2310,
                      "src": "24746:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2313,
                                "name": "_challenges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2511,
                                "src": "24754:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                  "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                                }
                              },
                              "id": 2315,
                              "indexExpression": {
                                "id": 2314,
                                "name": "challengeNumber",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2302,
                                "src": "24766:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "24754:28:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                                "typeString": "struct CompetitionStorage.Challenge storage ref"
                              }
                            },
                            "id": 2316,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "submitterInfo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2469,
                            "src": "24754:42:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Information_$2454_storage_$",
                              "typeString": "mapping(address => struct CompetitionStorage.Information storage ref)"
                            }
                          },
                          "id": 2318,
                          "indexExpression": {
                            "id": 2317,
                            "name": "participant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2304,
                            "src": "24797:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24754:55:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Information_$2454_storage",
                            "typeString": "struct CompetitionStorage.Information storage ref"
                          }
                        },
                        "id": 2319,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "info",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2453,
                        "src": "24754:60:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2321,
                      "indexExpression": {
                        "id": 2320,
                        "name": "itemNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2306,
                        "src": "24815:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "24754:72:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24746:80:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2323,
                  "nodeType": "ExpressionStatement",
                  "src": "24746:80:2"
                }
              ]
            },
            "functionSelector": "e7d5c4ea",
            "id": 2325,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInformation",
            "nameLocation": "24600:14:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2308,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24698:8:2"
            },
            "parameters": {
              "id": 2307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2302,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "24622:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2325,
                  "src": "24615:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2301,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "24615:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2304,
                  "mutability": "mutable",
                  "name": "participant",
                  "nameLocation": "24647:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2325,
                  "src": "24639:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24639:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2306,
                  "mutability": "mutable",
                  "name": "itemNumber",
                  "nameLocation": "24668:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2325,
                  "src": "24660:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24660:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24614:65:2"
            },
            "returnParameters": {
              "id": 2311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2310,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "24725:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2325,
                  "src": "24720:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2309,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "24720:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24719:12:2"
            },
            "scope": 2430,
            "src": "24591:242:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9956
            ],
            "body": {
              "id": 2344,
              "nodeType": "Block",
              "src": "24962:73:2",
              "statements": [
                {
                  "expression": {
                    "id": 2342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2335,
                      "name": "deadline",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2333,
                      "src": "24972:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 2336,
                            "name": "_challenges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2511,
                            "src": "24983:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                              "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                            }
                          },
                          "id": 2338,
                          "indexExpression": {
                            "id": 2337,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2327,
                            "src": "24995:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24983:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                            "typeString": "struct CompetitionStorage.Challenge storage ref"
                          }
                        },
                        "id": 2339,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deadlines",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2473,
                        "src": "24983:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2341,
                      "indexExpression": {
                        "id": 2340,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2329,
                        "src": "25022:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "24983:45:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24972:56:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2343,
                  "nodeType": "ExpressionStatement",
                  "src": "24972:56:2"
                }
              ]
            },
            "functionSelector": "57d0cf58",
            "id": 2345,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDeadlines",
            "nameLocation": "24848:12:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2331,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24918:8:2"
            },
            "parameters": {
              "id": 2330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2327,
                  "mutability": "mutable",
                  "name": "challengeNumber",
                  "nameLocation": "24868:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2345,
                  "src": "24861:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2326,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "24861:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2329,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "24893:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2345,
                  "src": "24885:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24885:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24860:39:2"
            },
            "returnParameters": {
              "id": 2334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2333,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "24948:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2345,
                  "src": "24940:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24940:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24939:18:2"
            },
            "scope": 2430,
            "src": "24839:196:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9962
            ],
            "body": {
              "id": 2365,
              "nodeType": "Block",
              "src": "25126:101:2",
              "statements": [
                {
                  "expression": {
                    "id": 2363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2351,
                      "name": "remainder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2349,
                      "src": "25136:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2356,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "25173:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Competition_$2430",
                                    "typeString": "contract Competition"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Competition_$2430",
                                    "typeString": "contract Competition"
                                  }
                                ],
                                "id": 2355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "25165:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2354,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "25165:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "25165:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2352,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2480,
                              "src": "25148:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IToken_$10212",
                                "typeString": "contract IToken"
                              }
                            },
                            "id": 2353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10111,
                            "src": "25148:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25148:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 2359,
                          "name": "_currentTotalStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2490,
                          "src": "25182:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "25148:53:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 2361,
                        "name": "_competitionPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2486,
                        "src": "25204:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "25148:72:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25136:84:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2364,
                  "nodeType": "ExpressionStatement",
                  "src": "25136:84:2"
                }
              ]
            },
            "functionSelector": "f109a624",
            "id": 2366,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRemainder",
            "nameLocation": "25050:12:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2347,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25081:8:2"
            },
            "parameters": {
              "id": 2346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25062:2:2"
            },
            "returnParameters": {
              "id": 2350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2349,
                  "mutability": "mutable",
                  "name": "remainder",
                  "nameLocation": "25111:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2366,
                  "src": "25103:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25103:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25102:19:2"
            },
            "scope": 2430,
            "src": "25041:186:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9968
            ],
            "body": {
              "id": 2376,
              "nodeType": "Block",
              "src": "25322:35:2",
              "statements": [
                {
                  "expression": {
                    "id": 2374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2372,
                      "name": "message",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2370,
                      "src": "25332:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2373,
                      "name": "_message",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2502,
                      "src": "25342:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "25332:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 2375,
                  "nodeType": "ExpressionStatement",
                  "src": "25332:18:2"
                }
              ]
            },
            "functionSelector": "ce6d41de",
            "id": 2377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMessage",
            "nameLocation": "25242:10:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2368,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25273:8:2"
            },
            "parameters": {
              "id": 2367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25252:2:2"
            },
            "returnParameters": {
              "id": 2371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2370,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "25309:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2377,
                  "src": "25295:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2369,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "25295:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25294:23:2"
            },
            "scope": 2430,
            "src": "25233:124:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9976
            ],
            "body": {
              "id": 2428,
              "nodeType": "Block",
              "src": "25524:431:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 2387,
                              "name": "_challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2511,
                              "src": "25542:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Challenge_$2477_storage_$",
                                "typeString": "mapping(uint32 => struct CompetitionStorage.Challenge storage ref)"
                              }
                            },
                            "id": 2389,
                            "indexExpression": {
                              "id": 2388,
                              "name": "_challengeCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2482,
                              "src": "25554:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "25542:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$2477_storage",
                              "typeString": "struct CompetitionStorage.Challenge storage ref"
                            }
                          },
                          "id": 2390,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "phase",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2464,
                          "src": "25542:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "34",
                          "id": 2391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25582:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "25542:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d7065746974696f6e202d2073706f6e736f723a20504c65617365207761697420666f7220746865206368616c6c656e676520746f20636f6d706c657465206265666f72652073706f6e736f72696e672e",
                        "id": 2393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25585:85:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e2cf507b310c2155c42bd9c80f47de57f1198829cee17967c2509ca5f2ce7f0",
                          "typeString": "literal_string \"Competition - sponsor: PLease wait for the challenge to complete before sponsoring.\""
                        },
                        "value": "Competition - sponsor: PLease wait for the challenge to complete before sponsoring."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e2cf507b310c2155c42bd9c80f47de57f1198829cee17967c2509ca5f2ce7f0",
                          "typeString": "literal_string \"Competition - sponsor: PLease wait for the challenge to complete before sponsoring.\""
                        }
                      ],
                      "id": 2386,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25534:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25534:137:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2395,
                  "nodeType": "ExpressionStatement",
                  "src": "25534:137:2"
                },
                {
                  "assignments": [
                    2397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2397,
                      "mutability": "mutable",
                      "name": "currentCompPoolAmt",
                      "nameLocation": "25689:18:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 2428,
                      "src": "25681:26:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2396,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25681:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2399,
                  "initialValue": {
                    "id": 2398,
                    "name": "_competitionPool",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2486,
                    "src": "25710:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25681:45:2"
                },
                {
                  "expression": {
                    "id": 2404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2400,
                      "name": "_competitionPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2486,
                      "src": "25736:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2401,
                        "name": "currentCompPoolAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2397,
                        "src": "25755:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 2402,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2380,
                        "src": "25776:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "25755:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25736:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2405,
                  "nodeType": "ExpressionStatement",
                  "src": "25736:51:2"
                },
                {
                  "expression": {
                    "id": 2417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2406,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2384,
                      "src": "25797:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2409,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "25827:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "25827:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 2413,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "25847:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Competition_$2430",
                                "typeString": "contract Competition"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Competition_$2430",
                                "typeString": "contract Competition"
                              }
                            ],
                            "id": 2412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "25839:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2411,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "25839:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25839:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2415,
                          "name": "amountToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2380,
                          "src": "25854:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2407,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2480,
                          "src": "25807:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IToken_$10212",
                            "typeString": "contract IToken"
                          }
                        },
                        "id": 2408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transferFrom",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10140,
                        "src": "25807:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,address,uint256) external returns (bool)"
                        }
                      },
                      "id": 2416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25807:59:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "25797:69:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2418,
                  "nodeType": "ExpressionStatement",
                  "src": "25797:69:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2420,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "25890:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "25890:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2422,
                        "name": "amountToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2380,
                        "src": "25902:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2423,
                          "name": "currentCompPoolAmt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2397,
                          "src": "25915:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 2424,
                          "name": "amountToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2380,
                          "src": "25936:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "25915:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2419,
                      "name": "Sponsor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10095,
                      "src": "25882:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25882:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2427,
                  "nodeType": "EmitStatement",
                  "src": "25877:71:2"
                }
              ]
            },
            "documentation": {
              "id": 2378,
              "nodeType": "StructuredDocumentation",
              "src": "25363:64:2",
              "text": "METHODS CALLABLE BY BOTH ADMIN AND PARTICIPANTS.*"
            },
            "functionSelector": "b6cce5e2",
            "id": 2429,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sponsor",
            "nameLocation": "25442:7:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2382,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25484:8:2"
            },
            "parameters": {
              "id": 2381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2380,
                  "mutability": "mutable",
                  "name": "amountToken",
                  "nameLocation": "25458:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2429,
                  "src": "25450:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2379,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25450:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25449:21:2"
            },
            "returnParameters": {
              "id": 2385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2384,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "25511:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 2429,
                  "src": "25506:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2383,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "25506:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25505:14:2"
            },
            "scope": 2430,
            "src": "25433:522:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2431,
        "src": "573:25384:2",
        "usedErrors": []
      }
    ],
    "src": "0:25957:2"
  },
  "bytecode": "608060405234801561001057600080fd5b50614665806100206000396000f3fe608060405234801561001057600080fd5b50600436106103d05760003560e01c8063736d8c91116101ff578063c8f971df1161011a578063dc9f76eb116100ad578063eecfc33f1161007c578063eecfc33f14610a5f578063f109a62414610a88578063f7fb373d14610a90578063ffc6ff1e14610aa357600080fd5b8063dc9f76eb146109a7578063dec9bf2f146109ba578063e6184ab8146109cd578063e7d5c4ea14610a1057600080fd5b8063d547741f116100e9578063d547741f14610936578063d68a7c0014610949578063d885e39b14610951578063dc1e207c1461099457600080fd5b8063c8f971df146108f3578063ce6d41de14610906578063d09e2c211461091b578063d4f4b8061461092e57600080fd5b806397d9abb811610192578063aa658b6911610161578063aa658b691461084c578063af976fec1461088f578063b6cce5e2146108cd578063c55e86b1146108e057600080fd5b806397d9abb81461080b5780639f2492a21461081e578063a217fddf14610831578063a6ab36f21461083957600080fd5b80637bfc90b2116101ce5780637bfc90b2146107d557806391d14854146107e8578063920920ba146107fb57806393a9dac71461080357600080fd5b8063736d8c911461073057806373af6745146107565780637a378430146107695780637a766460146107ac57600080fd5b8063343cb6be116102ef5780634a31156f116102825780635e35d498116102515780635e35d498146106875780635ef533291461069a57806360cdb6cc146106ad5780636c981570146106ed57600080fd5b80634a31156f1461060b578063572c686a1461062b57806357d0cf581461063e5780635d7e94671461067457600080fd5b80633c35f180116102be5780633c35f180146105795780633cbcb53a1461058c5780633f230915146105cf5780634169293b146105e257600080fd5b8063343cb6be1461053057806336568abe1461053857806337d6b9971461054b57806339e287771461055357600080fd5b80631a73ba01116103675780632d071f1a116103365780632d071f1a146104ed5780632f2ff15d14610500578063315c455e146105155780633228cf721461052857600080fd5b80631a73ba01146104a75780631e2ff711146104ba578063248a9ca3146104c257806325b06746146104e557600080fd5b806315343c11116103a357806315343c111461044e57806318829fc31461047757806318b125d11461047f5780631923be241461049457600080fd5b806301ffc9a7146103d557806302881b52146103fd57806310fe9ae8146104105780631442b8681461042b575b600080fd5b6103e86103e33660046140dc565b610aab565b60405190151581526020015b60405180910390f35b6103e861040b366004614369565b610ae2565b6001546040516001600160a01b0390911681526020016103f4565b6104406000805160206145d083398151915281565b6040519081526020016103f4565b61044061045c3660046141bd565b63ffffffff166000908152600d602052604090206002015490565b600454610440565b6104406000805160206145f083398151915281565b6103e86104a2366004614104565b610b6e565b6103e86104b5366004613f3f565b610be4565b600654610440565b6104406104d0366004614047565b60009081526020819052604090206001015490565b600554610440565b6103e86104fb366004614384565b611020565b61051361050e36600461405f565b611087565b005b6103e8610523366004614047565b611116565b600854610440565b600254610440565b61051361054636600461405f565b611157565b6103e86111d1565b6104406105613660046141bd565b63ffffffff166000908152600d602052604090205490565b6103e86105873660046142e2565b611393565b61044061059a3660046141d7565b63ffffffff9091166000908152600d602090815260408083206001600160a01b03909416835260059093019052206003015490565b6103e86105dd36600461408a565b61160a565b6104406105f03660046141bd565b63ffffffff166000908152600d602052604090206003015490565b61061e610619366004614384565b61174f565b6040516103f491906143d7565b6103e8610639366004614047565b61183a565b61044061064c366004614369565b63ffffffff9091166000908152600d6020908152604080832093835260069093019052205490565b6103e8610682366004613f3f565b6118a9565b6103e8610695366004614047565b611b11565b6103e86106a8366004614047565b611b80565b6104406106bb3660046141d7565b63ffffffff9091166000908152600d602090815260408083206001600160a01b03909416835260059093019052205490565b6104406106fb3660046141d7565b63ffffffff9091166000908152600d602090815260408083206001600160a01b03909416835260059093019052206002015490565b600154600160a01b900463ffffffff165b60405163ffffffff90911681526020016103f4565b6103e861076436600461408a565b611bef565b6104406107773660046141d7565b63ffffffff9091166000908152600d602090815260408083206001600160a01b03909416835260059093019052206006015490565b6104406107ba366004613f25565b6001600160a01b03166000908152600c602052604090205490565b6103e86107e3366004614047565b611d27565b6103e86107f636600461405f565b611d96565b600a54610440565b600954610440565b6104406108193660046141d7565b611dbf565b61074161082c366004614047565b611e17565b610440600081565b610513610847366004614189565b611efc565b61044061085a3660046141d7565b63ffffffff9091166000908152600d602090815260408083206001600160a01b03909416835260059093019052206004015490565b6108bb61089d3660046141bd565b63ffffffff166000908152600d602052604090206004015460ff1690565b60405160ff90911681526020016103f4565b6103e86108db366004614047565b612077565b6103e86108ee36600461408a565b612206565b6104406109013660046141bd565b6122b9565b61090e6122da565b6040516103f49190614424565b6103e8610929366004613f68565b61236c565b600354610440565b61051361094436600461405f565b6123d0565b600754610440565b61044061095f3660046141d7565b63ffffffff9091166000908152600d602090815260408083206001600160a01b03909416835260059384019091529020015490565b6103e86109a23660046140ab565b612450565b6103e86109b53660046143b6565b6126c8565b6103e86109c836600461423b565b612897565b6104406109db3660046141d7565b63ffffffff9091166000908152600d602090815260408083206001600160a01b03909416835260059093019052206001015490565b610440610a1e366004614200565b63ffffffff9092166000908152600d602090815260408083206001600160a01b03909416835260059093018152828220938252600790930190925290205490565b610440610a6d3660046141bd565b63ffffffff166000908152600d602052604090206001015490565b610440612bc6565b610741610a9e36600461408a565b612c63565b6103e8612d32565b60006001600160e01b03198216637965db0b60e01b1480610adc57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000610afc6000805160206145d083398151915233611d96565b610b215760405162461bcd60e51b8152600401610b1890614477565b60405180910390fd5b5063ffffffff82166000908152600d60205260408082206003018390555160019183917f840bdca8f6c2cde252f010db5e96e3b79deb9d4cf7c64989f75ff7325b0d3c609190a292915050565b6000610b886000805160206145d083398151915233611d96565b610ba45760405162461bcd60e51b8152600401610b1890614477565b610bb0600b8484613e12565b50506040516001907f89dbe1e8a053a391becc713b9c088b57cf1855cf857803e49eaae2f8fbc3b1cd90600090a192915050565b600154600090600160a01b810463ffffffff16906001600160a01b03163314610c8c5760405162461bcd60e51b815260206004820152604e60248201527f436f6d7065746974696f6e202d2064656372656173655374616b653a20506c6560448201527f6173652063616c6c20746869732066756e6374696f6e2076696120746865207460648201526d37b5b2b71031b7b73a3930b1ba1760911b608482015260a401610b18565b600154600160a01b900463ffffffff166000908152600d602052604090206004015460ff1660021415610d5c5760405162461bcd60e51b815260206004820152606660248201527f436f6d7065746974696f6e202d2064656372656173655374616b653a20506c6560448201527f617365207761697420666f7220746865207374616b696e6720706572696f642060648201527f746f20756e6c6f636b206265666f7265206d6f64696679696e6720796f75722060848201526539ba30b5b29760d11b60a482015260c401610b18565b6001600160a01b0384166000908152600c602052604090205480841115610deb5760405162461bcd60e51b815260206004820152603f60248201527f436f6d7065746974696f6e202d2064656372656173655374616b653a20496e7360448201527f756666696369656e742066756e647320666f72207769746864726177616c2e006064820152608401610b18565b63ffffffff82166000908152600d602090815260408083206001600160a01b038916845260050190915290205415610f1c57600254610e2a8583614505565b1015610ee15760405162461bcd60e51b815260206004820152607460248201527f436f6d7065746974696f6e202d2064656372656173655374616b653a20596f7560448201527f206d6179206e6f74206c6f77657220796f7572207374616b652062656c6f772060648201527f746865207468726573686f6c64207768696c6520796f75206861766520616e2060848201527332bc34b9ba34b7339039bab136b4b9b9b4b7b71760611b60a482015260c401610b18565b610eeb8482614505565b63ffffffff83166000908152600d602090815260408083206001600160a01b038a1684526005019091529020600101555b610f268482614505565b6001600160a01b0386166000908152600c602052604081209190915560058054869290610f54908490614505565b909155505060015460405163a9059cbb60e01b81526001600160a01b038781166004830152602482018790529091169063a9059cbb90604401602060405180830381600087803b158015610fa757600080fd5b505af1158015610fbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdf9190614027565b925083856001600160a01b03167f700865370ffb2a65a2b0242e6a64b21ac907ed5ecd46c9cffc729c177b2b1c6960405160405180910390a3505092915050565b600061103a6000805160206145d083398151915233611d96565b6110565760405162461bcd60e51b8152600401610b1890614477565b63ffffffff84166000908152600d60209081526040808320868452600601909152902082905560015b949350505050565b6000828152602081905260409020600101546110a4905b33611d96565b6111085760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526e0818591b5a5b881d1bc819dc985b9d608a1b6064820152608401610b18565b6111128282612e56565b5050565b60006111306000805160206145d083398151915233611d96565b61114c5760405162461bcd60e51b8152600401610b1890614477565b610adc600083612eda565b6001600160a01b03811633146111c75760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610b18565b61111282826130e1565b60006111eb6000805160206145d083398151915233611d96565b6112075760405162461bcd60e51b8152600401610b1890614477565b600154600160a01b900463ffffffff166000908152600d6020526040902060049081015460ff16146112c75760405162461bcd60e51b815260206004820152605f60248201527f436f6d7065746974696f6e202d206d6f766552656d61696e646572546f506f6f60448201527f6c3a20504c65617365207761697420666f7220746865206368616c6c656e676560648201527f20746f20636f6d706c657465206265666f72652073706f6e736f72696e672e00608482015260a401610b18565b60006112d1612bc6565b9050600081116113495760405162461bcd60e51b815260206004820152603860248201527f436f6d7065746974696f6e202d206d6f766552656d61696e646572546f506f6f60448201527f6c3a204e6f2072656d61696e64657220746f206d6f76652e00000000000000006064820152608401610b18565b806003600082825461135b91906144ae565b90915550506040516001925081907fda446d0471a795498335ed4bc219b34921a12ccb87136a9aa03964adc83eadf390600090a25090565b60006113ad6000805160206145d083398151915233611d96565b6113c95760405162461bcd60e51b8152600401610b1890614477565b63ffffffff87166000908152600d6020526040902060040154600360ff909116101561146d5760405162461bcd60e51b815260206004820152604760248201527f436f6d7065746974696f6e202d20757064617465496e666f726d6174696f6e4260448201527f617463683a204368616c6c656e676520697320696e20756e65787065637465646064820152661039ba30ba329760c91b608482015260a401610b18565b8482146115015760405162461bcd60e51b815260206004820152605660248201527f436f6d7065746974696f6e202d20757064617465496e666f726d6174696f6e4260448201527f617463683a204e756d626572206f66207061727469636970616e747320616e64606482015275103b30b63ab2b99030b932903234b33332b932b73a1760511b608482015260a401610b18565b60005b858110156115c85783838281811061152c57634e487b7160e01b600052603260045260246000fd5b90506020020135600d60008a63ffffffff1663ffffffff168152602001908152602001600020600501600089898581811061157757634e487b7160e01b600052603260045260246000fd5b905060200201602081019061158c9190613f25565b6001600160a01b0316815260208082019290925260409081016000908120898252600701909252902055806115c08161457a565b915050611504565b5050604051600190849063ffffffff8916907fdfc0e8d429222115bcdeae8834d5fbcecc360f743768fc2a9693a30a379999e990600090a39695505050505050565b60006116246000805160206145d083398151915233611d96565b6116405760405162461bcd60e51b8152600401610b1890614477565b60018054600160a01b900463ffffffff166000818152600d6020526040902060040154909160ff909116146116d15760405162461bcd60e51b815260206004820152603160248201527f436f6d7065746974696f6e202d20757064617465446174617365743a20436861604482015270363632b733b29034b99031b637b9b2b21760791b6064820152608401610b18565b836117445760405162461bcd60e51b815260206004820152603c60248201527f436f6d7065746974696f6e202d20757064617465446174617365743a204d757360448201527f742068617665207072652d6578697374696e6720646174617365742e000000006064820152608401610b18565b61107f818585613146565b6060600061175d8484614505565b67ffffffffffffffff81111561178357634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156117ac578160200160208202803683370190505b5063ffffffff86166000908152600d60205260409020909150600701845b8481101561182f576117dc82826132a6565b836117e78884614505565b8151811061180557634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209283029190910190910152806118278161457a565b9150506117ca565b509095945050505050565b60006118546000805160206145d083398151915233611d96565b6118705760405162461bcd60e51b8152600401610b1890614477565b50600481905560405160019082907f73e002420a7defb91818836f9aaa83222b749a40c213c7c0fbccaacdd259e05290600090a2919050565b600154600090600160a01b810463ffffffff16906001600160a01b031633146119515760405162461bcd60e51b815260206004820152604e60248201527f436f6d7065746974696f6e202d20696e6372656173655374616b653a20506c6560448201527f6173652063616c6c20746869732066756e6374696f6e2076696120746865207460648201526d37b5b2b71031b7b73a3930b1ba1760911b608482015260a401610b18565b63ffffffff81166000908152600d602052604090206004015460ff1660021415611a185760405162461bcd60e51b815260206004820152606660248201527f436f6d7065746974696f6e202d20696e6372656173655374616b653a20506c6560448201527f617365207761697420666f7220746865207374616b696e6720706572696f642060648201527f746f20756e6c6f636b206265666f7265206d6f64696679696e6720796f75722060848201526539ba30b5b29760d11b60a482015260c401610b18565b6001600160a01b0384166000818152600c602090815260408083205463ffffffff86168452600d8352818420948452600590940190915290205415611a9257611a6184826144ae565b63ffffffff83166000908152600d602090815260408083206001600160a01b038a1684526005019091529020600101555b611a9c84826144ae565b6001600160a01b0386166000908152600c602052604081209190915560058054869290611aca9084906144ae565b90915550506040516001935084906001600160a01b038716907f8b0ed825817a2e696c9a931715af4609fc60e1701f09c89ee7645130e937eb2d90600090a3505092915050565b6000611b2b6000805160206145d083398151915233611d96565b611b475760405162461bcd60e51b8152600401610b1890614477565b50600a81905560405160019082907f211318e1b6942c96eaad65d5f6c4c520722236466093427de4dacb729bd36dfb90600090a2919050565b6000611b9a6000805160206145d083398151915233611d96565b611bb65760405162461bcd60e51b8152600401610b1890614477565b50600281905560405160019082907f99c5af1f811b150d39d592621f8f23f4df7e5664642f227684973847eb2888be90600090a2919050565b6000611c096000805160206145d083398151915233611d96565b611c255760405162461bcd60e51b8152600401610b1890614477565b60018054600160a01b900463ffffffff166000818152600d6020526040902060040154909160ff90911614611cb25760405162461bcd60e51b815260206004820152602d60248201527f436f6d7065746974696f6e202d207570646174654b65793a204368616c6c656e60448201526c33b29034b99031b637b9b2b21760991b6064820152608401610b18565b83611d1c5760405162461bcd60e51b815260206004820152603460248201527f436f6d7065746974696f6e202d207570646174654b65793a204d7573742068616044820152733b329038393296b2bc34b9ba34b7339035b2bc9760611b6064820152608401610b18565b61107f8185856132b2565b6000611d416000805160206145d083398151915233611d96565b611d5d5760405162461bcd60e51b8152600401610b1890614477565b50600981905560405160019082907f94327140b3bb3bb989865fef53b345cd1ddd7991b30e3233137ab646448fbeb590600090a2919050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b63ffffffff82166000908152600d602090815260408083206001600160a01b03851684526005019091528120600481015460038201546002909201549091611e06916144ae565b611e1091906144ae565b9392505050565b336000908152600c6020526040812054600254811015611e9f5760405162461bcd60e51b815260206004820152603d60248201527f436f6d7065746974696f6e202d207375626d69744e657750726564696374696f60448201527f6e733a205374616b652069732062656c6f77207468726573686f6c642e0000006064820152608401610b18565b611eaa60008461340e565b63ffffffff81166000908152600d60205260409020909250611ecf90600701336135fa565b5063ffffffff82166000908152600d60209081526040808320338452600501909152902060010155919050565b600e54610100900460ff1680611f155750600e5460ff16155b611f785760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b18565b600e54610100900460ff16158015611f9a57600e805461ffff19166101011790555b6001600160a01b038216611ff05760405162461bcd60e51b815260206004820152601760248201527f4e6f20746f6b656e206164647265737320666f756e642e0000000000000000006044820152606401610b18565b611ff861360f565b60028490556004838155600180546001600160c01b0319166001600160a01b0385161790819055600160a01b900463ffffffff166000908152600d602052604090208101805460ff191690911790556702c68af0bb140000600955670853a0d2313c0000600a55801561207157600e805461ff00191690555b50505050565b600154600160a01b900463ffffffff166000908152600d6020526040812060049081015460ff161461212d5760405162461bcd60e51b815260206004820152605360248201527f436f6d7065746974696f6e202d2073706f6e736f723a20504c6561736520776160448201527f697420666f7220746865206368616c6c656e676520746f20636f6d706c657465606482015272103132b337b9329039b837b739b7b934b7339760691b608482015260a401610b18565b60035461213a83826144ae565b6003556001546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561218f57600080fd5b505af11580156121a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121c79190614027565b91506121d383826144ae565b604051849033907f64939930c3fd0a1fe9e7fb9810272db7730a0f02b900972787bcb79fb6fd3d2d90600090a450919050565b60006122206000805160206145d083398151915233611d96565b61223c5760405162461bcd60e51b8152600401610b1890614477565b826122af5760405162461bcd60e51b815260206004820152603c60248201527f436f6d7065746974696f6e202d20757064617465526573756c74733a204d757360448201527f742068617665207072652d6578697374696e6720726573756c74732e000000006064820152608401610b18565b611e108383612eda565b63ffffffff81166000908152600d60205260408120610adc9060070161367f565b6060600b80546122e99061453f565b80601f01602080910402602001604051908101604052809291908181526020018280546123159061453f565b80156123625780601f1061233757610100808354040283529160200191612362565b820191906000526020600020905b81548152906001019060200180831161234557829003601f168201915b5050505050905090565b60006123866000805160206145d083398151915233611d96565b6123a25760405162461bcd60e51b8152600401610b1890614477565b6001546123c390600160a01b900463ffffffff168a8a8a8a8a8a8a8a613689565b9998505050505050505050565b6000828152602081905260409020600101546123eb9061109e565b6111c75760405162461bcd60e51b815260206004820152603060248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526f2061646d696e20746f207265766f6b6560801b6064820152608401610b18565b600061246a6000805160206145d083398151915233611d96565b6124865760405162461bcd60e51b8152600401610b1890614477565b600154600160a01b900463ffffffff166000818152600d6020526040902060049081015460ff16146125205760405162461bcd60e51b815260206004820152603a60248201527f436f6d7065746974696f6e202d206f70656e4368616c6c656e67653a2050726560448201527f76696f757320706861736520697320696e636f6d706c6574652e0000000000006064820152608401610b18565b600454600354101561258c5760405162461bcd60e51b815260206004820152602f60248201527f436f6d70657469746f6e202d206f70656e4368616c6c656e67653a204e6f742060448201526e32b737bab3b4103932bbb0b932399760891b6064820152608401610b18565b8061259681614595565b63ffffffff81166000818152600d602052604081206004018054600160ff199091168117909155805463ffffffff60a01b1916600160a01b909302929092179091559092506125e89150829088613146565b506125f5816000876132b2565b50670de0b6b3a764000060095460035461260f91906144e6565b61261991906144c6565b600755600a54600354670de0b6b3a764000091612635916144e6565b61263f91906144c6565b60088190556007546003546126549190614505565b61265e9190614505565b600690815563ffffffff82166000818152600d6020908152604080832083805290940190528281208790556001808252838220879055925192945090917f9da6f4cd0f617f153c3ebc9840a08792cff9f0fd8c796ce09c5d2006f42da6d99190a250949350505050565b60006126e26000805160206145d083398151915233611d96565b6126fe5760405162461bcd60e51b8152600401610b1890614477565b600154600160a01b900463ffffffff1660ff83166002108015612724575060058360ff16105b6127bc5760405162461bcd60e51b815260206004820152605a60248201527f436f6d7065746974696f6e202d20616476616e6365546f50686173653a20596f60448201527f75206d6179206f6e6c79207573652074686973206d6574686f6420666f72206160648201527f6476616e63696e6720746f207068617365732033206f7220342e000000000000608482015260a401610b18565b63ffffffff81166000908152600d602052604090206004015460ff166127e360018561451c565b60ff16146128675760405162461bcd60e51b815260206004820152604560248201527f436f6d7065746974696f6e202d20616476616e6365546f50686173653a20596f60448201527f75206d6179206f6e6c7920616476616e636520746f20746865206e65787420706064820152643430b9b29760d91b608482015260a401610b18565b63ffffffff166000908152600d60205260409020600401805460ff191660ff939093169290921790915550600190565b60006128b16000805160206145d083398151915233611d96565b6128cd5760405162461bcd60e51b8152600401610b1890614477565b63ffffffff88166000908152600d6020526040902060040154600360ff909116101561297d5760405162461bcd60e51b815260206004820152605360248201527f436f6d7065746974696f6e202d207570646174654368616c6c656e6765416e6460448201527f546f75726e616d656e7453636f7265733a204368616c6c656e6765206973206960648201527237103ab732bc3832b1ba32b21039ba30ba329760691b608482015260a401610b18565b858414801561298b57508582145b612a2e5760405162461bcd60e51b815260206004820152606260248201527f436f6d7065746974696f6e202d207570646174654368616c6c656e6765416e6460448201527f546f75726e616d656e7453636f7265733a204e756d626572206f66207061727460648201527f69636970616e747320616e642073636f7265732061726520646966666572656e6084820152613a1760f11b60a482015260c401610b18565b60005b86811015612b8557858582818110612a5957634e487b7160e01b600052603260045260246000fd5b90506020020135600d60008b63ffffffff1663ffffffff16815260200190815260200160002060050160008a8a85818110612aa457634e487b7160e01b600052603260045260246000fd5b9050602002016020810190612ab99190613f25565b6001600160a01b03168152602081019190915260400160002060050155838382818110612af657634e487b7160e01b600052603260045260246000fd5b90506020020135600d60008b63ffffffff1663ffffffff16815260200190815260200160002060050160008a8a85818110612b4157634e487b7160e01b600052603260045260246000fd5b9050602002016020810190612b569190613f25565b6001600160a01b0316815260208101919091526040016000206006015580612b7d8161457a565b915050612a31565b505060405160019063ffffffff8916907f6fa7224843e16ab8c76a13b984cfcf54de67707a118bf52ce93e0e5be358987190600090a2979650505050505050565b6003546005546001546040516370a0823160e01b815230600482015260009392916001600160a01b0316906370a082319060240160206040518083038186803b158015612c1257600080fd5b505afa158015612c26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c4a9190614171565b612c549190614505565b612c5e9190614505565b905090565b600082612cd15760405162461bcd60e51b8152602060048201526042602482015260008051602061461083398151915260448201527f4d7573742068617665207072652d6578697374696e67207375626d697373696f606482015261371760f11b608482015260a401610b18565b612cdb838361340e565b905081610adc5763ffffffff81166000908152600d60205260409020612d0490600701336139ec565b5063ffffffff81166000908152600d6020908152604080832033845260050190915281206001015592915050565b6000612d4c6000805160206145d083398151915233611d96565b612d685760405162461bcd60e51b8152600401610b1890614477565b60018054600160a01b900463ffffffff166000818152600d6020526040902060040154909160ff90911614612e055760405162461bcd60e51b815260206004820152603d60248201527f436f6d7065746974696f6e202d20636c6f73655375626d697373696f6e3a204360448201527f68616c6c656e676520696e20756e65787065637465642073746174652e0000006064820152608401610b18565b63ffffffff81166000818152600d6020526040808220600401805460ff1916600217905551600194507faa5ebdc7900b87a79257aabbab219af255ada0be7148632ce5afcd622df7a88b9190a25090565b612e608282611d96565b611112576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055612e963390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600081831415612f635760405162461bcd60e51b815260206004820152604860248201527f436f6d7065746974696f6e202d20757064617465526573756c74733a2043616e60448201527f6e6f74207570646174652077697468207468652073616d652068617368206173606482015267103132b337b9329760c11b608482015260a401610b18565b600154600160a01b900463ffffffff166000818152600d6020526040902060040154600360ff90911610156130005760405162461bcd60e51b815260206004820152603b60248201527f436f6d7065746974696f6e202d20757064617465526573756c74733a2043686160448201527f6c6c656e676520696e20756e65787065637465642073746174652e00000000006064820152608401610b18565b63ffffffff81166000908152600d6020526040902060010154841461308d5760405162461bcd60e51b815260206004820152603c60248201527f436f6d7065746974696f6e202d20757064617465526573756c74733a20436c6160448201527f736820696e206578697374696e6720726573756c747320686173682e000000006064820152608401610b18565b63ffffffff81166000818152600d6020526040808220600190810187905590519094508592879290917f0fb7d772905d44c5fdd59d4ab87c7f40281e09f93e2e189d03737c6d82b154ea9190a45092915050565b6130eb8282611d96565b15611112576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000818314156131cf5760405162461bcd60e51b815260206004820152604860248201527f436f6d7065746974696f6e202d20757064617465446174617365743a2043616e60448201527f6e6f74207570646174652077697468207468652073616d652068617368206173606482015267103132b337b9329760c11b608482015260a401610b18565b63ffffffff84166000908152600d602052604090205483146132595760405162461bcd60e51b815260206004820152603d60248201527f436f6d7065746974696f6e202d20757064617465446174617365743a20496e6360448201527f6f7272656374206f6c642064617461736574207265666572656e63652e0000006064820152608401610b18565b5063ffffffff83166000818152600d602052604080822084905551600192849286927f0b4ad7e2453c3c06a28c5cfe29a3067c6edde6eb03be4df2a461f9d806cb747e9190a49392505050565b6000611e108383613a01565b6000818314156133385760405162461bcd60e51b815260206004820152604560248201527f436f6d7065746974696f6e202d205f7570646174654b65793a2043616e6e6f7460448201527f207570646174652077697468207468652073616d6520686173682061732062656064820152643337b9329760d91b608482015260a401610b18565b63ffffffff84166000908152600d602052604090206002015483146133be5760405162461bcd60e51b815260206004820152603660248201527f436f6d7065746974696f6e202d205f7570646174654b65793a20496e636f727260448201527532b1ba1037b6321035b2bc903932b332b932b731b29760511b6064820152608401610b18565b5063ffffffff83166000818152600d602052604080822060020184905551600192849286927f7a2b6b0f48d13449d72d8fd2c1fae94cd13c970cc0dc738abd0bae8d50ce81c69190a49392505050565b60018054600160a01b900463ffffffff166000818152600d6020526040902060040154909160ff909116146134995760405162461bcd60e51b815260206004820152603e602482015260008051602061461083398151915260448201527f4e6f7420617661696c61626c6520666f72207375626d697373696f6e732e00006064820152608401610b18565b818314156135115760405162461bcd60e51b815260206004820152604b602482015260008051602061461083398151915260448201527f43616e6e6f74207570646174652077697468207468652073616d65206861736860648201526a1030b9903132b337b9329760a91b608482015260a401610b18565b63ffffffff81166000908152600d6020908152604080832033845260050190915290205483146135a25760405162461bcd60e51b8152602060048201526042602482015260008051602061461083398151915260448201527f436c61736820696e206578697374696e67207375626d697373696f6e20686173606482015261341760f11b608482015260a401610b18565b63ffffffff81166000818152600d6020908152604080832033808552600590910190925280832086905551859391927f953e3b79bb71898776bb2ef8bb919748c883b8b27c42e334de1ecdbf79d472bb91a492915050565b6000611e10836001600160a01b038416613a95565b6136276000805160206145f083398151915233611108565b61363f6000805160206145f083398151915280613ae4565b6136576000805160206145d083398151915233611108565b61367d6000805160206145d08339815191526000805160206145f0833981519152613ae4565b565b6000610adc825490565b63ffffffff89166000908152600d6020526040812060040154600360ff909116101561371d5760405162461bcd60e51b815260206004820152603b60248201527f436f6d7065746974696f6e202d20706179526577617264733a204368616c6c6560448201527f6e676520697320696e20756e65787065637465642073746174652e00000000006064820152608401610b18565b878614801561372b57508784145b801561373657508782145b6137ba5760405162461bcd60e51b815260206004820152604960248201527f436f6d7065746974696f6e202d20706179526577617264733a204e756d62657260448201527f206f66207375626d69747465727320616e64207265776172647320617265206460648201526834b33332b932b73a1760b91b608482015260a401610b18565b60008080805b8b811015613929578a8a828181106137e857634e487b7160e01b600052603260045260246000fd5b90506020020135846137fa91906144ae565b935088888281811061381c57634e487b7160e01b600052603260045260246000fd5b905060200201358361382e91906144ae565b925086868281811061385057634e487b7160e01b600052603260045260246000fd5b905060200201358261386291906144ae565b91506139178e8e8e8481811061388857634e487b7160e01b600052603260045260246000fd5b905060200201602081019061389d9190613f25565b8d8d858181106138bd57634e487b7160e01b600052603260045260246000fd5b905060200201358c8c868181106138e457634e487b7160e01b600052603260045260246000fd5b905060200201358b8b8781811061390b57634e487b7160e01b600052603260045260246000fd5b90506020020135613b38565b806139218161457a565b9150506137c0565b50826006600082825461393c9190614505565b9250508190555081600760008282546139559190614505565b92505081905550806008600082825461396e9190614505565b9091555081905061397f83856144ae565b61398991906144ae565b6003600082825461399a9190614505565b909155508190506139ab83856144ae565b6139b591906144ae565b600560008282546139c691906144ae565b90915550600194506139dc90508d848484613cb0565b5050509998505050505050505050565b6000611e10836001600160a01b038416613cf5565b81546000908210613a5f5760405162461bcd60e51b815260206004820152602260248201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604482015261647360f01b6064820152608401610b18565b826000018281548110613a8257634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b6000818152600183016020526040812054613adc57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610adc565b506000610adc565b600082815260208190526040902060010154819060405184907fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff90600090a460009182526020829052604090912060010155565b80613b4383856144ae565b613b4d91906144ae565b6001600160a01b0385166000908152600c602052604081208054909190613b759084906144ae565b90915550508215613bc55763ffffffff85166000908152600d602090815260408083206001600160a01b038816845260050190915281206002018054859290613bbf9084906144ae565b90915550505b8115613c105763ffffffff85166000908152600d602090815260408083206001600160a01b038816845260050190915281206003018054849290613c0a9084906144ae565b90915550505b8015613c5b5763ffffffff85166000908152600d602090815260408083206001600160a01b038816845260050190915281206004018054839290613c559084906144ae565b90915550505b6040805163ffffffff8716815260208101859052829184916001600160a01b038816917f6bf9f9ab57efedd3554e5388390b4ec0cc61506e0dfc7ad37db38d940a23b743910160405180910390a45050505050565b60405163ffffffff851681528190839085907f8b77f1e219a52706fcf536bedec95f5df41e062d16118ae8f4bedffd30afc9399060200160405180910390a450505050565b60008181526001830160205260408120548015613e08576000613d19600183614505565b8554909150600090613d2d90600190614505565b90506000866000018281548110613d5457634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080876000018481548110613d8557634e487b7160e01b600052603260045260246000fd5b600091825260209091200155613d9c8360016144ae565b60008281526001890160205260409020558654879080613dcc57634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610adc565b6000915050610adc565b828054613e1e9061453f565b90600052602060002090601f016020900481019282613e405760008555613e86565b82601f10613e595782800160ff19823516178555613e86565b82800160010185558215613e86579182015b82811115613e86578235825591602001919060010190613e6b565b50613e92929150613e96565b5090565b5b80821115613e925760008155600101613e97565b80356001600160a01b0381168114613ec257600080fd5b919050565b60008083601f840112613ed8578182fd5b50813567ffffffffffffffff811115613eef578182fd5b6020830191508360208260051b8501011115613f0a57600080fd5b9250929050565b803563ffffffff81168114613ec257600080fd5b600060208284031215613f36578081fd5b611e1082613eab565b60008060408385031215613f51578081fd5b613f5a83613eab565b946020939093013593505050565b6000806000806000806000806080898b031215613f83578384fd5b883567ffffffffffffffff80821115613f9a578586fd5b613fa68c838d01613ec7565b909a50985060208b0135915080821115613fbe578586fd5b613fca8c838d01613ec7565b909850965060408b0135915080821115613fe2578586fd5b613fee8c838d01613ec7565b909650945060608b0135915080821115614006578384fd5b506140138b828c01613ec7565b999c989b5096995094979396929594505050565b600060208284031215614038578081fd5b81518015158114611e10578182fd5b600060208284031215614058578081fd5b5035919050565b60008060408385031215614071578182fd5b8235915061408160208401613eab565b90509250929050565b6000806040838503121561409c578182fd5b50508035926020909101359150565b600080600080608085870312156140c0578384fd5b5050823594602084013594506040840135936060013592509050565b6000602082840312156140ed578081fd5b81356001600160e01b031981168114611e10578182fd5b60008060208385031215614116578182fd5b823567ffffffffffffffff8082111561412d578384fd5b818501915085601f830112614140578384fd5b81358181111561414e578485fd5b86602082850101111561415f578485fd5b60209290920196919550909350505050565b600060208284031215614182578081fd5b5051919050565b60008060006060848603121561419d578283fd5b83359250602084013591506141b460408501613eab565b90509250925092565b6000602082840312156141ce578081fd5b611e1082613f11565b600080604083850312156141e9578182fd5b6141f283613f11565b915061408160208401613eab565b600080600060608486031215614214578081fd5b61421d84613f11565b925061422b60208501613eab565b9150604084013590509250925092565b60008060008060008060006080888a031215614255578081fd5b61425e88613f11565b9650602088013567ffffffffffffffff8082111561427a578283fd5b6142868b838c01613ec7565b909850965060408a013591508082111561429e578283fd5b6142aa8b838c01613ec7565b909650945060608a01359150808211156142c2578283fd5b506142cf8a828b01613ec7565b989b979a50959850939692959293505050565b600080600080600080608087890312156142fa578384fd5b61430387613f11565b9550602087013567ffffffffffffffff8082111561431f578586fd5b61432b8a838b01613ec7565b909750955060408901359450606089013591508082111561434a578384fd5b5061435789828a01613ec7565b979a9699509497509295939492505050565b6000806040838503121561437b578182fd5b613f5a83613f11565b600080600060608486031215614398578081fd5b6143a184613f11565b95602085013595506040909401359392505050565b6000602082840312156143c7578081fd5b813560ff81168114611e10578182fd5b6020808252825182820181905260009190848201906040850190845b818110156144185783516001600160a01b0316835292840192918401916001016143f3565b50909695505050505050565b6000602080835283518082850152825b8181101561445057858101830151858201604001528201614434565b818111156144615783604083870101525b50601f01601f1916929092016040019392505050565b60208082526017908201527f43616c6c657220697320756e617574686f72697a65642e000000000000000000604082015260600190565b600082198211156144c1576144c16145b9565b500190565b6000826144e157634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615614500576145006145b9565b500290565b600082821015614517576145176145b9565b500390565b600060ff821660ff841680821015614536576145366145b9565b90039392505050565b600181811c9082168061455357607f821691505b6020821081141561457457634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561458e5761458e6145b9565b5060010190565b600063ffffffff808316818114156145af576145af6145b9565b6001019392505050565b634e487b7160e01b600052601160045260246000fdfea7c37a885c101433a066f48b62753beb2a7567fe326b80d58772c6ef61e282e7c6497b0d1af5627a7b5dc7995c3c9c668c87bd99ddc7e1609ba9724fe0e860b5436f6d7065746974696f6e202d207570646174655375626d697373696f6e3a20a26469706673582212203d2c15c453c9f6ebf77b10c30e38f4a1f1f0b753d92ac42fd5b146992f6691c964736f6c63430008040033",
  "bytecodeSha1": "8541dd27e17e3f28b90c7fbc7ec1b4c67701e91e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.4+commit.c7e474f2"
  },
  "contractName": "Competition",
  "coverageMap": {
    "branches": {
      "0": {
        "Competition.closeSubmission": {
          "263": [
            489,
            525,
            true
          ]
        }
      },
      "13": {
        "Competition.initialize": {
          "266": [
            1495,
            1508,
            true
          ],
          "267": [
            1513,
            1525,
            true
          ]
        }
      },
      "19": {},
      "2": {
        "Competition._payRewards": {
          "254": [
            13018,
            13057,
            true
          ]
        },
        "Competition._paySingleAddress": {
          "255": [
            14838,
            14855,
            false
          ],
          "256": [
            14980,
            14999,
            false
          ],
          "257": [
            15128,
            15148,
            false
          ]
        },
        "Competition._updateDataset": {
          "247": [
            9835,
            9867,
            true
          ],
          "248": [
            9962,
            10016,
            true
          ]
        },
        "Competition._updateKey": {
          "249": [
            10406,
            10430,
            true
          ],
          "250": [
            10522,
            10568,
            true
          ]
        },
        "Competition._updateResults": {
          "244": [
            11821,
            11853,
            true
          ],
          "245": [
            12000,
            12039,
            true
          ],
          "246": [
            12121,
            12175,
            true
          ]
        },
        "Competition._updateSubmission": {
          "251": [
            4717,
            4756,
            true
          ],
          "252": [
            4841,
            4879,
            true
          ],
          "253": [
            4977,
            5063,
            true
          ]
        },
        "Competition.advanceToPhase": {
          "239": [
            17861,
            17908,
            true
          ]
        },
        "Competition.closeSubmission": {
          "243": [
            10946,
            10985,
            true
          ]
        },
        "Competition.decreaseStake": {
          "217": [
            2368,
            2397,
            true
          ],
          "218": [
            2498,
            2539,
            true
          ],
          "219": [
            2711,
            2736,
            true
          ],
          "220": [
            2819,
            2894,
            false
          ],
          "221": [
            2917,
            2962,
            true
          ]
        },
        "Competition.increaseStake": {
          "228": [
            1478,
            1507,
            true
          ],
          "229": [
            1608,
            1647,
            true
          ],
          "230": [
            1815,
            1890,
            false
          ]
        },
        "Competition.initialize": {
          "234": [
            837,
            864,
            true
          ]
        },
        "Competition.moveRemainderToPool": {
          "222": [
            18184,
            18225,
            true
          ],
          "223": [
            18387,
            18400,
            true
          ]
        },
        "Competition.openChallenge": {
          "237": [
            7698,
            7737,
            true
          ],
          "238": [
            7818,
            7855,
            true
          ]
        },
        "Competition.sponsor": {
          "235": [
            25542,
            25583,
            true
          ]
        },
        "Competition.submitNewPredictions": {
          "233": [
            3593,
            3622,
            true
          ]
        },
        "Competition.updateChallengeAndTournamentScores": {
          "240": [
            15920,
            15959,
            true
          ]
        },
        "Competition.updateDataset": {
          "226": [
            8914,
            8953,
            true
          ],
          "227": [
            9025,
            9053,
            true
          ]
        },
        "Competition.updateInformationBatch": {
          "224": [
            17008,
            17047,
            true
          ],
          "225": [
            17141,
            17177,
            true
          ]
        },
        "Competition.updateKey": {
          "231": [
            9406,
            9445,
            true
          ],
          "232": [
            9513,
            9537,
            true
          ]
        },
        "Competition.updateResults": {
          "236": [
            11516,
            11544,
            true
          ]
        },
        "Competition.updateSubmission": {
          "241": [
            4099,
            4130,
            true
          ],
          "242": [
            4299,
            4330,
            false
          ]
        }
      },
      "21": {},
      "22": {},
      "23": {
        "EnumerableSet._at": {
          "264": [
            4538,
            4564,
            true
          ]
        },
        "EnumerableSet._remove": {
          "265": [
            2441,
            2456,
            false
          ]
        }
      },
      "27": {},
      "29": {},
      "3": {},
      "7": {
        "AccessControl._grantRole": {
          "261": [
            7026,
            7048,
            false
          ]
        },
        "AccessControl._revokeRole": {
          "262": [
            7256,
            7278,
            false
          ]
        },
        "AccessControl.grantRole": {
          "258": [
            4648,
            4689,
            true
          ]
        },
        "AccessControl.renounceRole": {
          "259": [
            5835,
            5858,
            true
          ]
        },
        "AccessControl.revokeRole": {
          "260": [
            5111,
            5152,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "AccessControlRci._initializeRciAdmin": {
          "175": [
            635,
            673
          ],
          "176": [
            683,
            728
          ],
          "177": [
            739,
            778
          ],
          "178": [
            788,
            834
          ]
        }
      },
      "13": {},
      "19": {
        "Context._msgSender": {
          "48": [
            658,
            675
          ]
        }
      },
      "2": {
        "Competition._logRewardsPaid": {
          "210": [
            15549,
            15652
          ]
        },
        "Competition._payRewards": {
          "181": [
            13010,
            13121
          ],
          "182": [
            13131,
            13398
          ],
          "183": [
            13716,
            13755
          ],
          "184": [
            13769,
            13812
          ],
          "185": [
            13826,
            13871
          ],
          "186": [
            13886,
            13997
          ],
          "187": [
            13563,
            13566
          ],
          "188": [
            14062,
            14112
          ],
          "189": [
            14122,
            14176
          ],
          "190": [
            14186,
            14242
          ],
          "191": [
            14253,
            14338
          ],
          "192": [
            14348,
            14436
          ],
          "193": [
            14446,
            14460
          ],
          "194": [
            14471,
            14568
          ]
        },
        "Competition._paySingleAddress": {
          "205": [
            14751,
            14823
          ],
          "206": [
            14870,
            14955
          ],
          "207": [
            15014,
            15103
          ],
          "208": [
            15163,
            15254
          ],
          "209": [
            15275,
            15372
          ]
        },
        "Competition._updateDataset": {
          "157": [
            9827,
            9944
          ],
          "158": [
            9954,
            10082
          ],
          "159": [
            10092,
            10145
          ],
          "160": [
            10180,
            10248
          ],
          "161": [
            10155,
            10169
          ]
        },
        "Competition._updateDeadlines": {
          "44": [
            5964,
            6021
          ],
          "45": [
            6031,
            6045
          ]
        },
        "Competition._updateKey": {
          "163": [
            10398,
            10504
          ],
          "164": [
            10514,
            10627
          ],
          "165": [
            10637,
            10682
          ],
          "166": [
            10717,
            10773
          ],
          "167": [
            10692,
            10706
          ]
        },
        "Competition._updateResults": {
          "150": [
            11813,
            11930
          ],
          "151": [
            11992,
            12103
          ],
          "152": [
            12113,
            12240
          ],
          "153": [
            12250,
            12303
          ],
          "154": [
            12338,
            12406
          ]
        },
        "Competition._updateSubmission": {
          "168": [
            4664,
            4699
          ],
          "169": [
            4709,
            4823
          ],
          "170": [
            4833,
            4959
          ],
          "171": [
            4969,
            5150
          ],
          "172": [
            5160,
            5245
          ],
          "173": [
            5256,
            5326
          ]
        },
        "Competition.advanceToPhase": {
          "130": [
            17713,
            17843
          ],
          "131": [
            17853,
            17982
          ],
          "132": [
            17992,
            18034
          ]
        },
        "Competition.closeSubmission": {
          "145": [
            10938,
            11051
          ],
          "146": [
            11061,
            11099
          ],
          "147": [
            11134,
            11172
          ]
        },
        "Competition.decreaseStake": {
          "35": [
            2360,
            2480
          ],
          "36": [
            2490,
            2646
          ],
          "37": [
            2703,
            2804
          ],
          "38": [
            2909,
            3083
          ],
          "39": [
            3097,
            3181
          ],
          "40": [
            3202,
            3244
          ],
          "41": [
            3254,
            3288
          ],
          "42": [
            3298,
            3344
          ],
          "43": [
            3355,
            3395
          ]
        },
        "Competition.getChallengeRewards": {
          "9": [
            23288,
            23379
          ]
        },
        "Competition.getChallengeRewardsPercentageInWei": {
          "18": [
            19875,
            19941
          ]
        },
        "Competition.getChallengeScores": {
          "23": [
            24231,
            24320
          ]
        },
        "Competition.getCompetitionPool": {
          "21": [
            18727,
            18761
          ]
        },
        "Competition.getCurrentChallengeRewardsBudget": {
          "22": [
            19443,
            19505
          ]
        },
        "Competition.getCurrentStakingRewardsBudget": {
          "3": [
            19235,
            19293
          ]
        },
        "Competition.getCurrentTotalStaked": {
          "5": [
            19049,
            19089
          ]
        },
        "Competition.getCurrentTournamentRewardsBudget": {
          "6": [
            19657,
            19721
          ]
        },
        "Competition.getDatasetHash": {
          "8": [
            20471,
            20517
          ]
        },
        "Competition.getDeadlines": {
          "11": [
            24972,
            25028
          ]
        },
        "Competition.getInformation": {
          "25": [
            24746,
            24826
          ]
        },
        "Competition.getKeyHash": {
          "1": [
            20819,
            20857
          ]
        },
        "Competition.getLatestChallengeNumber": {
          "14": [
            20298,
            20339
          ]
        },
        "Competition.getMessage": {
          "114": [
            25332,
            25350
          ]
        },
        "Competition.getOverallRewards": {
          "93": [
            23804,
            24066
          ]
        },
        "Competition.getPhase": {
          "20": [
            21904,
            21946
          ]
        },
        "Competition.getPrivateKeyHash": {
          "10": [
            20995,
            21047
          ]
        },
        "Competition.getRemainder": {
          "140": [
            25136,
            25220
          ]
        },
        "Competition.getResultsHash": {
          "26": [
            20649,
            20695
          ]
        },
        "Competition.getRewardsThreshold": {
          "2": [
            18885,
            18921
          ]
        },
        "Competition.getStake": {
          "16": [
            22219,
            22247
          ]
        },
        "Competition.getStakeThreshold": {
          "7": [
            22066,
            22098
          ]
        },
        "Competition.getStakedAmountForChallenge": {
          "24": [
            22800,
            22871
          ]
        },
        "Competition.getStakingRewards": {
          "13": [
            23034,
            23121
          ]
        },
        "Competition.getSubmission": {
          "12": [
            22552,
            22635
          ]
        },
        "Competition.getSubmissionCounter": {
          "113": [
            21195,
            21276
          ]
        },
        "Competition.getSubmitters": {
          "67": [
            21679,
            21744
          ],
          "68": [
            21660,
            21663
          ],
          "69": [
            21765,
            21782
          ]
        },
        "Competition.getTokenAddress": {
          "0": [
            22363,
            22393
          ]
        },
        "Competition.getTournamentRewards": {
          "19": [
            23548,
            23641
          ]
        },
        "Competition.getTournamentRewardsPercentageInWei": {
          "17": [
            20097,
            20165
          ]
        },
        "Competition.getTournamentScores": {
          "15": [
            24487,
            24578
          ]
        },
        "Competition.increaseStake": {
          "73": [
            1470,
            1590
          ],
          "74": [
            1600,
            1754
          ],
          "75": [
            1905,
            1989
          ],
          "76": [
            2010,
            2052
          ],
          "77": [
            2062,
            2096
          ],
          "78": [
            2132,
            2172
          ],
          "79": [
            2107,
            2121
          ]
        },
        "Competition.initialize": {
          "98": [
            829,
            892
          ],
          "99": [
            902,
            923
          ],
          "100": [
            933,
            966
          ],
          "101": [
            976,
            1013
          ],
          "102": [
            1023,
            1053
          ],
          "103": [
            1063,
            1084
          ],
          "104": [
            1094,
            1134
          ],
          "105": [
            1144,
            1184
          ],
          "106": [
            1194,
            1235
          ]
        },
        "Competition.moveRemainderToPool": {
          "53": [
            18176,
            18325
          ],
          "54": [
            18379,
            18461
          ],
          "55": [
            18471,
            18500
          ],
          "56": [
            18535,
            18571
          ],
          "57": [
            18510,
            18524
          ]
        },
        "Competition.openChallenge": {
          "117": [
            7690,
            7800
          ],
          "118": [
            7810,
            7907
          ],
          "119": [
            7918,
            7935
          ],
          "120": [
            7946,
            7984
          ],
          "121": [
            7994,
            8029
          ],
          "122": [
            8040,
            8096
          ],
          "123": [
            8106,
            8154
          ],
          "124": [
            8165,
            8256
          ],
          "125": [
            8266,
            8359
          ],
          "126": [
            8369,
            8483
          ],
          "127": [
            8494,
            8555
          ],
          "128": [
            8565,
            8624
          ],
          "129": [
            8660,
            8697
          ]
        },
        "Competition.payRewards": {
          "115": [
            12653,
            12758
          ]
        },
        "Competition.sponsor": {
          "107": [
            25534,
            25671
          ],
          "108": [
            25736,
            25787
          ],
          "109": [
            25797,
            25866
          ],
          "110": [
            25877,
            25948
          ]
        },
        "Competition.submitNewPredictions": {
          "94": [
            3585,
            3688
          ],
          "95": [
            3698,
            3761
          ],
          "96": [
            3771,
            3841
          ],
          "97": [
            3851,
            3925
          ]
        },
        "Competition.submitResults": {
          "50": [
            11302,
            11351
          ]
        },
        "Competition.updateChallengeAndTournamentScores": {
          "133": [
            15912,
            16047
          ],
          "134": [
            16057,
            16267
          ],
          "135": [
            16470,
            16566
          ],
          "136": [
            16580,
            16678
          ],
          "137": [
            16320,
            16323
          ],
          "138": [
            16724,
            16781
          ],
          "139": [
            16699,
            16713
          ]
        },
        "Competition.updateChallengeRewardsPercentageInWei": {
          "89": [
            6708,
            6756
          ],
          "90": [
            6791,
            6849
          ],
          "91": [
            6766,
            6780
          ]
        },
        "Competition.updateDataset": {
          "64": [
            8906,
            9007
          ],
          "65": [
            9017,
            9118
          ],
          "66": [
            9128,
            9201
          ]
        },
        "Competition.updateDeadlines": {
          "46": [
            5753,
            5814
          ]
        },
        "Competition.updateInformationBatch": {
          "58": [
            17000,
            17123
          ],
          "59": [
            17133,
            17268
          ],
          "60": [
            17348,
            17436
          ],
          "61": [
            17321,
            17324
          ],
          "62": [
            17481,
            17538
          ],
          "63": [
            17456,
            17470
          ]
        },
        "Competition.updateKey": {
          "86": [
            9398,
            9495
          ],
          "87": [
            9505,
            9594
          ],
          "88": [
            9604,
            9665
          ]
        },
        "Competition.updateMessage": {
          "32": [
            5507,
            5528
          ],
          "33": [
            5563,
            5584
          ],
          "34": [
            5538,
            5552
          ]
        },
        "Competition.updatePrivateKey": {
          "29": [
            7306,
            7358
          ],
          "30": [
            7393,
            7427
          ],
          "31": [
            7368,
            7382
          ]
        },
        "Competition.updateResults": {
          "111": [
            11508,
            11609
          ],
          "112": [
            11619,
            11675
          ]
        },
        "Competition.updateRewardsThreshold": {
          "70": [
            6185,
            6217
          ],
          "71": [
            6252,
            6294
          ],
          "72": [
            6227,
            6241
          ]
        },
        "Competition.updateStakeThreshold": {
          "83": [
            6437,
            6472
          ],
          "84": [
            6507,
            6552
          ],
          "85": [
            6482,
            6496
          ]
        },
        "Competition.updateSubmission": {
          "141": [
            4091,
            4201
          ],
          "142": [
            4211,
            4284
          ],
          "143": [
            4345,
            4418
          ],
          "144": [
            4432,
            4497
          ]
        },
        "Competition.updateTournamentRewardsPercentageInWei": {
          "80": [
            7006,
            7055
          ],
          "81": [
            7090,
            7149
          ],
          "82": [
            7065,
            7079
          ]
        }
      },
      "21": {
        "ERC165.supportsInterface": {
          "28": [
            864,
            911
          ]
        }
      },
      "22": {},
      "23": {
        "EnumerableSet._add": {
          "199": [
            1753,
            1776
          ],
          "200": [
            1911,
            1951
          ],
          "201": [
            1965,
            1976
          ],
          "202": [
            2007,
            2019
          ]
        },
        "EnumerableSet._at": {
          "196": [
            4530,
            4603
          ],
          "197": [
            4613,
            4638
          ]
        },
        "EnumerableSet._contains": {
          "198": [
            3886,
            3917
          ]
        },
        "EnumerableSet._length": {
          "180": [
            4080,
            4105
          ]
        },
        "EnumerableSet._remove": {
          "211": [
            3266,
            3304
          ],
          "212": [
            3370,
            3413
          ],
          "213": [
            3519,
            3536
          ],
          "214": [
            3604,
            3630
          ],
          "215": [
            3645,
            3656
          ],
          "216": [
            3687,
            3699
          ]
        },
        "EnumerableSet.add": {
          "174": [
            6507,
            6564
          ]
        },
        "EnumerableSet.at": {
          "162": [
            7762,
            7818
          ]
        },
        "EnumerableSet.length": {
          "179": [
            7304,
            7330
          ]
        },
        "EnumerableSet.remove": {
          "195": [
            6828,
            6888
          ]
        }
      },
      "27": {},
      "29": {},
      "3": {},
      "7": {
        "AccessControl._grantRole": {
          "148": [
            7064,
            7100
          ],
          "149": [
            7114,
            7159
          ]
        },
        "AccessControl._revokeRole": {
          "155": [
            7294,
            7331
          ],
          "156": [
            7345,
            7390
          ]
        },
        "AccessControl._setRoleAdmin": {
          "203": [
            6837,
            6895
          ],
          "204": [
            6905,
            6939
          ]
        },
        "AccessControl.getRoleAdmin": {
          "4": [
            4270,
            4299
          ]
        },
        "AccessControl.grantRole": {
          "47": [
            4640,
            4741
          ],
          "49": [
            4752,
            4777
          ]
        },
        "AccessControl.hasRole": {
          "92": [
            3961,
            3997
          ]
        },
        "AccessControl.renounceRole": {
          "51": [
            5827,
            5910
          ],
          "52": [
            5921,
            5947
          ]
        },
        "AccessControl.revokeRole": {
          "116": [
            5103,
            5205
          ]
        },
        "AccessControl.supportsInterface": {
          "27": [
            3667,
            3773
          ]
        }
      }
    }
  },
  "dependencies": [
    "AccessControl",
    "AccessControlRci",
    "CompetitionStorage",
    "Context",
    "ERC165",
    "EnumerableSet",
    "IAccessControl",
    "ICompetition",
    "IERC165",
    "IToken",
    "Initializable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106103d05760003560e01c8063736d8c91116101ff578063c8f971df1161011a578063dc9f76eb116100ad578063eecfc33f1161007c578063eecfc33f14610a5f578063f109a62414610a88578063f7fb373d14610a90578063ffc6ff1e14610aa357600080fd5b8063dc9f76eb146109a7578063dec9bf2f146109ba578063e6184ab8146109cd578063e7d5c4ea14610a1057600080fd5b8063d547741f116100e9578063d547741f14610936578063d68a7c0014610949578063d885e39b14610951578063dc1e207c1461099457600080fd5b8063c8f971df146108f3578063ce6d41de14610906578063d09e2c211461091b578063d4f4b8061461092e57600080fd5b806397d9abb811610192578063aa658b6911610161578063aa658b691461084c578063af976fec1461088f578063b6cce5e2146108cd578063c55e86b1146108e057600080fd5b806397d9abb81461080b5780639f2492a21461081e578063a217fddf14610831578063a6ab36f21461083957600080fd5b80637bfc90b2116101ce5780637bfc90b2146107d557806391d14854146107e8578063920920ba146107fb57806393a9dac71461080357600080fd5b8063736d8c911461073057806373af6745146107565780637a378430146107695780637a766460146107ac57600080fd5b8063343cb6be116102ef5780634a31156f116102825780635e35d498116102515780635e35d498146106875780635ef533291461069a57806360cdb6cc146106ad5780636c981570146106ed57600080fd5b80634a31156f1461060b578063572c686a1461062b57806357d0cf581461063e5780635d7e94671461067457600080fd5b80633c35f180116102be5780633c35f180146105795780633cbcb53a1461058c5780633f230915146105cf5780634169293b146105e257600080fd5b8063343cb6be1461053057806336568abe1461053857806337d6b9971461054b57806339e287771461055357600080fd5b80631a73ba01116103675780632d071f1a116103365780632d071f1a146104ed5780632f2ff15d14610500578063315c455e146105155780633228cf721461052857600080fd5b80631a73ba01146104a75780631e2ff711146104ba578063248a9ca3146104c257806325b06746146104e557600080fd5b806315343c11116103a357806315343c111461044e57806318829fc31461047757806318b125d11461047f5780631923be241461049457600080fd5b806301ffc9a7146103d557806302881b52146103fd57806310fe9ae8146104105780631442b8681461042b575b600080fd5b6103e86103e33660046140dc565b610aab565b60405190151581526020015b60405180910390f35b6103e861040b366004614369565b610ae2565b6001546040516001600160a01b0390911681526020016103f4565b6104406000805160206145d083398151915281565b6040519081526020016103f4565b61044061045c3660046141bd565b63ffffffff166000908152600d602052604090206002015490565b600454610440565b6104406000805160206145f083398151915281565b6103e86104a2366004614104565b610b6e565b6103e86104b5366004613f3f565b610be4565b600654610440565b6104406104d0366004614047565b60009081526020819052604090206001015490565b600554610440565b6103e86104fb366004614384565b611020565b61051361050e36600461405f565b611087565b005b6103e8610523366004614047565b611116565b600854610440565b600254610440565b61051361054636600461405f565b611157565b6103e86111d1565b6104406105613660046141bd565b63ffffffff166000908152600d602052604090205490565b6103e86105873660046142e2565b611393565b61044061059a3660046141d7565b63ffffffff9091166000908152600d602090815260408083206001600160a01b03909416835260059093019052206003015490565b6103e86105dd36600461408a565b61160a565b6104406105f03660046141bd565b63ffffffff166000908152600d602052604090206003015490565b61061e610619366004614384565b61174f565b6040516103f491906143d7565b6103e8610639366004614047565b61183a565b61044061064c366004614369565b63ffffffff9091166000908152600d6020908152604080832093835260069093019052205490565b6103e8610682366004613f3f565b6118a9565b6103e8610695366004614047565b611b11565b6103e86106a8366004614047565b611b80565b6104406106bb3660046141d7565b63ffffffff9091166000908152600d602090815260408083206001600160a01b03909416835260059093019052205490565b6104406106fb3660046141d7565b63ffffffff9091166000908152600d602090815260408083206001600160a01b03909416835260059093019052206002015490565b600154600160a01b900463ffffffff165b60405163ffffffff90911681526020016103f4565b6103e861076436600461408a565b611bef565b6104406107773660046141d7565b63ffffffff9091166000908152600d602090815260408083206001600160a01b03909416835260059093019052206006015490565b6104406107ba366004613f25565b6001600160a01b03166000908152600c602052604090205490565b6103e86107e3366004614047565b611d27565b6103e86107f636600461405f565b611d96565b600a54610440565b600954610440565b6104406108193660046141d7565b611dbf565b61074161082c366004614047565b611e17565b610440600081565b610513610847366004614189565b611efc565b61044061085a3660046141d7565b63ffffffff9091166000908152600d602090815260408083206001600160a01b03909416835260059093019052206004015490565b6108bb61089d3660046141bd565b63ffffffff166000908152600d602052604090206004015460ff1690565b60405160ff90911681526020016103f4565b6103e86108db366004614047565b612077565b6103e86108ee36600461408a565b612206565b6104406109013660046141bd565b6122b9565b61090e6122da565b6040516103f49190614424565b6103e8610929366004613f68565b61236c565b600354610440565b61051361094436600461405f565b6123d0565b600754610440565b61044061095f3660046141d7565b63ffffffff9091166000908152600d602090815260408083206001600160a01b03909416835260059384019091529020015490565b6103e86109a23660046140ab565b612450565b6103e86109b53660046143b6565b6126c8565b6103e86109c836600461423b565b612897565b6104406109db3660046141d7565b63ffffffff9091166000908152600d602090815260408083206001600160a01b03909416835260059093019052206001015490565b610440610a1e366004614200565b63ffffffff9092166000908152600d602090815260408083206001600160a01b03909416835260059093018152828220938252600790930190925290205490565b610440610a6d3660046141bd565b63ffffffff166000908152600d602052604090206001015490565b610440612bc6565b610741610a9e36600461408a565b612c63565b6103e8612d32565b60006001600160e01b03198216637965db0b60e01b1480610adc57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000610afc6000805160206145d083398151915233611d96565b610b215760405162461bcd60e51b8152600401610b1890614477565b60405180910390fd5b5063ffffffff82166000908152600d60205260408082206003018390555160019183917f840bdca8f6c2cde252f010db5e96e3b79deb9d4cf7c64989f75ff7325b0d3c609190a292915050565b6000610b886000805160206145d083398151915233611d96565b610ba45760405162461bcd60e51b8152600401610b1890614477565b610bb0600b8484613e12565b50506040516001907f89dbe1e8a053a391becc713b9c088b57cf1855cf857803e49eaae2f8fbc3b1cd90600090a192915050565b600154600090600160a01b810463ffffffff16906001600160a01b03163314610c8c5760405162461bcd60e51b815260206004820152604e60248201527f436f6d7065746974696f6e202d2064656372656173655374616b653a20506c6560448201527f6173652063616c6c20746869732066756e6374696f6e2076696120746865207460648201526d37b5b2b71031b7b73a3930b1ba1760911b608482015260a401610b18565b600154600160a01b900463ffffffff166000908152600d602052604090206004015460ff1660021415610d5c5760405162461bcd60e51b815260206004820152606660248201527f436f6d7065746974696f6e202d2064656372656173655374616b653a20506c6560448201527f617365207761697420666f7220746865207374616b696e6720706572696f642060648201527f746f20756e6c6f636b206265666f7265206d6f64696679696e6720796f75722060848201526539ba30b5b29760d11b60a482015260c401610b18565b6001600160a01b0384166000908152600c602052604090205480841115610deb5760405162461bcd60e51b815260206004820152603f60248201527f436f6d7065746974696f6e202d2064656372656173655374616b653a20496e7360448201527f756666696369656e742066756e647320666f72207769746864726177616c2e006064820152608401610b18565b63ffffffff82166000908152600d602090815260408083206001600160a01b038916845260050190915290205415610f1c57600254610e2a8583614505565b1015610ee15760405162461bcd60e51b815260206004820152607460248201527f436f6d7065746974696f6e202d2064656372656173655374616b653a20596f7560448201527f206d6179206e6f74206c6f77657220796f7572207374616b652062656c6f772060648201527f746865207468726573686f6c64207768696c6520796f75206861766520616e2060848201527332bc34b9ba34b7339039bab136b4b9b9b4b7b71760611b60a482015260c401610b18565b610eeb8482614505565b63ffffffff83166000908152600d602090815260408083206001600160a01b038a1684526005019091529020600101555b610f268482614505565b6001600160a01b0386166000908152600c602052604081209190915560058054869290610f54908490614505565b909155505060015460405163a9059cbb60e01b81526001600160a01b038781166004830152602482018790529091169063a9059cbb90604401602060405180830381600087803b158015610fa757600080fd5b505af1158015610fbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdf9190614027565b925083856001600160a01b03167f700865370ffb2a65a2b0242e6a64b21ac907ed5ecd46c9cffc729c177b2b1c6960405160405180910390a3505092915050565b600061103a6000805160206145d083398151915233611d96565b6110565760405162461bcd60e51b8152600401610b1890614477565b63ffffffff84166000908152600d60209081526040808320868452600601909152902082905560015b949350505050565b6000828152602081905260409020600101546110a4905b33611d96565b6111085760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526e0818591b5a5b881d1bc819dc985b9d608a1b6064820152608401610b18565b6111128282612e56565b5050565b60006111306000805160206145d083398151915233611d96565b61114c5760405162461bcd60e51b8152600401610b1890614477565b610adc600083612eda565b6001600160a01b03811633146111c75760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610b18565b61111282826130e1565b60006111eb6000805160206145d083398151915233611d96565b6112075760405162461bcd60e51b8152600401610b1890614477565b600154600160a01b900463ffffffff166000908152600d6020526040902060049081015460ff16146112c75760405162461bcd60e51b815260206004820152605f60248201527f436f6d7065746974696f6e202d206d6f766552656d61696e646572546f506f6f60448201527f6c3a20504c65617365207761697420666f7220746865206368616c6c656e676560648201527f20746f20636f6d706c657465206265666f72652073706f6e736f72696e672e00608482015260a401610b18565b60006112d1612bc6565b9050600081116113495760405162461bcd60e51b815260206004820152603860248201527f436f6d7065746974696f6e202d206d6f766552656d61696e646572546f506f6f60448201527f6c3a204e6f2072656d61696e64657220746f206d6f76652e00000000000000006064820152608401610b18565b806003600082825461135b91906144ae565b90915550506040516001925081907fda446d0471a795498335ed4bc219b34921a12ccb87136a9aa03964adc83eadf390600090a25090565b60006113ad6000805160206145d083398151915233611d96565b6113c95760405162461bcd60e51b8152600401610b1890614477565b63ffffffff87166000908152600d6020526040902060040154600360ff909116101561146d5760405162461bcd60e51b815260206004820152604760248201527f436f6d7065746974696f6e202d20757064617465496e666f726d6174696f6e4260448201527f617463683a204368616c6c656e676520697320696e20756e65787065637465646064820152661039ba30ba329760c91b608482015260a401610b18565b8482146115015760405162461bcd60e51b815260206004820152605660248201527f436f6d7065746974696f6e202d20757064617465496e666f726d6174696f6e4260448201527f617463683a204e756d626572206f66207061727469636970616e747320616e64606482015275103b30b63ab2b99030b932903234b33332b932b73a1760511b608482015260a401610b18565b60005b858110156115c85783838281811061152c57634e487b7160e01b600052603260045260246000fd5b90506020020135600d60008a63ffffffff1663ffffffff168152602001908152602001600020600501600089898581811061157757634e487b7160e01b600052603260045260246000fd5b905060200201602081019061158c9190613f25565b6001600160a01b0316815260208082019290925260409081016000908120898252600701909252902055806115c08161457a565b915050611504565b5050604051600190849063ffffffff8916907fdfc0e8d429222115bcdeae8834d5fbcecc360f743768fc2a9693a30a379999e990600090a39695505050505050565b60006116246000805160206145d083398151915233611d96565b6116405760405162461bcd60e51b8152600401610b1890614477565b60018054600160a01b900463ffffffff166000818152600d6020526040902060040154909160ff909116146116d15760405162461bcd60e51b815260206004820152603160248201527f436f6d7065746974696f6e202d20757064617465446174617365743a20436861604482015270363632b733b29034b99031b637b9b2b21760791b6064820152608401610b18565b836117445760405162461bcd60e51b815260206004820152603c60248201527f436f6d7065746974696f6e202d20757064617465446174617365743a204d757360448201527f742068617665207072652d6578697374696e6720646174617365742e000000006064820152608401610b18565b61107f818585613146565b6060600061175d8484614505565b67ffffffffffffffff81111561178357634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156117ac578160200160208202803683370190505b5063ffffffff86166000908152600d60205260409020909150600701845b8481101561182f576117dc82826132a6565b836117e78884614505565b8151811061180557634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209283029190910190910152806118278161457a565b9150506117ca565b509095945050505050565b60006118546000805160206145d083398151915233611d96565b6118705760405162461bcd60e51b8152600401610b1890614477565b50600481905560405160019082907f73e002420a7defb91818836f9aaa83222b749a40c213c7c0fbccaacdd259e05290600090a2919050565b600154600090600160a01b810463ffffffff16906001600160a01b031633146119515760405162461bcd60e51b815260206004820152604e60248201527f436f6d7065746974696f6e202d20696e6372656173655374616b653a20506c6560448201527f6173652063616c6c20746869732066756e6374696f6e2076696120746865207460648201526d37b5b2b71031b7b73a3930b1ba1760911b608482015260a401610b18565b63ffffffff81166000908152600d602052604090206004015460ff1660021415611a185760405162461bcd60e51b815260206004820152606660248201527f436f6d7065746974696f6e202d20696e6372656173655374616b653a20506c6560448201527f617365207761697420666f7220746865207374616b696e6720706572696f642060648201527f746f20756e6c6f636b206265666f7265206d6f64696679696e6720796f75722060848201526539ba30b5b29760d11b60a482015260c401610b18565b6001600160a01b0384166000818152600c602090815260408083205463ffffffff86168452600d8352818420948452600590940190915290205415611a9257611a6184826144ae565b63ffffffff83166000908152600d602090815260408083206001600160a01b038a1684526005019091529020600101555b611a9c84826144ae565b6001600160a01b0386166000908152600c602052604081209190915560058054869290611aca9084906144ae565b90915550506040516001935084906001600160a01b038716907f8b0ed825817a2e696c9a931715af4609fc60e1701f09c89ee7645130e937eb2d90600090a3505092915050565b6000611b2b6000805160206145d083398151915233611d96565b611b475760405162461bcd60e51b8152600401610b1890614477565b50600a81905560405160019082907f211318e1b6942c96eaad65d5f6c4c520722236466093427de4dacb729bd36dfb90600090a2919050565b6000611b9a6000805160206145d083398151915233611d96565b611bb65760405162461bcd60e51b8152600401610b1890614477565b50600281905560405160019082907f99c5af1f811b150d39d592621f8f23f4df7e5664642f227684973847eb2888be90600090a2919050565b6000611c096000805160206145d083398151915233611d96565b611c255760405162461bcd60e51b8152600401610b1890614477565b60018054600160a01b900463ffffffff166000818152600d6020526040902060040154909160ff90911614611cb25760405162461bcd60e51b815260206004820152602d60248201527f436f6d7065746974696f6e202d207570646174654b65793a204368616c6c656e60448201526c33b29034b99031b637b9b2b21760991b6064820152608401610b18565b83611d1c5760405162461bcd60e51b815260206004820152603460248201527f436f6d7065746974696f6e202d207570646174654b65793a204d7573742068616044820152733b329038393296b2bc34b9ba34b7339035b2bc9760611b6064820152608401610b18565b61107f8185856132b2565b6000611d416000805160206145d083398151915233611d96565b611d5d5760405162461bcd60e51b8152600401610b1890614477565b50600981905560405160019082907f94327140b3bb3bb989865fef53b345cd1ddd7991b30e3233137ab646448fbeb590600090a2919050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b63ffffffff82166000908152600d602090815260408083206001600160a01b03851684526005019091528120600481015460038201546002909201549091611e06916144ae565b611e1091906144ae565b9392505050565b336000908152600c6020526040812054600254811015611e9f5760405162461bcd60e51b815260206004820152603d60248201527f436f6d7065746974696f6e202d207375626d69744e657750726564696374696f60448201527f6e733a205374616b652069732062656c6f77207468726573686f6c642e0000006064820152608401610b18565b611eaa60008461340e565b63ffffffff81166000908152600d60205260409020909250611ecf90600701336135fa565b5063ffffffff82166000908152600d60209081526040808320338452600501909152902060010155919050565b600e54610100900460ff1680611f155750600e5460ff16155b611f785760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b18565b600e54610100900460ff16158015611f9a57600e805461ffff19166101011790555b6001600160a01b038216611ff05760405162461bcd60e51b815260206004820152601760248201527f4e6f20746f6b656e206164647265737320666f756e642e0000000000000000006044820152606401610b18565b611ff861360f565b60028490556004838155600180546001600160c01b0319166001600160a01b0385161790819055600160a01b900463ffffffff166000908152600d602052604090208101805460ff191690911790556702c68af0bb140000600955670853a0d2313c0000600a55801561207157600e805461ff00191690555b50505050565b600154600160a01b900463ffffffff166000908152600d6020526040812060049081015460ff161461212d5760405162461bcd60e51b815260206004820152605360248201527f436f6d7065746974696f6e202d2073706f6e736f723a20504c6561736520776160448201527f697420666f7220746865206368616c6c656e676520746f20636f6d706c657465606482015272103132b337b9329039b837b739b7b934b7339760691b608482015260a401610b18565b60035461213a83826144ae565b6003556001546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561218f57600080fd5b505af11580156121a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121c79190614027565b91506121d383826144ae565b604051849033907f64939930c3fd0a1fe9e7fb9810272db7730a0f02b900972787bcb79fb6fd3d2d90600090a450919050565b60006122206000805160206145d083398151915233611d96565b61223c5760405162461bcd60e51b8152600401610b1890614477565b826122af5760405162461bcd60e51b815260206004820152603c60248201527f436f6d7065746974696f6e202d20757064617465526573756c74733a204d757360448201527f742068617665207072652d6578697374696e6720726573756c74732e000000006064820152608401610b18565b611e108383612eda565b63ffffffff81166000908152600d60205260408120610adc9060070161367f565b6060600b80546122e99061453f565b80601f01602080910402602001604051908101604052809291908181526020018280546123159061453f565b80156123625780601f1061233757610100808354040283529160200191612362565b820191906000526020600020905b81548152906001019060200180831161234557829003601f168201915b5050505050905090565b60006123866000805160206145d083398151915233611d96565b6123a25760405162461bcd60e51b8152600401610b1890614477565b6001546123c390600160a01b900463ffffffff168a8a8a8a8a8a8a8a613689565b9998505050505050505050565b6000828152602081905260409020600101546123eb9061109e565b6111c75760405162461bcd60e51b815260206004820152603060248201527f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60448201526f2061646d696e20746f207265766f6b6560801b6064820152608401610b18565b600061246a6000805160206145d083398151915233611d96565b6124865760405162461bcd60e51b8152600401610b1890614477565b600154600160a01b900463ffffffff166000818152600d6020526040902060049081015460ff16146125205760405162461bcd60e51b815260206004820152603a60248201527f436f6d7065746974696f6e202d206f70656e4368616c6c656e67653a2050726560448201527f76696f757320706861736520697320696e636f6d706c6574652e0000000000006064820152608401610b18565b600454600354101561258c5760405162461bcd60e51b815260206004820152602f60248201527f436f6d70657469746f6e202d206f70656e4368616c6c656e67653a204e6f742060448201526e32b737bab3b4103932bbb0b932399760891b6064820152608401610b18565b8061259681614595565b63ffffffff81166000818152600d602052604081206004018054600160ff199091168117909155805463ffffffff60a01b1916600160a01b909302929092179091559092506125e89150829088613146565b506125f5816000876132b2565b50670de0b6b3a764000060095460035461260f91906144e6565b61261991906144c6565b600755600a54600354670de0b6b3a764000091612635916144e6565b61263f91906144c6565b60088190556007546003546126549190614505565b61265e9190614505565b600690815563ffffffff82166000818152600d6020908152604080832083805290940190528281208790556001808252838220879055925192945090917f9da6f4cd0f617f153c3ebc9840a08792cff9f0fd8c796ce09c5d2006f42da6d99190a250949350505050565b60006126e26000805160206145d083398151915233611d96565b6126fe5760405162461bcd60e51b8152600401610b1890614477565b600154600160a01b900463ffffffff1660ff83166002108015612724575060058360ff16105b6127bc5760405162461bcd60e51b815260206004820152605a60248201527f436f6d7065746974696f6e202d20616476616e6365546f50686173653a20596f60448201527f75206d6179206f6e6c79207573652074686973206d6574686f6420666f72206160648201527f6476616e63696e6720746f207068617365732033206f7220342e000000000000608482015260a401610b18565b63ffffffff81166000908152600d602052604090206004015460ff166127e360018561451c565b60ff16146128675760405162461bcd60e51b815260206004820152604560248201527f436f6d7065746974696f6e202d20616476616e6365546f50686173653a20596f60448201527f75206d6179206f6e6c7920616476616e636520746f20746865206e65787420706064820152643430b9b29760d91b608482015260a401610b18565b63ffffffff166000908152600d60205260409020600401805460ff191660ff939093169290921790915550600190565b60006128b16000805160206145d083398151915233611d96565b6128cd5760405162461bcd60e51b8152600401610b1890614477565b63ffffffff88166000908152600d6020526040902060040154600360ff909116101561297d5760405162461bcd60e51b815260206004820152605360248201527f436f6d7065746974696f6e202d207570646174654368616c6c656e6765416e6460448201527f546f75726e616d656e7453636f7265733a204368616c6c656e6765206973206960648201527237103ab732bc3832b1ba32b21039ba30ba329760691b608482015260a401610b18565b858414801561298b57508582145b612a2e5760405162461bcd60e51b815260206004820152606260248201527f436f6d7065746974696f6e202d207570646174654368616c6c656e6765416e6460448201527f546f75726e616d656e7453636f7265733a204e756d626572206f66207061727460648201527f69636970616e747320616e642073636f7265732061726520646966666572656e6084820152613a1760f11b60a482015260c401610b18565b60005b86811015612b8557858582818110612a5957634e487b7160e01b600052603260045260246000fd5b90506020020135600d60008b63ffffffff1663ffffffff16815260200190815260200160002060050160008a8a85818110612aa457634e487b7160e01b600052603260045260246000fd5b9050602002016020810190612ab99190613f25565b6001600160a01b03168152602081019190915260400160002060050155838382818110612af657634e487b7160e01b600052603260045260246000fd5b90506020020135600d60008b63ffffffff1663ffffffff16815260200190815260200160002060050160008a8a85818110612b4157634e487b7160e01b600052603260045260246000fd5b9050602002016020810190612b569190613f25565b6001600160a01b0316815260208101919091526040016000206006015580612b7d8161457a565b915050612a31565b505060405160019063ffffffff8916907f6fa7224843e16ab8c76a13b984cfcf54de67707a118bf52ce93e0e5be358987190600090a2979650505050505050565b6003546005546001546040516370a0823160e01b815230600482015260009392916001600160a01b0316906370a082319060240160206040518083038186803b158015612c1257600080fd5b505afa158015612c26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c4a9190614171565b612c549190614505565b612c5e9190614505565b905090565b600082612cd15760405162461bcd60e51b8152602060048201526042602482015260008051602061461083398151915260448201527f4d7573742068617665207072652d6578697374696e67207375626d697373696f606482015261371760f11b608482015260a401610b18565b612cdb838361340e565b905081610adc5763ffffffff81166000908152600d60205260409020612d0490600701336139ec565b5063ffffffff81166000908152600d6020908152604080832033845260050190915281206001015592915050565b6000612d4c6000805160206145d083398151915233611d96565b612d685760405162461bcd60e51b8152600401610b1890614477565b60018054600160a01b900463ffffffff166000818152600d6020526040902060040154909160ff90911614612e055760405162461bcd60e51b815260206004820152603d60248201527f436f6d7065746974696f6e202d20636c6f73655375626d697373696f6e3a204360448201527f68616c6c656e676520696e20756e65787065637465642073746174652e0000006064820152608401610b18565b63ffffffff81166000818152600d6020526040808220600401805460ff1916600217905551600194507faa5ebdc7900b87a79257aabbab219af255ada0be7148632ce5afcd622df7a88b9190a25090565b612e608282611d96565b611112576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055612e963390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600081831415612f635760405162461bcd60e51b815260206004820152604860248201527f436f6d7065746974696f6e202d20757064617465526573756c74733a2043616e60448201527f6e6f74207570646174652077697468207468652073616d652068617368206173606482015267103132b337b9329760c11b608482015260a401610b18565b600154600160a01b900463ffffffff166000818152600d6020526040902060040154600360ff90911610156130005760405162461bcd60e51b815260206004820152603b60248201527f436f6d7065746974696f6e202d20757064617465526573756c74733a2043686160448201527f6c6c656e676520696e20756e65787065637465642073746174652e00000000006064820152608401610b18565b63ffffffff81166000908152600d6020526040902060010154841461308d5760405162461bcd60e51b815260206004820152603c60248201527f436f6d7065746974696f6e202d20757064617465526573756c74733a20436c6160448201527f736820696e206578697374696e6720726573756c747320686173682e000000006064820152608401610b18565b63ffffffff81166000818152600d6020526040808220600190810187905590519094508592879290917f0fb7d772905d44c5fdd59d4ab87c7f40281e09f93e2e189d03737c6d82b154ea9190a45092915050565b6130eb8282611d96565b15611112576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000818314156131cf5760405162461bcd60e51b815260206004820152604860248201527f436f6d7065746974696f6e202d20757064617465446174617365743a2043616e60448201527f6e6f74207570646174652077697468207468652073616d652068617368206173606482015267103132b337b9329760c11b608482015260a401610b18565b63ffffffff84166000908152600d602052604090205483146132595760405162461bcd60e51b815260206004820152603d60248201527f436f6d7065746974696f6e202d20757064617465446174617365743a20496e6360448201527f6f7272656374206f6c642064617461736574207265666572656e63652e0000006064820152608401610b18565b5063ffffffff83166000818152600d602052604080822084905551600192849286927f0b4ad7e2453c3c06a28c5cfe29a3067c6edde6eb03be4df2a461f9d806cb747e9190a49392505050565b6000611e108383613a01565b6000818314156133385760405162461bcd60e51b815260206004820152604560248201527f436f6d7065746974696f6e202d205f7570646174654b65793a2043616e6e6f7460448201527f207570646174652077697468207468652073616d6520686173682061732062656064820152643337b9329760d91b608482015260a401610b18565b63ffffffff84166000908152600d602052604090206002015483146133be5760405162461bcd60e51b815260206004820152603660248201527f436f6d7065746974696f6e202d205f7570646174654b65793a20496e636f727260448201527532b1ba1037b6321035b2bc903932b332b932b731b29760511b6064820152608401610b18565b5063ffffffff83166000818152600d602052604080822060020184905551600192849286927f7a2b6b0f48d13449d72d8fd2c1fae94cd13c970cc0dc738abd0bae8d50ce81c69190a49392505050565b60018054600160a01b900463ffffffff166000818152600d6020526040902060040154909160ff909116146134995760405162461bcd60e51b815260206004820152603e602482015260008051602061461083398151915260448201527f4e6f7420617661696c61626c6520666f72207375626d697373696f6e732e00006064820152608401610b18565b818314156135115760405162461bcd60e51b815260206004820152604b602482015260008051602061461083398151915260448201527f43616e6e6f74207570646174652077697468207468652073616d65206861736860648201526a1030b9903132b337b9329760a91b608482015260a401610b18565b63ffffffff81166000908152600d6020908152604080832033845260050190915290205483146135a25760405162461bcd60e51b8152602060048201526042602482015260008051602061461083398151915260448201527f436c61736820696e206578697374696e67207375626d697373696f6e20686173606482015261341760f11b608482015260a401610b18565b63ffffffff81166000818152600d6020908152604080832033808552600590910190925280832086905551859391927f953e3b79bb71898776bb2ef8bb919748c883b8b27c42e334de1ecdbf79d472bb91a492915050565b6000611e10836001600160a01b038416613a95565b6136276000805160206145f083398151915233611108565b61363f6000805160206145f083398151915280613ae4565b6136576000805160206145d083398151915233611108565b61367d6000805160206145d08339815191526000805160206145f0833981519152613ae4565b565b6000610adc825490565b63ffffffff89166000908152600d6020526040812060040154600360ff909116101561371d5760405162461bcd60e51b815260206004820152603b60248201527f436f6d7065746974696f6e202d20706179526577617264733a204368616c6c6560448201527f6e676520697320696e20756e65787065637465642073746174652e00000000006064820152608401610b18565b878614801561372b57508784145b801561373657508782145b6137ba5760405162461bcd60e51b815260206004820152604960248201527f436f6d7065746974696f6e202d20706179526577617264733a204e756d62657260448201527f206f66207375626d69747465727320616e64207265776172647320617265206460648201526834b33332b932b73a1760b91b608482015260a401610b18565b60008080805b8b811015613929578a8a828181106137e857634e487b7160e01b600052603260045260246000fd5b90506020020135846137fa91906144ae565b935088888281811061381c57634e487b7160e01b600052603260045260246000fd5b905060200201358361382e91906144ae565b925086868281811061385057634e487b7160e01b600052603260045260246000fd5b905060200201358261386291906144ae565b91506139178e8e8e8481811061388857634e487b7160e01b600052603260045260246000fd5b905060200201602081019061389d9190613f25565b8d8d858181106138bd57634e487b7160e01b600052603260045260246000fd5b905060200201358c8c868181106138e457634e487b7160e01b600052603260045260246000fd5b905060200201358b8b8781811061390b57634e487b7160e01b600052603260045260246000fd5b90506020020135613b38565b806139218161457a565b9150506137c0565b50826006600082825461393c9190614505565b9250508190555081600760008282546139559190614505565b92505081905550806008600082825461396e9190614505565b9091555081905061397f83856144ae565b61398991906144ae565b6003600082825461399a9190614505565b909155508190506139ab83856144ae565b6139b591906144ae565b600560008282546139c691906144ae565b90915550600194506139dc90508d848484613cb0565b5050509998505050505050505050565b6000611e10836001600160a01b038416613cf5565b81546000908210613a5f5760405162461bcd60e51b815260206004820152602260248201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604482015261647360f01b6064820152608401610b18565b826000018281548110613a8257634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b6000818152600183016020526040812054613adc57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610adc565b506000610adc565b600082815260208190526040902060010154819060405184907fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff90600090a460009182526020829052604090912060010155565b80613b4383856144ae565b613b4d91906144ae565b6001600160a01b0385166000908152600c602052604081208054909190613b759084906144ae565b90915550508215613bc55763ffffffff85166000908152600d602090815260408083206001600160a01b038816845260050190915281206002018054859290613bbf9084906144ae565b90915550505b8115613c105763ffffffff85166000908152600d602090815260408083206001600160a01b038816845260050190915281206003018054849290613c0a9084906144ae565b90915550505b8015613c5b5763ffffffff85166000908152600d602090815260408083206001600160a01b038816845260050190915281206004018054839290613c559084906144ae565b90915550505b6040805163ffffffff8716815260208101859052829184916001600160a01b038816917f6bf9f9ab57efedd3554e5388390b4ec0cc61506e0dfc7ad37db38d940a23b743910160405180910390a45050505050565b60405163ffffffff851681528190839085907f8b77f1e219a52706fcf536bedec95f5df41e062d16118ae8f4bedffd30afc9399060200160405180910390a450505050565b60008181526001830160205260408120548015613e08576000613d19600183614505565b8554909150600090613d2d90600190614505565b90506000866000018281548110613d5457634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080876000018481548110613d8557634e487b7160e01b600052603260045260246000fd5b600091825260209091200155613d9c8360016144ae565b60008281526001890160205260409020558654879080613dcc57634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610adc565b6000915050610adc565b828054613e1e9061453f565b90600052602060002090601f016020900481019282613e405760008555613e86565b82601f10613e595782800160ff19823516178555613e86565b82800160010185558215613e86579182015b82811115613e86578235825591602001919060010190613e6b565b50613e92929150613e96565b5090565b5b80821115613e925760008155600101613e97565b80356001600160a01b0381168114613ec257600080fd5b919050565b60008083601f840112613ed8578182fd5b50813567ffffffffffffffff811115613eef578182fd5b6020830191508360208260051b8501011115613f0a57600080fd5b9250929050565b803563ffffffff81168114613ec257600080fd5b600060208284031215613f36578081fd5b611e1082613eab565b60008060408385031215613f51578081fd5b613f5a83613eab565b946020939093013593505050565b6000806000806000806000806080898b031215613f83578384fd5b883567ffffffffffffffff80821115613f9a578586fd5b613fa68c838d01613ec7565b909a50985060208b0135915080821115613fbe578586fd5b613fca8c838d01613ec7565b909850965060408b0135915080821115613fe2578586fd5b613fee8c838d01613ec7565b909650945060608b0135915080821115614006578384fd5b506140138b828c01613ec7565b999c989b5096995094979396929594505050565b600060208284031215614038578081fd5b81518015158114611e10578182fd5b600060208284031215614058578081fd5b5035919050565b60008060408385031215614071578182fd5b8235915061408160208401613eab565b90509250929050565b6000806040838503121561409c578182fd5b50508035926020909101359150565b600080600080608085870312156140c0578384fd5b5050823594602084013594506040840135936060013592509050565b6000602082840312156140ed578081fd5b81356001600160e01b031981168114611e10578182fd5b60008060208385031215614116578182fd5b823567ffffffffffffffff8082111561412d578384fd5b818501915085601f830112614140578384fd5b81358181111561414e578485fd5b86602082850101111561415f578485fd5b60209290920196919550909350505050565b600060208284031215614182578081fd5b5051919050565b60008060006060848603121561419d578283fd5b83359250602084013591506141b460408501613eab565b90509250925092565b6000602082840312156141ce578081fd5b611e1082613f11565b600080604083850312156141e9578182fd5b6141f283613f11565b915061408160208401613eab565b600080600060608486031215614214578081fd5b61421d84613f11565b925061422b60208501613eab565b9150604084013590509250925092565b60008060008060008060006080888a031215614255578081fd5b61425e88613f11565b9650602088013567ffffffffffffffff8082111561427a578283fd5b6142868b838c01613ec7565b909850965060408a013591508082111561429e578283fd5b6142aa8b838c01613ec7565b909650945060608a01359150808211156142c2578283fd5b506142cf8a828b01613ec7565b989b979a50959850939692959293505050565b600080600080600080608087890312156142fa578384fd5b61430387613f11565b9550602087013567ffffffffffffffff8082111561431f578586fd5b61432b8a838b01613ec7565b909750955060408901359450606089013591508082111561434a578384fd5b5061435789828a01613ec7565b979a9699509497509295939492505050565b6000806040838503121561437b578182fd5b613f5a83613f11565b600080600060608486031215614398578081fd5b6143a184613f11565b95602085013595506040909401359392505050565b6000602082840312156143c7578081fd5b813560ff81168114611e10578182fd5b6020808252825182820181905260009190848201906040850190845b818110156144185783516001600160a01b0316835292840192918401916001016143f3565b50909695505050505050565b6000602080835283518082850152825b8181101561445057858101830151858201604001528201614434565b818111156144615783604083870101525b50601f01601f1916929092016040019392505050565b60208082526017908201527f43616c6c657220697320756e617574686f72697a65642e000000000000000000604082015260600190565b600082198211156144c1576144c16145b9565b500190565b6000826144e157634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615614500576145006145b9565b500290565b600082821015614517576145176145b9565b500390565b600060ff821660ff841680821015614536576145366145b9565b90039392505050565b600181811c9082168061455357607f821691505b6020821081141561457457634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561458e5761458e6145b9565b5060010190565b600063ffffffff808316818114156145af576145af6145b9565b6001019392505050565b634e487b7160e01b600052601160045260246000fdfea7c37a885c101433a066f48b62753beb2a7567fe326b80d58772c6ef61e282e7c6497b0d1af5627a7b5dc7995c3c9c668c87bd99ddc7e1609ba9724fe0e860b5436f6d7065746974696f6e202d207570646174655375626d697373696f6e3a20a26469706673582212203d2c15c453c9f6ebf77b10c30e38f4a1f1f0b753d92ac42fd5b146992f6691c964736f6c63430008040033",
  "deployedSourceMapi;:::-;;:::i;:::-;;;11636:14:30;;11629:22;11611:41;;11599:2;11584:18;3566:214:7;;;;;;;;7163:271:2;;;;;;:::i;:::-;;:::i;22260:140::-;22386:6;;22260:140;;-1:-1:-1;;;;;22386:6:2;;;10084:51:30;;10072:2;10057:18;22260:140:2;10039:102:30;235:70:0;;-1:-1:-1;;;;;;;;;;;235:70:0;;;;;11809:25:30;;;11797:2;11782:18;235:70:0;11764:76:30;20708:156:2;;;;;;:::i;:::-;20825:28;;20792:11;20825:28;;;:11;:28;;;;;:32;;;;20708:156;18774:154;18904:17;;18774:154;;161:68:0;;-1:-1:-1;;;;;;;;;;;161:68:0;;5383:208:2;;;;;;:::i;:::-;;:::i;2185:1217::-;;;;;;:::i;:::-;;:::i;19102:198::-;19265:28;;19102:198;;4185:121:7;;;;;;:::i;:::-;4251:7;4277:12;;;;;;;;;;:22;;;;4185:121;18934:162:2;19070:19;;18934:162;;5597:224;;;;;;:::i;:::-;;:::i;4556:228:7:-;;;;;;:::i;:::-;;:::i;:::-;;11185:173:2;;;;;;:::i;:::-;;:::i;19518:210::-;19690:31;;19518:210;;21959:146;22083:15;;21959:146;;5740:214:7;;;;;;:::i;:::-;;:::i;18072:506:2:-;;;:::i;20352:172::-;;;;;;:::i;:::-;20481:28;;20440:15;20481:28;;;:11;:28;;;;;:36;;20352:172;16794:751;;;;;;:::i;:::-;;:::i;23134:252::-;;;;;;:::i;:::-;23307:28;;;;23248:24;23307:28;;;:11;:28;;;;;;;;-1:-1:-1;;;;;23307:55:2;;;;;:42;;;;:55;;;:72;;;;23134:252;8710:498;;;;;;:::i;:::-;;:::i;20870:184::-;;;;;;:::i;:::-;21008:28;;20961:18;21008:28;;;:11;:28;;;;;:39;;;;20870:184;21289:500;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6058:243::-;;;;;;:::i;:::-;;:::i;24839:196::-;;;;;;:::i;:::-;24983:28;;;;24940:16;24983:28;;;:11;:28;;;;;;;;:45;;;:38;;;;:45;;;;;24839:196;1295:884;;;;;;:::i;:::-;;:::i;6862:294::-;;;;;;:::i;:::-;;:::i;6307:252::-;;;;;;:::i;:::-;;:::i;22406:236::-;;;;;;:::i;:::-;22569:28;;;;22514:22;22569:28;;;:11;:28;;;;;;;;-1:-1:-1;;;;;22569:55:2;;;;;:42;;;;:55;;;:66;;22406:236;22884:244;;;;;;:::i;:::-;23051:28;;;;22996:22;23051:28;;;:11;:28;;;;;;;;-1:-1:-1;;;;;23051:55:2;;;;;:42;;;;:55;;;:70;;;;22884:244;20178:168;20322:17;;-1:-1:-1;;;20322:17:2;;;;20178:168;;;32807:10:30;32795:23;;;32777:42;;32765:2;32750:18;20178:168:2;32732:93:30;9214:458:2;;;;;;:::i;:::-;;:::i;24333:252::-;;;;;;:::i;:::-;24506:28;;;;24447:24;24506:28;;;:11;:28;;;;;;;;-1:-1:-1;;;;;24506:55:2;;;;;:42;;;;:55;;;:72;;;;24333:252;22111:143;;;;;;:::i;:::-;-1:-1:-1;;;;;22227:20:2;22190:13;22227:20;;;:7;:20;;;;;;;22111:143;6565:291;;;;;;:::i;:::-;;:::i;3867:137:7:-;;;;;;:::i;:::-;;:::i;19954:218:2:-;20132:33;;19954:218;;19734:214;19909:32;;19734:214;;23654:419;;;;;;:::i;:::-;;:::i;3408:524::-;;;;;;:::i;:::-;;:::i;2363:49:7:-;;2408:4;2363:49;;691:551:2;;;;;;:::i;:::-;;:::i;23392:256::-;;;;;;:::i;:::-;23568:28;;;;23507:25;23568:28;;;:11;:28;;;;;;;;-1:-1:-1;;;;;23568:55:2;;;;;:42;;;;:55;;;:73;;;;23392:256;21795:158;;;;;;:::i;:::-;21912:28;;21877:11;21912:28;;;:11;:28;;;;;:34;;;;;;21795:158;;;;33270:4:30;33258:17;;;33240:36;;33228:2;33213:18;21795:158:2;33195:87:30;25433:522:2;;;;;;:::i;:::-;;:::i;11364:318::-;;;;;;:::i;:::-;;:::i;21060:223::-;;;;;;:::i;:::-;;:::i;25233:124::-;;;:::i;:::-;;;;;;;:::i;12419:346::-;;;;;;:::i;:::-;;:::i;18618:150::-;18745:16;;18618:150;;5018:231:7;;;;;;:::i;:::-;;:::i;19306:206:2:-;19475:30;;19306:206;;24079:248;;;;;;:::i;:::-;24249:28;;;;24192:23;24249:28;;;:11;:28;;;;;;;;-1:-1:-1;;;;;24249:55:2;;;;;:42;;;;:55;;;;;:71;;;24079:248;7440:1264;;;;;;:::i;:::-;;:::i;17551:515::-;;;;;;:::i;:::-;;:::i;15665:1123::-;;;;;;:::i;:::-;;:::i;22648:230::-;;;;;;:::i;:::-;22809:28;;;;22770:14;22809:28;;;:11;:28;;;;;;;;-1:-1:-1;;;;;22809:55:2;;;;;:42;;;;:55;;;:62;;;;22648:230;24591:242;;;;;;:::i;:::-;24754:28;;;;24720:10;24754:28;;;:11;:28;;;;;;;;-1:-1:-1;;;;;24754:55:2;;;;;:42;;;;:55;;;;;:72;;;:60;;;;:72;;;;;;;24591:242;20530:172;;;;;;:::i;:::-;20659:28;;20618:15;20659:28;;;:11;:28;;;;;:36;;;;20530:172;25041:186;;;:::i;3938:576::-;;;;;;:::i;:::-;;:::i;10786:393::-;;;:::i;3566:214:7:-;3651:4;-1:-1:-1;;;;;;3674:47:7;;-1:-1:-1;;;3674:47:7;;:99;;-1:-1:-1;;;;;;;;;;871:40:21;;;3737:36:7;3667:106;3566:214;-1:-1:-1;;3566:214:7:o;7163:271:2:-;7278:12;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;7306:28:2::1;::::0;::::1;;::::0;;;:11:::1;:28;::::0;;;;;:39:::1;;:52:::0;;;7398:29;7378:4:::1;::::0;7348:10;;7398:29:::1;::::0;7306:28;7398:29:::1;7163:271:::0;;;;:::o;5383:208::-;5479:12;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;5507:21:2::1;:8;5518:10:::0;;5507:21:::1;:::i;:::-;-1:-1:-1::0;;5568:16:2::1;::::0;5548:4:::1;::::0;5568:16:::1;::::0;;;::::1;5383:208:::0;;;;:::o;2185:1217::-;2333:17;;2280:12;;-1:-1:-1;;;2333:17:2;;;;;-1:-1:-1;;;;;2390:6:2;2368:10;:29;2360:120;;;;-1:-1:-1;;;2360:120:2;;17567:2:30;2360:120:2;;;17549:21:30;17606:2;17586:18;;;17579:30;17645:34;17625:18;;;17618:62;17716:34;17696:18;;;17689:62;-1:-1:-1;;;17767:19:30;;;17760:45;17822:19;;2360:120:2;17539:308:30;2360:120:2;2510:17;;-1:-1:-1;;;2510:17:2;;;;2498:30;;;;:11;:30;;;;;:36;;;;;2538:1;2498:41;;2490:156;;;;-1:-1:-1;;;2490:156:2;;23388:2:30;2490:156:2;;;23370:21:30;23427:3;23407:18;;;23400:31;23467:34;23447:18;;;23440:62;23538:34;23518:18;;;23511:62;23610:34;23589:19;;;23582:63;-1:-1:-1;;;23661:19:30;;;23654:37;23708:19;;2490:156:2;23360:373:30;2490:156:2;-1:-1:-1;;;;;2678:15:2;;2657:18;2678:15;;;:7;:15;;;;;;2711:25;;;;2703:101;;;;-1:-1:-1;;;2703:101:2;;28746:2:30;2703:101:2;;;28728:21:30;28785:2;28765:18;;;28758:30;28824:34;28804:18;;;28797:62;28895:33;28875:18;;;28868:61;28946:19;;2703:101:2;28718:253:30;2703:101:2;2819:28;;;2892:1;2819:28;;;:11;:28;;;;;;;;-1:-1:-1;;;;;2819:50:2;;;;:42;;:50;;;;;:61;:75;2815:377;;2947:15;;2918:24;2931:11;2918:10;:24;:::i;:::-;2917:45;;2909:174;;;;-1:-1:-1;;;2909:174:2;;17001:2:30;2909:174:2;;;16983:21:30;17040:3;17020:18;;;17013:31;17080:34;17060:18;;;17053:62;17151:34;17131:18;;;17124:62;17223:34;17202:19;;;17195:63;-1:-1:-1;;;17274:19:30;;;17267:51;17335:19;;2909:174:2;16973:387:30;2909:174:2;3157:24;3170:11;3157:10;:24;:::i;:::-;3097:28;;;;;;;:11;:28;;;;;;;;-1:-1:-1;;;;;3097:50:2;;;;:42;;:50;;;;;:57;;:84;2815:377;3220:24;3233:11;3220:10;:24;:::i;:::-;-1:-1:-1;;;;;3202:15:2;;;;;;:7;:15;;;;;:42;;;;3254:19;:34;;3277:11;;3202:15;3254:34;;3277:11;;3254:34;:::i;:::-;;;;-1:-1:-1;;3308:6:2;;:36;;-1:-1:-1;;;3308:36:2;;-1:-1:-1;;;;;10718:32:30;;;3308:36:2;;;10700:51:30;10767:18;;;10760:34;;;3308:6:2;;;;:15;;10673:18:30;;3308:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3298:46;;3383:11;3375:6;-1:-1:-1;;;;;3360:35:2;;;;;;;;;;;2185:1217;;;;;;:::o;5597:224::-;5725:12;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;5964:28:2;;;5936:12;5964:28;;;:11;:28;;;;;;;;:45;;;:38;;:45;;;;;:57;;;6041:4;5763:51:::1;5753:61:::0;5597:224;-1:-1:-1;;;;5597:224:2:o;4556:228:7:-;4251:7;4277:12;;;;;;;;;;:22;;;4648:41;;4656:18;665:10:19;3867:137:7;:::i;4648:41::-;4640:101;;;;-1:-1:-1;;;4640:101:7;;13488:2:30;4640:101:7;;;13470:21:30;13527:2;13507:18;;;13500:30;13566:34;13546:18;;;13539:62;-1:-1:-1;;;13617:18:30;;;13610:45;13672:19;;4640:101:7;13460:237:30;4640:101:7;4752:25;4763:4;4769:7;4752:10;:25::i;:::-;4556:228;;:::o;11185:173:2:-;11274:12;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;11312:39:2::1;11335:1;11339:11:::0;11312:14:::1;:39::i;5740:214:7:-:0;-1:-1:-1;;;;;5835:23:7;;665:10:19;5835:23:7;5827:83;;;;-1:-1:-1;;;5827:83:7;;31762:2:30;5827:83:7;;;31744:21:30;31801:2;31781:18;;;31774:30;31840:34;31820:18;;;31813:62;-1:-1:-1;;;31891:18:30;;;31884:45;31946:19;;5827:83:7;31734:237:30;5827:83:7;5921:26;5933:4;5939:7;5921:11;:26::i;18072:506:2:-;18148:12;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;18196:17:2::1;::::0;-1:-1:-1;;;18196:17:2;::::1;;;18184:30;::::0;;;:11:::1;:30;::::0;;;;:36:::1;::::0;;::::1;::::0;::::1;;:41;18176:149;;;::::0;-1:-1:-1;;;18176:149:2;;13904:2:30;18176:149:2::1;::::0;::::1;13886:21:30::0;13943:2;13923:18;;;13916:30;13982:34;13962:18;;;13955:62;14053:34;14033:18;;;14026:62;14125:33;14104:19;;;14097:62;14176:19;;18176:149:2::1;13876:325:30::0;18176:149:2::1;18335:17;18355:14;:12;:14::i;:::-;18335:34;;18399:1;18387:9;:13;18379:82;;;::::0;-1:-1:-1;;;18379:82:2;;14408:2:30;18379:82:2::1;::::0;::::1;14390:21:30::0;14447:2;14427:18;;;14420:30;14486:34;14466:18;;;14459:62;14557:26;14537:18;;;14530:54;14601:19;;18379:82:2::1;14380:246:30::0;18379:82:2::1;18491:9;18471:16;;:29;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;18540:31:2::1;::::0;18520:4:::1;::::0;-1:-1:-1;18561:9:2;;18540:31:::1;::::0;;;::::1;563:1:0;18072:506:2::0;:::o;16794:751::-;16972:12;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;17008:28:2::1;::::0;::::1;;::::0;;;:11:::1;:28;::::0;;;;:34:::1;;::::0;17046:1:::1;17008:34;::::0;;::::1;:39;;17000:123;;;::::0;-1:-1:-1;;;17000:123:2;;15677:2:30;17000:123:2::1;::::0;::::1;15659:21:30::0;15716:2;15696:18;;;15689:30;15755:34;15735:18;;;15728:62;15826:34;15806:18;;;15799:62;-1:-1:-1;;;15877:19:30;;;15870:38;15925:19;;17000:123:2::1;15649:301:30::0;17000:123:2::1;17141:36:::0;;::::1;17133:135;;;::::0;-1:-1:-1;;;17133:135:2;;21978:2:30;17133:135:2::1;::::0;::::1;21960:21:30::0;22017:2;21997:18;;;21990:30;22056:34;22036:18;;;22029:62;22127:34;22107:18;;;22100:62;-1:-1:-1;;;22178:19:30;;;22171:53;22241:19;;17133:135:2::1;21950:316:30::0;17133:135:2::1;17284:6;17279:168;17296:23:::0;;::::1;17279:168;;;17427:6;;17434:1;17427:9;;;;;-1:-1:-1::0;;;17427:9:2::1;;;;;;;;;;;;;;;17348:11;:28;17360:15;17348:28;;;;;;;;;;;;;;;:42;;:59;17391:12;;17404:1;17391:15;;;;;-1:-1:-1::0;;;17391:15:2::1;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;17348:59:2::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;17348:59:2;;;:76;;;:64:::1;;:76:::0;;;;;:88;17321:3;::::1;::::0;::::1;:::i;:::-;;;;17279:168;;;-1:-1:-1::0;;17486:52:2::1;::::0;17466:4:::1;::::0;17527:10;;17486:52:::1;::::0;::::1;::::0;::::1;::::0;;;::::1;16794:751:::0;;;;;;;;:::o;8710:498::-;8826:12;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;8879:17:2::1;::::0;;-1:-1:-1;;;8879:17:2;::::1;;;8854:22;8914:28:::0;;;:11:::1;:28;::::0;;;;:34:::1;;::::0;8879:17;;8914:34:::1;::::0;;::::1;:39;8906:101;;;::::0;-1:-1:-1;;;8906:101:2;;30089:2:30;8906:101:2::1;::::0;::::1;30071:21:30::0;30128:2;30108:18;;;30101:30;30167:34;30147:18;;;30140:62;-1:-1:-1;;;30218:18:30;;;30211:47;30275:19;;8906:101:2::1;30061:239:30::0;8906:101:2::1;9025:28:::0;9017:101:::1;;;::::0;-1:-1:-1;;;9017:101:2;;26296:2:30;9017:101:2::1;::::0;::::1;26278:21:30::0;26335:2;26315:18;;;26308:30;26374:34;26354:18;;;26347:62;26445:30;26425:18;;;26418:58;26493:19;;9017:101:2::1;26268:250:30::0;9017:101:2::1;9138:63;9153:15;9170:14;9186;9138;:63::i;21289:500::-:0;21414:16;21446:27;21490:21;21501:10;21490:8;:21;:::i;:::-;21476:36;;;;;;-1:-1:-1;;;21476:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21476:36:2;-1:-1:-1;21571:28:2;;;21522:46;21571:28;;;:11;:28;;;;;21446:66;;-1:-1:-1;21571:39:2;;21634:10;21620:135;21650:8;21646:1;:12;21620:135;;;21709:34;21726:13;21741:1;21709:16;:34::i;:::-;21679:10;21690:14;21694:10;21690:1;:14;:::i;:::-;21679:26;;;;;;-1:-1:-1;;;21679:26:2;;;;;;;;;-1:-1:-1;;;;;21679:65:2;;;:26;;;;;;;;;;;:65;21660:3;;;;:::i;:::-;;;;21620:135;;;-1:-1:-1;21772:10:2;;21289:500;-1:-1:-1;;;;;21289:500:2:o;6058:243::-;6157:12;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;-1:-1:-1;6185:17:2::1;:32:::0;;;6257:37:::1;::::0;6237:4:::1;::::0;6205:12;;6257:37:::1;::::0;;;::::1;6058:243:::0;;;:::o;1295:884::-;1443:17;;1390:12;;-1:-1:-1;;;1443:17:2;;;;;-1:-1:-1;;;;;1500:6:2;1478:10;:29;1470:120;;;;-1:-1:-1;;;1470:120:2;;22901:2:30;1470:120:2;;;22883:21:30;22940:2;22920:18;;;22913:30;22979:34;22959:18;;;22952:62;23050:34;23030:18;;;23023:62;-1:-1:-1;;;23101:19:30;;;23094:45;23156:19;;1470:120:2;22873:308:30;1470:120:2;1608:28;;;;;;;:11;:28;;;;;:34;;;;;1646:1;1608:39;;1600:154;;;;-1:-1:-1;;;1600:154:2;;27217:2:30;1600:154:2;;;27199:21:30;27256:3;27236:18;;;27229:31;27296:34;27276:18;;;27269:62;27367:34;27347:18;;;27340:62;27439:34;27418:19;;;27411:63;-1:-1:-1;;;27490:19:30;;;27483:37;27537:19;;1600:154:2;27189:373:30;1600:154:2;-1:-1:-1;;;;;1786:15:2;;1765:18;1786:15;;;:7;:15;;;;;;;;;1815:28;;;;;:11;:28;;;;;:50;;;:42;;;;:50;;;;;:61;:75;1811:189;;1965:24;1978:11;1965:10;:24;:::i;:::-;1905:28;;;;;;;:11;:28;;;;;;;;-1:-1:-1;;;;;1905:50:2;;;;:42;;:50;;;;;:57;;:84;1811:189;2028:24;2041:11;2028:10;:24;:::i;:::-;-1:-1:-1;;;;;2010:15:2;;;;;;:7;:15;;;;;:42;;;;2062:19;:34;;2085:11;;2010:15;2062:34;;2085:11;;2062:34;:::i;:::-;;;;-1:-1:-1;;2137:35:2;;2117:4;;-1:-1:-1;2160:11:2;;-1:-1:-1;;;;;2137:35:2;;;;;;;;1295:884;;;;;;:::o;6862:294::-;6978:12;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;-1:-1:-1;7006:33:2::1;:49:::0;;;7095:54:::1;::::0;7075:4:::1;::::0;7042:13;;7095:54:::1;::::0;;;::::1;6862:294:::0;;;:::o;6307:252::-;6409:12;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;-1:-1:-1;6437:15:2::1;:35:::0;;;6512:40:::1;::::0;6492:4:::1;::::0;6455:17;;6512:40:::1;::::0;;;::::1;6307:252:::0;;;:::o;9214:458::-;9318:12;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;9371:17:2::1;::::0;;-1:-1:-1;;;9371:17:2;::::1;;;9346:22;9406:28:::0;;;:11:::1;:28;::::0;;;;:34:::1;;::::0;9371:17;;9406:34:::1;::::0;;::::1;:39;9398:97;;;::::0;-1:-1:-1;;;9398:97:2;;14833:2:30;9398:97:2::1;::::0;::::1;14815:21:30::0;14872:2;14852:18;;;14845:30;14911:34;14891:18;;;14884:62;-1:-1:-1;;;14962:18:30;;;14955:43;15015:19;;9398:97:2::1;14805:235:30::0;9398:97:2::1;9513:24:::0;9505:89:::1;;;::::0;-1:-1:-1;;;9505:89:2;;30507:2:30;9505:89:2::1;::::0;::::1;30489:21:30::0;30546:2;30526:18;;;30519:30;30585:34;30565:18;;;30558:62;-1:-1:-1;;;30636:18:30;;;30629:50;30696:19;;9505:89:2::1;30479:242:30::0;9505:89:2::1;9614:51;9625:15;9642:10;9654;9614;:51::i;6565:291::-:0;6680:12;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;-1:-1:-1;6708:32:2::1;:48:::0;;;6796:53:::1;::::0;6776:4:::1;::::0;6743:13;;6796:53:::1;::::0;;;::::1;6565:291:::0;;;:::o;3867:137:7:-;3945:4;3968:12;;;;;;;;;;;-1:-1:-1;;;;;3968:29:7;;;;;;;;;;;;;;;3867:137::o;23654:419:2:-;23993:28;;;23766:22;23993:28;;;:11;:28;;;;;;;;-1:-1:-1;;;;;23993:55:2;;;;:42;;:55;;;;;:73;;;;23910:72;;;;23829:70;;;;;23993:73;;23829:153;;;:::i;:::-;:237;;;;:::i;:::-;23804:262;23654:419;-1:-1:-1;;;23654:419:2:o;3408:524::-;3564:10;3497:22;3556:19;;;:7;:19;;;;;;3607:15;;3593:29;;;3585:103;;;;-1:-1:-1;;;3585:103:2;;15247:2:30;3585:103:2;;;15229:21:30;15286:2;15266:18;;;15259:30;15325:34;15305:18;;;15298:62;15396:31;15376:18;;;15369:59;15445:19;;3585:103:2;15219:251:30;3585:103:2;3716:45;3742:1;3746:14;3716:17;:45::i;:::-;3789:28;;;;;;;:11;:28;;;;;3698:63;;-1:-1:-1;3771:70:2;;3789:39;;3830:10;3771:17;:70::i;:::-;-1:-1:-1;3851:28:2;;;;;;;:11;:28;;;;;;;;3894:10;3851:54;;:42;;:54;;;;;:61;;:74;3863:15;3408:524;-1:-1:-1;3408:524:2:o;691:551::-;1495:13:13;;;;;;;;:30;;-1:-1:-1;1513:12:13;;;;1512:13;1495:30;1487:89;;;;-1:-1:-1;;;1487:89:13;;20703:2:30;1487:89:13;;;20685:21:30;20742:2;20722:18;;;20715:30;20781:34;20761:18;;;20754:62;-1:-1:-1;;;20832:18:30;;;20825:44;20886:19;;1487:89:13;20675:236:30;1487:89:13;1610:13;;;;;;;1609:14;1633:98;;;;1667:13;:20;;-1:-1:-1;;1701:19:13;;;;;1633:98;-1:-1:-1;;;;;837:27:2;::::1;829:63;;;::::0;-1:-1:-1;;;829:63:2;;31410:2:30;829:63:2::1;::::0;::::1;31392:21:30::0;31449:2;31429:18;;;31422:30;31488:25;31468:18;;;31461:53;31531:18;;829:63:2::1;31382:173:30::0;829:63:2::1;902:21;:19;:21::i;:::-;933:15;:33:::0;;;976:17:::1;:37:::0;;;1023:6:::1;:30:::0;;-1:-1:-1;;;;;;1063:21:2;-1:-1:-1;;;;;1023:30:2;::::1;1063:21:::0;;;;;-1:-1:-1;;;1106:17:2;::::1;1063:21;1106:17;-1:-1:-1::0;1094:30:2;;;:11:::1;:30;::::0;;;;:36;::::1;:40:::0;;-1:-1:-1;;1094:40:2::1;::::0;;::::1;::::0;;1179:5:::1;1144:32;:40:::0;1230:5:::1;1194:33;:41:::0;1753:66:13;;;;1787:13;:21;;-1:-1:-1;;1787:21:13;;;1753:66;691:551:2;;;;:::o;25433:522::-;25554:17;;-1:-1:-1;;;25554:17:2;;;;25506:12;25542:30;;;:11;:30;;;;;:36;;;;;;;:41;25534:137;;;;-1:-1:-1;;;25534:137:2;;19381:2:30;25534:137:2;;;19363:21:30;19420:2;19400:18;;;19393:30;19459:34;19439:18;;;19432:62;19530:34;19510:18;;;19503:62;-1:-1:-1;;;19581:19:30;;;19574:50;19641:19;;25534:137:2;19353:313:30;25534:137:2;25710:16;;25755:32;25776:11;25710:16;25755:32;:::i;:::-;25736:16;:51;25807:6;;:59;;-1:-1:-1;;;25807:59:2;;25827:10;25807:59;;;10386:34:30;25847:4:2;10436:18:30;;;10429:43;10488:18;;;10481:34;;;-1:-1:-1;;;;;25807:6:2;;;;:19;;10321:18:30;;25807:59:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25797:69;-1:-1:-1;25915:32:2;25936:11;25915:18;:32;:::i;:::-;25882:66;;25902:11;;25890:10;;25882:66;;;;;25433:522;;;;:::o;11364:318::-;11480:12;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;11516:28:2;11508:101:::1;;;::::0;-1:-1:-1;;;11508:101:2;;21118:2:30;11508:101:2::1;::::0;::::1;21100:21:30::0;21157:2;21137:18;;;21130:30;21196:34;21176:18;;;21169:62;21267:30;21247:18;;;21240:58;21315:19;;11508:101:2::1;21090:250:30::0;11508:101:2::1;11629:46;11644:14;11660;11629;:46::i;21060:223::-:0;21236:28;;;21154:25;21236:28;;;:11;:28;;;;;21215:61;;21236:39;;21215:20;:61::i;25233:124::-;25295:21;25342:8;25332:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25233:124;:::o;12419:346::-;12625:12;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;12675:17:2::1;::::0;12663:95:::1;::::0;-1:-1:-1;;;12675:17:2;::::1;;;12694:10:::0;;12706:14;;12722:16;;12740:17;;12663:11:::1;:95::i;:::-;12653:105:::0;12419:346;-1:-1:-1;;;;;;;;;12419:346:2:o;5018:231:7:-;4251:7;4277:12;;;;;;;;;;:22;;;5111:41;;5119:18;4185:121;5111:41;5103:102;;;;-1:-1:-1;;;5103:102:7;;18964:2:30;5103:102:7;;;18946:21:30;19003:2;18983:18;;;18976:30;19042:34;19022:18;;;19015:62;-1:-1:-1;;;19093:18:30;;;19086:46;19149:19;;5103:102:7;18936:238:30;7440:1264:2;7610:12;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;7663:17:2::1;::::0;-1:-1:-1;;;7663:17:2;::::1;;;7638:22;7698:28:::0;;;:11:::1;:28;::::0;;;;:34:::1;::::0;;::::1;::::0;::::1;;:39;7690:110;;;::::0;-1:-1:-1;;;7690:110:2;;29662:2:30;7690:110:2::1;::::0;::::1;29644:21:30::0;29701:2;29681:18;;;29674:30;29740:34;29720:18;;;29713:62;29811:28;29791:18;;;29784:56;29857:19;;7690:110:2::1;29634:248:30::0;7690:110:2::1;7838:17;;7818:16;;:37;;7810:97;;;::::0;-1:-1:-1;;;7810:97:2;;16157:2:30;7810:97:2::1;::::0;::::1;16139:21:30::0;16196:2;16176:18;;;16169:30;16235:34;16215:18;;;16208:62;-1:-1:-1;;;16286:18:30;;;16279:45;16341:19;;7810:97:2::1;16129:237:30::0;7810:97:2::1;7918:17:::0;::::1;::::0;::::1;:::i;:::-;7946:28;::::0;::::1;;::::0;;;:11:::1;:28;::::0;;;;:34:::1;;:38:::0;;7983:1:::1;-1:-1:-1::0;;7946:38:2;;::::1;::::0;::::1;::::0;;;7994:35;;-1:-1:-1;;;;7994:35:2::1;-1:-1:-1::0;;;7994:35:2;;::::1;::::0;;;::::1;::::0;;;7946:28;;-1:-1:-1;8040:56:2::1;::::0;-1:-1:-1;7946:28:2;;8084:11;8040:14:::1;:56::i;:::-;-1:-1:-1::0;8106:48:2::1;8117:15:::0;8142:1:::1;8146:7:::0;8106:10:::1;:48::i;:::-;;8251:4;8217:32;;8198:16;;:51;;;;:::i;:::-;:58;;;;:::i;:::-;8165:30;:91:::0;8319:33:::1;::::0;8300:16:::1;::::0;8354:4:::1;::::0;8300:52:::1;::::0;::::1;:::i;:::-;:59;;;;:::i;:::-;8266:31;:93:::0;;;8419:30:::1;::::0;8400:16:::1;::::0;:49:::1;::::0;8419:30;8400:49:::1;:::i;:::-;:83;;;;:::i;:::-;8369:28;:114:::0;;;5964:28;;;8528:1:::1;5964:28:::0;;;:11;:28;;;;;;;;:45;;;:38;;;:45;;;;;:57;;;8599:1:::1;5964:45:::0;;;;;;:57;;;8665:32;;8599:1;;-1:-1:-1;5964:28:2;;8665:32:::1;::::0;8528:1;8665:32:::1;563:1:0;7440:1264:2::0;;;;;;:::o;17551:515::-;17633:12;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;17686:17:2::1;::::0;-1:-1:-1;;;17686:17:2;::::1;;;17722:9;::::0;::::1;:1;:9;17721:26:::0;::::1;;;;17745:1;17737:5;:9;;;17721:26;17713:130;;;::::0;-1:-1:-1;;;17713:130:2;;28247:2:30;17713:130:2::1;::::0;::::1;28229:21:30::0;28286:2;28266:18;;;28259:30;28325:34;28305:18;;;28298:62;28396:34;28376:18;;;28369:62;28468:28;28447:19;;;28440:57;28514:19;;17713:130:2::1;28219:320:30::0;17713:130:2::1;17874:28;::::0;::::1;;::::0;;;:11:::1;:28;::::0;;;;:34:::1;;::::0;::::1;;17862:7;17874:34:::0;17862:5;:7:::1;:::i;:::-;17861:47;;;17853:129;;;::::0;-1:-1:-1;;;17853:129:2;;20225:2:30;17853:129:2::1;::::0;::::1;20207:21:30::0;20264:2;20244:18;;;20237:30;20303:34;20283:18;;;20276:62;20374:34;20354:18;;;20347:62;-1:-1:-1;;;20425:19:30;;;20418:36;20471:19;;17853:129:2::1;20197:299:30::0;17853:129:2::1;17992:28;;;::::0;;;:11:::1;:28;::::0;;;;:34:::1;;:42:::0;;-1:-1:-1;;17992:42:2::1;;::::0;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;;17551:515:2:o;15665:1123::-;15884:12;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;15920:28:2::1;::::0;::::1;;::::0;;;:11:::1;:28;::::0;;;;:34:::1;;::::0;15958:1:::1;15920:34;::::0;;::::1;:39;;15912:135;;;::::0;-1:-1:-1;;;15912:135:2;;26725:2:30;15912:135:2::1;::::0;::::1;26707:21:30::0;26764:2;26744:18;;;26737:30;26803:34;26783:18;;;26776:62;26874:34;26854:18;;;26847:62;-1:-1:-1;;;26925:19:30;;;26918:50;26985:19;;15912:135:2::1;26697:313:30::0;15912:135:2::1;16066:45:::0;;::::1;16065:99:::0;::::1;;;-1:-1:-1::0;16117:46:2;;::::1;16065:99;16057:210;;;::::0;-1:-1:-1;;;16057:210:2;;25319:2:30;16057:210:2::1;::::0;::::1;25301:21:30::0;25358:2;25338:18;;;25331:30;25397:34;25377:18;;;25370:62;25468:34;25448:18;;;25441:62;25540:34;25519:19;;;25512:63;-1:-1:-1;;;25591:19:30;;;25584:33;25634:19;;16057:210:2::1;25291:368:30::0;16057:210:2::1;16283:6;16278:411;16295:23:::0;;::::1;16278:411;;;16548:15;;16564:1;16548:18;;;;;-1:-1:-1::0;;;16548:18:2::1;;;;;;;;;;;;;;;16470:11;:28;16482:15;16470:28;;;;;;;;;;;;;;;:42;;:59;16513:12;;16526:1;16513:15;;;;;-1:-1:-1::0;;;16513:15:2::1;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;16470:59:2::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;16470:59:2;:75:::1;;:96:::0;16659:16;;16676:1;16659:19;;::::1;;;-1:-1:-1::0;;;16659:19:2::1;;;;;;;;;;;;;;;16580:11;:28;16592:15;16580:28;;;;;;;;;;;;;;;:42;;:59;16623:12;;16636:1;16623:15;;;;;-1:-1:-1::0;;;16623:15:2::1;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;16580:59:2::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;16580:59:2;:76:::1;;:98:::0;16320:3;::::1;::::0;::::1;:::i;:::-;;;;16278:411;;;-1:-1:-1::0;;16729:52:2::1;::::0;16709:4:::1;::::0;16729:52:::1;::::0;::::1;::::0;::::1;::::0;;;::::1;15665:1123:::0;;;;;;;;;:::o;25041:186::-;25204:16;;25182:19;;25148:6;;:31;;-1:-1:-1;;;25148:31:2;;25173:4;25148:31;;;10084:51:30;25103:17:2;;25204:16;25182:19;-1:-1:-1;;;;;25148:6:2;;:16;;10057:18:30;;25148:31:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;;;:::i;:::-;:72;;;;:::i;:::-;25136:84;;25041:186;:::o;3938:576::-;4053:22;4099:31;4091:110;;;;-1:-1:-1;;;4091:110:2;;32178:2:30;4091:110:2;;;32160:21:30;32217:2;32197:18;;;32190:30;-1:-1:-1;;;;;;;;;;;32236:18:30;;;32229:62;32327:34;32307:18;;;32300:62;-1:-1:-1;;;32378:19:30;;;32371:33;32421:19;;4091:110:2;32150:296:30;4091:110:2;4229:55;4247:17;4266;4229;:55::i;:::-;4211:73;-1:-1:-1;4299:31:2;4295:213;;4366:28;;;;;;;:11;:28;;;;;4345:73;;4366:39;;4407:10;4345:20;:73::i;:::-;-1:-1:-1;4432:28:2;;;4496:1;4432:28;;;:11;:28;;;;;;;;4475:10;4432:54;;:42;;:54;;;;;:61;;:65;3938:576;;;;:::o;10786:393::-;10858:12;489:36:0;-1:-1:-1;;;;;;;;;;;514:10:0;489:7;:36::i;:::-;481:72;;;;-1:-1:-1;;;481:72:0;;;;;;;:::i;:::-;10911:17:2::1;::::0;;-1:-1:-1;;;10911:17:2;::::1;;;10886:22;10946:28:::0;;;:11:::1;:28;::::0;;;;:34:::1;;::::0;10911:17;;10946:34:::1;::::0;;::::1;:39;10938:113;;;::::0;-1:-1:-1;;;10938:113:2;;13058:2:30;10938:113:2::1;::::0;::::1;13040:21:30::0;13097:2;13077:18;;;13070:30;13136:34;13116:18;;;13109:62;13207:31;13187:18;;;13180:59;13256:19;;10938:113:2::1;13030:251:30::0;10938:113:2::1;11061:28;::::0;::::1;;::::0;;;:11:::1;:28;::::0;;;;;:34:::1;;:38:::0;;-1:-1:-1;;11061:38:2::1;11098:1;11061:38;::::0;;11139:33;11061:38;;-1:-1:-1;11139:33:2::1;::::0;11061:28;11139:33:::1;563:1:0;10786:393:2::0;:::o;6952:224:7:-;7026:22;7034:4;7040:7;7026;:22::i;:::-;7021:149;;7064:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7064:29:7;;;;;;;;;:36;;-1:-1:-1;;7064:36:7;7096:4;7064:36;;;7146:12;665:10:19;;586:96;7146:12:7;-1:-1:-1;;;;;7119:40:7;7137:7;-1:-1:-1;;;;;7119:40:7;7131:4;7119:40;;;;;;;;;;6952:224;;:::o;11688:725:2:-;11785:12;11839:14;11821;:32;;11813:117;;;;-1:-1:-1;;;11813:117:2;;18483:2:30;11813:117:2;;;18465:21:30;18522:2;18502:18;;;18495:30;18561:34;18541:18;;;18534:62;18632:34;18612:18;;;18605:62;-1:-1:-1;;;18683:19:30;;;18676:39;18732:19;;11813:117:2;18455:302:30;11813:117:2;11965:17;;-1:-1:-1;;;11965:17:2;;;;11940:22;12000:28;;;:11;:28;;;;;:34;;;12038:1;12000:34;;;;:39;;11992:111;;;;-1:-1:-1;;;11992:111:2;;22473:2:30;11992:111:2;;;22455:21:30;22512:2;22492:18;;;22485:30;22551:34;22531:18;;;22524:62;22622:29;22602:18;;;22595:57;22669:19;;11992:111:2;22445:249:30;11992:111:2;12121:28;;;;;;;:11;:28;;;;;:36;;;:54;;12113:127;;;;-1:-1:-1;;;12113:127:2;;18054:2:30;12113:127:2;;;18036:21:30;18093:2;18073:18;;;18066:30;18132:34;18112:18;;;18105:62;18203:30;18183:18;;;18176:58;18251:19;;12113:127:2;18026:250:30;12113:127:2;12250:28;;;;;;;:11;:28;;;;;;:36;;;;:53;;;12343:63;;12250:36;;-1:-1:-1;12289:14:2;;12375;;12250:28;;12343:63;;12250:28;12343:63;11688:725;;;;;:::o;7182:225:7:-;7256:22;7264:4;7270:7;7256;:22::i;:::-;7252:149;;;7326:5;7294:12;;;;;;;;;;;-1:-1:-1;;;;;7294:29:7;;;;;;;;;;:37;;-1:-1:-1;;7294:37:7;;;7350:40;665:10:19;;7294:12:7;;7350:40;;7326:5;7350:40;7182:225;;:::o;9678:577:2:-;9799:12;9853:14;9835;:32;;9827:117;;;;-1:-1:-1;;;9827:117:2;;24415:2:30;9827:117:2;;;24397:21:30;24454:2;24434:18;;;24427:30;24493:34;24473:18;;;24466:62;24564:34;24544:18;;;24537:62;-1:-1:-1;;;24615:19:30;;;24608:39;24664:19;;9827:117:2;24387:302:30;9827:117:2;9962:28;;;;;;;:11;:28;;;;;:36;:54;;9954:128;;;;-1:-1:-1;;;9954:128:2;;25866:2:30;9954:128:2;;;25848:21:30;25905:2;25885:18;;;25878:30;25944:34;25924:18;;;25917:62;26015:31;25995:18;;;25988:59;26064:19;;9954:128:2;25838:251:30;9954:128:2;-1:-1:-1;10092:28:2;;;;;;;:11;:28;;;;;;:53;;;10185:63;10165:4;;10131:14;;10217;;10185:63;;10092:28;10185:63;9678:577;;;;;:::o;7669:156:23:-;7743:7;7793:22;7797:3;7809:5;7793:3;:22::i;10261:519:2:-;10370:12;10420:10;10406;:24;;10398:106;;;;-1:-1:-1;;;10398:106:2;;27769:2:30;10398:106:2;;;27751:21:30;27808:2;27788:18;;;27781:30;27847:34;27827:18;;;27820:62;27918:34;27898:18;;;27891:62;-1:-1:-1;;;27969:19:30;;;27962:36;28015:19;;10398:106:2;27741:299:30;10398:106:2;10522:28;;;;;;;:11;:28;;;;;:32;;;:46;;10514:113;;;;-1:-1:-1;;;10514:113:2;;24896:2:30;10514:113:2;;;24878:21:30;24935:2;24915:18;;;24908:30;24974:34;24954:18;;;24947:62;-1:-1:-1;;;25025:18:30;;;25018:52;25087:19;;10514:113:2;24868:244:30;10514:113:2;-1:-1:-1;10637:28:2;;;;;;;:11;:28;;;;;;:32;;:45;;;10722:51;10702:4;;10672:10;;10750;;10722:51;;10637:28;10722:51;10261:519;;;;;:::o;4520:813::-;4682:17;;;-1:-1:-1;;;4682:17:2;;;;4626:22;4717:28;;;:11;:28;;;;;:34;;;4682:17;;4717:34;;;;:39;4709:114;;;;-1:-1:-1;;;4709:114:2;;21547:2:30;4709:114:2;;;21529:21:30;21586:2;21566:18;;;21559:30;-1:-1:-1;;;;;;;;;;;21605:18:30;;;21598:62;21696:32;21676:18;;;21669:60;21746:19;;4709:114:2;21519:252:30;4709:114:2;4862:17;4841;:38;;4833:126;;;;-1:-1:-1;;;4833:126:2;;29178:2:30;4833:126:2;;;29160:21:30;29217:2;29197:18;;;29190:30;-1:-1:-1;;;;;;;;;;;29236:18:30;;;29229:62;29327:34;29307:18;;;29300:62;-1:-1:-1;;;29378:19:30;;;29371:42;29430:19;;4833:126:2;29150:305:30;4833:126:2;4977:28;;;;;;;:11;:28;;;;;;;;5020:10;4977:54;;:42;;:54;;;;;:65;:86;;4969:181;;;;-1:-1:-1;;;4969:181:2;;23940:2:30;4969:181:2;;;23922:21:30;23979:2;23959:18;;;23952:30;-1:-1:-1;;;;;;;;;;;23998:18:30;;;23991:62;24089:34;24069:18;;;24062:62;-1:-1:-1;;;24140:19:30;;;24133:33;24183:19;;4969:181:2;23912:296:30;4969:181:2;5160:28;;;;;;;:11;:28;;;;;;;;5203:10;5160:54;;;:42;;;;:54;;;;;;:85;;;5261:65;5228:17;;5203:10;;5261:65;;;4520:813;;;;:::o;6421:150:23:-;6491:4;6514:50;6519:3;-1:-1:-1;;;;;6539:23:23;;6514:4;:50::i;577:264:0:-;635:38;-1:-1:-1;;;;;;;;;;;662:10:0;635;:38::i;:::-;683:45;-1:-1:-1;;;;;;;;;;;202:27:0;683:13;:45::i;:::-;739:39;-1:-1:-1;;;;;;;;;;;767:10:0;739;:39::i;:::-;788:46;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;788:13:0;:46::i;:::-;577:264::o;7222:115:23:-;7285:7;7311:19;7319:3;4087:18;;4005:107;12771:1804:2;13018:28;;;12982:12;13018:28;;;:11;:28;;;;;:34;;;13056:1;13018:34;;;;:39;;13010:111;;;;-1:-1:-1;;;13010:111:2;;16573:2:30;13010:111:2;;;16555:21:30;16612:2;16592:18;;;16585:30;16651:34;16631:18;;;16624:62;16722:29;16702:18;;;16695:57;16769:19;;13010:111:2;16545:249:30;13010:111:2;13140:42;;;13139:106;;;;-1:-1:-1;13200:44:2;;;13139:106;:169;;;;-1:-1:-1;13262:45:2;;;13139:169;13131:267;;;;-1:-1:-1;;;13131:267:2;;30928:2:30;13131:267:2;;;30910:21:30;30967:2;30947:18;;;30940:30;31006:34;30986:18;;;30979:62;31077:34;31057:18;;;31050:62;-1:-1:-1;;;31128:19:30;;;31121:40;31178:19;;13131:267:2;30900:303:30;13131:267:2;13409:26;;;;13523:485;13540:21;;;13523:485;;;13738:14;;13753:1;13738:17;;;;;-1:-1:-1;;;13738:17:2;;;;;;;;;;;;;;;13716:39;;;;;:::i;:::-;;;13793:16;;13810:1;13793:19;;;;;-1:-1:-1;;;13793:19:2;;;;;;;;;;;;;;;13769:43;;;;;:::i;:::-;;;13851:17;;13869:1;13851:20;;;;;-1:-1:-1;;;13851:20:2;;;;;;;;;;;;;;;13826:45;;;;;:::i;:::-;;;13886:111;13904:15;13921:10;;13932:1;13921:13;;;;;-1:-1:-1;;;13921:13:2;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13936:14;;13951:1;13936:17;;;;;-1:-1:-1;;;13936:17:2;;;;;;;;;;;;;;;13955:16;;13972:1;13955:19;;;;;-1:-1:-1;;;13955:19:2;;;;;;;;;;;;;;;13976:17;;13994:1;13976:20;;;;;-1:-1:-1;;;13976:20:2;;;;;;;;;;;;;;;13886:17;:111::i;:::-;13563:3;;;;:::i;:::-;;;;13523:485;;;;14094:18;14062:28;;:50;;;;;;;:::i;:::-;;;;;;;;14156:20;14122:30;;:54;;;;;;;:::i;:::-;;;;;;;;14221:21;14186:31;;:56;;;;;;;:::i;:::-;;;;-1:-1:-1;14317:21:2;;-1:-1:-1;14273:41:2;14294:20;14273:18;:41;:::i;:::-;:65;;;;:::i;:::-;14253:16;;:85;;;;;;;:::i;:::-;;;;-1:-1:-1;14415:21:2;;-1:-1:-1;14371:41:2;14392:20;14371:18;:41;:::i;:::-;:65;;;;:::i;:::-;14348:19;;:88;;;;;;;:::i;:::-;;;;-1:-1:-1;14456:4:2;;-1:-1:-1;14471:97:2;;-1:-1:-1;14487:15:2;14504:18;14524:20;14546:21;14471:15;:97::i;:::-;12771:1804;;;;;;;;;;;;;;:::o;6739:156:23:-;6812:4;6835:53;6843:3;-1:-1:-1;;;;;6863:23:23;;6835:7;:53::i;4444:201::-;4538:18;;4511:7;;4538:26;-1:-1:-1;4530:73:23;;;;-1:-1:-1;;;4530:73:23;;12655:2:30;4530:73:23;;;12637:21:30;12694:2;12674:18;;;12667:30;12733:34;12713:18;;;12706:62;-1:-1:-1;;;12784:18:30;;;12777:32;12826:19;;4530:73:23;12627:224:30;4530:73:23;4620:3;:11;;4632:5;4620:18;;;;;;-1:-1:-1;;;4620:18:23;;;;;;;;;;;;;;;;;4613:25;;4444:201;;;;:::o;1632:404::-;1695:4;3893:19;;;:12;;;:19;;;;;;1711:319;;-1:-1:-1;1753:23:23;;;;;;;;:11;:23;;;;;;;;;;;;;1933:18;;1911:19;;;:12;;;:19;;;;;;:40;;;;1965:11;;1711:319;-1:-1:-1;2014:5:23;2007:12;;6754:192:7;4251:7;4277:12;;;;;;;;;;:22;;;6885:9;;6842:53;;6859:4;;6842:53;;;;;6905:6;:12;;;;;;;;;;;:22;;:34;6754:192::o;14581:798:2:-;14807:16;14773:31;14789:15;14773:13;:31;:::i;:::-;:50;;;;:::i;:::-;-1:-1:-1;;;;;14751:18:2;;;;;;:7;:18;;;;;:72;;:18;;;:72;;;;;:::i;:::-;;;;-1:-1:-1;;14838:17:2;;14834:132;;14870:28;;;;;;;:11;:28;;;;;;;;-1:-1:-1;;;;;14870:53:2;;;;:42;;:53;;;;;:68;;:85;;14942:13;;14870:28;:85;;14942:13;;14870:85;:::i;:::-;;;;-1:-1:-1;;14834:132:2;14980:19;;14976:138;;15014:28;;;;;;;:11;:28;;;;;;;;-1:-1:-1;;;;;15014:53:2;;;;:42;;:53;;;;;:70;;:89;;15088:15;;15014:28;:89;;15088:15;;15014:89;:::i;:::-;;;;-1:-1:-1;;14976:138:2;15128:20;;15124:141;;15163:28;;;;;;;:11;:28;;;;;;;;-1:-1:-1;;;;;15163:53:2;;;;:42;;:53;;;;;:71;;:91;;15238:16;;15163:28;:91;;15238:16;;15163:91;:::i;:::-;;;;-1:-1:-1;;15124:141:2;15280:92;;;33032:10:30;33020:23;;33002:42;;33075:2;33060:18;;33053:34;;;15355:16:2;;15338:15;;-1:-1:-1;;;;;15280:92:2;;;;;32975:18:30;15280:92:2;;;;;;;14581:798;;;;;:::o;15385:274::-;15554:98;;32807:10:30;32795:23;;32777:42;;15630:21:2;;15608:20;;15588:18;;15554:98;;32765:2:30;32750:18;15554:98:2;;;;;;;15385:274;;;;:::o;2204:1512:23:-;2270:4;2407:19;;;:12;;;:19;;;;;;2441:15;;2437:1273;;2798:21;2822:14;2835:1;2822:10;:14;:::i;:::-;2870:18;;2798:38;;-1:-1:-1;2850:17:23;;2870:22;;2891:1;;2870:22;:::i;:::-;2850:42;;3132:17;3152:3;:11;;3164:9;3152:22;;;;;;-1:-1:-1;;;3152:22:23;;;;;;;;;;;;;;;;;3132:42;;3295:9;3266:3;:11;;3278:13;3266:26;;;;;;-1:-1:-1;;;3266:26:23;;;;;;;;;;;;;;;;;;:38;3396:17;:13;3412:1;3396:17;:::i;:::-;3370:23;;;;:12;;;:23;;;;;:43;3519:17;;3370:3;;3519:17;;;-1:-1:-1;;;3519:17:23;;;;;;;;;;;;;;;;;;;;;;;;;;3611:3;:12;;:19;3624:5;3611:19;;;;;;;;;;;3604:26;;;3652:4;3645:11;;;;;;;;2437:1273;3694:5;3687:12;;;;;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:30;82:20;;-1:-1:-1;;;;;131:31:30;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:395::-;255:8;265:6;319:3;312:4;304:6;300:17;296:27;286:2;;344:8;334;327:26;286:2;-1:-1:-1;374:20:30;;417:18;406:30;;403:2;;;456:8;446;439:26;403:2;500:4;492:6;488:17;476:29;;560:3;553:4;543:6;540:1;536:14;528:6;524:27;520:38;517:47;514:2;;;577:1;574;567:12;514:2;276:311;;;;;:::o;592:163::-;659:20;;719:10;708:22;;698:33;;688:2;;745:1;742;735:12;760:196;819:6;872:2;860:9;851:7;847:23;843:32;840:2;;;893:6;885;878:22;840:2;921:29;940:9;921:29;:::i;961:264::-;1029:6;1037;1090:2;1078:9;1069:7;1065:23;1061:32;1058:2;;;1111:6;1103;1096:22;1058:2;1139:29;1158:9;1139:29;:::i;:::-;1129:39;1215:2;1200:18;;;;1187:32;;-1:-1:-1;;;1048:177:30:o;1230:1454::-;1424:6;1432;1440;1448;1456;1464;1472;1480;1533:3;1521:9;1512:7;1508:23;1504:33;1501:2;;;1555:6;1547;1540:22;1501:2;1600:9;1587:23;1629:18;1670:2;1662:6;1659:14;1656:2;;;1691:6;1683;1676:22;1656:2;1735:70;1797:7;1788:6;1777:9;1773:22;1735:70;:::i;:::-;1824:8;;-1:-1:-1;1709:96:30;-1:-1:-1;1912:2:30;1897:18;;1884:32;;-1:-1:-1;1928:16:30;;;1925:2;;;1962:6;1954;1947:22;1925:2;2006:72;2070:7;2059:8;2048:9;2044:24;2006:72;:::i;:::-;2097:8;;-1:-1:-1;1980:98:30;-1:-1:-1;2185:2:30;2170:18;;2157:32;;-1:-1:-1;2201:16:30;;;2198:2;;;2235:6;2227;2220:22;2198:2;2279:72;2343:7;2332:8;2321:9;2317:24;2279:72;:::i;:::-;2370:8;;-1:-1:-1;2253:98:30;-1:-1:-1;2458:2:30;2443:18;;2430:32;;-1:-1:-1;2474:16:30;;;2471:2;;;2508:6;2500;2493:22;2471:2;;2552:72;2616:7;2605:8;2594:9;2590:24;2552:72;:::i;:::-;1491:1193;;;;-1:-1:-1;1491:1193:30;;-1:-1:-1;1491:1193:30;;;;;;2643:8;-1:-1:-1;;;1491:1193:30:o;2689:297::-;2756:6;2809:2;2797:9;2788:7;2784:23;2780:32;2777:2;;;2830:6;2822;2815:22;2777:2;2867:9;2861:16;2920:5;2913:13;2906:21;2899:5;2896:32;2886:2;;2947:6;2939;2932:22;2991:190;3050:6;3103:2;3091:9;3082:7;3078:23;3074:32;3071:2;;;3124:6;3116;3109:22;3071:2;-1:-1:-1;3152:23:30;;3061:120;-1:-1:-1;3061:120:30:o;3186:264::-;3254:6;3262;3315:2;3303:9;3294:7;3290:23;3286:32;3283:2;;;3336:6;3328;3321:22;3283:2;3377:9;3364:23;3354:33;;3406:38;3440:2;3429:9;3425:18;3406:38;:::i;:::-;3396:48;;3273:177;;;;;:::o;3455:258::-;3523:6;3531;3584:2;3572:9;3563:7;3559:23;3555:32;3552:2;;;3605:6;3597;3590:22;3552:2;-1:-1:-1;;3633:23:30;;;3703:2;3688:18;;;3675:32;;-1:-1:-1;3542:171:30:o;3718:395::-;3804:6;3812;3820;3828;3881:3;3869:9;3860:7;3856:23;3852:33;3849:2;;;3903:6;3895;3888:22;3849:2;-1:-1:-1;;3931:23:30;;;4001:2;3986:18;;3973:32;;-1:-1:-1;4052:2:30;4037:18;;4024:32;;4103:2;4088:18;4075:32;;-1:-1:-1;3839:274:30;-1:-1:-1;3839:274:30:o;4118:306::-;4176:6;4229:2;4217:9;4208:7;4204:23;4200:32;4197:2;;;4250:6;4242;4235:22;4197:2;4281:23;;-1:-1:-1;;;;;;4333:32:30;;4323:43;;4313:2;;4385:6;4377;4370:22;4429:642;4500:6;4508;4561:2;4549:9;4540:7;4536:23;4532:32;4529:2;;;4582:6;4574;4567:22;4529:2;4627:9;4614:23;4656:18;4697:2;4689:6;4686:14;4683:2;;;4718:6;4710;4703:22;4683:2;4761:6;4750:9;4746:22;4736:32;;4806:7;4799:4;4795:2;4791:13;4787:27;4777:2;;4833:6;4825;4818:22;4777:2;4878;4865:16;4904:2;4896:6;4893:14;4890:2;;;4925:6;4917;4910:22;4890:2;4975:7;4970:2;4961:6;4957:2;4953:15;4949:24;4946:37;4943:2;;;5001:6;4993;4986:22;4943:2;5037;5029:11;;;;;5059:6;;-1:-1:-1;4519:552:30;;-1:-1:-1;;;;4519:552:30:o;5271:194::-;5341:6;5394:2;5382:9;5373:7;5369:23;5365:32;5362:2;;;5415:6;5407;5400:22;5362:2;-1:-1:-1;5443:16:30;;5352:113;-1:-1:-1;5352:113:30:o;5470:332::-;5547:6;5555;5563;5616:2;5604:9;5595:7;5591:23;5587:32;5584:2;;;5637:6;5629;5622:22;5584:2;5678:9;5665:23;5655:33;;5735:2;5724:9;5720:18;5707:32;5697:42;;5758:38;5792:2;5781:9;5777:18;5758:38;:::i;:::-;5748:48;;5574:228;;;;;:::o;5807:194::-;5865:6;5918:2;5906:9;5897:7;5893:23;5889:32;5886:2;;;5939:6;5931;5924:22;5886:2;5967:28;5985:9;5967:28;:::i;6006:268::-;6073:6;6081;6134:2;6122:9;6113:7;6109:23;6105:32;6102:2;;;6155:6;6147;6140:22;6102:2;6183:28;6201:9;6183:28;:::i;:::-;6173:38;;6230;6264:2;6253:9;6249:18;6230:38;:::i;6279:336::-;6355:6;6363;6371;6424:2;6412:9;6403:7;6399:23;6395:32;6392:2;;;6445:6;6437;6430:22;6392:2;6473:28;6491:9;6473:28;:::i;:::-;6463:38;;6520;6554:2;6543:9;6539:18;6520:38;:::i;:::-;6510:48;;6605:2;6594:9;6590:18;6577:32;6567:42;;6382:233;;;;;:::o;6620:1201::-;6786:6;6794;6802;6810;6818;6826;6834;6887:3;6875:9;6866:7;6862:23;6858:33;6855:2;;;6909:6;6901;6894:22;6855:2;6937:28;6955:9;6937:28;:::i;:::-;6927:38;;7016:2;7005:9;7001:18;6988:32;7039:18;7080:2;7072:6;7069:14;7066:2;;;7101:6;7093;7086:22;7066:2;7145:70;7207:7;7198:6;7187:9;7183:22;7145:70;:::i;:::-;7234:8;;-1:-1:-1;7119:96:30;-1:-1:-1;7322:2:30;7307:18;;7294:32;;-1:-1:-1;7338:16:30;;;7335:2;;;7372:6;7364;7357:22;7335:2;7416:72;7480:7;7469:8;7458:9;7454:24;7416:72;:::i;:::-;7507:8;;-1:-1:-1;7390:98:30;-1:-1:-1;7595:2:30;7580:18;;7567:32;;-1:-1:-1;7611:16:30;;;7608:2;;;7645:6;7637;7630:22;7608:2;;7689:72;7753:7;7742:8;7731:9;7727:24;7689:72;:::i;:::-;6845:976;;;;-1:-1:-1;6845:976:30;;-1:-1:-1;6845:976:30;;;;7663:98;;-1:-1:-1;;;6845:976:30:o;7826:944::-;7965:6;7973;7981;7989;7997;8005;8058:3;8046:9;8037:7;8033:23;8029:33;8026:2;;;8080:6;8072;8065:22;8026:2;8108:28;8126:9;8108:28;:::i;:::-;8098:38;;8187:2;8176:9;8172:18;8159:32;8210:18;8251:2;8243:6;8240:14;8237:2;;;8272:6;8264;8257:22;8237:2;8316:70;8378:7;8369:6;8358:9;8354:22;8316:70;:::i;:::-;8405:8;;-1:-1:-1;8290:96:30;-1:-1:-1;8487:2:30;8472:18;;8459:32;;-1:-1:-1;8544:2:30;8529:18;;8516:32;;-1:-1:-1;8560:16:30;;;8557:2;;;8594:6;8586;8579:22;8557:2;;8638:72;8702:7;8691:8;8680:9;8676:24;8638:72;:::i;:::-;8016:754;;;;-1:-1:-1;8016:754:30;;-1:-1:-1;8016:754:30;;8729:8;;8016:754;-1:-1:-1;;;8016:754:30:o;8775:262::-;8842:6;8850;8903:2;8891:9;8882:7;8878:23;8874:32;8871:2;;;8924:6;8916;8909:22;8871:2;8952:28;8970:9;8952:28;:::i;9309:330::-;9385:6;9393;9401;9454:2;9442:9;9433:7;9429:23;9425:32;9422:2;;;9475:6;9467;9460:22;9422:2;9503:28;9521:9;9503:28;:::i;:::-;9493:38;9578:2;9563:18;;9550:32;;-1:-1:-1;9629:2:30;9614:18;;;9601:32;;9412:227;-1:-1:-1;;;9412:227:30:o;9644:289::-;9701:6;9754:2;9742:9;9733:7;9729:23;9725:32;9722:2;;;9775:6;9767;9760:22;9722:2;9819:9;9806:23;9869:4;9862:5;9858:16;9851:5;9848:27;9838:2;;9894:6;9886;9879:22;10805:661;10976:2;11028:21;;;11098:13;;11001:18;;;11120:22;;;10947:4;;10976:2;11199:15;;;;11173:2;11158:18;;;10947:4;11245:195;11259:6;11256:1;11253:13;11245:195;;;11324:13;;-1:-1:-1;;;;;11320:39:30;11308:52;;11415:15;;;;11380:12;;;;11356:1;11274:9;11245:195;;;-1:-1:-1;11457:3:30;;10956:510;-1:-1:-1;;;;;;10956:510:30:o;11845:603::-;11957:4;11986:2;12015;12004:9;11997:21;12047:6;12041:13;12090:6;12085:2;12074:9;12070:18;12063:34;12115:4;12128:140;12142:6;12139:1;12136:13;12128:140;;;12237:14;;;12233:23;;12227:30;12203:17;;;12222:2;12199:26;12192:66;12157:10;;12128:140;;;12286:6;12283:1;12280:13;12277:2;;;12356:4;12351:2;12342:6;12331:9;12327:22;12323:31;12316:45;12277:2;-1:-1:-1;12432:2:30;12411:15;-1:-1:-1;;12407:29:30;12392:45;;;;12439:2;12388:54;;11966:482;-1:-1:-1;;;11966:482:30:o;19671:347::-;19873:2;19855:21;;;19912:2;19892:18;;;19885:30;19951:25;19946:2;19931:18;;19924:53;20009:2;19994:18;;19845:173::o;33287:128::-;33327:3;33358:1;33354:6;33351:1;33348:13;33345:2;;;33364:18;;:::i;:::-;-1:-1:-1;33400:9:30;;33335:80::o;33420:217::-;33460:1;33486;33476:2;;-1:-1:-1;;;33511:31:30;;33565:4;33562:1;33555:15;33593:4;33518:1;33583:15;33476:2;-1:-1:-1;33622:9:30;;33466:171::o;33642:168::-;33682:7;33748:1;33744;33740:6;33736:14;33733:1;33730:21;33725:1;33718:9;33711:17;33707:45;33704:2;;;33755:18;;:::i;:::-;-1:-1:-1;33795:9:30;;33694:116::o;33815:125::-;33855:4;33883:1;33880;33877:8;33874:2;;;33888:18;;:::i;:::-;-1:-1:-1;33925:9:30;;33864:76::o;33945:195::-;33983:4;34020;34017:1;34013:12;34052:4;34049:1;34045:12;34077:3;34072;34069:12;34066:2;;;34084:18;;:::i;:::-;34121:13;;;33992:148;-1:-1:-1;;;33992:148:30:o;34145:380::-;34224:1;34220:12;;;;34267;;;34288:2;;34342:4;34334:6;34330:17;34320:27;;34288:2;34395;34387:6;34384:14;34364:18;34361:38;34358:2;;;34441:10;34436:3;34432:20;34429:1;34422:31;34476:4;34473:1;34466:15;34504:4;34501:1;34494:15;34358:2;;34200:325;;;:::o;34530:135::-;34569:3;-1:-1:-1;;34590:17:30;;34587:2;;;34610:18;;:::i;:::-;-1:-1:-1;34657:1:30;34646:13;;34577:88::o;34670:201::-;34708:3;34736:10;34781:2;34774:5;34770:14;34808:2;34799:7;34796:15;34793:2;;;34814:18;;:::i;:::-;34863:1;34850:15;;34716:155;-1:-1:-1;;;34716:155:30:o;34876:127::-;34937:10;34932:3;34928:20;34925:1;34918:31;34968:4;34965:1;34958:15;34992:4;34989:1;34982:15",
  "language": "Solidity",
  "natspec": {
    "author": "Rocket Capital Investment Pte Ltd",
    "details": "This contract manages registration and reward payouts for the RCI Tournament.IPFS hash format: Hash Identifier (2 bytes), Actual Hash (May eventually take on other formats but currently 32 bytes)",
    "events": {
      "StakeIncreased(address,uint256)": {
        "notice": "EVENTS*"
      }
    },
    "kind": "dev",
    "methods": {
      "advanceToPhase(uint8)": {
        "details": "Called only by an authorized admin to advance to the next phase.Due to the block gas limit rewards payments may need to be split up into multiple function calls.In other words, payStakingRewards and payChallengeAndTournamentRewards may need to be called multiple times to complete all required payments.This function is used to advance to phase 3 after staking rewards payments have complemted or to phase 4 after challenge and tournament rewards payments have completed.",
        "params": {
          "phase": "The phase to advance to."
        },
        "returns": {
          "success": "True if the operation completed successfully.*"
        }
      },
      "closeSubmission()": {
        "details": "Called only by authorized admin to stop allowing submissions for a particular challenge.",
        "returns": {
          "success": "True if the operation completed successfully.*"
        }
      },
      "decreaseStake(address,uint256)": {
        "details": "Called by anyone ONLY VIA THE ERC20 TOKEN CONTRACT to decrease their stake.",
        "params": {
          "amountToken": "Number of tokens to withdraw.",
          "staker": "The address of the staker that wants to withdraw their stake."
        },
        "returns": {
          "success": "True if the operation completed successfully.*"
        }
      },
      "getChallengeRewards(uint32,address)": {
        "details": "Called by anyone to check the challenge rewards given to this participant in a particular challenge.",
        "params": {
          "challengeNumber": "Challenge to get the challenge rewards given of.",
          "participant": "Address of participant to check on."
        },
        "returns": {
          "challengeRewards": "Amount of challenge rewards given to this participant for this challenge.*"
        }
      },
      "getChallengeRewardsPercentageInWei()": {
        "details": "Called by anyone to check the percentage of the total competition reward pool allocated for the challenge reward for this challenge.",
        "returns": {
          "challengeRewardsPercentageInWei": "Percentage for challenge reward budget in wei.*"
        }
      },
      "getChallengeScores(uint32,address)": {
        "details": "Called by anyone to check get the challenge score of this participant for this challenge.",
        "params": {
          "challengeNumber": "Challenge to get the participant's challenge score of.",
          "participant": "Address of participant to check on."
        },
        "returns": {
          "challengeScores": "The challenge score of this participant for this challenge.*"
        }
      },
      "getCompetitionPool()": {
        "notice": "READ METHODS*"
      },
      "getCurrentChallengeRewardsBudget()": {
        "details": "Called by anyone to check the challenge rewards budget for the current challenge.",
        "returns": {
          "currentChallengeRewardsBudget": "Budget for challenge rewards payment in wei.*"
        }
      },
      "getCurrentStakingRewardsBudget()": {
        "details": "Called by anyone to check the staking rewards budget allocation for the current challenge.",
        "returns": {
          "currentStakingRewardsBudget": "Budget for staking rewards in wei.*"
        }
      },
      "getCurrentTotalStaked()": {
        "details": "Called by anyone to check the current total amount staked.",
        "returns": {
          "currentTotalStaked": "Amount of tokens currently staked in wei.*"
        }
      },
      "getCurrentTournamentRewardsBudget()": {
        "details": "Called by anyone to check the tournament rewards budget for the current challenge.",
        "returns": {
          "currentTournamentRewardsBudget": "Budget for tournament rewards payment in wei.*"
        }
      },
      "getDatasetHash(uint32)": {
        "details": "Called by anyone to obtain the dataset hash for this particular challenge.",
        "params": {
          "challengeNumber": "The challenge to get the dataset hash of."
        },
        "returns": {
          "dataset": "IPFS hash where the dataset of this particular challenge is stored. This is the IPFS CID less the 1220 prefix.*"
        }
      },
      "getDeadlines(uint32,uint256)": {
        "details": "Called by anyone to retrieve one of the deadlines for this challenge.",
        "params": {
          "challengeNumber": "Challenge to get the deadline of.",
          "index": "Index of the deadline to retrieve."
        },
        "returns": {
          "deadline": "Deadline in milliseconds.*"
        }
      },
      "getInformation(uint32,address,uint256)": {
        "details": "Called by anyone to check the additional information for this participant in a particular challenge.",
        "params": {
          "challengeNumber": "Challenge to get the additional information of.",
          "itemNumber": "Additional information item to check on.",
          "participant": "Address of participant to check on."
        },
        "returns": {
          "value": "Value of this additional information item for this participant for this challenge.*"
        }
      },
      "getKeyHash(uint32)": {
        "details": "Called by anyone to obtain the key hash for this particular challenge.",
        "params": {
          "challengeNumber": "The challenge to get the key hash of."
        },
        "returns": {
          "key": "IPFS hash where results of this particular challenge are stored. This is the IPFS CID less the 1220 prefix.*"
        }
      },
      "getLatestChallengeNumber()": {
        "details": "Called by anyone to get the number of the latest challenge.As the challenge number begins from 1, this is also the total number of challenges created in this competition.",
        "returns": {
          "latestChallengeNumber": "Latest challenge created.*"
        }
      },
      "getMessage()": {
        "details": "Called by anyone to get the current broadcast message.",
        "returns": {
          "message": "Current message being broadcasted.*"
        }
      },
      "getOverallRewards(uint32,address)": {
        "details": "Called by anyone to check the overall rewards (staking + challenge + tournament rewards) given to this participant in a particular challenge.",
        "params": {
          "challengeNumber": "Challenge to get the overall rewards given of.",
          "participant": "Address of participant to check on."
        },
        "returns": {
          "overallRewards": "Amount of overall rewards given to this participant for this challenge.*"
        }
      },
      "getPhase(uint32)": {
        "details": "Called by anyone to obtain the phase number for this particular challenge.",
        "params": {
          "challengeNumber": "The challenge to get the phase of."
        },
        "returns": {
          "phase": "The phase that this challenge is in.*"
        }
      },
      "getPrivateKeyHash(uint32)": {
        "details": "Called by anyone to obtain the private key hash for this particular challenge.",
        "params": {
          "challengeNumber": "The challenge to get the key hash of."
        },
        "returns": {
          "privateKey": "IPFS hash where results of this particular challenge are stored. This is the IPFS CID less the 1220 prefix.*"
        }
      },
      "getRemainder()": {
        "details": "Called by anyone to check the amount of tokens that have been sent to this contract but are not recorded as a stake or as part of the competition rewards pool.",
        "returns": {
          "remainder": "The amount of tokens held by this contract that are not recorded as a stake or as part of the competition rewards pool.*"
        }
      },
      "getResultsHash(uint32)": {
        "details": "Called by anyone to obtain the results hash for this particular challenge.",
        "params": {
          "challengeNumber": "The challenge to get the results hash of."
        },
        "returns": {
          "results": "IPFS hash where results of this particular challenge are stored. This is the IPFS CID less the 1220 prefix.*"
        }
      },
      "getRewardsThreshold()": {
        "details": "Called by anyone to check minimum amount required to open a new challenge.",
        "returns": {
          "rewardsThreshold": "Amount of tokens in wei the competition pool must contain to open a new challenge.*"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getStake(address)": {
        "details": "Called by anyone to obtain the stake amount in wei of a particular address.",
        "params": {
          "participant": "Address to query token balance of."
        },
        "returns": {
          "stake": "Token balance of given address in wei.*"
        }
      },
      "getStakeThreshold()": {
        "details": "Called by anyone to obtain the minimum amount of stake required to participate in the competition.",
        "returns": {
          "stakeThreshold": "Minimum stake amount in wei.*"
        }
      },
      "getStakedAmountForChallenge(uint32,address)": {
        "details": "Called by anyone to check the stakes locked for this participant in a particular challenge.",
        "params": {
          "challengeNumber": "Challenge to get the stakes locked of.",
          "participant": "Address of participant to check on."
        },
        "returns": {
          "staked": "Amount of tokens locked for this challenge for this participant.*"
        }
      },
      "getStakingRewards(uint32,address)": {
        "details": "Called by anyone to check the staking rewards given to this participant in a particular challenge.",
        "params": {
          "challengeNumber": "Challenge to get the staking rewards given of.",
          "participant": "Address of participant to check on."
        },
        "returns": {
          "stakingRewards": "Amount of staking rewards given to this participant for this challenge.*"
        }
      },
      "getSubmission(uint32,address)": {
        "details": "Called by anyone to get submission hash of a participant for a challenge.",
        "params": {
          "challengeNumber": "Challenge index to check on.",
          "participant": "Address of participant to check on."
        },
        "returns": {
          "submissionHash": "IPFS reference hash of participant's prediction submission for this challenge. This is the IPFS CID less the 1220 prefix.*"
        }
      },
      "getSubmissionCounter(uint32)": {
        "details": "Called by anyone to obtain the number of submissions made for this particular challenge.",
        "params": {
          "challengeNumber": "The challenge to get the submission counter of."
        },
        "returns": {
          "submissionCounter": "Number of submissions made.*"
        }
      },
      "getSubmitters(uint32,uint256,uint256)": {
        "details": "Called by anyone to obtain the list of submitters for this particular challenge.Submitters refer to participants that have made submissions for this particular challenge.",
        "params": {
          "challengeNumber": "The challenge to get the submitters list of.",
          "endIndex": "The challenge to get the submitters list of.",
          "startIndex": "The challenge to get the submitters list of."
        },
        "returns": {
          "_0": "List of submitter addresses.*"
        }
      },
      "getTokenAddress()": {
        "details": "Called by anyone to obtain the smart contract address of the ERC20 token used in this competition.",
        "returns": {
          "tokenAddress": "ERC20 Token smart contract address.*"
        }
      },
      "getTournamentRewards(uint32,address)": {
        "details": "Called by anyone to check the tournament rewards given to this participant in a particular challenge.",
        "params": {
          "challengeNumber": "Challenge to get the tournament rewards given of.",
          "participant": "Address of participant to check on."
        },
        "returns": {
          "tournamentRewards": "Amount of tournament rewards given to this participant for this challenge.*"
        }
      },
      "getTournamentRewardsPercentageInWei()": {
        "details": "Called by anyone to check the percentage of the total competition reward pool allocated for the tournament reward for this challenge.",
        "returns": {
          "tournamentRewardsPercentageInWei": "Percentage for tournament reward budget in wei.*"
        }
      },
      "getTournamentScores(uint32,address)": {
        "details": "Called by anyone to check get the tournament score of this participant for this challenge.",
        "params": {
          "challengeNumber": "Challenge to get the participant's tournament score of..",
          "participant": "Address of participant to check on."
        },
        "returns": {
          "tournamentScores": "The tournament score of this participant for this challenge.*"
        }
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseStake(address,uint256)": {
        "notice": "PARTICIPANT WRITE METHODS*"
      },
      "moveRemainderToPool()": {
        "details": "Called only by an authorized admin, to move any tokens sent to this contract without using the 'sponsor' or 'setStake'/'increaseStake' methods into the competition pool.",
        "returns": {
          "success": "True if the operation completed successfully.*"
        }
      },
      "openChallenge(bytes32,bytes32,uint256,uint256)": {
        "details": "Called only by authorized admin to start allowing staking for a new challenge.",
        "params": {
          "datasetHash": "IPFS reference hash where dataset for this challenge is stored. This is the IPFS CID less the 1220 prefix.",
          "keyHash": "IPFS reference hash where the key for this challenge is stored. This is the IPFS CID less the 1220 prefix.",
          "nextChallengeDeadline": "Timestamp where ths challenge will be closed and the next challenge opened.",
          "submissionCloseDeadline": "Timestamp of the time where submissions will be closed."
        },
        "returns": {
          "success": "True if the operation completed successfully.*"
        }
      },
      "payRewards(address[],uint256[],uint256[],uint256[])": {
        "details": "Called only by authorized admin to move rewards from the competition pool to the winners' competition internal balances based on results from the current challenge.Note that the size of the array parameters passed in to this function is limited by the block gas limit.This function allows for the payout to be split into chunks by calling it repeatedly.",
        "params": {
          "challengeRewards": "List of corresponding amount of tokens in wei won by each submitter for the challenge rewards portion.",
          "stakingRewards": "List of corresponding amount of tokens in wei given to each submitter for the staking rewards portion.",
          "submitters": "List of addresses that made submissions for the challenge.",
          "tournamentRewards": "List of corresponding amount of tokens in wei won by each submitter for the tournament rewards portion."
        },
        "returns": {
          "success": "True if operation completes successfully.*"
        }
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "sponsor(uint256)": {
        "notice": "METHODS CALLABLE BY BOTH ADMIN AND PARTICIPANTS.*"
      },
      "submitNewPredictions(bytes32)": {
        "details": "Called by participant to make a new prediction submission for the current challenge.Will be successful if the participant's stake is above the staking threshold.",
        "params": {
          "submissionHash": "IPFS reference hash of submission. This is the IPFS CID less the 1220 prefix."
        },
        "returns": {
          "challengeNumber": "Challenge that this submission was made for.*"
        }
      },
      "submitResults(bytes32)": {
        "details": "Called only by authorized admin to submit the IPFS reference for the results of a particular challenge.",
        "params": {
          "resultsHash": "IPFS reference hash where results for this challenge are stored. This is the IPFS CID less the 1220 prefix."
        },
        "returns": {
          "success": "True if the operation completed successfully.*"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "updateChallengeAndTournamentScores(uint32,address[],uint256[],uint256[])": {
        "details": "Provides the same function as above but allows for challenge number to be specified.Note that the size of the array parameters passed in to this function is limited by the block gas limit.This function allows for the update to be split into chunks by calling it repeatedly.",
        "params": {
          "challengeNumber": "Challenge to make updates for.",
          "challengeScores": "List of corresponding challenge scores.",
          "participants": "List of participants' addresses.",
          "tournamentScores": "List of corresponding tournament scores."
        },
        "returns": {
          "success": "True if operation completes successfully.*"
        }
      },
      "updateChallengeRewardsPercentageInWei(uint256)": {
        "details": "Called only by authorized admin to update the percentage of the competition rewards pool allocated to the challenge rewards budget.",
        "params": {
          "newPercentage": "New percentage amount in wei."
        },
        "returns": {
          "success": "True if the operation completed successfully.*"
        }
      },
      "updateDataset(bytes32,bytes32)": {
        "details": "Called only by authorized admin to update the IPFS reference for the dataset of a particular challenge.",
        "params": {
          "newDatasetHash": "IPFS reference hash where new dataset for this challenge is stored. This is the IPFS CID less the 1220 prefix.",
          "oldDatasetHash": "IPFS reference hash where previous dataset for this challenge is stored. This is the IPFS CID less the 1220 prefix."
        },
        "returns": {
          "success": "True if the operation completed successfully.*"
        }
      },
      "updateDeadlines(uint32,uint256,uint256)": {
        "details": "Called only by authorized admin to update one of the deadlines for this challenge.",
        "params": {
          "challengeNumber": "Challenge to perform the update for.",
          "index": "Deadline index to update.",
          "timestamp": "Deadline timestamp in milliseconds."
        },
        "returns": {
          "success": "True if the operation completed successfully.*"
        }
      },
      "updateInformationBatch(uint32,address[],uint256,uint256[])": {
        "details": "Called only by authorized admin to do a batch update of an additional information item for a list of participants for a given challenge.",
        "params": {
          "challengeNumber": "Challenge to update information for.",
          "itemNumber": "Item to update for.",
          "participants": "List of participant' addresses.",
          "values": "List of corresponding values to store."
        },
        "returns": {
          "success": "True if operation completes successfully.*"
        }
      },
      "updateKey(bytes32,bytes32)": {
        "details": "Called only by authorized admin to update the IPFS reference for the key of a particular challenge.",
        "params": {
          "newKeyHash": "IPFS reference hash where new key for this challenge is stored. This is the IPFS CID less the 1220 prefix.",
          "oldKeyHash": "IPFS reference hash where previous key for this challenge is stored. This is the IPFS CID less the 1220 prefix."
        },
        "returns": {
          "success": "True if the operation completed successfully.*"
        }
      },
      "updateMessage(string)": {
        "notice": "ORGANIZER WRITE METHODS*"
      },
      "updatePrivateKey(uint32,bytes32)": {
        "details": "Called only by authorized admin to update the private key for this challenge. This should be done at the end of the challenge.",
        "params": {
          "challengeNumber": "Challenge to perform the update for.",
          "newKeyHash": "IPFS reference cid where private key is stored."
        },
        "returns": {
          "success": "True if the operation completed successfully.*"
        }
      },
      "updateResults(bytes32,bytes32)": {
        "details": "Called only by authorized admin to update the IPFS reference for the results of the current challenge.",
        "params": {
          "newResultsHash": "IPFS reference hash where new results for this challenge are stored. This is the IPFS CID less the 1220 prefix.",
          "oldResultsHash": "IPFS reference hash where previous results for this challenge are stored. This is the IPFS CID less the 1220 prefix."
        },
        "returns": {
          "success": "True if the operation completed successfully.*"
        }
      },
      "updateRewardsThreshold(uint256)": {
        "details": "Called only by authorized admin to update the minimum amount required in the competition rewards pool to open a new challenge.",
        "params": {
          "newThreshold": "New minimum amount for opening new challenge."
        },
        "returns": {
          "success": "True if the operation completed successfully.*"
        }
      },
      "updateStakeThreshold(uint256)": {
        "details": "Called only by authorized admin to update the minimum stake amount required to take part in the competition.",
        "params": {
          "newStakeThreshold": "New stake threshold amount in wei."
        },
        "returns": {
          "success": "True if the operation completed successfully.*"
        }
      },
      "updateSubmission(bytes32,bytes32)": {
        "details": "Called by participant to modify prediction submission for the current challenge.",
        "params": {
          "newSubmissionHash": "IPFS reference hash of new submission. This is the IPFS CID less the 1220 prefix.",
          "oldSubmissionHash": "IPFS reference hash of previous submission. This is the IPFS CID less the 1220 prefix."
        },
        "returns": {
          "challengeNumber": "Challenge that this submission was made for.*"
        }
      },
      "updateTournamentRewardsPercentageInWei(uint256)": {
        "details": "Called only by authorized admin to update the percentage of the competition rewards pool allocated to the tournament rewards budget.",
        "params": {
          "newPercentage": "New percentage amount in wei."
        },
        "returns": {
          "success": "True if the operation completed successfully.*"
        }
      }
    },
    "title": "RCI Tournament(Competition) Contract",
    "version": 1
  },
  "offset": [
    573,
    25957
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3D0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x736D8C91 GT PUSH2 0x1FF JUMPI DUP1 PUSH4 0xC8F971DF GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xDC9F76EB GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xEECFC33F GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xEECFC33F EQ PUSH2 0xA5F JUMPI DUP1 PUSH4 0xF109A624 EQ PUSH2 0xA88 JUMPI DUP1 PUSH4 0xF7FB373D EQ PUSH2 0xA90 JUMPI DUP1 PUSH4 0xFFC6FF1E EQ PUSH2 0xAA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDC9F76EB EQ PUSH2 0x9A7 JUMPI DUP1 PUSH4 0xDEC9BF2F EQ PUSH2 0x9BA JUMPI DUP1 PUSH4 0xE6184AB8 EQ PUSH2 0x9CD JUMPI DUP1 PUSH4 0xE7D5C4EA EQ PUSH2 0xA10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD547741F GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x936 JUMPI DUP1 PUSH4 0xD68A7C00 EQ PUSH2 0x949 JUMPI DUP1 PUSH4 0xD885E39B EQ PUSH2 0x951 JUMPI DUP1 PUSH4 0xDC1E207C EQ PUSH2 0x994 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC8F971DF EQ PUSH2 0x8F3 JUMPI DUP1 PUSH4 0xCE6D41DE EQ PUSH2 0x906 JUMPI DUP1 PUSH4 0xD09E2C21 EQ PUSH2 0x91B JUMPI DUP1 PUSH4 0xD4F4B806 EQ PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x97D9ABB8 GT PUSH2 0x192 JUMPI DUP1 PUSH4 0xAA658B69 GT PUSH2 0x161 JUMPI DUP1 PUSH4 0xAA658B69 EQ PUSH2 0x84C JUMPI DUP1 PUSH4 0xAF976FEC EQ PUSH2 0x88F JUMPI DUP1 PUSH4 0xB6CCE5E2 EQ PUSH2 0x8CD JUMPI DUP1 PUSH4 0xC55E86B1 EQ PUSH2 0x8E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x97D9ABB8 EQ PUSH2 0x80B JUMPI DUP1 PUSH4 0x9F2492A2 EQ PUSH2 0x81E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x831 JUMPI DUP1 PUSH4 0xA6AB36F2 EQ PUSH2 0x839 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7BFC90B2 GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x7BFC90B2 EQ PUSH2 0x7D5 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x7E8 JUMPI DUP1 PUSH4 0x920920BA EQ PUSH2 0x7FB JUMPI DUP1 PUSH4 0x93A9DAC7 EQ PUSH2 0x803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x736D8C91 EQ PUSH2 0x730 JUMPI DUP1 PUSH4 0x73AF6745 EQ PUSH2 0x756 JUMPI DUP1 PUSH4 0x7A378430 EQ PUSH2 0x769 JUMPI DUP1 PUSH4 0x7A766460 EQ PUSH2 0x7AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x343CB6BE GT PUSH2 0x2EF JUMPI DUP1 PUSH4 0x4A31156F GT PUSH2 0x282 JUMPI DUP1 PUSH4 0x5E35D498 GT PUSH2 0x251 JUMPI DUP1 PUSH4 0x5E35D498 EQ PUSH2 0x687 JUMPI DUP1 PUSH4 0x5EF53329 EQ PUSH2 0x69A JUMPI DUP1 PUSH4 0x60CDB6CC EQ PUSH2 0x6AD JUMPI DUP1 PUSH4 0x6C981570 EQ PUSH2 0x6ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4A31156F EQ PUSH2 0x60B JUMPI DUP1 PUSH4 0x572C686A EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0x57D0CF58 EQ PUSH2 0x63E JUMPI DUP1 PUSH4 0x5D7E9467 EQ PUSH2 0x674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C35F180 GT PUSH2 0x2BE JUMPI DUP1 PUSH4 0x3C35F180 EQ PUSH2 0x579 JUMPI DUP1 PUSH4 0x3CBCB53A EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0x3F230915 EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0x4169293B EQ PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x343CB6BE EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0x37D6B997 EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0x39E28777 EQ PUSH2 0x553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A73BA01 GT PUSH2 0x367 JUMPI DUP1 PUSH4 0x2D071F1A GT PUSH2 0x336 JUMPI DUP1 PUSH4 0x2D071F1A EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0x315C455E EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0x3228CF72 EQ PUSH2 0x528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A73BA01 EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0x1E2FF711 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0x25B06746 EQ PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x15343C11 GT PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x15343C11 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x18829FC3 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0x18B125D1 EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0x1923BE24 EQ PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x3D5 JUMPI DUP1 PUSH4 0x2881B52 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0x10FE9AE8 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0x1442B868 EQ PUSH2 0x42B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3E8 PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x40DC JUMP JUMPDEST PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x4369 JUMP JUMPDEST PUSH2 0xAE2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0x440 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0x440 PUSH2 0x45C CALLDATASIZE PUSH1 0x4 PUSH2 0x41BD JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x440 JUMP JUMPDEST PUSH2 0x440 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45F0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x4A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x4104 JUMP JUMPDEST PUSH2 0xB6E JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x4B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F3F JUMP JUMPDEST PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x440 JUMP JUMPDEST PUSH2 0x440 PUSH2 0x4D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x4047 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x440 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x4FB CALLDATASIZE PUSH1 0x4 PUSH2 0x4384 JUMP JUMPDEST PUSH2 0x1020 JUMP JUMPDEST PUSH2 0x513 PUSH2 0x50E CALLDATASIZE PUSH1 0x4 PUSH2 0x405F JUMP JUMPDEST PUSH2 0x1087 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E8 PUSH2 0x523 CALLDATASIZE PUSH1 0x4 PUSH2 0x4047 JUMP JUMPDEST PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x440 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x440 JUMP JUMPDEST PUSH2 0x513 PUSH2 0x546 CALLDATASIZE PUSH1 0x4 PUSH2 0x405F JUMP JUMPDEST PUSH2 0x1157 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x11D1 JUMP JUMPDEST PUSH2 0x440 PUSH2 0x561 CALLDATASIZE PUSH1 0x4 PUSH2 0x41BD JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x587 CALLDATASIZE PUSH1 0x4 PUSH2 0x42E2 JUMP JUMPDEST PUSH2 0x1393 JUMP JUMPDEST PUSH2 0x440 PUSH2 0x59A CALLDATASIZE PUSH1 0x4 PUSH2 0x41D7 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x5 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x5DD CALLDATASIZE PUSH1 0x4 PUSH2 0x408A JUMP JUMPDEST PUSH2 0x160A JUMP JUMPDEST PUSH2 0x440 PUSH2 0x5F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x41BD JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x61E PUSH2 0x619 CALLDATASIZE PUSH1 0x4 PUSH2 0x4384 JUMP JUMPDEST PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x43D7 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x639 CALLDATASIZE PUSH1 0x4 PUSH2 0x4047 JUMP JUMPDEST PUSH2 0x183A JUMP JUMPDEST PUSH2 0x440 PUSH2 0x64C CALLDATASIZE PUSH1 0x4 PUSH2 0x4369 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE PUSH1 0x6 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x682 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F3F JUMP JUMPDEST PUSH2 0x18A9 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x695 CALLDATASIZE PUSH1 0x4 PUSH2 0x4047 JUMP JUMPDEST PUSH2 0x1B11 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x6A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x4047 JUMP JUMPDEST PUSH2 0x1B80 JUMP JUMPDEST PUSH2 0x440 PUSH2 0x6BB CALLDATASIZE PUSH1 0x4 PUSH2 0x41D7 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x5 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x440 PUSH2 0x6FB CALLDATASIZE PUSH1 0x4 PUSH2 0x41D7 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x5 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x764 CALLDATASIZE PUSH1 0x4 PUSH2 0x408A JUMP JUMPDEST PUSH2 0x1BEF JUMP JUMPDEST PUSH2 0x440 PUSH2 0x777 CALLDATASIZE PUSH1 0x4 PUSH2 0x41D7 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x5 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x440 PUSH2 0x7BA CALLDATASIZE PUSH1 0x4 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x7E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x4047 JUMP JUMPDEST PUSH2 0x1D27 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x7F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x405F JUMP JUMPDEST PUSH2 0x1D96 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x440 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x440 JUMP JUMPDEST PUSH2 0x440 PUSH2 0x819 CALLDATASIZE PUSH1 0x4 PUSH2 0x41D7 JUMP JUMPDEST PUSH2 0x1DBF JUMP JUMPDEST PUSH2 0x741 PUSH2 0x82C CALLDATASIZE PUSH1 0x4 PUSH2 0x4047 JUMP JUMPDEST PUSH2 0x1E17 JUMP JUMPDEST PUSH2 0x440 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x513 PUSH2 0x847 CALLDATASIZE PUSH1 0x4 PUSH2 0x4189 JUMP JUMPDEST PUSH2 0x1EFC JUMP JUMPDEST PUSH2 0x440 PUSH2 0x85A CALLDATASIZE PUSH1 0x4 PUSH2 0x41D7 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x5 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8BB PUSH2 0x89D CALLDATASIZE PUSH1 0x4 PUSH2 0x41BD JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x8DB CALLDATASIZE PUSH1 0x4 PUSH2 0x4047 JUMP JUMPDEST PUSH2 0x2077 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x8EE CALLDATASIZE PUSH1 0x4 PUSH2 0x408A JUMP JUMPDEST PUSH2 0x2206 JUMP JUMPDEST PUSH2 0x440 PUSH2 0x901 CALLDATASIZE PUSH1 0x4 PUSH2 0x41BD JUMP JUMPDEST PUSH2 0x22B9 JUMP JUMPDEST PUSH2 0x90E PUSH2 0x22DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x4424 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x929 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F68 JUMP JUMPDEST PUSH2 0x236C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x440 JUMP JUMPDEST PUSH2 0x513 PUSH2 0x944 CALLDATASIZE PUSH1 0x4 PUSH2 0x405F JUMP JUMPDEST PUSH2 0x23D0 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x440 JUMP JUMPDEST PUSH2 0x440 PUSH2 0x95F CALLDATASIZE PUSH1 0x4 PUSH2 0x41D7 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x5 SWAP4 DUP5 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x9A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x40AB JUMP JUMPDEST PUSH2 0x2450 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x9B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x43B6 JUMP JUMPDEST PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x9C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x423B JUMP JUMPDEST PUSH2 0x2897 JUMP JUMPDEST PUSH2 0x440 PUSH2 0x9DB CALLDATASIZE PUSH1 0x4 PUSH2 0x41D7 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x5 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x440 PUSH2 0xA1E CALLDATASIZE PUSH1 0x4 PUSH2 0x4200 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x5 SWAP1 SWAP4 ADD DUP2 MSTORE DUP3 DUP3 KECCAK256 SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 SWAP4 ADD SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x440 PUSH2 0xA6D CALLDATASIZE PUSH1 0x4 PUSH2 0x41BD JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x440 PUSH2 0x2BC6 JUMP JUMPDEST PUSH2 0x741 PUSH2 0xA9E CALLDATASIZE PUSH1 0x4 PUSH2 0x408A JUMP JUMPDEST PUSH2 0x2C63 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x2D32 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xADC JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFC PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0xB21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB18 SWAP1 PUSH2 0x4477 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD DUP4 SWAP1 SSTORE MLOAD PUSH1 0x1 SWAP2 DUP4 SWAP2 PUSH32 0x840BDCA8F6C2CDE252F010DB5E96E3B79DEB9D4CF7C64989F75FF7325B0D3C60 SWAP2 SWAP1 LOG2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB88 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0xBA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB18 SWAP1 PUSH2 0x4477 JUMP JUMPDEST PUSH2 0xBB0 PUSH1 0xB DUP5 DUP5 PUSH2 0x3E12 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 SWAP1 PUSH32 0x89DBE1E8A053A391BECC713B9C088B57CF1855CF857803E49EAAE2F8FBC3B1CD SWAP1 PUSH1 0x0 SWAP1 LOG1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D2064656372656173655374616B653A20506C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6173652063616C6C20746869732066756E6374696F6E20766961207468652074 PUSH1 0x64 DUP3 ADD MSTORE PUSH14 0x37B5B2B71031B7B73A3930B1BA17 PUSH1 0x91 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0xD5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x66 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D2064656372656173655374616B653A20506C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x617365207761697420666F7220746865207374616B696E6720706572696F6420 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x746F20756E6C6F636B206265666F7265206D6F64696679696E6720796F757220 PUSH1 0x84 DUP3 ADD MSTORE PUSH6 0x39BA30B5B297 PUSH1 0xD1 SHL PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 DUP5 GT ISZERO PUSH2 0xDEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D2064656372656173655374616B653A20496E73 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x756666696369656E742066756E647320666F72207769746864726177616C2E00 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE PUSH1 0x5 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xF1C JUMPI PUSH1 0x2 SLOAD PUSH2 0xE2A DUP6 DUP4 PUSH2 0x4505 JUMP JUMPDEST LT ISZERO PUSH2 0xEE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x74 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D2064656372656173655374616B653A20596F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206D6179206E6F74206C6F77657220796F7572207374616B652062656C6F7720 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x746865207468726573686F6C64207768696C6520796F75206861766520616E20 PUSH1 0x84 DUP3 ADD MSTORE PUSH20 0x32BC34B9BA34B7339039BAB136B4B9B9B4B7B717 PUSH1 0x61 SHL PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH2 0xEEB DUP5 DUP3 PUSH2 0x4505 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE PUSH1 0x5 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE JUMPDEST PUSH2 0xF26 DUP5 DUP3 PUSH2 0x4505 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xF54 SWAP1 DUP5 SWAP1 PUSH2 0x4505 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFDF SWAP2 SWAP1 PUSH2 0x4027 JUMP JUMPDEST SWAP3 POP DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x700865370FFB2A65A2B0242E6A64B21AC907ED5ECD46C9CFFC729C177B2B1C69 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103A PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x1056 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB18 SWAP1 PUSH2 0x4477 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x6 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x10A4 SWAP1 JUMPDEST CALLER PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x1108 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x818591B5A5B881D1BC819DC985B9D PUSH1 0x8A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x1112 DUP3 DUP3 PUSH2 0x2E56 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1130 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x114C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB18 SWAP1 PUSH2 0x4477 JUMP JUMPDEST PUSH2 0xADC PUSH1 0x0 DUP4 PUSH2 0x2EDA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x11C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x1112 DUP3 DUP3 PUSH2 0x30E1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11EB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x1207 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB18 SWAP1 PUSH2 0x4477 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND EQ PUSH2 0x12C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D206D6F766552656D61696E646572546F506F6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C3A20504C65617365207761697420666F7220746865206368616C6C656E6765 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x20746F20636F6D706C657465206265666F72652073706F6E736F72696E672E00 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D1 PUSH2 0x2BC6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1349 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D206D6F766552656D61696E646572546F506F6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C3A204E6F2072656D61696E64657220746F206D6F76652E0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x135B SWAP2 SWAP1 PUSH2 0x44AE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 SWAP3 POP DUP2 SWAP1 PUSH32 0xDA446D0471A795498335ED4BC219B34921A12CCB87136A9AA03964ADC83EADF3 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13AD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x13C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB18 SWAP1 PUSH2 0x4477 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x3 PUSH1 0xFF SWAP1 SWAP2 AND LT ISZERO PUSH2 0x146D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x47 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20757064617465496E666F726D6174696F6E42 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x617463683A204368616C6C656E676520697320696E20756E6578706563746564 PUSH1 0x64 DUP3 ADD MSTORE PUSH7 0x1039BA30BA3297 PUSH1 0xC9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB18 JUMP JUMPDEST DUP5 DUP3 EQ PUSH2 0x1501 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x56 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20757064617465496E666F726D6174696F6E42 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x617463683A204E756D626572206F66207061727469636970616E747320616E64 PUSH1 0x64 DUP3 ADD MSTORE PUSH22 0x103B30B63AB2B99030B932903234B33332B932B73A17 PUSH1 0x51 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x15C8 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x152C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0xD PUSH1 0x0 DUP11 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x1577 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x158C SWAP2 SWAP1 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP10 DUP3 MSTORE PUSH1 0x7 ADD SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SSTORE DUP1 PUSH2 0x15C0 DUP2 PUSH2 0x457A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1504 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 SWAP1 DUP5 SWAP1 PUSH4 0xFFFFFFFF DUP10 AND SWAP1 PUSH32 0xDFC0E8D429222115BCDEAE8834D5FBCECC360F743768FC2A9693A30A379999E9 SWAP1 PUSH1 0x0 SWAP1 LOG3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1624 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x1640 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB18 SWAP1 PUSH2 0x4477 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND EQ PUSH2 0x16D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20757064617465446174617365743A20436861 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x363632B733B29034B99031B637B9B2B217 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST DUP4 PUSH2 0x1744 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20757064617465446174617365743A204D7573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x742068617665207072652D6578697374696E6720646174617365742E00000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x107F DUP2 DUP6 DUP6 PUSH2 0x3146 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x175D DUP5 DUP5 PUSH2 0x4505 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1783 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17AC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP PUSH4 0xFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP2 POP PUSH1 0x7 ADD DUP5 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x182F JUMPI PUSH2 0x17DC DUP3 DUP3 PUSH2 0x32A6 JUMP JUMPDEST DUP4 PUSH2 0x17E7 DUP9 DUP5 PUSH2 0x4505 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1805 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0x1827 DUP2 PUSH2 0x457A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x17CA JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1854 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x1870 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB18 SWAP1 PUSH2 0x4477 JUMP JUMPDEST POP PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 SWAP1 DUP3 SWAP1 PUSH32 0x73E002420A7DEFB91818836F9AAA83222B749A40C213C7C0FBCCAACDD259E052 SWAP1 PUSH1 0x0 SWAP1 LOG2 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1951 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20696E6372656173655374616B653A20506C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6173652063616C6C20746869732066756E6374696F6E20766961207468652074 PUSH1 0x64 DUP3 ADD MSTORE PUSH14 0x37B5B2B71031B7B73A3930B1BA17 PUSH1 0x91 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0x1A18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x66 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20696E6372656173655374616B653A20506C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x617365207761697420666F7220746865207374616B696E6720706572696F6420 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x746F20756E6C6F636B206265666F7265206D6F64696679696E6720796F757220 PUSH1 0x84 DUP3 ADD MSTORE PUSH6 0x39BA30B5B297 PUSH1 0xD1 SHL PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP7 AND DUP5 MSTORE PUSH1 0xD DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP5 DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP5 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1A92 JUMPI PUSH2 0x1A61 DUP5 DUP3 PUSH2 0x44AE JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE PUSH1 0x5 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE JUMPDEST PUSH2 0x1A9C DUP5 DUP3 PUSH2 0x44AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x1ACA SWAP1 DUP5 SWAP1 PUSH2 0x44AE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 SWAP4 POP DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0x8B0ED825817A2E696C9A931715AF4609FC60E1701F09C89EE7645130E937EB2D SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B2B PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x1B47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB18 SWAP1 PUSH2 0x4477 JUMP JUMPDEST POP PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 SWAP1 DUP3 SWAP1 PUSH32 0x211318E1B6942C96EAAD65D5F6C4C520722236466093427DE4DACB729BD36DFB SWAP1 PUSH1 0x0 SWAP1 LOG2 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B9A PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x1BB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB18 SWAP1 PUSH2 0x4477 JUMP JUMPDEST POP PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 SWAP1 DUP3 SWAP1 PUSH32 0x99C5AF1F811B150D39D592621F8F23F4DF7E5664642F227684973847EB2888BE SWAP1 PUSH1 0x0 SWAP1 LOG2 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C09 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x1C25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB18 SWAP1 PUSH2 0x4477 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND EQ PUSH2 0x1CB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D207570646174654B65793A204368616C6C656E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x33B29034B99031B637B9B2B217 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST DUP4 PUSH2 0x1D1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D207570646174654B65793A204D757374206861 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x3B329038393296B2BC34B9BA34B7339035B2BC97 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x107F DUP2 DUP6 DUP6 PUSH2 0x32B2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D41 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x1D5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB18 SWAP1 PUSH2 0x4477 JUMP JUMPDEST POP PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 SWAP1 DUP3 SWAP1 PUSH32 0x94327140B3BB3BB989865FEF53B345CD1DDD7991B30E3233137AB646448FBEB5 SWAP1 PUSH1 0x0 SWAP1 LOG2 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE PUSH1 0x5 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 PUSH2 0x1E06 SWAP2 PUSH2 0x44AE JUMP JUMPDEST PUSH2 0x1E10 SWAP2 SWAP1 PUSH2 0x44AE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1E9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D207375626D69744E657750726564696374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E733A205374616B652069732062656C6F77207468726573686F6C642E000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x1EAA PUSH1 0x0 DUP5 PUSH2 0x340E JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP3 POP PUSH2 0x1ECF SWAP1 PUSH1 0x7 ADD CALLER PUSH2 0x35FA JUMP JUMPDEST POP PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x5 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1F15 JUMPI POP PUSH1 0xE SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1F78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1F9A JUMPI PUSH1 0xE DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1FF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20746F6B656E206164647265737320666F756E642E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x1FF8 PUSH2 0x360F JUMP JUMPDEST PUSH1 0x2 DUP5 SWAP1 SSTORE PUSH1 0x4 DUP4 DUP2 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH8 0x2C68AF0BB140000 PUSH1 0x9 SSTORE PUSH8 0x853A0D2313C0000 PUSH1 0xA SSTORE DUP1 ISZERO PUSH2 0x2071 JUMPI PUSH1 0xE DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND EQ PUSH2 0x212D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x53 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D2073706F6E736F723A20504C65617365207761 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x697420666F7220746865206368616C6C656E676520746F20636F6D706C657465 PUSH1 0x64 DUP3 ADD MSTORE PUSH19 0x103132B337B9329039B837B739B7B934B73397 PUSH1 0x69 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x213A DUP4 DUP3 PUSH2 0x44AE JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x218F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x21A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21C7 SWAP2 SWAP1 PUSH2 0x4027 JUMP JUMPDEST SWAP2 POP PUSH2 0x21D3 DUP4 DUP3 PUSH2 0x44AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 SWAP1 CALLER SWAP1 PUSH32 0x64939930C3FD0A1FE9E7FB9810272DB7730A0F02B900972787BCB79FB6FD3D2D SWAP1 PUSH1 0x0 SWAP1 LOG4 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2220 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x223C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB18 SWAP1 PUSH2 0x4477 JUMP JUMPDEST DUP3 PUSH2 0x22AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20757064617465526573756C74733A204D7573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x742068617665207072652D6578697374696E6720726573756C74732E00000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x1E10 DUP4 DUP4 PUSH2 0x2EDA JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xADC SWAP1 PUSH1 0x7 ADD PUSH2 0x367F JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD PUSH2 0x22E9 SWAP1 PUSH2 0x453F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2315 SWAP1 PUSH2 0x453F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2362 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2337 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2362 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2345 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2386 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x23A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB18 SWAP1 PUSH2 0x4477 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x23C3 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x3689 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x23EB SWAP1 PUSH2 0x109E JUMP JUMPDEST PUSH2 0x11C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x2061646D696E20746F207265766F6B65 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246A PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x2486 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB18 SWAP1 PUSH2 0x4477 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND EQ PUSH2 0x2520 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D206F70656E4368616C6C656E67653A20507265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x76696F757320706861736520697320696E636F6D706C6574652E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x3 SLOAD LT ISZERO PUSH2 0x258C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D70657469746F6E202D206F70656E4368616C6C656E67653A204E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x32B737BAB3B4103932BBB0B9323997 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST DUP1 PUSH2 0x2596 DUP2 PUSH2 0x4595 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP1 SLOAD PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 SWAP3 POP PUSH2 0x25E8 SWAP2 POP DUP3 SWAP1 DUP9 PUSH2 0x3146 JUMP JUMPDEST POP PUSH2 0x25F5 DUP2 PUSH1 0x0 DUP8 PUSH2 0x32B2 JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x9 SLOAD PUSH1 0x3 SLOAD PUSH2 0x260F SWAP2 SWAP1 PUSH2 0x44E6 JUMP JUMPDEST PUSH2 0x2619 SWAP2 SWAP1 PUSH2 0x44C6 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0xA SLOAD PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x2635 SWAP2 PUSH2 0x44E6 JUMP JUMPDEST PUSH2 0x263F SWAP2 SWAP1 PUSH2 0x44C6 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x7 SLOAD PUSH1 0x3 SLOAD PUSH2 0x2654 SWAP2 SWAP1 PUSH2 0x4505 JUMP JUMPDEST PUSH2 0x265E SWAP2 SWAP1 PUSH2 0x4505 JUMP JUMPDEST PUSH1 0x6 SWAP1 DUP2 SSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP1 MSTORE SWAP1 SWAP5 ADD SWAP1 MSTORE DUP3 DUP2 KECCAK256 DUP8 SWAP1 SSTORE PUSH1 0x1 DUP1 DUP3 MSTORE DUP4 DUP3 KECCAK256 DUP8 SWAP1 SSTORE SWAP3 MLOAD SWAP3 SWAP5 POP SWAP1 SWAP2 PUSH32 0x9DA6F4CD0F617F153C3EBC9840A08792CFF9F0FD8C796CE09C5D2006F42DA6D9 SWAP2 SWAP1 LOG2 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x26FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB18 SWAP1 PUSH2 0x4477 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xFF DUP4 AND PUSH1 0x2 LT DUP1 ISZERO PUSH2 0x2724 JUMPI POP PUSH1 0x5 DUP4 PUSH1 0xFF AND LT JUMPDEST PUSH2 0x27BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20616476616E6365546F50686173653A20596F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x75206D6179206F6E6C79207573652074686973206D6574686F6420666F722061 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6476616E63696E6720746F207068617365732033206F7220342E000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x27E3 PUSH1 0x1 DUP6 PUSH2 0x451C JUMP JUMPDEST PUSH1 0xFF AND EQ PUSH2 0x2867 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20616476616E6365546F50686173653A20596F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x75206D6179206F6E6C7920616476616E636520746F20746865206E6578742070 PUSH1 0x64 DUP3 ADD MSTORE PUSH5 0x3430B9B297 PUSH1 0xD9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x28CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB18 SWAP1 PUSH2 0x4477 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x3 PUSH1 0xFF SWAP1 SWAP2 AND LT ISZERO PUSH2 0x297D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x53 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D207570646174654368616C6C656E6765416E64 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x546F75726E616D656E7453636F7265733A204368616C6C656E67652069732069 PUSH1 0x64 DUP3 ADD MSTORE PUSH19 0x37103AB732BC3832B1BA32B21039BA30BA3297 PUSH1 0x69 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB18 JUMP JUMPDEST DUP6 DUP5 EQ DUP1 ISZERO PUSH2 0x298B JUMPI POP DUP6 DUP3 EQ JUMPDEST PUSH2 0x2A2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x62 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D207570646174654368616C6C656E6765416E64 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x546F75726E616D656E7453636F7265733A204E756D626572206F662070617274 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x69636970616E747320616E642073636F7265732061726520646966666572656E PUSH1 0x84 DUP3 ADD MSTORE PUSH2 0x3A17 PUSH1 0xF1 SHL PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2B85 JUMPI DUP6 DUP6 DUP3 DUP2 DUP2 LT PUSH2 0x2A59 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0xD PUSH1 0x0 DUP12 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 DUP11 DUP11 DUP6 DUP2 DUP2 LT PUSH2 0x2AA4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2AB9 SWAP2 SWAP1 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SSTORE DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x2AF6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0xD PUSH1 0x0 DUP12 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 DUP11 DUP11 DUP6 DUP2 DUP2 LT PUSH2 0x2B41 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2B56 SWAP2 SWAP1 PUSH2 0x3F25 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SSTORE DUP1 PUSH2 0x2B7D DUP2 PUSH2 0x457A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2A31 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 SWAP1 PUSH4 0xFFFFFFFF DUP10 AND SWAP1 PUSH32 0x6FA7224843E16AB8C76A13B984CFCF54DE67707A118BF52CE93E0E5BE3589871 SWAP1 PUSH1 0x0 SWAP1 LOG2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x5 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP4 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C4A SWAP2 SWAP1 PUSH2 0x4171 JUMP JUMPDEST PUSH2 0x2C54 SWAP2 SWAP1 PUSH2 0x4505 JUMP JUMPDEST PUSH2 0x2C5E SWAP2 SWAP1 PUSH2 0x4505 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2CD1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4610 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4D7573742068617665207072652D6578697374696E67207375626D697373696F PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH2 0x2CDB DUP4 DUP4 PUSH2 0x340E JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0xADC JUMPI PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x2D04 SWAP1 PUSH1 0x7 ADD CALLER PUSH2 0x39EC JUMP JUMPDEST POP PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x5 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D4C PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x2D68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB18 SWAP1 PUSH2 0x4477 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND EQ PUSH2 0x2E05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20636C6F73655375626D697373696F6E3A2043 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x68616C6C656E676520696E20756E65787065637465642073746174652E000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE MLOAD PUSH1 0x1 SWAP5 POP PUSH32 0xAA5EBDC7900B87A79257AABBAB219AF255ADA0BE7148632CE5AFCD622DF7A88B SWAP2 SWAP1 LOG2 POP SWAP1 JUMP JUMPDEST PUSH2 0x2E60 DUP3 DUP3 PUSH2 0x1D96 JUMP JUMPDEST PUSH2 0x1112 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2E96 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 EQ ISZERO PUSH2 0x2F63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x48 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20757064617465526573756C74733A2043616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6F74207570646174652077697468207468652073616D652068617368206173 PUSH1 0x64 DUP3 ADD MSTORE PUSH8 0x103132B337B93297 PUSH1 0xC1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x3 PUSH1 0xFF SWAP1 SWAP2 AND LT ISZERO PUSH2 0x3000 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20757064617465526573756C74733A20436861 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6C656E676520696E20756E65787065637465642073746174652E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP5 EQ PUSH2 0x308D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20757064617465526573756C74733A20436C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x736820696E206578697374696E6720726573756C747320686173682E00000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD DUP8 SWAP1 SSTORE SWAP1 MLOAD SWAP1 SWAP5 POP DUP6 SWAP3 DUP8 SWAP3 SWAP1 SWAP2 PUSH32 0xFB7D772905D44C5FDD59D4AB87C7F40281E09F93E2E189D03737C6D82B154EA SWAP2 SWAP1 LOG4 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x30EB DUP3 DUP3 PUSH2 0x1D96 JUMP JUMPDEST ISZERO PUSH2 0x1112 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 EQ ISZERO PUSH2 0x31CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x48 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20757064617465446174617365743A2043616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6F74207570646174652077697468207468652073616D652068617368206173 PUSH1 0x64 DUP3 ADD MSTORE PUSH8 0x103132B337B93297 PUSH1 0xC1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 EQ PUSH2 0x3259 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20757064617465446174617365743A20496E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F7272656374206F6C642064617461736574207265666572656E63652E000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST POP PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH1 0x1 SWAP3 DUP5 SWAP3 DUP7 SWAP3 PUSH32 0xB4AD7E2453C3C06A28C5CFE29A3067C6EDDE6EB03BE4DF2A461F9D806CB747E SWAP2 SWAP1 LOG4 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E10 DUP4 DUP4 PUSH2 0x3A01 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 EQ ISZERO PUSH2 0x3338 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D205F7570646174654B65793A2043616E6E6F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207570646174652077697468207468652073616D652068617368206173206265 PUSH1 0x64 DUP3 ADD MSTORE PUSH5 0x3337B93297 PUSH1 0xD9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP4 EQ PUSH2 0x33BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D205F7570646174654B65793A20496E636F7272 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x32B1BA1037B6321035B2BC903932B332B932B731B297 PUSH1 0x51 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST POP PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x2 ADD DUP5 SWAP1 SSTORE MLOAD PUSH1 0x1 SWAP3 DUP5 SWAP3 DUP7 SWAP3 PUSH32 0x7A2B6B0F48D13449D72D8FD2C1FAE94CD13C970CC0DC738ABD0BAE8D50CE81C6 SWAP2 SWAP1 LOG4 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND EQ PUSH2 0x3499 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4610 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4E6F7420617661696C61626C6520666F72207375626D697373696F6E732E0000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST DUP2 DUP4 EQ ISZERO PUSH2 0x3511 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4610 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207570646174652077697468207468652073616D652068617368 PUSH1 0x64 DUP3 ADD MSTORE PUSH11 0x1030B9903132B337B93297 PUSH1 0xA9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x5 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 EQ PUSH2 0x35A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4610 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x436C61736820696E206578697374696E67207375626D697373696F6E20686173 PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x3417 PUSH1 0xF1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP7 SWAP1 SSTORE MLOAD DUP6 SWAP4 SWAP2 SWAP3 PUSH32 0x953E3B79BB71898776BB2EF8BB919748C883B8B27C42E334DE1ECDBF79D472BB SWAP2 LOG4 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E10 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3A95 JUMP JUMPDEST PUSH2 0x3627 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45F0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1108 JUMP JUMPDEST PUSH2 0x363F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45F0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH2 0x3AE4 JUMP JUMPDEST PUSH2 0x3657 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x1108 JUMP JUMPDEST PUSH2 0x367D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45D0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x45F0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x3AE4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADC DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x3 PUSH1 0xFF SWAP1 SWAP2 AND LT ISZERO PUSH2 0x371D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20706179526577617264733A204368616C6C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E676520697320696E20756E65787065637465642073746174652E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST DUP8 DUP7 EQ DUP1 ISZERO PUSH2 0x372B JUMPI POP DUP8 DUP5 EQ JUMPDEST DUP1 ISZERO PUSH2 0x3736 JUMPI POP DUP8 DUP3 EQ JUMPDEST PUSH2 0x37BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x49 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D7065746974696F6E202D20706179526577617264733A204E756D626572 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206F66207375626D69747465727320616E642072657761726473206172652064 PUSH1 0x64 DUP3 ADD MSTORE PUSH9 0x34B33332B932B73A17 PUSH1 0xB9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 JUMPDEST DUP12 DUP2 LT ISZERO PUSH2 0x3929 JUMPI DUP11 DUP11 DUP3 DUP2 DUP2 LT PUSH2 0x37E8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP5 PUSH2 0x37FA SWAP2 SWAP1 PUSH2 0x44AE JUMP JUMPDEST SWAP4 POP DUP9 DUP9 DUP3 DUP2 DUP2 LT PUSH2 0x381C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP4 PUSH2 0x382E SWAP2 SWAP1 PUSH2 0x44AE JUMP JUMPDEST SWAP3 POP DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0x3850 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x3862 SWAP2 SWAP1 PUSH2 0x44AE JUMP JUMPDEST SWAP2 POP PUSH2 0x3917 DUP15 DUP15 DUP15 DUP5 DUP2 DUP2 LT PUSH2 0x3888 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x389D SWAP2 SWAP1 PUSH2 0x3F25 JUMP JUMPDEST DUP14 DUP14 DUP6 DUP2 DUP2 LT PUSH2 0x38BD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP13 DUP13 DUP7 DUP2 DUP2 LT PUSH2 0x38E4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP12 DUP12 DUP8 DUP2 DUP2 LT PUSH2 0x390B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x3B38 JUMP JUMPDEST DUP1 PUSH2 0x3921 DUP2 PUSH2 0x457A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x37C0 JUMP JUMPDEST POP DUP3 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x393C SWAP2 SWAP1 PUSH2 0x4505 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3955 SWAP2 SWAP1 PUSH2 0x4505 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x396E SWAP2 SWAP1 PUSH2 0x4505 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x397F DUP4 DUP6 PUSH2 0x44AE JUMP JUMPDEST PUSH2 0x3989 SWAP2 SWAP1 PUSH2 0x44AE JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x399A SWAP2 SWAP1 PUSH2 0x4505 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x39AB DUP4 DUP6 PUSH2 0x44AE JUMP JUMPDEST PUSH2 0x39B5 SWAP2 SWAP1 PUSH2 0x44AE JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x39C6 SWAP2 SWAP1 PUSH2 0x44AE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP5 POP PUSH2 0x39DC SWAP1 POP DUP14 DUP5 DUP5 DUP5 PUSH2 0x3CB0 JUMP JUMPDEST POP POP POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E10 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x3CF5 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x3A5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6473 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB18 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3A82 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x3ADC JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xADC JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xADC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 SWAP1 PUSH1 0x40 MLOAD DUP5 SWAP1 PUSH32 0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF SWAP1 PUSH1 0x0 SWAP1 LOG4 PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SSTORE JUMP JUMPDEST DUP1 PUSH2 0x3B43 DUP4 DUP6 PUSH2 0x44AE JUMP JUMPDEST PUSH2 0x3B4D SWAP2 SWAP1 PUSH2 0x44AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x3B75 SWAP1 DUP5 SWAP1 PUSH2 0x44AE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP3 ISZERO PUSH2 0x3BC5 JUMPI PUSH4 0xFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE PUSH1 0x5 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x3BBF SWAP1 DUP5 SWAP1 PUSH2 0x44AE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 ISZERO PUSH2 0x3C10 JUMPI PUSH4 0xFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE PUSH1 0x5 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x3C0A SWAP1 DUP5 SWAP1 PUSH2 0x44AE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP1 ISZERO PUSH2 0x3C5B JUMPI PUSH4 0xFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE PUSH1 0x5 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x3C55 SWAP1 DUP5 SWAP1 PUSH2 0x44AE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF DUP8 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE DUP3 SWAP2 DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 PUSH32 0x6BF9F9AB57EFEDD3554E5388390B4EC0CC61506E0DFC7AD37DB38D940A23B743 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF DUP6 AND DUP2 MSTORE DUP2 SWAP1 DUP4 SWAP1 DUP6 SWAP1 PUSH32 0x8B77F1E219A52706FCF536BEDEC95F5DF41E062D16118AE8F4BEDFFD30AFC939 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x3E08 JUMPI PUSH1 0x0 PUSH2 0x3D19 PUSH1 0x1 DUP4 PUSH2 0x4505 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x3D2D SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4505 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3D54 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x3D85 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH2 0x3D9C DUP4 PUSH1 0x1 PUSH2 0x44AE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x3DCC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0xADC JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xADC JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x3E1E SWAP1 PUSH2 0x453F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x3E40 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x3E86 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x3E59 JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x3E86 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3E86 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3E86 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3E6B JUMP JUMPDEST POP PUSH2 0x3E92 SWAP3 SWAP2 POP PUSH2 0x3E96 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3E92 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3E97 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3EC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3ED8 JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3EEF JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x3F0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3EC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3F36 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1E10 DUP3 PUSH2 0x3EAB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F51 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x3F5A DUP4 PUSH2 0x3EAB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x3F83 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3F9A JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x3FA6 DUP13 DUP4 DUP14 ADD PUSH2 0x3EC7 JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP PUSH1 0x20 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3FBE JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x3FCA DUP13 DUP4 DUP14 ADD PUSH2 0x3EC7 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x40 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3FE2 JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x3FEE DUP13 DUP4 DUP14 ADD PUSH2 0x3EC7 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4006 JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x4013 DUP12 DUP3 DUP13 ADD PUSH2 0x3EC7 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4038 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1E10 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4058 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4071 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x4081 PUSH1 0x20 DUP5 ADD PUSH2 0x3EAB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x409C JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x40C0 JUMPI DUP4 DUP5 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40ED JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1E10 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4116 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x412D JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4140 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x414E JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x415F JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4182 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x419D JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x41B4 PUSH1 0x40 DUP6 ADD PUSH2 0x3EAB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41CE JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1E10 DUP3 PUSH2 0x3F11 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x41E9 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x41F2 DUP4 PUSH2 0x3F11 JUMP JUMPDEST SWAP2 POP PUSH2 0x4081 PUSH1 0x20 DUP5 ADD PUSH2 0x3EAB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4214 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x421D DUP5 PUSH2 0x3F11 JUMP JUMPDEST SWAP3 POP PUSH2 0x422B PUSH1 0x20 DUP6 ADD PUSH2 0x3EAB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4255 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x425E DUP9 PUSH2 0x3F11 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x427A JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x4286 DUP12 DUP4 DUP13 ADD PUSH2 0x3EC7 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x429E JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x42AA DUP12 DUP4 DUP13 ADD PUSH2 0x3EC7 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x42C2 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x42CF DUP11 DUP3 DUP12 ADD PUSH2 0x3EC7 JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x42FA JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x4303 DUP8 PUSH2 0x3F11 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x431F JUMPI DUP6 DUP7 REVERT JUMPDEST PUSH2 0x432B DUP11 DUP4 DUP12 ADD PUSH2 0x3EC7 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x434A JUMPI DUP4 DUP5 REVERT JUMPDEST POP PUSH2 0x4357 DUP10 DUP3 DUP11 ADD PUSH2 0x3EC7 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x437B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3F5A DUP4 PUSH2 0x3F11 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4398 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x43A1 DUP5 PUSH2 0x3F11 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x43C7 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1E10 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4418 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x43F3 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4450 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x4434 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x4461 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C657220697320756E617574686F72697A65642E000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x44C1 JUMPI PUSH2 0x44C1 PUSH2 0x45B9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x44E1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x4500 JUMPI PUSH2 0x4500 PUSH2 0x45B9 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x4517 JUMPI PUSH2 0x4517 PUSH2 0x45B9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP5 AND DUP1 DUP3 LT ISZERO PUSH2 0x4536 JUMPI PUSH2 0x4536 PUSH2 0x45B9 JUMP JUMPDEST SWAP1 SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4553 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x4574 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x458E JUMPI PUSH2 0x458E PUSH2 0x45B9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x45AF JUMPI PUSH2 0x45AF PUSH2 0x45B9 JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0xA7 0xC3 PUSH27 0x885C101433A066F48B62753BEB2A7567FE326B80D58772C6EF61E2 DUP3 0xE7 0xC6 0x49 PUSH28 0xD1AF5627A7B5DC7995C3C9C668C87BD99DDC7E1609BA9724FE0E860 0xB5 NUMBER PUSH16 0x6D7065746974696F6E202D2075706461 PUSH21 0x655375626D697373696F6E3A20A264697066735822 SLT KECCAK256 RETURNDATASIZE 0x2C ISZERO 0xC4 MSTORE8 0xC9 0xF6 0xEB 0xF7 PUSH28 0x10C30E38F4A1F1F0B753D92AC42FD5B146992F6691C964736F6C6343 STOP ADDMOD DIV STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D0"
    },
    "25": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x736D8C91"
    },
    "38": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "GT",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FF"
    },
    "42": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC8F971DF"
    },
    "49": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "GT",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11A"
    },
    "53": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDC9F76EB"
    },
    "60": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "GT",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAD"
    },
    "64": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xEECFC33F"
    },
    "71": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "GT",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C"
    },
    "75": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xEECFC33F"
    },
    "82": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "83": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA5F"
    },
    "86": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "88": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF109A624"
    },
    "93": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "94": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA88"
    },
    "97": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "98": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "99": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF7FB373D"
    },
    "104": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "105": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA90"
    },
    "108": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "109": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "110": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFC6FF1E"
    },
    "115": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "116": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAA3"
    },
    "119": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "120": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "122": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "123": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "REVERT",
      "path": "2"
    },
    "124": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "125": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "126": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDC9F76EB"
    },
    "131": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "132": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A7"
    },
    "135": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "136": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "137": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDEC9BF2F"
    },
    "142": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "143": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9BA"
    },
    "146": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "147": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "148": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE6184AB8"
    },
    "153": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "154": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9CD"
    },
    "157": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "158": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "159": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE7D5C4EA"
    },
    "164": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "165": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA10"
    },
    "168": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "169": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "172": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "REVERT",
      "path": "2"
    },
    "173": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "174": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "175": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD547741F"
    },
    "180": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "GT",
      "path": "2"
    },
    "181": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE9"
    },
    "184": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "185": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "186": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD547741F"
    },
    "191": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "192": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x936"
    },
    "195": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "196": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "197": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD68A7C00"
    },
    "202": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "203": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x949"
    },
    "206": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "207": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "208": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD885E39B"
    },
    "213": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "214": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x951"
    },
    "217": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "218": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "219": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDC1E207C"
    },
    "224": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "225": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x994"
    },
    "228": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "229": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "232": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "REVERT",
      "path": "2"
    },
    "233": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "234": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "235": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC8F971DF"
    },
    "240": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "241": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8F3"
    },
    "244": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "245": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "246": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xCE6D41DE"
    },
    "251": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "252": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x906"
    },
    "255": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "256": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "257": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD09E2C21"
    },
    "262": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "263": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x91B"
    },
    "266": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "267": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "268": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD4F4B806"
    },
    "273": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "274": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x92E"
    },
    "277": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "278": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "280": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "281": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "REVERT",
      "path": "2"
    },
    "282": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "283": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "284": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x97D9ABB8"
    },
    "289": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "GT",
      "path": "2"
    },
    "290": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x192"
    },
    "293": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "294": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "295": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xAA658B69"
    },
    "300": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "GT",
      "path": "2"
    },
    "301": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x161"
    },
    "304": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "305": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "306": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xAA658B69"
    },
    "311": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "312": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x84C"
    },
    "315": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "316": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "317": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xAF976FEC"
    },
    "322": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "323": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x88F"
    },
    "326": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "327": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "328": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB6CCE5E2"
    },
    "333": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "334": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8CD"
    },
    "337": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "338": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "339": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC55E86B1"
    },
    "344": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "345": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8E0"
    },
    "348": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "349": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "351": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "352": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "REVERT",
      "path": "2"
    },
    "353": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "354": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "355": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x97D9ABB8"
    },
    "360": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "361": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x80B"
    },
    "364": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "365": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "366": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9F2492A2"
    },
    "371": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "372": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x81E"
    },
    "375": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "376": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "377": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA217FDDF"
    },
    "382": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "383": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x831"
    },
    "386": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "387": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "388": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA6AB36F2"
    },
    "393": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "394": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x839"
    },
    "397": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "398": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "400": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "401": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "REVERT",
      "path": "2"
    },
    "402": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "403": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "404": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7BFC90B2"
    },
    "409": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "GT",
      "path": "2"
    },
    "410": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CE"
    },
    "413": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "414": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "415": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7BFC90B2"
    },
    "420": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "421": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7D5"
    },
    "424": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "425": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "426": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x91D14854"
    },
    "431": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "432": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E8"
    },
    "435": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "436": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "437": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x920920BA"
    },
    "442": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "443": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7FB"
    },
    "446": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "447": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "448": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x93A9DAC7"
    },
    "453": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "454": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x803"
    },
    "457": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "458": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "460": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "461": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "REVERT",
      "path": "2"
    },
    "462": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "463": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "464": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x736D8C91"
    },
    "469": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "470": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x730"
    },
    "473": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "474": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "475": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x73AF6745"
    },
    "480": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "481": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x756"
    },
    "484": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "485": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "486": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7A378430"
    },
    "491": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "492": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x769"
    },
    "495": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "496": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "497": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7A766460"
    },
    "502": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "503": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AC"
    },
    "506": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "507": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "509": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "510": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "REVERT",
      "path": "2"
    },
    "511": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "512": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "513": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x343CB6BE"
    },
    "518": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "GT",
      "path": "2"
    },
    "519": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EF"
    },
    "522": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "523": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "524": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4A31156F"
    },
    "529": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "GT",
      "path": "2"
    },
    "530": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x282"
    },
    "533": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "534": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "535": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x5E35D498"
    },
    "540": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "GT",
      "path": "2"
    },
    "541": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x251"
    },
    "544": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "545": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "546": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x5E35D498"
    },
    "551": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "552": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x687"
    },
    "555": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "556": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "557": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x5EF53329"
    },
    "562": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "563": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x69A"
    },
    "566": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "567": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "568": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x60CDB6CC"
    },
    "573": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "574": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6AD"
    },
    "577": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "578": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "579": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6C981570"
    },
    "584": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "585": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6ED"
    },
    "588": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "589": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "591": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "592": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "REVERT",
      "path": "2"
    },
    "593": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "594": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "595": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4A31156F"
    },
    "600": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "601": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60B"
    },
    "604": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "605": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "606": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x572C686A"
    },
    "611": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "612": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x62B"
    },
    "615": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "616": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "617": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x57D0CF58"
    },
    "622": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "623": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x63E"
    },
    "626": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "627": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "628": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x5D7E9467"
    },
    "633": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "634": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x674"
    },
    "637": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "638": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "640": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "641": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "REVERT",
      "path": "2"
    },
    "642": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "643": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "644": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3C35F180"
    },
    "649": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "GT",
      "path": "2"
    },
    "650": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BE"
    },
    "653": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "654": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "655": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3C35F180"
    },
    "660": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "661": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x579"
    },
    "664": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "665": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "666": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3CBCB53A"
    },
    "671": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "672": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x58C"
    },
    "675": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "676": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "677": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3F230915"
    },
    "682": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "683": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5CF"
    },
    "686": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "687": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "688": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4169293B"
    },
    "693": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "694": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5E2"
    },
    "697": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "698": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "700": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "701": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "REVERT",
      "path": "2"
    },
    "702": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "703": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "704": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x343CB6BE"
    },
    "709": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "710": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x530"
    },
    "713": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "714": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "715": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x36568ABE"
    },
    "720": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "721": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x538"
    },
    "724": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "725": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "726": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x37D6B997"
    },
    "731": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "732": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x54B"
    },
    "735": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "736": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "737": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x39E28777"
    },
    "742": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "743": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x553"
    },
    "746": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "747": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "749": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "750": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "REVERT",
      "path": "2"
    },
    "751": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "752": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "753": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1A73BA01"
    },
    "758": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "GT",
      "path": "2"
    },
    "759": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x367"
    },
    "762": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "763": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "764": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2D071F1A"
    },
    "769": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "GT",
      "path": "2"
    },
    "770": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x336"
    },
    "773": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "774": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "775": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2D071F1A"
    },
    "780": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "781": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4ED"
    },
    "784": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "785": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "786": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2F2FF15D"
    },
    "791": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "792": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x500"
    },
    "795": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "796": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "797": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x315C455E"
    },
    "802": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "803": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x515"
    },
    "806": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "807": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "808": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3228CF72"
    },
    "813": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "814": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x528"
    },
    "817": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "818": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "820": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "821": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "REVERT",
      "path": "2"
    },
    "822": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "823": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "824": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1A73BA01"
    },
    "829": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "830": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4A7"
    },
    "833": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "834": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "835": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1E2FF711"
    },
    "840": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "841": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BA"
    },
    "844": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "845": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "846": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x248A9CA3"
    },
    "851": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "852": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C2"
    },
    "855": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "856": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "857": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x25B06746"
    },
    "862": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "863": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E5"
    },
    "866": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "867": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "869": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "870": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "REVERT",
      "path": "2"
    },
    "871": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "872": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "873": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x15343C11"
    },
    "878": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "GT",
      "path": "2"
    },
    "879": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A3"
    },
    "882": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "883": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "884": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x15343C11"
    },
    "889": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "890": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44E"
    },
    "893": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "894": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "895": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x18829FC3"
    },
    "900": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "901": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x477"
    },
    "904": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "905": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "906": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x18B125D1"
    },
    "911": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "912": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x47F"
    },
    "915": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "916": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "917": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1923BE24"
    },
    "922": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "923": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x494"
    },
    "926": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "927": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "929": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "930": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "REVERT",
      "path": "2"
    },
    "931": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "932": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "933": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1FFC9A7"
    },
    "938": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "939": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D5"
    },
    "942": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "943": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "944": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2881B52"
    },
    "949": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "950": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3FD"
    },
    "953": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "954": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "955": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x10FE9AE8"
    },
    "960": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "961": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x410"
    },
    "964": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "965": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "966": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1442B868"
    },
    "971": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "EQ",
      "path": "2"
    },
    "972": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x42B"
    },
    "975": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "976": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "977": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "979": {
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "980": {
      "first_revert": true,
      "fn": null,
      "offset": [
        573,
        25957
      ],
      "op": "REVERT",
      "path": "2"
    },
    "981": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "982": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3E8"
    },
    "985": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3E3"
    },
    "988": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "989": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "991": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x40DC"
    },
    "994": {
      "fn": "AccessControl.supportsInterface",
      "jump": "i",
      "offset": [
        3566,
        3780
      ],
      "op": "JUMP",
      "path": "7"
    },
    "995": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "996": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAAB"
    },
    "999": {
      "fn": "AccessControl.supportsInterface",
      "jump": "i",
      "offset": [
        3566,
        3780
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1000": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1001": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1003": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1004": {
      "op": "SWAP1"
    },
    "1005": {
      "op": "ISZERO"
    },
    "1006": {
      "op": "ISZERO"
    },
    "1007": {
      "op": "DUP2"
    },
    "1008": {
      "op": "MSTORE"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1011": {
      "op": "ADD"
    },
    "1012": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1013": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1015": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1016": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1017": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1018": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "SUB",
      "path": "7"
    },
    "1019": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1020": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "RETURN",
      "path": "7"
    },
    "1021": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7163,
        7434
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1022": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7163,
        7434
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "1025": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7163,
        7434
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40B"
    },
    "1028": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7163,
        7434
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1029": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7163,
        7434
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1031": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7163,
        7434
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4369"
    },
    "1034": {
      "fn": "Competition.updatePrivateKey",
      "jump": "i",
      "offset": [
        7163,
        7434
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1035": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7163,
        7434
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1036": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7163,
        7434
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAE2"
    },
    "1039": {
      "fn": "Competition.updatePrivateKey",
      "jump": "i",
      "offset": [
        7163,
        7434
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1040": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        22260,
        22400
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1041": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        22386,
        22392
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x1"
    },
    "1043": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        22386,
        22392
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1044": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        22260,
        22400
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1046": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        22260,
        22400
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1053": {
      "op": "SHL"
    },
    "1054": {
      "op": "SUB"
    },
    "1055": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        22386,
        22392
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1056": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        22386,
        22392
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1057": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        22386,
        22392
      ],
      "op": "AND",
      "path": "2"
    },
    "1058": {
      "op": "DUP2"
    },
    "1059": {
      "op": "MSTORE"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1062": {
      "op": "ADD"
    },
    "1063": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        22260,
        22400
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F4"
    },
    "1066": {
      "op": "JUMP"
    },
    "1067": {
      "offset": [
        235,
        305
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1068": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        235,
        305
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x440"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1073": {
      "op": "DUP1"
    },
    "1074": {
      "op": "MLOAD"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1077": {
      "op": "PUSH2",
      "value": "0x45D0"
    },
    "1080": {
      "op": "DUP4"
    },
    "1081": {
      "op": "CODECOPY"
    },
    "1082": {
      "op": "DUP2"
    },
    "1083": {
      "op": "MLOAD"
    },
    "1084": {
      "op": "SWAP2"
    },
    "1085": {
      "op": "MSTORE"
    },
    "1086": {
      "offset": [
        235,
        305
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1087": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        235,
        305
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1088": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        235,
        305
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1089": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        235,
        305
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1091": {
      "fn": "Competition.getTokenAddress",
      "offset": [
        235,
        305
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1092": {
      "op": "SWAP1"
    },
    "1093": {
      "op": "DUP2"
    },
    "1094": {
      "op": "MSTORE"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1097": {
      "op": "ADD"
    },
    "1098": {
      "offset": [
        235,
        305
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F4"
    },
    "1101": {
      "op": "JUMP"
    },
    "1102": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20708,
        20864
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1103": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20708,
        20864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "1106": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20708,
        20864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x45C"
    },
    "1109": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20708,
        20864
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1110": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20708,
        20864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1112": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20708,
        20864
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41BD"
    },
    "1115": {
      "fn": "Competition.getKeyHash",
      "jump": "i",
      "offset": [
        20708,
        20864
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1116": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20708,
        20864
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1117": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20825,
        20853
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 1,
      "value": "0xFFFFFFFF"
    },
    "1122": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20825,
        20853
      ],
      "op": "AND",
      "path": "2"
    },
    "1123": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20792,
        20803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1125": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20825,
        20853
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1126": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20825,
        20853
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1127": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20825,
        20853
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1128": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20825,
        20836
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "1130": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20825,
        20853
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1132": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20825,
        20853
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1133": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20825,
        20853
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1135": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20825,
        20853
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1136": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20825,
        20853
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1137": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20825,
        20857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1139": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20825,
        20857
      ],
      "op": "ADD",
      "path": "2"
    },
    "1140": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20825,
        20857
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1141": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20825,
        20857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1142": {
      "fn": "Competition.getKeyHash",
      "offset": [
        20708,
        20864
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1143": {
      "fn": "Competition.getRewardsThreshold",
      "offset": [
        18774,
        18928
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1144": {
      "fn": "Competition.getRewardsThreshold",
      "offset": [
        18904,
        18921
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x4"
    },
    "1146": {
      "fn": "Competition.getRewardsThreshold",
      "offset": [
        18904,
        18921
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1147": {
      "fn": "Competition.getRewardsThreshold",
      "offset": [
        18774,
        18928
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "1150": {
      "fn": "Competition.getRewardsThreshold",
      "offset": [
        18774,
        18928
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1151": {
      "offset": [
        161,
        229
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1152": {
      "fn": "Competition.getRewardsThreshold",
      "offset": [
        161,
        229
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x440"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1157": {
      "op": "DUP1"
    },
    "1158": {
      "op": "MLOAD"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1161": {
      "op": "PUSH2",
      "value": "0x45F0"
    },
    "1164": {
      "op": "DUP4"
    },
    "1165": {
      "op": "CODECOPY"
    },
    "1166": {
      "op": "DUP2"
    },
    "1167": {
      "op": "MLOAD"
    },
    "1168": {
      "op": "SWAP2"
    },
    "1169": {
      "op": "MSTORE"
    },
    "1170": {
      "offset": [
        161,
        229
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1171": {
      "fn": "Competition.getRewardsThreshold",
      "offset": [
        161,
        229
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1172": {
      "fn": "Competition.updateMessage",
      "offset": [
        5383,
        5591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1173": {
      "fn": "Competition.updateMessage",
      "offset": [
        5383,
        5591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "1176": {
      "fn": "Competition.updateMessage",
      "offset": [
        5383,
        5591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4A2"
    },
    "1179": {
      "fn": "Competition.updateMessage",
      "offset": [
        5383,
        5591
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1180": {
      "fn": "Competition.updateMessage",
      "offset": [
        5383,
        5591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1182": {
      "fn": "Competition.updateMessage",
      "offset": [
        5383,
        5591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4104"
    },
    "1185": {
      "fn": "Competition.updateMessage",
      "jump": "i",
      "offset": [
        5383,
        5591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1186": {
      "fn": "Competition.updateMessage",
      "offset": [
        5383,
        5591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1187": {
      "fn": "Competition.updateMessage",
      "offset": [
        5383,
        5591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB6E"
    },
    "1190": {
      "fn": "Competition.updateMessage",
      "jump": "i",
      "offset": [
        5383,
        5591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1191": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2185,
        3402
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1192": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2185,
        3402
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "1195": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2185,
        3402
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4B5"
    },
    "1198": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2185,
        3402
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1199": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2185,
        3402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1201": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2185,
        3402
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F3F"
    },
    "1204": {
      "fn": "Competition.decreaseStake",
      "jump": "i",
      "offset": [
        2185,
        3402
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1205": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2185,
        3402
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1206": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2185,
        3402
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBE4"
    },
    "1209": {
      "fn": "Competition.decreaseStake",
      "jump": "i",
      "offset": [
        2185,
        3402
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1210": {
      "fn": "Competition.getCurrentStakingRewardsBudget",
      "offset": [
        19102,
        19300
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1211": {
      "fn": "Competition.getCurrentStakingRewardsBudget",
      "offset": [
        19265,
        19293
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x6"
    },
    "1213": {
      "fn": "Competition.getCurrentStakingRewardsBudget",
      "offset": [
        19265,
        19293
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1214": {
      "fn": "Competition.getCurrentStakingRewardsBudget",
      "offset": [
        19102,
        19300
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "1217": {
      "fn": "Competition.getCurrentStakingRewardsBudget",
      "offset": [
        19102,
        19300
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1218": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4185,
        4306
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1219": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4185,
        4306
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x440"
    },
    "1222": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4185,
        4306
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4D0"
    },
    "1225": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4185,
        4306
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1226": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4185,
        4306
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1228": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4185,
        4306
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4047"
    },
    "1231": {
      "fn": "AccessControl.getRoleAdmin",
      "jump": "i",
      "offset": [
        4185,
        4306
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1232": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4185,
        4306
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1233": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4251,
        4258
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1235": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 4
    },
    "1236": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1237": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1238": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1240": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1241": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1242": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1243": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1245": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1246": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1247": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1249": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "ADD",
      "path": "7"
    },
    "1250": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1251": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1252": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4185,
        4306
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1253": {
      "fn": "Competition.getCurrentTotalStaked",
      "offset": [
        18934,
        19096
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1254": {
      "fn": "Competition.getCurrentTotalStaked",
      "offset": [
        19070,
        19089
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x5"
    },
    "1256": {
      "fn": "Competition.getCurrentTotalStaked",
      "offset": [
        19070,
        19089
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1257": {
      "fn": "Competition.getCurrentTotalStaked",
      "offset": [
        18934,
        19096
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "1260": {
      "fn": "Competition.getCurrentTotalStaked",
      "offset": [
        18934,
        19096
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1261": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        5597,
        5821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1262": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        5597,
        5821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "1265": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        5597,
        5821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4FB"
    },
    "1268": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        5597,
        5821
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1269": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        5597,
        5821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1271": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        5597,
        5821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4384"
    },
    "1274": {
      "fn": "Competition.updateDeadlines",
      "jump": "i",
      "offset": [
        5597,
        5821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1275": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        5597,
        5821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1276": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        5597,
        5821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1020"
    },
    "1279": {
      "fn": "Competition.updateDeadlines",
      "jump": "i",
      "offset": [
        5597,
        5821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1280": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1281": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x513"
    },
    "1284": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x50E"
    },
    "1287": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1288": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1290": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x405F"
    },
    "1293": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4556,
        4784
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1294": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1295": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1087"
    },
    "1298": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4556,
        4784
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1299": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1300": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "STOP",
      "path": "7"
    },
    "1301": {
      "fn": "Competition.submitResults",
      "offset": [
        11185,
        11358
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1302": {
      "fn": "Competition.submitResults",
      "offset": [
        11185,
        11358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "1305": {
      "fn": "Competition.submitResults",
      "offset": [
        11185,
        11358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x523"
    },
    "1308": {
      "fn": "Competition.submitResults",
      "offset": [
        11185,
        11358
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1309": {
      "fn": "Competition.submitResults",
      "offset": [
        11185,
        11358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1311": {
      "fn": "Competition.submitResults",
      "offset": [
        11185,
        11358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4047"
    },
    "1314": {
      "fn": "Competition.submitResults",
      "jump": "i",
      "offset": [
        11185,
        11358
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1315": {
      "fn": "Competition.submitResults",
      "offset": [
        11185,
        11358
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1316": {
      "fn": "Competition.submitResults",
      "offset": [
        11185,
        11358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1116"
    },
    "1319": {
      "fn": "Competition.submitResults",
      "jump": "i",
      "offset": [
        11185,
        11358
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1320": {
      "fn": "Competition.getCurrentTournamentRewardsBudget",
      "offset": [
        19518,
        19728
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1321": {
      "fn": "Competition.getCurrentTournamentRewardsBudget",
      "offset": [
        19690,
        19721
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x8"
    },
    "1323": {
      "fn": "Competition.getCurrentTournamentRewardsBudget",
      "offset": [
        19690,
        19721
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1324": {
      "fn": "Competition.getCurrentTournamentRewardsBudget",
      "offset": [
        19518,
        19728
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "1327": {
      "fn": "Competition.getCurrentTournamentRewardsBudget",
      "offset": [
        19518,
        19728
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1328": {
      "fn": "Competition.getStakeThreshold",
      "offset": [
        21959,
        22105
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1329": {
      "fn": "Competition.getStakeThreshold",
      "offset": [
        22083,
        22098
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 7,
      "value": "0x2"
    },
    "1331": {
      "fn": "Competition.getStakeThreshold",
      "offset": [
        22083,
        22098
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1332": {
      "fn": "Competition.getStakeThreshold",
      "offset": [
        21959,
        22105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "1335": {
      "fn": "Competition.getStakeThreshold",
      "offset": [
        21959,
        22105
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1336": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5740,
        5954
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1337": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5740,
        5954
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x513"
    },
    "1340": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5740,
        5954
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x546"
    },
    "1343": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5740,
        5954
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1344": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5740,
        5954
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1346": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5740,
        5954
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x405F"
    },
    "1349": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5740,
        5954
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1350": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5740,
        5954
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1351": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5740,
        5954
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1157"
    },
    "1354": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5740,
        5954
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1355": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18072,
        18578
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1356": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18072,
        18578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "1359": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18072,
        18578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11D1"
    },
    "1362": {
      "fn": "Competition.moveRemainderToPool",
      "jump": "i",
      "offset": [
        18072,
        18578
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1363": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20352,
        20524
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1364": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20352,
        20524
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "1367": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20352,
        20524
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x561"
    },
    "1370": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20352,
        20524
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1371": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20352,
        20524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1373": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20352,
        20524
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41BD"
    },
    "1376": {
      "fn": "Competition.getDatasetHash",
      "jump": "i",
      "offset": [
        20352,
        20524
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1377": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20352,
        20524
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1378": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20481,
        20509
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 8,
      "value": "0xFFFFFFFF"
    },
    "1383": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20481,
        20509
      ],
      "op": "AND",
      "path": "2"
    },
    "1384": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20440,
        20455
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1386": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20481,
        20509
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1387": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20481,
        20509
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1388": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20481,
        20509
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1389": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20481,
        20492
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "1391": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20481,
        20509
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1393": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20481,
        20509
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1394": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20481,
        20509
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1396": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20481,
        20509
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1397": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20481,
        20509
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1398": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20481,
        20517
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1399": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20481,
        20517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1400": {
      "fn": "Competition.getDatasetHash",
      "offset": [
        20352,
        20524
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1401": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        16794,
        17545
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1402": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        16794,
        17545
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "1405": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        16794,
        17545
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x587"
    },
    "1408": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        16794,
        17545
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1409": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        16794,
        17545
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1411": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        16794,
        17545
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x42E2"
    },
    "1414": {
      "fn": "Competition.updateInformationBatch",
      "jump": "i",
      "offset": [
        16794,
        17545
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1415": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        16794,
        17545
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1416": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        16794,
        17545
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1393"
    },
    "1419": {
      "fn": "Competition.updateInformationBatch",
      "jump": "i",
      "offset": [
        16794,
        17545
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1420": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23134,
        23386
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1421": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23134,
        23386
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "1424": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23134,
        23386
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x59A"
    },
    "1427": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23134,
        23386
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1428": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23134,
        23386
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1430": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23134,
        23386
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41D7"
    },
    "1433": {
      "fn": "Competition.getChallengeRewards",
      "jump": "i",
      "offset": [
        23134,
        23386
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1434": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23134,
        23386
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1435": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23335
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 9,
      "value": "0xFFFFFFFF"
    },
    "1440": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23335
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1441": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23335
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1442": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23335
      ],
      "op": "AND",
      "path": "2"
    },
    "1443": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23248,
        23272
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1445": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23335
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1446": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23335
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1447": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23335
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1448": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23318
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "1450": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23335
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1452": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23335
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1453": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23335
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1454": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23335
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1455": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23335
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1457": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23335
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1458": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23335
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1459": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23335
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1466": {
      "op": "SHL"
    },
    "1467": {
      "op": "SUB"
    },
    "1468": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23362
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1469": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23362
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1470": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23362
      ],
      "op": "AND",
      "path": "2"
    },
    "1471": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23362
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1472": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23362
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1473": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23349
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1475": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23349
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1476": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23349
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1477": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23349
      ],
      "op": "ADD",
      "path": "2"
    },
    "1478": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23362
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1479": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23362
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1480": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23362
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1481": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23379
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1483": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23379
      ],
      "op": "ADD",
      "path": "2"
    },
    "1484": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23379
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1485": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23307,
        23379
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1486": {
      "fn": "Competition.getChallengeRewards",
      "offset": [
        23134,
        23386
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1487": {
      "fn": "Competition.updateDataset",
      "offset": [
        8710,
        9208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1488": {
      "fn": "Competition.updateDataset",
      "offset": [
        8710,
        9208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "1491": {
      "fn": "Competition.updateDataset",
      "offset": [
        8710,
        9208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5DD"
    },
    "1494": {
      "fn": "Competition.updateDataset",
      "offset": [
        8710,
        9208
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1495": {
      "fn": "Competition.updateDataset",
      "offset": [
        8710,
        9208
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1497": {
      "fn": "Competition.updateDataset",
      "offset": [
        8710,
        9208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x408A"
    },
    "1500": {
      "fn": "Competition.updateDataset",
      "jump": "i",
      "offset": [
        8710,
        9208
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1501": {
      "fn": "Competition.updateDataset",
      "offset": [
        8710,
        9208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1502": {
      "fn": "Competition.updateDataset",
      "offset": [
        8710,
        9208
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x160A"
    },
    "1505": {
      "fn": "Competition.updateDataset",
      "jump": "i",
      "offset": [
        8710,
        9208
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1506": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        20870,
        21054
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1507": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        20870,
        21054
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "1510": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        20870,
        21054
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5F0"
    },
    "1513": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        20870,
        21054
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1514": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        20870,
        21054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1516": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        20870,
        21054
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41BD"
    },
    "1519": {
      "fn": "Competition.getPrivateKeyHash",
      "jump": "i",
      "offset": [
        20870,
        21054
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1520": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        20870,
        21054
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1521": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        21008,
        21036
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 10,
      "value": "0xFFFFFFFF"
    },
    "1526": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        21008,
        21036
      ],
      "op": "AND",
      "path": "2"
    },
    "1527": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        20961,
        20979
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1529": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        21008,
        21036
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1530": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        21008,
        21036
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1531": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        21008,
        21036
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1532": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        21008,
        21019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "1534": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        21008,
        21036
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1536": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        21008,
        21036
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1537": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        21008,
        21036
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1539": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        21008,
        21036
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1540": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        21008,
        21036
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1541": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        21008,
        21047
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1543": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        21008,
        21047
      ],
      "op": "ADD",
      "path": "2"
    },
    "1544": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        21008,
        21047
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1545": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        21008,
        21047
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1546": {
      "fn": "Competition.getPrivateKeyHash",
      "offset": [
        20870,
        21054
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1547": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21289,
        21789
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1548": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21289,
        21789
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x61E"
    },
    "1551": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21289,
        21789
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x619"
    },
    "1554": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21289,
        21789
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1555": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21289,
        21789
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1557": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21289,
        21789
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4384"
    },
    "1560": {
      "fn": "Competition.getSubmitters",
      "jump": "i",
      "offset": [
        21289,
        21789
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1561": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21289,
        21789
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1562": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21289,
        21789
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x174F"
    },
    "1565": {
      "fn": "Competition.getSubmitters",
      "jump": "i",
      "offset": [
        21289,
        21789
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1566": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21289,
        21789
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1567": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21289,
        21789
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1569": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21289,
        21789
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1570": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21289,
        21789
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F4"
    },
    "1573": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21289,
        21789
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1574": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21289,
        21789
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1575": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21289,
        21789
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43D7"
    },
    "1578": {
      "fn": "Competition.getSubmitters",
      "jump": "i",
      "offset": [
        21289,
        21789
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1579": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6058,
        6301
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1580": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6058,
        6301
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "1583": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6058,
        6301
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x639"
    },
    "1586": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6058,
        6301
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1587": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6058,
        6301
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1589": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6058,
        6301
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4047"
    },
    "1592": {
      "fn": "Competition.updateRewardsThreshold",
      "jump": "i",
      "offset": [
        6058,
        6301
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1593": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6058,
        6301
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1594": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6058,
        6301
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x183A"
    },
    "1597": {
      "fn": "Competition.updateRewardsThreshold",
      "jump": "i",
      "offset": [
        6058,
        6301
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1598": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24839,
        25035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1599": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24839,
        25035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "1602": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24839,
        25035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64C"
    },
    "1605": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24839,
        25035
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1606": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24839,
        25035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1608": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24839,
        25035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4369"
    },
    "1611": {
      "fn": "Competition.getDeadlines",
      "jump": "i",
      "offset": [
        24839,
        25035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1612": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24839,
        25035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1613": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25011
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 11,
      "value": "0xFFFFFFFF"
    },
    "1618": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25011
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1619": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25011
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1620": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25011
      ],
      "op": "AND",
      "path": "2"
    },
    "1621": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24940,
        24956
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1623": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25011
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1624": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25011
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1625": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25011
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1626": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        24994
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "1628": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1630": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25011
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1631": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25011
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1632": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25011
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1633": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1635": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25011
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1636": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25011
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1637": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25011
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1638": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25028
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1639": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25028
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1640": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25028
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1641": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25021
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "1643": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25021
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1644": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25021
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1645": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25021
      ],
      "op": "ADD",
      "path": "2"
    },
    "1646": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25028
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1647": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25028
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1648": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25028
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1649": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25028
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1650": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24983,
        25028
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1651": {
      "fn": "Competition.getDeadlines",
      "offset": [
        24839,
        25035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1652": {
      "fn": "Competition.increaseStake",
      "offset": [
        1295,
        2179
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1653": {
      "fn": "Competition.increaseStake",
      "offset": [
        1295,
        2179
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "1656": {
      "fn": "Competition.increaseStake",
      "offset": [
        1295,
        2179
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x682"
    },
    "1659": {
      "fn": "Competition.increaseStake",
      "offset": [
        1295,
        2179
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1660": {
      "fn": "Competition.increaseStake",
      "offset": [
        1295,
        2179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1662": {
      "fn": "Competition.increaseStake",
      "offset": [
        1295,
        2179
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F3F"
    },
    "1665": {
      "fn": "Competition.increaseStake",
      "jump": "i",
      "offset": [
        1295,
        2179
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1666": {
      "fn": "Competition.increaseStake",
      "offset": [
        1295,
        2179
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1667": {
      "fn": "Competition.increaseStake",
      "offset": [
        1295,
        2179
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18A9"
    },
    "1670": {
      "fn": "Competition.increaseStake",
      "jump": "i",
      "offset": [
        1295,
        2179
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1671": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        6862,
        7156
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1672": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        6862,
        7156
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "1675": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        6862,
        7156
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x695"
    },
    "1678": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        6862,
        7156
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1679": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        6862,
        7156
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1681": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        6862,
        7156
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4047"
    },
    "1684": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "jump": "i",
      "offset": [
        6862,
        7156
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1685": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        6862,
        7156
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1686": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        6862,
        7156
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B11"
    },
    "1689": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "jump": "i",
      "offset": [
        6862,
        7156
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1690": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6307,
        6559
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1691": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6307,
        6559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "1694": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6307,
        6559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A8"
    },
    "1697": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6307,
        6559
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1698": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6307,
        6559
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1700": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6307,
        6559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4047"
    },
    "1703": {
      "fn": "Competition.updateStakeThreshold",
      "jump": "i",
      "offset": [
        6307,
        6559
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1704": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6307,
        6559
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1705": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6307,
        6559
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B80"
    },
    "1708": {
      "fn": "Competition.updateStakeThreshold",
      "jump": "i",
      "offset": [
        6307,
        6559
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1709": {
      "fn": "Competition.getSubmission",
      "offset": [
        22406,
        22642
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1710": {
      "fn": "Competition.getSubmission",
      "offset": [
        22406,
        22642
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "1713": {
      "fn": "Competition.getSubmission",
      "offset": [
        22406,
        22642
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BB"
    },
    "1716": {
      "fn": "Competition.getSubmission",
      "offset": [
        22406,
        22642
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1717": {
      "fn": "Competition.getSubmission",
      "offset": [
        22406,
        22642
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1719": {
      "fn": "Competition.getSubmission",
      "offset": [
        22406,
        22642
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41D7"
    },
    "1722": {
      "fn": "Competition.getSubmission",
      "jump": "i",
      "offset": [
        22406,
        22642
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1723": {
      "fn": "Competition.getSubmission",
      "offset": [
        22406,
        22642
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1724": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22597
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 12,
      "value": "0xFFFFFFFF"
    },
    "1729": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22597
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1730": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22597
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1731": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22597
      ],
      "op": "AND",
      "path": "2"
    },
    "1732": {
      "fn": "Competition.getSubmission",
      "offset": [
        22514,
        22536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1734": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22597
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1735": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22597
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1736": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22597
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1737": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22580
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "1739": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1741": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22597
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1742": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22597
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1743": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22597
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1744": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22597
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1746": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22597
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1747": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22597
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1748": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22597
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1755": {
      "op": "SHL"
    },
    "1756": {
      "op": "SUB"
    },
    "1757": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22624
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1758": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22624
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1759": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22624
      ],
      "op": "AND",
      "path": "2"
    },
    "1760": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22624
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1761": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22624
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1762": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22611
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1764": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22611
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1765": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22611
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1766": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22611
      ],
      "op": "ADD",
      "path": "2"
    },
    "1767": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22624
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1768": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22624
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1769": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22624
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1770": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22635
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1771": {
      "fn": "Competition.getSubmission",
      "offset": [
        22569,
        22635
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1772": {
      "fn": "Competition.getSubmission",
      "offset": [
        22406,
        22642
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1773": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        22884,
        23128
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1774": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        22884,
        23128
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "1777": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        22884,
        23128
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6FB"
    },
    "1780": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        22884,
        23128
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1781": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        22884,
        23128
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1783": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        22884,
        23128
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41D7"
    },
    "1786": {
      "fn": "Competition.getStakingRewards",
      "jump": "i",
      "offset": [
        22884,
        23128
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1787": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        22884,
        23128
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1788": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23079
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 13,
      "value": "0xFFFFFFFF"
    },
    "1793": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23079
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1794": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23079
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1795": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23079
      ],
      "op": "AND",
      "path": "2"
    },
    "1796": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        22996,
        23018
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1798": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23079
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1799": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23079
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1800": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23079
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1801": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23062
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "1803": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1805": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23079
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1806": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23079
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1807": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23079
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1808": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1810": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23079
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1811": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23079
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1812": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23079
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1819": {
      "op": "SHL"
    },
    "1820": {
      "op": "SUB"
    },
    "1821": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23106
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1822": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23106
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1823": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23106
      ],
      "op": "AND",
      "path": "2"
    },
    "1824": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23106
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1825": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23106
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1826": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23093
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1828": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23093
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1829": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23093
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1830": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23093
      ],
      "op": "ADD",
      "path": "2"
    },
    "1831": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23106
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1832": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23106
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1833": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23106
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1834": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23121
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1836": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23121
      ],
      "op": "ADD",
      "path": "2"
    },
    "1837": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23121
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1838": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        23051,
        23121
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1839": {
      "fn": "Competition.getStakingRewards",
      "offset": [
        22884,
        23128
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1840": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        20178,
        20346
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1841": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        20322,
        20339
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 14,
      "value": "0x1"
    },
    "1843": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        20322,
        20339
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1848": {
      "op": "SHL"
    },
    "1849": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        20322,
        20339
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1850": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        20322,
        20339
      ],
      "op": "DIV",
      "path": "2"
    },
    "1851": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        20322,
        20339
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "1856": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        20322,
        20339
      ],
      "op": "AND",
      "path": "2"
    },
    "1857": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        20178,
        20346
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1858": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        20178,
        20346
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1860": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        20178,
        20346
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1861": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1866": {
      "op": "SWAP1"
    },
    "1867": {
      "op": "SWAP2"
    },
    "1868": {
      "op": "AND"
    },
    "1869": {
      "op": "DUP2"
    },
    "1870": {
      "op": "MSTORE"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1873": {
      "op": "ADD"
    },
    "1874": {
      "fn": "Competition.getLatestChallengeNumber",
      "offset": [
        20178,
        20346
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F4"
    },
    "1877": {
      "op": "JUMP"
    },
    "1878": {
      "fn": "Competition.updateKey",
      "offset": [
        9214,
        9672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1879": {
      "fn": "Competition.updateKey",
      "offset": [
        9214,
        9672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "1882": {
      "fn": "Competition.updateKey",
      "offset": [
        9214,
        9672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x764"
    },
    "1885": {
      "fn": "Competition.updateKey",
      "offset": [
        9214,
        9672
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1886": {
      "fn": "Competition.updateKey",
      "offset": [
        9214,
        9672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1888": {
      "fn": "Competition.updateKey",
      "offset": [
        9214,
        9672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x408A"
    },
    "1891": {
      "fn": "Competition.updateKey",
      "jump": "i",
      "offset": [
        9214,
        9672
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1892": {
      "fn": "Competition.updateKey",
      "offset": [
        9214,
        9672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1893": {
      "fn": "Competition.updateKey",
      "offset": [
        9214,
        9672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BEF"
    },
    "1896": {
      "fn": "Competition.updateKey",
      "jump": "i",
      "offset": [
        9214,
        9672
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1897": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24333,
        24585
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1898": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24333,
        24585
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "1901": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24333,
        24585
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x777"
    },
    "1904": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24333,
        24585
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1905": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24333,
        24585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1907": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24333,
        24585
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41D7"
    },
    "1910": {
      "fn": "Competition.getTournamentScores",
      "jump": "i",
      "offset": [
        24333,
        24585
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1911": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24333,
        24585
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1912": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24534
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 15,
      "value": "0xFFFFFFFF"
    },
    "1917": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24534
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1918": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24534
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1919": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24534
      ],
      "op": "AND",
      "path": "2"
    },
    "1920": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24447,
        24471
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1922": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24534
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1923": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24534
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1924": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24534
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1925": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "1927": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24534
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1929": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24534
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1930": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24534
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1931": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24534
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1932": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24534
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1934": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24534
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1935": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24534
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1936": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24534
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1943": {
      "op": "SHL"
    },
    "1944": {
      "op": "SUB"
    },
    "1945": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24561
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1946": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24561
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1947": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24561
      ],
      "op": "AND",
      "path": "2"
    },
    "1948": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24561
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1949": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24561
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1950": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24548
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1952": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24548
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1953": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24548
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1954": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24548
      ],
      "op": "ADD",
      "path": "2"
    },
    "1955": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24561
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1956": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24561
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1957": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24561
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1958": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "1960": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24578
      ],
      "op": "ADD",
      "path": "2"
    },
    "1961": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24578
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1962": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24506,
        24578
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1963": {
      "fn": "Competition.getTournamentScores",
      "offset": [
        24333,
        24585
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1964": {
      "fn": "Competition.getStake",
      "offset": [
        22111,
        22254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1965": {
      "fn": "Competition.getStake",
      "offset": [
        22111,
        22254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "1968": {
      "fn": "Competition.getStake",
      "offset": [
        22111,
        22254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7BA"
    },
    "1971": {
      "fn": "Competition.getStake",
      "offset": [
        22111,
        22254
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1972": {
      "fn": "Competition.getStake",
      "offset": [
        22111,
        22254
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1974": {
      "fn": "Competition.getStake",
      "offset": [
        22111,
        22254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F25"
    },
    "1977": {
      "fn": "Competition.getStake",
      "jump": "i",
      "offset": [
        22111,
        22254
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1978": {
      "fn": "Competition.getStake",
      "offset": [
        22111,
        22254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1985": {
      "op": "SHL"
    },
    "1986": {
      "op": "SUB"
    },
    "1987": {
      "fn": "Competition.getStake",
      "offset": [
        22227,
        22247
      ],
      "op": "AND",
      "path": "2",
      "statement": 16
    },
    "1988": {
      "fn": "Competition.getStake",
      "offset": [
        22190,
        22203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1990": {
      "fn": "Competition.getStake",
      "offset": [
        22227,
        22247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1991": {
      "fn": "Competition.getStake",
      "offset": [
        22227,
        22247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1992": {
      "fn": "Competition.getStake",
      "offset": [
        22227,
        22247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1993": {
      "fn": "Competition.getStake",
      "offset": [
        22227,
        22234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "1995": {
      "fn": "Competition.getStake",
      "offset": [
        22227,
        22247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1997": {
      "fn": "Competition.getStake",
      "offset": [
        22227,
        22247
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1998": {
      "fn": "Competition.getStake",
      "offset": [
        22227,
        22247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2000": {
      "fn": "Competition.getStake",
      "offset": [
        22227,
        22247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2001": {
      "fn": "Competition.getStake",
      "offset": [
        22227,
        22247
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2002": {
      "fn": "Competition.getStake",
      "offset": [
        22227,
        22247
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2003": {
      "fn": "Competition.getStake",
      "offset": [
        22227,
        22247
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2004": {
      "fn": "Competition.getStake",
      "offset": [
        22111,
        22254
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2005": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6565,
        6856
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2006": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6565,
        6856
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "2009": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6565,
        6856
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E3"
    },
    "2012": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6565,
        6856
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2013": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6565,
        6856
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2015": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6565,
        6856
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4047"
    },
    "2018": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "jump": "i",
      "offset": [
        6565,
        6856
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2019": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6565,
        6856
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2020": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6565,
        6856
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D27"
    },
    "2023": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "jump": "i",
      "offset": [
        6565,
        6856
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2024": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3867,
        4004
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2025": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3867,
        4004
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3E8"
    },
    "2028": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3867,
        4004
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7F6"
    },
    "2031": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3867,
        4004
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "2032": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3867,
        4004
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2034": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3867,
        4004
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x405F"
    },
    "2037": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        3867,
        4004
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2038": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3867,
        4004
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2039": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3867,
        4004
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D96"
    },
    "2042": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        3867,
        4004
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2043": {
      "fn": "Competition.getTournamentRewardsPercentageInWei",
      "offset": [
        19954,
        20172
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2044": {
      "fn": "Competition.getTournamentRewardsPercentageInWei",
      "offset": [
        20132,
        20165
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 17,
      "value": "0xA"
    },
    "2046": {
      "fn": "Competition.getTournamentRewardsPercentageInWei",
      "offset": [
        20132,
        20165
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2047": {
      "fn": "Competition.getTournamentRewardsPercentageInWei",
      "offset": [
        19954,
        20172
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "2050": {
      "fn": "Competition.getTournamentRewardsPercentageInWei",
      "offset": [
        19954,
        20172
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2051": {
      "fn": "Competition.getChallengeRewardsPercentageInWei",
      "offset": [
        19734,
        19948
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2052": {
      "fn": "Competition.getChallengeRewardsPercentageInWei",
      "offset": [
        19909,
        19941
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 18,
      "value": "0x9"
    },
    "2054": {
      "fn": "Competition.getChallengeRewardsPercentageInWei",
      "offset": [
        19909,
        19941
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2055": {
      "fn": "Competition.getChallengeRewardsPercentageInWei",
      "offset": [
        19734,
        19948
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "2058": {
      "fn": "Competition.getChallengeRewardsPercentageInWei",
      "offset": [
        19734,
        19948
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2059": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23654,
        24073
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2060": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23654,
        24073
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "2063": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23654,
        24073
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x819"
    },
    "2066": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23654,
        24073
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2067": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23654,
        24073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2069": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23654,
        24073
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41D7"
    },
    "2072": {
      "fn": "Competition.getOverallRewards",
      "jump": "i",
      "offset": [
        23654,
        24073
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2073": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23654,
        24073
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2074": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23654,
        24073
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DBF"
    },
    "2077": {
      "fn": "Competition.getOverallRewards",
      "jump": "i",
      "offset": [
        23654,
        24073
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2078": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3408,
        3932
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2079": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3408,
        3932
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x741"
    },
    "2082": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3408,
        3932
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82C"
    },
    "2085": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3408,
        3932
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2086": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3408,
        3932
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2088": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3408,
        3932
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4047"
    },
    "2091": {
      "fn": "Competition.submitNewPredictions",
      "jump": "i",
      "offset": [
        3408,
        3932
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2092": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3408,
        3932
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2093": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3408,
        3932
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E17"
    },
    "2096": {
      "fn": "Competition.submitNewPredictions",
      "jump": "i",
      "offset": [
        3408,
        3932
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2097": {
      "offset": [
        2363,
        2412
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2098": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        2363,
        2412
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x440"
    },
    "2101": {
      "offset": [
        2408,
        2412
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2103": {
      "offset": [
        2363,
        2412
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2104": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        2363,
        2412
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2105": {
      "fn": "Competition.initialize",
      "offset": [
        691,
        1242
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2106": {
      "fn": "Competition.initialize",
      "offset": [
        691,
        1242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x513"
    },
    "2109": {
      "fn": "Competition.initialize",
      "offset": [
        691,
        1242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x847"
    },
    "2112": {
      "fn": "Competition.initialize",
      "offset": [
        691,
        1242
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2113": {
      "fn": "Competition.initialize",
      "offset": [
        691,
        1242
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2115": {
      "fn": "Competition.initialize",
      "offset": [
        691,
        1242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4189"
    },
    "2118": {
      "fn": "Competition.initialize",
      "jump": "i",
      "offset": [
        691,
        1242
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2119": {
      "fn": "Competition.initialize",
      "offset": [
        691,
        1242
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2120": {
      "fn": "Competition.initialize",
      "offset": [
        691,
        1242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EFC"
    },
    "2123": {
      "fn": "Competition.initialize",
      "jump": "i",
      "offset": [
        691,
        1242
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2124": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23392,
        23648
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2125": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23392,
        23648
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "2128": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23392,
        23648
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x85A"
    },
    "2131": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23392,
        23648
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2132": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23392,
        23648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2134": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23392,
        23648
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41D7"
    },
    "2137": {
      "fn": "Competition.getTournamentRewards",
      "jump": "i",
      "offset": [
        23392,
        23648
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2138": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23392,
        23648
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2139": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23596
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 19,
      "value": "0xFFFFFFFF"
    },
    "2144": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23596
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2145": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23596
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2146": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23596
      ],
      "op": "AND",
      "path": "2"
    },
    "2147": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23507,
        23532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2149": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23596
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2150": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2151": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2152": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23579
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "2154": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2156": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23596
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2157": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2158": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2159": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23596
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2161": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23596
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2162": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23596
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2163": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23596
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2170": {
      "op": "SHL"
    },
    "2171": {
      "op": "SUB"
    },
    "2172": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23623
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2173": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23623
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2174": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23623
      ],
      "op": "AND",
      "path": "2"
    },
    "2175": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23623
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2176": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23623
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2177": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23610
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2179": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23610
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2180": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23610
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2181": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23610
      ],
      "op": "ADD",
      "path": "2"
    },
    "2182": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23623
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2183": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23623
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2184": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23623
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2185": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23641
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2187": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23641
      ],
      "op": "ADD",
      "path": "2"
    },
    "2188": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23641
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2189": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23568,
        23641
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2190": {
      "fn": "Competition.getTournamentRewards",
      "offset": [
        23392,
        23648
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2191": {
      "fn": "Competition.getPhase",
      "offset": [
        21795,
        21953
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2192": {
      "fn": "Competition.getPhase",
      "offset": [
        21795,
        21953
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8BB"
    },
    "2195": {
      "fn": "Competition.getPhase",
      "offset": [
        21795,
        21953
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x89D"
    },
    "2198": {
      "fn": "Competition.getPhase",
      "offset": [
        21795,
        21953
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2199": {
      "fn": "Competition.getPhase",
      "offset": [
        21795,
        21953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2201": {
      "fn": "Competition.getPhase",
      "offset": [
        21795,
        21953
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41BD"
    },
    "2204": {
      "fn": "Competition.getPhase",
      "jump": "i",
      "offset": [
        21795,
        21953
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2205": {
      "fn": "Competition.getPhase",
      "offset": [
        21795,
        21953
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2206": {
      "fn": "Competition.getPhase",
      "offset": [
        21912,
        21940
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 20,
      "value": "0xFFFFFFFF"
    },
    "2211": {
      "fn": "Competition.getPhase",
      "offset": [
        21912,
        21940
      ],
      "op": "AND",
      "path": "2"
    },
    "2212": {
      "fn": "Competition.getPhase",
      "offset": [
        21877,
        21888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2214": {
      "fn": "Competition.getPhase",
      "offset": [
        21912,
        21940
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2215": {
      "fn": "Competition.getPhase",
      "offset": [
        21912,
        21940
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2216": {
      "fn": "Competition.getPhase",
      "offset": [
        21912,
        21940
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2217": {
      "fn": "Competition.getPhase",
      "offset": [
        21912,
        21923
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "2219": {
      "fn": "Competition.getPhase",
      "offset": [
        21912,
        21940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2221": {
      "fn": "Competition.getPhase",
      "offset": [
        21912,
        21940
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2222": {
      "fn": "Competition.getPhase",
      "offset": [
        21912,
        21940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2224": {
      "fn": "Competition.getPhase",
      "offset": [
        21912,
        21940
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2225": {
      "fn": "Competition.getPhase",
      "offset": [
        21912,
        21940
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2226": {
      "fn": "Competition.getPhase",
      "offset": [
        21912,
        21946
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2228": {
      "fn": "Competition.getPhase",
      "offset": [
        21912,
        21946
      ],
      "op": "ADD",
      "path": "2"
    },
    "2229": {
      "fn": "Competition.getPhase",
      "offset": [
        21912,
        21946
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2230": {
      "fn": "Competition.getPhase",
      "offset": [
        21912,
        21946
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2232": {
      "fn": "Competition.getPhase",
      "offset": [
        21912,
        21946
      ],
      "op": "AND",
      "path": "2"
    },
    "2233": {
      "fn": "Competition.getPhase",
      "offset": [
        21912,
        21946
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2234": {
      "fn": "Competition.getPhase",
      "offset": [
        21795,
        21953
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2235": {
      "fn": "Competition.getPhase",
      "offset": [
        21795,
        21953
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2236": {
      "fn": "Competition.getPhase",
      "offset": [
        21795,
        21953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2238": {
      "fn": "Competition.getPhase",
      "offset": [
        21795,
        21953
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2241": {
      "op": "SWAP1"
    },
    "2242": {
      "op": "SWAP2"
    },
    "2243": {
      "op": "AND"
    },
    "2244": {
      "op": "DUP2"
    },
    "2245": {
      "op": "MSTORE"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2248": {
      "op": "ADD"
    },
    "2249": {
      "fn": "Competition.getPhase",
      "offset": [
        21795,
        21953
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F4"
    },
    "2252": {
      "op": "JUMP"
    },
    "2253": {
      "fn": "Competition.sponsor",
      "offset": [
        25433,
        25955
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2254": {
      "fn": "Competition.sponsor",
      "offset": [
        25433,
        25955
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "2257": {
      "fn": "Competition.sponsor",
      "offset": [
        25433,
        25955
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8DB"
    },
    "2260": {
      "fn": "Competition.sponsor",
      "offset": [
        25433,
        25955
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2261": {
      "fn": "Competition.sponsor",
      "offset": [
        25433,
        25955
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2263": {
      "fn": "Competition.sponsor",
      "offset": [
        25433,
        25955
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4047"
    },
    "2266": {
      "fn": "Competition.sponsor",
      "jump": "i",
      "offset": [
        25433,
        25955
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2267": {
      "fn": "Competition.sponsor",
      "offset": [
        25433,
        25955
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2268": {
      "fn": "Competition.sponsor",
      "offset": [
        25433,
        25955
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2077"
    },
    "2271": {
      "fn": "Competition.sponsor",
      "jump": "i",
      "offset": [
        25433,
        25955
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2272": {
      "fn": "Competition.updateResults",
      "offset": [
        11364,
        11682
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2273": {
      "fn": "Competition.updateResults",
      "offset": [
        11364,
        11682
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "2276": {
      "fn": "Competition.updateResults",
      "offset": [
        11364,
        11682
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8EE"
    },
    "2279": {
      "fn": "Competition.updateResults",
      "offset": [
        11364,
        11682
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2280": {
      "fn": "Competition.updateResults",
      "offset": [
        11364,
        11682
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2282": {
      "fn": "Competition.updateResults",
      "offset": [
        11364,
        11682
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x408A"
    },
    "2285": {
      "fn": "Competition.updateResults",
      "jump": "i",
      "offset": [
        11364,
        11682
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2286": {
      "fn": "Competition.updateResults",
      "offset": [
        11364,
        11682
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2287": {
      "fn": "Competition.updateResults",
      "offset": [
        11364,
        11682
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2206"
    },
    "2290": {
      "fn": "Competition.updateResults",
      "jump": "i",
      "offset": [
        11364,
        11682
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2291": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21060,
        21283
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2292": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21060,
        21283
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "2295": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21060,
        21283
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x901"
    },
    "2298": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21060,
        21283
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2299": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21060,
        21283
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2301": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21060,
        21283
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41BD"
    },
    "2304": {
      "fn": "Competition.getSubmissionCounter",
      "jump": "i",
      "offset": [
        21060,
        21283
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2305": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21060,
        21283
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2306": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21060,
        21283
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B9"
    },
    "2309": {
      "fn": "Competition.getSubmissionCounter",
      "jump": "i",
      "offset": [
        21060,
        21283
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2310": {
      "fn": "Competition.getMessage",
      "offset": [
        25233,
        25357
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2311": {
      "fn": "Competition.getMessage",
      "offset": [
        25233,
        25357
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x90E"
    },
    "2314": {
      "fn": "Competition.getMessage",
      "offset": [
        25233,
        25357
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22DA"
    },
    "2317": {
      "fn": "Competition.getMessage",
      "jump": "i",
      "offset": [
        25233,
        25357
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2318": {
      "fn": "Competition.getMessage",
      "offset": [
        25233,
        25357
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2319": {
      "fn": "Competition.getMessage",
      "offset": [
        25233,
        25357
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2321": {
      "fn": "Competition.getMessage",
      "offset": [
        25233,
        25357
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2322": {
      "fn": "Competition.getMessage",
      "offset": [
        25233,
        25357
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F4"
    },
    "2325": {
      "fn": "Competition.getMessage",
      "offset": [
        25233,
        25357
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2326": {
      "fn": "Competition.getMessage",
      "offset": [
        25233,
        25357
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2327": {
      "fn": "Competition.getMessage",
      "offset": [
        25233,
        25357
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4424"
    },
    "2330": {
      "fn": "Competition.getMessage",
      "jump": "i",
      "offset": [
        25233,
        25357
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2331": {
      "fn": "Competition.payRewards",
      "offset": [
        12419,
        12765
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2332": {
      "fn": "Competition.payRewards",
      "offset": [
        12419,
        12765
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "2335": {
      "fn": "Competition.payRewards",
      "offset": [
        12419,
        12765
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x929"
    },
    "2338": {
      "fn": "Competition.payRewards",
      "offset": [
        12419,
        12765
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2339": {
      "fn": "Competition.payRewards",
      "offset": [
        12419,
        12765
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2341": {
      "fn": "Competition.payRewards",
      "offset": [
        12419,
        12765
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F68"
    },
    "2344": {
      "fn": "Competition.payRewards",
      "jump": "i",
      "offset": [
        12419,
        12765
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2345": {
      "fn": "Competition.payRewards",
      "offset": [
        12419,
        12765
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2346": {
      "fn": "Competition.payRewards",
      "offset": [
        12419,
        12765
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x236C"
    },
    "2349": {
      "fn": "Competition.payRewards",
      "jump": "i",
      "offset": [
        12419,
        12765
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2350": {
      "fn": "Competition.getCompetitionPool",
      "offset": [
        18618,
        18768
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2351": {
      "fn": "Competition.getCompetitionPool",
      "offset": [
        18745,
        18761
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 21,
      "value": "0x3"
    },
    "2353": {
      "fn": "Competition.getCompetitionPool",
      "offset": [
        18745,
        18761
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2354": {
      "fn": "Competition.getCompetitionPool",
      "offset": [
        18618,
        18768
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "2357": {
      "fn": "Competition.getCompetitionPool",
      "offset": [
        18618,
        18768
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2358": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5018,
        5249
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2359": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5018,
        5249
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x513"
    },
    "2362": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5018,
        5249
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x944"
    },
    "2365": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5018,
        5249
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "2366": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5018,
        5249
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2368": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5018,
        5249
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x405F"
    },
    "2371": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5018,
        5249
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2372": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5018,
        5249
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2373": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5018,
        5249
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x23D0"
    },
    "2376": {
      "fn": "AccessControl.revokeRole",
      "jump": "i",
      "offset": [
        5018,
        5249
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2377": {
      "fn": "Competition.getCurrentChallengeRewardsBudget",
      "offset": [
        19306,
        19512
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2378": {
      "fn": "Competition.getCurrentChallengeRewardsBudget",
      "offset": [
        19475,
        19505
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 22,
      "value": "0x7"
    },
    "2380": {
      "fn": "Competition.getCurrentChallengeRewardsBudget",
      "offset": [
        19475,
        19505
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2381": {
      "fn": "Competition.getCurrentChallengeRewardsBudget",
      "offset": [
        19306,
        19512
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "2384": {
      "fn": "Competition.getCurrentChallengeRewardsBudget",
      "offset": [
        19306,
        19512
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2385": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24079,
        24327
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2386": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24079,
        24327
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "2389": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24079,
        24327
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x95F"
    },
    "2392": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24079,
        24327
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2393": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24079,
        24327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2395": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24079,
        24327
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41D7"
    },
    "2398": {
      "fn": "Competition.getChallengeScores",
      "jump": "i",
      "offset": [
        24079,
        24327
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2399": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24079,
        24327
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2400": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24277
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 23,
      "value": "0xFFFFFFFF"
    },
    "2405": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24277
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2406": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24277
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2407": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24277
      ],
      "op": "AND",
      "path": "2"
    },
    "2408": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24192,
        24215
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2410": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24277
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2411": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24277
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2412": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24277
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2413": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24260
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "2415": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2417": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24277
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2418": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24277
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2419": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24277
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2420": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24277
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2422": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24277
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2423": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24277
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2424": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24277
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2429": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2431": {
      "op": "SHL"
    },
    "2432": {
      "op": "SUB"
    },
    "2433": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24304
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2434": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24304
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2435": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24304
      ],
      "op": "AND",
      "path": "2"
    },
    "2436": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24304
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2437": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24304
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2438": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2440": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24291
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2441": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24291
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2442": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24291
      ],
      "op": "ADD",
      "path": "2"
    },
    "2443": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24304
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2444": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24304
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2445": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24304
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2446": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24304
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2447": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24304
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2448": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24320
      ],
      "op": "ADD",
      "path": "2"
    },
    "2449": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24320
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2450": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24249,
        24320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2451": {
      "fn": "Competition.getChallengeScores",
      "offset": [
        24079,
        24327
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2452": {
      "fn": "Competition.openChallenge",
      "offset": [
        7440,
        8704
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2453": {
      "fn": "Competition.openChallenge",
      "offset": [
        7440,
        8704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "2456": {
      "fn": "Competition.openChallenge",
      "offset": [
        7440,
        8704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9A2"
    },
    "2459": {
      "fn": "Competition.openChallenge",
      "offset": [
        7440,
        8704
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2460": {
      "fn": "Competition.openChallenge",
      "offset": [
        7440,
        8704
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2462": {
      "fn": "Competition.openChallenge",
      "offset": [
        7440,
        8704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x40AB"
    },
    "2465": {
      "fn": "Competition.openChallenge",
      "jump": "i",
      "offset": [
        7440,
        8704
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2466": {
      "fn": "Competition.openChallenge",
      "offset": [
        7440,
        8704
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2467": {
      "fn": "Competition.openChallenge",
      "offset": [
        7440,
        8704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2450"
    },
    "2470": {
      "fn": "Competition.openChallenge",
      "jump": "i",
      "offset": [
        7440,
        8704
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2471": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17551,
        18066
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2472": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17551,
        18066
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "2475": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17551,
        18066
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9B5"
    },
    "2478": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17551,
        18066
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2479": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17551,
        18066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2481": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17551,
        18066
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43B6"
    },
    "2484": {
      "fn": "Competition.advanceToPhase",
      "jump": "i",
      "offset": [
        17551,
        18066
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2485": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17551,
        18066
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2486": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17551,
        18066
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26C8"
    },
    "2489": {
      "fn": "Competition.advanceToPhase",
      "jump": "i",
      "offset": [
        17551,
        18066
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2490": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15665,
        16788
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2491": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15665,
        16788
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "2494": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15665,
        16788
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9C8"
    },
    "2497": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15665,
        16788
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2498": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15665,
        16788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2500": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15665,
        16788
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x423B"
    },
    "2503": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "jump": "i",
      "offset": [
        15665,
        16788
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2504": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15665,
        16788
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2505": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15665,
        16788
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2897"
    },
    "2508": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "jump": "i",
      "offset": [
        15665,
        16788
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2509": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22648,
        22878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2510": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22648,
        22878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "2513": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22648,
        22878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9DB"
    },
    "2516": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22648,
        22878
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2517": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22648,
        22878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2519": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22648,
        22878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41D7"
    },
    "2522": {
      "fn": "Competition.getStakedAmountForChallenge",
      "jump": "i",
      "offset": [
        22648,
        22878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2523": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22648,
        22878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2524": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22837
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 24,
      "value": "0xFFFFFFFF"
    },
    "2529": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22837
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2530": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22837
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2531": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22837
      ],
      "op": "AND",
      "path": "2"
    },
    "2532": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22770,
        22784
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2534": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22837
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2535": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22837
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2536": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22837
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2537": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22820
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "2539": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2541": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22837
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2542": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22837
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2543": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22837
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2544": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2546": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22837
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2547": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22837
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2548": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22837
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2555": {
      "op": "SHL"
    },
    "2556": {
      "op": "SUB"
    },
    "2557": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22864
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2558": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22864
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2559": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22864
      ],
      "op": "AND",
      "path": "2"
    },
    "2560": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22864
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2561": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22864
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2562": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2564": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22851
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2565": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22851
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2566": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22851
      ],
      "op": "ADD",
      "path": "2"
    },
    "2567": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22864
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2568": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22864
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2569": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22864
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2570": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2572": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22871
      ],
      "op": "ADD",
      "path": "2"
    },
    "2573": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22871
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2574": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22809,
        22871
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2575": {
      "fn": "Competition.getStakedAmountForChallenge",
      "offset": [
        22648,
        22878
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2576": {
      "fn": "Competition.getInformation",
      "offset": [
        24591,
        24833
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2577": {
      "fn": "Competition.getInformation",
      "offset": [
        24591,
        24833
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "2580": {
      "fn": "Competition.getInformation",
      "offset": [
        24591,
        24833
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA1E"
    },
    "2583": {
      "fn": "Competition.getInformation",
      "offset": [
        24591,
        24833
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2584": {
      "fn": "Competition.getInformation",
      "offset": [
        24591,
        24833
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2586": {
      "fn": "Competition.getInformation",
      "offset": [
        24591,
        24833
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4200"
    },
    "2589": {
      "fn": "Competition.getInformation",
      "jump": "i",
      "offset": [
        24591,
        24833
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2590": {
      "fn": "Competition.getInformation",
      "offset": [
        24591,
        24833
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2591": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24782
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 25,
      "value": "0xFFFFFFFF"
    },
    "2596": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2597": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24782
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2598": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24782
      ],
      "op": "AND",
      "path": "2"
    },
    "2599": {
      "fn": "Competition.getInformation",
      "offset": [
        24720,
        24730
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2601": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2602": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24782
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2603": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2604": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24765
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "2606": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2608": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24782
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2609": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24782
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2610": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2611": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2613": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24782
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2614": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24782
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2615": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24782
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2622": {
      "op": "SHL"
    },
    "2623": {
      "op": "SUB"
    },
    "2624": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24809
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2625": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24809
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2626": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24809
      ],
      "op": "AND",
      "path": "2"
    },
    "2627": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24809
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2628": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24809
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2629": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24796
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2631": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24796
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2632": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24796
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2633": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24796
      ],
      "op": "ADD",
      "path": "2"
    },
    "2634": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24809
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2635": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24809
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2636": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24809
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2637": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24809
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2638": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24809
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2639": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24826
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2640": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24826
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2641": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24826
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2642": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24814
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2644": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24814
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2645": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24814
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2646": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24814
      ],
      "op": "ADD",
      "path": "2"
    },
    "2647": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24826
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2648": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24826
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2649": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24826
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2650": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24826
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2651": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24826
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2652": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24826
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2653": {
      "fn": "Competition.getInformation",
      "offset": [
        24754,
        24826
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2654": {
      "fn": "Competition.getInformation",
      "offset": [
        24591,
        24833
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2655": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20530,
        20702
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2656": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20530,
        20702
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "2659": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20530,
        20702
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA6D"
    },
    "2662": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20530,
        20702
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2663": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20530,
        20702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2665": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20530,
        20702
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41BD"
    },
    "2668": {
      "fn": "Competition.getResultsHash",
      "jump": "i",
      "offset": [
        20530,
        20702
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2669": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20530,
        20702
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2670": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20659,
        20687
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 26,
      "value": "0xFFFFFFFF"
    },
    "2675": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20659,
        20687
      ],
      "op": "AND",
      "path": "2"
    },
    "2676": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20618,
        20633
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2678": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20659,
        20687
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2679": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20659,
        20687
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2680": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20659,
        20687
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2681": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20659,
        20670
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "2683": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20659,
        20687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2685": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20659,
        20687
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2686": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20659,
        20687
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2688": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20659,
        20687
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2689": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20659,
        20687
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2690": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20659,
        20695
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2692": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20659,
        20695
      ],
      "op": "ADD",
      "path": "2"
    },
    "2693": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20659,
        20695
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2694": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20659,
        20695
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2695": {
      "fn": "Competition.getResultsHash",
      "offset": [
        20530,
        20702
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2696": {
      "fn": "Competition.getRemainder",
      "offset": [
        25041,
        25227
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2697": {
      "fn": "Competition.getRemainder",
      "offset": [
        25041,
        25227
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x440"
    },
    "2700": {
      "fn": "Competition.getRemainder",
      "offset": [
        25041,
        25227
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BC6"
    },
    "2703": {
      "fn": "Competition.getRemainder",
      "jump": "i",
      "offset": [
        25041,
        25227
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2704": {
      "fn": "Competition.updateSubmission",
      "offset": [
        3938,
        4514
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2705": {
      "fn": "Competition.updateSubmission",
      "offset": [
        3938,
        4514
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x741"
    },
    "2708": {
      "fn": "Competition.updateSubmission",
      "offset": [
        3938,
        4514
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA9E"
    },
    "2711": {
      "fn": "Competition.updateSubmission",
      "offset": [
        3938,
        4514
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2712": {
      "fn": "Competition.updateSubmission",
      "offset": [
        3938,
        4514
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2714": {
      "fn": "Competition.updateSubmission",
      "offset": [
        3938,
        4514
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x408A"
    },
    "2717": {
      "fn": "Competition.updateSubmission",
      "jump": "i",
      "offset": [
        3938,
        4514
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2718": {
      "fn": "Competition.updateSubmission",
      "offset": [
        3938,
        4514
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2719": {
      "fn": "Competition.updateSubmission",
      "offset": [
        3938,
        4514
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C63"
    },
    "2722": {
      "fn": "Competition.updateSubmission",
      "jump": "i",
      "offset": [
        3938,
        4514
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2723": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10786,
        11179
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2724": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10786,
        11179
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "2727": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10786,
        11179
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D32"
    },
    "2730": {
      "fn": "Competition.closeSubmission",
      "jump": "i",
      "offset": [
        10786,
        11179
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2731": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2732": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3651,
        3655
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2738": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2740": {
      "op": "SHL"
    },
    "2741": {
      "op": "SUB"
    },
    "2742": {
      "op": "NOT"
    },
    "2743": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3674,
        3721
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 27
    },
    "2744": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3674,
        3721
      ],
      "op": "AND",
      "path": "7"
    },
    "2745": {
      "op": "PUSH4",
      "value": "0x7965DB0B"
    },
    "2750": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2752": {
      "op": "SHL"
    },
    "2753": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3674,
        3721
      ],
      "op": "EQ",
      "path": "7"
    },
    "2754": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3674,
        3721
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2755": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3674,
        3773
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xADC"
    },
    "2758": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3674,
        3773
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2759": {
      "op": "POP"
    },
    "2760": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "2765": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2767": {
      "op": "SHL"
    },
    "2768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2774": {
      "op": "SHL"
    },
    "2775": {
      "op": "SUB"
    },
    "2776": {
      "op": "NOT"
    },
    "2777": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "21",
      "statement": 28
    },
    "2778": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "21"
    },
    "2779": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "21"
    },
    "2780": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3737,
        3773
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2781": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3667,
        3773
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2782": {
      "fn": "AccessControl.supportsInterface",
      "offset": [
        3566,
        3780
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2783": {
      "op": "POP"
    },
    "2784": {
      "op": "POP"
    },
    "2785": {
      "fn": "AccessControl.supportsInterface",
      "jump": "o",
      "offset": [
        3566,
        3780
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2786": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7163,
        7434
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2787": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7278,
        7290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2789": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAFC"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2794": {
      "op": "DUP1"
    },
    "2795": {
      "op": "MLOAD"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2798": {
      "op": "PUSH2",
      "value": "0x45D0"
    },
    "2801": {
      "op": "DUP4"
    },
    "2802": {
      "op": "CODECOPY"
    },
    "2803": {
      "op": "DUP2"
    },
    "2804": {
      "op": "MLOAD"
    },
    "2805": {
      "op": "SWAP2"
    },
    "2806": {
      "op": "MSTORE"
    },
    "2807": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2808": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D96"
    },
    "2811": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2812": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2813": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB21"
    },
    "2816": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2817": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2819": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2820": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2826": {
      "op": "SHL"
    },
    "2827": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2828": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2829": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2831": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "2832": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB18"
    },
    "2835": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2836": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4477"
    },
    "2839": {
      "fn": "Competition.updatePrivateKey",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2840": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2841": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2843": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2844": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        481,
        553
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2845": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        481,
        553
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2846": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        481,
        553
      ],
      "op": "SUB",
      "path": "0"
    },
    "2847": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2848": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        481,
        553
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "2849": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2850": {
      "op": "POP"
    },
    "2851": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7306,
        7334
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 29,
      "value": "0xFFFFFFFF"
    },
    "2856": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7306,
        7334
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2857": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7306,
        7334
      ],
      "op": "AND",
      "path": "2"
    },
    "2858": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7306,
        7334
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2860": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7306,
        7334
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2861": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7306,
        7334
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2862": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7306,
        7334
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2863": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7306,
        7317
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "2865": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7306,
        7334
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2867": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7306,
        7334
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2868": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7306,
        7334
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2870": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7306,
        7334
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2871": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7306,
        7334
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2872": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7306,
        7334
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2873": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7306,
        7345
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2875": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7306,
        7345
      ],
      "op": "ADD",
      "path": "2"
    },
    "2876": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7306,
        7358
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2877": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7306,
        7358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2878": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7306,
        7358
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2879": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7398,
        7427
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 30
    },
    "2880": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7378,
        7382
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 31,
      "value": "0x1"
    },
    "2882": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7378,
        7382
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2883": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7348,
        7358
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2884": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7348,
        7358
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2885": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7398,
        7427
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x840BDCA8F6C2CDE252F010DB5E96E3B79DEB9D4CF7C64989F75FF7325B0D3C60"
    },
    "2918": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7398,
        7427
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2919": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7306,
        7334
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2920": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7398,
        7427
      ],
      "op": "LOG2",
      "path": "2"
    },
    "2921": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7163,
        7434
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2922": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7163,
        7434
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2923": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7163,
        7434
      ],
      "op": "POP",
      "path": "2"
    },
    "2924": {
      "fn": "Competition.updatePrivateKey",
      "offset": [
        7163,
        7434
      ],
      "op": "POP",
      "path": "2"
    },
    "2925": {
      "fn": "Competition.updatePrivateKey",
      "jump": "o",
      "offset": [
        7163,
        7434
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2926": {
      "fn": "Competition.updateMessage",
      "offset": [
        5383,
        5591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2927": {
      "fn": "Competition.updateMessage",
      "offset": [
        5479,
        5491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2929": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB88"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2934": {
      "op": "DUP1"
    },
    "2935": {
      "op": "MLOAD"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2938": {
      "op": "PUSH2",
      "value": "0x45D0"
    },
    "2941": {
      "op": "DUP4"
    },
    "2942": {
      "op": "CODECOPY"
    },
    "2943": {
      "op": "DUP2"
    },
    "2944": {
      "op": "MLOAD"
    },
    "2945": {
      "op": "SWAP2"
    },
    "2946": {
      "op": "MSTORE"
    },
    "2947": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2948": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D96"
    },
    "2951": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2952": {
      "fn": "Competition.updateMessage",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2953": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA4"
    },
    "2956": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2957": {
      "fn": "Competition.updateMessage",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2959": {
      "fn": "Competition.updateMessage",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2960": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2966": {
      "op": "SHL"
    },
    "2967": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2968": {
      "fn": "Competition.updateMessage",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2969": {
      "fn": "Competition.updateMessage",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2971": {
      "fn": "Competition.updateMessage",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "2972": {
      "fn": "Competition.updateMessage",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB18"
    },
    "2975": {
      "fn": "Competition.updateMessage",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2976": {
      "fn": "Competition.updateMessage",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4477"
    },
    "2979": {
      "fn": "Competition.updateMessage",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2980": {
      "fn": "Competition.updateMessage",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2981": {
      "fn": "Competition.updateMessage",
      "offset": [
        5507,
        5528
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 32,
      "value": "0xBB0"
    },
    "2984": {
      "fn": "Competition.updateMessage",
      "offset": [
        5507,
        5515
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "2986": {
      "fn": "Competition.updateMessage",
      "offset": [
        5518,
        5528
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2987": {
      "fn": "Competition.updateMessage",
      "offset": [
        5518,
        5528
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2988": {
      "fn": "Competition.updateMessage",
      "offset": [
        5507,
        5528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E12"
    },
    "2991": {
      "fn": "Competition.updateMessage",
      "jump": "i",
      "offset": [
        5507,
        5528
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2992": {
      "fn": "Competition.updateMessage",
      "offset": [
        5507,
        5528
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2993": {
      "op": "POP"
    },
    "2994": {
      "op": "POP"
    },
    "2995": {
      "fn": "Competition.updateMessage",
      "offset": [
        5568,
        5584
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 33,
      "value": "0x40"
    },
    "2997": {
      "fn": "Competition.updateMessage",
      "offset": [
        5568,
        5584
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2998": {
      "fn": "Competition.updateMessage",
      "offset": [
        5548,
        5552
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 34,
      "value": "0x1"
    },
    "3000": {
      "fn": "Competition.updateMessage",
      "offset": [
        5548,
        5552
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3001": {
      "fn": "Competition.updateMessage",
      "offset": [
        5568,
        5584
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x89DBE1E8A053A391BECC713B9C088B57CF1855CF857803E49EAAE2F8FBC3B1CD"
    },
    "3034": {
      "fn": "Competition.updateMessage",
      "offset": [
        5568,
        5584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3035": {
      "fn": "Competition.updateMessage",
      "offset": [
        5568,
        5584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3037": {
      "fn": "Competition.updateMessage",
      "offset": [
        5568,
        5584
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3038": {
      "fn": "Competition.updateMessage",
      "offset": [
        5568,
        5584
      ],
      "op": "LOG1",
      "path": "2"
    },
    "3039": {
      "fn": "Competition.updateMessage",
      "offset": [
        5383,
        5591
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3040": {
      "fn": "Competition.updateMessage",
      "offset": [
        5383,
        5591
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3041": {
      "fn": "Competition.updateMessage",
      "offset": [
        5383,
        5591
      ],
      "op": "POP",
      "path": "2"
    },
    "3042": {
      "fn": "Competition.updateMessage",
      "offset": [
        5383,
        5591
      ],
      "op": "POP",
      "path": "2"
    },
    "3043": {
      "fn": "Competition.updateMessage",
      "jump": "o",
      "offset": [
        5383,
        5591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3044": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2185,
        3402
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3045": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2333,
        2350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3047": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2333,
        2350
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3048": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2280,
        2292
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3050": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2280,
        2292
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3055": {
      "op": "SHL"
    },
    "3056": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2333,
        2350
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3057": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2333,
        2350
      ],
      "op": "DIV",
      "path": "2"
    },
    "3058": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2333,
        2350
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "3063": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2333,
        2350
      ],
      "op": "AND",
      "path": "2"
    },
    "3064": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2333,
        2350
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3071": {
      "op": "SHL"
    },
    "3072": {
      "op": "SUB"
    },
    "3073": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2390,
        2396
      ],
      "op": "AND",
      "path": "2",
      "statement": 35
    },
    "3074": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2368,
        2378
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3075": {
      "branch": 217,
      "fn": "Competition.decreaseStake",
      "offset": [
        2368,
        2397
      ],
      "op": "EQ",
      "path": "2"
    },
    "3076": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2360,
        2480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC8C"
    },
    "3079": {
      "branch": 217,
      "fn": "Competition.decreaseStake",
      "offset": [
        2360,
        2480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3080": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2360,
        2480
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3082": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2360,
        2480
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3083": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3089": {
      "op": "SHL"
    },
    "3090": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2360,
        2480
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3091": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2360,
        2480
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3092": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3094": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2360,
        2480
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3096": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2360,
        2480
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3097": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2360,
        2480
      ],
      "op": "ADD",
      "path": "2"
    },
    "3098": {
      "op": "MSTORE"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "3101": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3103": {
      "op": "DUP3"
    },
    "3104": {
      "op": "ADD"
    },
    "3105": {
      "op": "MSTORE"
    },
    "3106": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D2064656372656173655374616B653A20506C65"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3141": {
      "op": "DUP3"
    },
    "3142": {
      "op": "ADD"
    },
    "3143": {
      "op": "MSTORE"
    },
    "3144": {
      "op": "PUSH32",
      "value": "0x6173652063616C6C20746869732066756E6374696F6E20766961207468652074"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3179": {
      "op": "DUP3"
    },
    "3180": {
      "op": "ADD"
    },
    "3181": {
      "op": "MSTORE"
    },
    "3182": {
      "op": "PUSH14",
      "value": "0x37B5B2B71031B7B73A3930B1BA17"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "3199": {
      "op": "SHL"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3202": {
      "op": "DUP3"
    },
    "3203": {
      "op": "ADD"
    },
    "3204": {
      "op": "MSTORE"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "3207": {
      "op": "ADD"
    },
    "3208": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2360,
        2480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "3211": {
      "op": "JUMP"
    },
    "3212": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2360,
        2480
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3213": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2510,
        2527
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 36,
      "value": "0x1"
    },
    "3215": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2510,
        2527
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3220": {
      "op": "SHL"
    },
    "3221": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2510,
        2527
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3222": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2510,
        2527
      ],
      "op": "DIV",
      "path": "2"
    },
    "3223": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2510,
        2527
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "3228": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2510,
        2527
      ],
      "op": "AND",
      "path": "2"
    },
    "3229": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2498,
        2528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3231": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2498,
        2528
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3232": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2498,
        2528
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3233": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2498,
        2528
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3234": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2498,
        2509
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "3236": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2498,
        2528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3238": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2498,
        2528
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3239": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2498,
        2528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3241": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2498,
        2528
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3242": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2498,
        2528
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3243": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2498,
        2534
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3245": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2498,
        2534
      ],
      "op": "ADD",
      "path": "2"
    },
    "3246": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2498,
        2534
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3247": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2498,
        2534
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3249": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2498,
        2534
      ],
      "op": "AND",
      "path": "2"
    },
    "3250": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2538,
        2539
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3252": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2498,
        2539
      ],
      "op": "EQ",
      "path": "2"
    },
    "3253": {
      "branch": 218,
      "fn": "Competition.decreaseStake",
      "offset": [
        2498,
        2539
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3254": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2490,
        2646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD5C"
    },
    "3257": {
      "branch": 218,
      "fn": "Competition.decreaseStake",
      "offset": [
        2490,
        2646
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3258": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2490,
        2646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3260": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2490,
        2646
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3261": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3267": {
      "op": "SHL"
    },
    "3268": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2490,
        2646
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3269": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2490,
        2646
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3272": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2490,
        2646
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3274": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2490,
        2646
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3275": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2490,
        2646
      ],
      "op": "ADD",
      "path": "2"
    },
    "3276": {
      "op": "MSTORE"
    },
    "3277": {
      "op": "PUSH1",
      "value": "0x66"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3281": {
      "op": "DUP3"
    },
    "3282": {
      "op": "ADD"
    },
    "3283": {
      "op": "MSTORE"
    },
    "3284": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D2064656372656173655374616B653A20506C65"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3319": {
      "op": "DUP3"
    },
    "3320": {
      "op": "ADD"
    },
    "3321": {
      "op": "MSTORE"
    },
    "3322": {
      "op": "PUSH32",
      "value": "0x617365207761697420666F7220746865207374616B696E6720706572696F6420"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3357": {
      "op": "DUP3"
    },
    "3358": {
      "op": "ADD"
    },
    "3359": {
      "op": "MSTORE"
    },
    "3360": {
      "op": "PUSH32",
      "value": "0x746F20756E6C6F636B206265666F7265206D6F64696679696E6720796F757220"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3395": {
      "op": "DUP3"
    },
    "3396": {
      "op": "ADD"
    },
    "3397": {
      "op": "MSTORE"
    },
    "3398": {
      "op": "PUSH6",
      "value": "0x39BA30B5B297"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "3407": {
      "op": "SHL"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "3410": {
      "op": "DUP3"
    },
    "3411": {
      "op": "ADD"
    },
    "3412": {
      "op": "MSTORE"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "3415": {
      "op": "ADD"
    },
    "3416": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2490,
        2646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "3419": {
      "op": "JUMP"
    },
    "3420": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2490,
        2646
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3427": {
      "op": "SHL"
    },
    "3428": {
      "op": "SUB"
    },
    "3429": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2678,
        2693
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3430": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2678,
        2693
      ],
      "op": "AND",
      "path": "2"
    },
    "3431": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2657,
        2675
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3433": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2678,
        2693
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3434": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2678,
        2693
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3435": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2678,
        2693
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3436": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2678,
        2685
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "3438": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2678,
        2693
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3440": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2678,
        2693
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3441": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2678,
        2693
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3443": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2678,
        2693
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3444": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2678,
        2693
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3445": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2678,
        2693
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3446": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2711,
        2736
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 37
    },
    "3447": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2711,
        2736
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3448": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2711,
        2736
      ],
      "op": "GT",
      "path": "2"
    },
    "3449": {
      "branch": 219,
      "fn": "Competition.decreaseStake",
      "offset": [
        2711,
        2736
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3450": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2703,
        2804
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDEB"
    },
    "3453": {
      "branch": 219,
      "fn": "Competition.decreaseStake",
      "offset": [
        2703,
        2804
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3454": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2703,
        2804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3456": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2703,
        2804
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3457": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3463": {
      "op": "SHL"
    },
    "3464": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2703,
        2804
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3465": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2703,
        2804
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3466": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3468": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2703,
        2804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3470": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2703,
        2804
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3471": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2703,
        2804
      ],
      "op": "ADD",
      "path": "2"
    },
    "3472": {
      "op": "MSTORE"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3477": {
      "op": "DUP3"
    },
    "3478": {
      "op": "ADD"
    },
    "3479": {
      "op": "MSTORE"
    },
    "3480": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D2064656372656173655374616B653A20496E73"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3515": {
      "op": "DUP3"
    },
    "3516": {
      "op": "ADD"
    },
    "3517": {
      "op": "MSTORE"
    },
    "3518": {
      "op": "PUSH32",
      "value": "0x756666696369656E742066756E647320666F72207769746864726177616C2E00"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3553": {
      "op": "DUP3"
    },
    "3554": {
      "op": "ADD"
    },
    "3555": {
      "op": "MSTORE"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3558": {
      "op": "ADD"
    },
    "3559": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2703,
        2804
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "3562": {
      "op": "JUMP"
    },
    "3563": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2703,
        2804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3564": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2847
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "3569": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2847
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3570": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2847
      ],
      "op": "AND",
      "path": "2"
    },
    "3571": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2892,
        2893
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3573": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2847
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3574": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2847
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3575": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2847
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3576": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2830
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "3578": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2847
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3580": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2847
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3581": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2847
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3582": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2847
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3583": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2847
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3585": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2847
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3586": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2847
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3587": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2847
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3594": {
      "op": "SHL"
    },
    "3595": {
      "op": "SUB"
    },
    "3596": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2869
      ],
      "op": "DUP10",
      "path": "2"
    },
    "3597": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2869
      ],
      "op": "AND",
      "path": "2"
    },
    "3598": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2869
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3599": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2869
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3600": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2861
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "3602": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2861
      ],
      "op": "ADD",
      "path": "2"
    },
    "3603": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2869
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3604": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2869
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3605": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2869
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3606": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2869
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3607": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2869
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3608": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2880
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3609": {
      "branch": 220,
      "fn": "Competition.decreaseStake",
      "offset": [
        2819,
        2894
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3610": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2815,
        3192
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF1C"
    },
    "3613": {
      "branch": 220,
      "fn": "Competition.decreaseStake",
      "offset": [
        2815,
        3192
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3614": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2947,
        2962
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 38,
      "value": "0x2"
    },
    "3616": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2947,
        2962
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3617": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2918,
        2942
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE2A"
    },
    "3620": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2931,
        2942
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3621": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2918,
        2928
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3622": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2918,
        2942
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4505"
    },
    "3625": {
      "fn": "Competition.decreaseStake",
      "jump": "i",
      "offset": [
        2918,
        2942
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3626": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2918,
        2942
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3627": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2917,
        2962
      ],
      "op": "LT",
      "path": "2"
    },
    "3628": {
      "branch": 221,
      "fn": "Competition.decreaseStake",
      "offset": [
        2917,
        2962
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3629": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2909,
        3083
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEE1"
    },
    "3632": {
      "branch": 221,
      "fn": "Competition.decreaseStake",
      "offset": [
        2909,
        3083
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3633": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2909,
        3083
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3635": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2909,
        3083
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3636": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3642": {
      "op": "SHL"
    },
    "3643": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2909,
        3083
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3644": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2909,
        3083
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3647": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2909,
        3083
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3649": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2909,
        3083
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3650": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2909,
        3083
      ],
      "op": "ADD",
      "path": "2"
    },
    "3651": {
      "op": "MSTORE"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "3654": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3656": {
      "op": "DUP3"
    },
    "3657": {
      "op": "ADD"
    },
    "3658": {
      "op": "MSTORE"
    },
    "3659": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D2064656372656173655374616B653A20596F75"
    },
    "3692": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3694": {
      "op": "DUP3"
    },
    "3695": {
      "op": "ADD"
    },
    "3696": {
      "op": "MSTORE"
    },
    "3697": {
      "op": "PUSH32",
      "value": "0x206D6179206E6F74206C6F77657220796F7572207374616B652062656C6F7720"
    },
    "3730": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3732": {
      "op": "DUP3"
    },
    "3733": {
      "op": "ADD"
    },
    "3734": {
      "op": "MSTORE"
    },
    "3735": {
      "op": "PUSH32",
      "value": "0x746865207468726573686F6C64207768696C6520796F75206861766520616E20"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3770": {
      "op": "DUP3"
    },
    "3771": {
      "op": "ADD"
    },
    "3772": {
      "op": "MSTORE"
    },
    "3773": {
      "op": "PUSH20",
      "value": "0x32BC34B9BA34B7339039BAB136B4B9B9B4B7B717"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "3796": {
      "op": "SHL"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "3799": {
      "op": "DUP3"
    },
    "3800": {
      "op": "ADD"
    },
    "3801": {
      "op": "MSTORE"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "3804": {
      "op": "ADD"
    },
    "3805": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2909,
        3083
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "3808": {
      "op": "JUMP"
    },
    "3809": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2909,
        3083
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3810": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3157,
        3181
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 39,
      "value": "0xEEB"
    },
    "3813": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3170,
        3181
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3814": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3157,
        3167
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3815": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3157,
        3181
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4505"
    },
    "3818": {
      "fn": "Competition.decreaseStake",
      "jump": "i",
      "offset": [
        3157,
        3181
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3819": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3157,
        3181
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3820": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3125
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "3825": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3125
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3826": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3125
      ],
      "op": "AND",
      "path": "2"
    },
    "3827": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3829": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3125
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3830": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3831": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3832": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "3834": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3836": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3125
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3837": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3838": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3839": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3841": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3125
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3842": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3125
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3843": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3125
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3850": {
      "op": "SHL"
    },
    "3851": {
      "op": "SUB"
    },
    "3852": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3147
      ],
      "op": "DUP11",
      "path": "2"
    },
    "3853": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3147
      ],
      "op": "AND",
      "path": "2"
    },
    "3854": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3147
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3855": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3147
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3856": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3139
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "3858": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3139
      ],
      "op": "ADD",
      "path": "2"
    },
    "3859": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3147
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3860": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3147
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3861": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3147
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3862": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3147
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3863": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3147
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3864": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3866": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3154
      ],
      "op": "ADD",
      "path": "2"
    },
    "3867": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3097,
        3181
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3868": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2815,
        3192
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3869": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3220,
        3244
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 40,
      "value": "0xF26"
    },
    "3872": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3233,
        3244
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3873": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3220,
        3230
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3874": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3220,
        3244
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4505"
    },
    "3877": {
      "fn": "Competition.decreaseStake",
      "jump": "i",
      "offset": [
        3220,
        3244
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3878": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3220,
        3244
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3885": {
      "op": "SHL"
    },
    "3886": {
      "op": "SUB"
    },
    "3887": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3202,
        3217
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3888": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3202,
        3217
      ],
      "op": "AND",
      "path": "2"
    },
    "3889": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3202,
        3217
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3891": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3202,
        3217
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3892": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3202,
        3217
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3893": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3202,
        3217
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3894": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3202,
        3209
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "3896": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3202,
        3217
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3898": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3202,
        3217
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3899": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3202,
        3217
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3901": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3202,
        3217
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3902": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3202,
        3217
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3903": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3202,
        3244
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3904": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3202,
        3244
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3905": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3202,
        3244
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3906": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3202,
        3244
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3907": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3254,
        3273
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 41,
      "value": "0x5"
    },
    "3909": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3254,
        3288
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3910": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3254,
        3288
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3911": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3277,
        3288
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3912": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3277,
        3288
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3913": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3202,
        3217
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3914": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3254,
        3288
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF54"
    },
    "3917": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3254,
        3288
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3918": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3277,
        3288
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3919": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3277,
        3288
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3920": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3254,
        3288
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4505"
    },
    "3923": {
      "fn": "Competition.decreaseStake",
      "jump": "i",
      "offset": [
        3254,
        3288
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3924": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3254,
        3288
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3925": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3254,
        3288
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3926": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3254,
        3288
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3927": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3254,
        3288
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3928": {
      "op": "POP"
    },
    "3929": {
      "op": "POP"
    },
    "3930": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3314
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 42,
      "value": "0x1"
    },
    "3932": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3314
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3933": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3935": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3936": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3943": {
      "op": "SHL"
    },
    "3944": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3945": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3952": {
      "op": "SHL"
    },
    "3953": {
      "op": "SUB"
    },
    "3954": {
      "op": "DUP8"
    },
    "3955": {
      "op": "DUP2"
    },
    "3956": {
      "op": "AND"
    },
    "3957": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3959": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3960": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "ADD",
      "path": "2"
    },
    "3961": {
      "op": "MSTORE"
    },
    "3962": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3964": {
      "op": "DUP3"
    },
    "3965": {
      "op": "ADD"
    },
    "3966": {
      "op": "DUP8"
    },
    "3967": {
      "op": "SWAP1"
    },
    "3968": {
      "op": "MSTORE"
    },
    "3969": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3970": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3314
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3971": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3314
      ],
      "op": "AND",
      "path": "2"
    },
    "3972": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3314
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3973": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3323
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "3978": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3323
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3981": {
      "op": "ADD"
    },
    "3982": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3984": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3986": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3987": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3988": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3989": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "SUB",
      "path": "2"
    },
    "3990": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3991": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3993": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3994": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3995": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "3996": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3997": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3998": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3999": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFA7"
    },
    "4002": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4003": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4005": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4006": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4007": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4008": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "POP",
      "path": "2"
    },
    "4009": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "GAS",
      "path": "2"
    },
    "4010": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "CALL",
      "path": "2"
    },
    "4011": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4012": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4013": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4014": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFBB"
    },
    "4017": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4018": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4019": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4021": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4022": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "4023": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4024": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4026": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4027": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4028": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "POP",
      "path": "2"
    },
    "4029": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "POP",
      "path": "2"
    },
    "4030": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "POP",
      "path": "2"
    },
    "4031": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "POP",
      "path": "2"
    },
    "4032": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4034": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4035": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4036": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4038": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "NOT",
      "path": "2"
    },
    "4039": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4041": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4042": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "ADD",
      "path": "2"
    },
    "4043": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "AND",
      "path": "2"
    },
    "4044": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4045": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "ADD",
      "path": "2"
    },
    "4046": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4047": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4049": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4050": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "POP",
      "path": "2"
    },
    "4051": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4052": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "ADD",
      "path": "2"
    },
    "4053": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4054": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFDF"
    },
    "4057": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4058": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4059": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4027"
    },
    "4062": {
      "fn": "Competition.decreaseStake",
      "jump": "i",
      "offset": [
        3308,
        3344
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4063": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3308,
        3344
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4064": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3298,
        3344
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4065": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3298,
        3344
      ],
      "op": "POP",
      "path": "2"
    },
    "4066": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3383,
        3394
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 43
    },
    "4067": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3375,
        3381
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4072": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4074": {
      "op": "SHL"
    },
    "4075": {
      "op": "SUB"
    },
    "4076": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3360,
        3395
      ],
      "op": "AND",
      "path": "2"
    },
    "4077": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3360,
        3395
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x700865370FFB2A65A2B0242E6A64B21AC907ED5ECD46C9CFFC729C177B2B1C69"
    },
    "4110": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3360,
        3395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4112": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3360,
        3395
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4113": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3360,
        3395
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4115": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3360,
        3395
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4116": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3360,
        3395
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4117": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3360,
        3395
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4118": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3360,
        3395
      ],
      "op": "SUB",
      "path": "2"
    },
    "4119": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3360,
        3395
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4120": {
      "fn": "Competition.decreaseStake",
      "offset": [
        3360,
        3395
      ],
      "op": "LOG3",
      "path": "2"
    },
    "4121": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2185,
        3402
      ],
      "op": "POP",
      "path": "2"
    },
    "4122": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2185,
        3402
      ],
      "op": "POP",
      "path": "2"
    },
    "4123": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2185,
        3402
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4124": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2185,
        3402
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4125": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2185,
        3402
      ],
      "op": "POP",
      "path": "2"
    },
    "4126": {
      "fn": "Competition.decreaseStake",
      "offset": [
        2185,
        3402
      ],
      "op": "POP",
      "path": "2"
    },
    "4127": {
      "fn": "Competition.decreaseStake",
      "jump": "o",
      "offset": [
        2185,
        3402
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4128": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        5597,
        5821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4129": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        5725,
        5737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4131": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103A"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4136": {
      "op": "DUP1"
    },
    "4137": {
      "op": "MLOAD"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4140": {
      "op": "PUSH2",
      "value": "0x45D0"
    },
    "4143": {
      "op": "DUP4"
    },
    "4144": {
      "op": "CODECOPY"
    },
    "4145": {
      "op": "DUP2"
    },
    "4146": {
      "op": "MLOAD"
    },
    "4147": {
      "op": "SWAP2"
    },
    "4148": {
      "op": "MSTORE"
    },
    "4149": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4150": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D96"
    },
    "4153": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4154": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4155": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1056"
    },
    "4158": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4159": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4161": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4162": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4168": {
      "op": "SHL"
    },
    "4169": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4170": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4171": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4173": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "4174": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB18"
    },
    "4177": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4178": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4477"
    },
    "4181": {
      "fn": "Competition.updateDeadlines",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4182": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4183": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 44,
      "value": "0xFFFFFFFF"
    },
    "4188": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4189": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "AND",
      "path": "2"
    },
    "4190": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5936,
        5948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4192": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4193": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4194": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4195": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "4197": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4199": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4200": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4201": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4202": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4204": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4205": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4206": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4207": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4208": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4209": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4210": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "4212": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6002
      ],
      "op": "ADD",
      "path": "2"
    },
    "4213": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4214": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4215": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4216": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4217": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4218": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6021
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4219": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6021
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4220": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6021
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4221": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        6041,
        6045
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 45,
      "value": "0x1"
    },
    "4223": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        5763,
        5814
      ],
      "op": "JUMPDEST",
      "path": "2",
      "statement": 46
    },
    "4224": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        5753,
        5814
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4225": {
      "fn": "Competition.updateDeadlines",
      "offset": [
        5597,
        5821
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "4226": {
      "op": "POP"
    },
    "4227": {
      "op": "POP"
    },
    "4228": {
      "op": "POP"
    },
    "4229": {
      "op": "POP"
    },
    "4230": {
      "fn": "Competition.updateDeadlines",
      "jump": "o",
      "offset": [
        5597,
        5821
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4231": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4232": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4251,
        4258
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4234": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4235": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4236": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4237": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4239": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4240": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4241": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4242": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4244": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4245": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4246": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "4248": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "ADD",
      "path": "7"
    },
    "4249": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4250": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4648,
        4689
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 47,
      "value": "0x10A4"
    },
    "4253": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4648,
        4689
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4254": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4656,
        4674
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4255": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "19",
      "statement": 48
    },
    "4256": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3867,
        4004
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D96"
    },
    "4259": {
      "fn": "AccessControl.hasRole",
      "jump": "i",
      "offset": [
        3867,
        4004
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4260": {
      "branch": 258,
      "fn": "AccessControl.grantRole",
      "offset": [
        4648,
        4689
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4261": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1108"
    },
    "4264": {
      "branch": 258,
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4265": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4267": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4268": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4274": {
      "op": "SHL"
    },
    "4275": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4276": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4279": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4281": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4282": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "ADD",
      "path": "7"
    },
    "4283": {
      "op": "MSTORE"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4288": {
      "op": "DUP3"
    },
    "4289": {
      "op": "ADD"
    },
    "4290": {
      "op": "MSTORE"
    },
    "4291": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E"
    },
    "4324": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4326": {
      "op": "DUP3"
    },
    "4327": {
      "op": "ADD"
    },
    "4328": {
      "op": "MSTORE"
    },
    "4329": {
      "op": "PUSH15",
      "value": "0x818591B5A5B881D1BC819DC985B9D"
    },
    "4345": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "4347": {
      "op": "SHL"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4350": {
      "op": "DUP3"
    },
    "4351": {
      "op": "ADD"
    },
    "4352": {
      "op": "MSTORE"
    },
    "4353": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4355": {
      "op": "ADD"
    },
    "4356": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB18"
    },
    "4359": {
      "op": "JUMP"
    },
    "4360": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4640,
        4741
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4361": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4752,
        4777
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 49,
      "value": "0x1112"
    },
    "4364": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4763,
        4767
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4365": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4769,
        4776
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4366": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4752,
        4762
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2E56"
    },
    "4369": {
      "fn": "AccessControl.grantRole",
      "jump": "i",
      "offset": [
        4752,
        4777
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4370": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4752,
        4777
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4371": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "POP",
      "path": "7"
    },
    "4372": {
      "fn": "AccessControl.grantRole",
      "offset": [
        4556,
        4784
      ],
      "op": "POP",
      "path": "7"
    },
    "4373": {
      "fn": "AccessControl.grantRole",
      "jump": "o",
      "offset": [
        4556,
        4784
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4374": {
      "fn": "Competition.submitResults",
      "offset": [
        11185,
        11358
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4375": {
      "fn": "Competition.submitResults",
      "offset": [
        11274,
        11286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4377": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1130"
    },
    "4380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4382": {
      "op": "DUP1"
    },
    "4383": {
      "op": "MLOAD"
    },
    "4384": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4386": {
      "op": "PUSH2",
      "value": "0x45D0"
    },
    "4389": {
      "op": "DUP4"
    },
    "4390": {
      "op": "CODECOPY"
    },
    "4391": {
      "op": "DUP2"
    },
    "4392": {
      "op": "MLOAD"
    },
    "4393": {
      "op": "SWAP2"
    },
    "4394": {
      "op": "MSTORE"
    },
    "4395": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4396": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D96"
    },
    "4399": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4400": {
      "fn": "Competition.submitResults",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4401": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x114C"
    },
    "4404": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4405": {
      "fn": "Competition.submitResults",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4407": {
      "fn": "Competition.submitResults",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4408": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4412": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4414": {
      "op": "SHL"
    },
    "4415": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4416": {
      "fn": "Competition.submitResults",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4417": {
      "fn": "Competition.submitResults",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4419": {
      "fn": "Competition.submitResults",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "4420": {
      "fn": "Competition.submitResults",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB18"
    },
    "4423": {
      "fn": "Competition.submitResults",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4424": {
      "fn": "Competition.submitResults",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4477"
    },
    "4427": {
      "fn": "Competition.submitResults",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4428": {
      "fn": "Competition.submitResults",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4429": {
      "fn": "Competition.submitResults",
      "offset": [
        11312,
        11351
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 50,
      "value": "0xADC"
    },
    "4432": {
      "fn": "Competition.submitResults",
      "offset": [
        11335,
        11336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4434": {
      "fn": "Competition.submitResults",
      "offset": [
        11339,
        11350
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4435": {
      "fn": "Competition.submitResults",
      "offset": [
        11312,
        11326
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EDA"
    },
    "4438": {
      "fn": "Competition.submitResults",
      "jump": "i",
      "offset": [
        11312,
        11351
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4439": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5740,
        5954
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4446": {
      "op": "SHL"
    },
    "4447": {
      "op": "SUB"
    },
    "4448": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5835,
        5858
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 51
    },
    "4449": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5835,
        5858
      ],
      "op": "AND",
      "path": "7"
    },
    "4450": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "19"
    },
    "4451": {
      "branch": 259,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5835,
        5858
      ],
      "op": "EQ",
      "path": "7"
    },
    "4452": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11C7"
    },
    "4455": {
      "branch": 259,
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4456": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4458": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4459": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4463": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4465": {
      "op": "SHL"
    },
    "4466": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4467": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4470": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4472": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4473": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "ADD",
      "path": "7"
    },
    "4474": {
      "op": "MSTORE"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4479": {
      "op": "DUP3"
    },
    "4480": {
      "op": "ADD"
    },
    "4481": {
      "op": "MSTORE"
    },
    "4482": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
    },
    "4515": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4517": {
      "op": "DUP3"
    },
    "4518": {
      "op": "ADD"
    },
    "4519": {
      "op": "MSTORE"
    },
    "4520": {
      "op": "PUSH15",
      "value": "0x103937B632B9903337B91039B2B633"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "4538": {
      "op": "SHL"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4541": {
      "op": "DUP3"
    },
    "4542": {
      "op": "ADD"
    },
    "4543": {
      "op": "MSTORE"
    },
    "4544": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4546": {
      "op": "ADD"
    },
    "4547": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB18"
    },
    "4550": {
      "op": "JUMP"
    },
    "4551": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5827,
        5910
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4552": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5921,
        5947
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 52,
      "value": "0x1112"
    },
    "4555": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5933,
        5937
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4556": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5939,
        5946
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4557": {
      "fn": "AccessControl.renounceRole",
      "offset": [
        5921,
        5932
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x30E1"
    },
    "4560": {
      "fn": "AccessControl.renounceRole",
      "jump": "i",
      "offset": [
        5921,
        5947
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4561": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18072,
        18578
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4562": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18148,
        18160
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4564": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11EB"
    },
    "4567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4569": {
      "op": "DUP1"
    },
    "4570": {
      "op": "MLOAD"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4573": {
      "op": "PUSH2",
      "value": "0x45D0"
    },
    "4576": {
      "op": "DUP4"
    },
    "4577": {
      "op": "CODECOPY"
    },
    "4578": {
      "op": "DUP2"
    },
    "4579": {
      "op": "MLOAD"
    },
    "4580": {
      "op": "SWAP2"
    },
    "4581": {
      "op": "MSTORE"
    },
    "4582": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4583": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D96"
    },
    "4586": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4587": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4588": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1207"
    },
    "4591": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4592": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4594": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4595": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4599": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4601": {
      "op": "SHL"
    },
    "4602": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4603": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4604": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4606": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "4607": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB18"
    },
    "4610": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4611": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4477"
    },
    "4614": {
      "fn": "Competition.moveRemainderToPool",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4615": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4616": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18196,
        18213
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 53,
      "value": "0x1"
    },
    "4618": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18196,
        18213
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4623": {
      "op": "SHL"
    },
    "4624": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18196,
        18213
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4625": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18196,
        18213
      ],
      "op": "DIV",
      "path": "2"
    },
    "4626": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18196,
        18213
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "4631": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18196,
        18213
      ],
      "op": "AND",
      "path": "2"
    },
    "4632": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18184,
        18214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4634": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18184,
        18214
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4635": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18184,
        18214
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4636": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18184,
        18214
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4637": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18184,
        18195
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "4639": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18184,
        18214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4641": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18184,
        18214
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4642": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18184,
        18214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4644": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18184,
        18214
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4645": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18184,
        18214
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4646": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18184,
        18220
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4648": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18184,
        18220
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4649": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18184,
        18220
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4650": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18184,
        18220
      ],
      "op": "ADD",
      "path": "2"
    },
    "4651": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18184,
        18220
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4652": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18184,
        18220
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4654": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18184,
        18220
      ],
      "op": "AND",
      "path": "2"
    },
    "4655": {
      "branch": 222,
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18184,
        18225
      ],
      "op": "EQ",
      "path": "2"
    },
    "4656": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18176,
        18325
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12C7"
    },
    "4659": {
      "branch": 222,
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18176,
        18325
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4660": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18176,
        18325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4662": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18176,
        18325
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4669": {
      "op": "SHL"
    },
    "4670": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18176,
        18325
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4671": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18176,
        18325
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4674": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18176,
        18325
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4676": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18176,
        18325
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4677": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18176,
        18325
      ],
      "op": "ADD",
      "path": "2"
    },
    "4678": {
      "op": "MSTORE"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0x5F"
    },
    "4681": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4683": {
      "op": "DUP3"
    },
    "4684": {
      "op": "ADD"
    },
    "4685": {
      "op": "MSTORE"
    },
    "4686": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D206D6F766552656D61696E646572546F506F6F"
    },
    "4719": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4721": {
      "op": "DUP3"
    },
    "4722": {
      "op": "ADD"
    },
    "4723": {
      "op": "MSTORE"
    },
    "4724": {
      "op": "PUSH32",
      "value": "0x6C3A20504C65617365207761697420666F7220746865206368616C6C656E6765"
    },
    "4757": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4759": {
      "op": "DUP3"
    },
    "4760": {
      "op": "ADD"
    },
    "4761": {
      "op": "MSTORE"
    },
    "4762": {
      "op": "PUSH32",
      "value": "0x20746F20636F6D706C657465206265666F72652073706F6E736F72696E672E00"
    },
    "4795": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4797": {
      "op": "DUP3"
    },
    "4798": {
      "op": "ADD"
    },
    "4799": {
      "op": "MSTORE"
    },
    "4800": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "4802": {
      "op": "ADD"
    },
    "4803": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18176,
        18325
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "4806": {
      "op": "JUMP"
    },
    "4807": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18176,
        18325
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4808": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18335,
        18352
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4810": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18355,
        18369
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12D1"
    },
    "4813": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18355,
        18367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2BC6"
    },
    "4816": {
      "fn": "Competition.moveRemainderToPool",
      "jump": "i",
      "offset": [
        18355,
        18369
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4817": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18355,
        18369
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4818": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18335,
        18369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4819": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18335,
        18369
      ],
      "op": "POP",
      "path": "2"
    },
    "4820": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18399,
        18400
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 54,
      "value": "0x0"
    },
    "4822": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18387,
        18396
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4823": {
      "branch": 223,
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18387,
        18400
      ],
      "op": "GT",
      "path": "2"
    },
    "4824": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18379,
        18461
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1349"
    },
    "4827": {
      "branch": 223,
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18379,
        18461
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4828": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18379,
        18461
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4830": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18379,
        18461
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4831": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4835": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4837": {
      "op": "SHL"
    },
    "4838": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18379,
        18461
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4839": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18379,
        18461
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4842": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18379,
        18461
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4844": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18379,
        18461
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4845": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18379,
        18461
      ],
      "op": "ADD",
      "path": "2"
    },
    "4846": {
      "op": "MSTORE"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4851": {
      "op": "DUP3"
    },
    "4852": {
      "op": "ADD"
    },
    "4853": {
      "op": "MSTORE"
    },
    "4854": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D206D6F766552656D61696E646572546F506F6F"
    },
    "4887": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4889": {
      "op": "DUP3"
    },
    "4890": {
      "op": "ADD"
    },
    "4891": {
      "op": "MSTORE"
    },
    "4892": {
      "op": "PUSH32",
      "value": "0x6C3A204E6F2072656D61696E64657220746F206D6F76652E0000000000000000"
    },
    "4925": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4927": {
      "op": "DUP3"
    },
    "4928": {
      "op": "ADD"
    },
    "4929": {
      "op": "MSTORE"
    },
    "4930": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4932": {
      "op": "ADD"
    },
    "4933": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18379,
        18461
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "4936": {
      "op": "JUMP"
    },
    "4937": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18379,
        18461
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4938": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18491,
        18500
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 55
    },
    "4939": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18471,
        18487
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4941": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18471,
        18487
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4943": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18471,
        18500
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4944": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18471,
        18500
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4945": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18471,
        18500
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4946": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18471,
        18500
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x135B"
    },
    "4949": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18471,
        18500
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4950": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18471,
        18500
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4951": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18471,
        18500
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "4954": {
      "fn": "Competition.moveRemainderToPool",
      "jump": "i",
      "offset": [
        18471,
        18500
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4955": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18471,
        18500
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4956": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18471,
        18500
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4957": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18471,
        18500
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4958": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18471,
        18500
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4959": {
      "op": "POP"
    },
    "4960": {
      "op": "POP"
    },
    "4961": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18540,
        18571
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 56,
      "value": "0x40"
    },
    "4963": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18540,
        18571
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4964": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18520,
        18524
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 57,
      "value": "0x1"
    },
    "4966": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18520,
        18524
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4967": {
      "op": "POP"
    },
    "4968": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18561,
        18570
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4969": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18561,
        18570
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4970": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18540,
        18571
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDA446D0471A795498335ED4BC219B34921A12CCB87136A9AA03964ADC83EADF3"
    },
    "5003": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18540,
        18571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5004": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18540,
        18571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5006": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18540,
        18571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5007": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18540,
        18571
      ],
      "op": "LOG2",
      "path": "2"
    },
    "5008": {
      "offset": [
        563,
        564
      ],
      "op": "POP",
      "path": "0"
    },
    "5009": {
      "fn": "Competition.moveRemainderToPool",
      "offset": [
        18072,
        18578
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5010": {
      "fn": "Competition.moveRemainderToPool",
      "jump": "o",
      "offset": [
        18072,
        18578
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5011": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        16794,
        17545
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5012": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        16972,
        16984
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5014": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13AD"
    },
    "5017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5019": {
      "op": "DUP1"
    },
    "5020": {
      "op": "MLOAD"
    },
    "5021": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5023": {
      "op": "PUSH2",
      "value": "0x45D0"
    },
    "5026": {
      "op": "DUP4"
    },
    "5027": {
      "op": "CODECOPY"
    },
    "5028": {
      "op": "DUP2"
    },
    "5029": {
      "op": "MLOAD"
    },
    "5030": {
      "op": "SWAP2"
    },
    "5031": {
      "op": "MSTORE"
    },
    "5032": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5033": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D96"
    },
    "5036": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5037": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5038": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13C9"
    },
    "5041": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5042": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5044": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5045": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5049": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5051": {
      "op": "SHL"
    },
    "5052": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5053": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5054": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5056": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "5057": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB18"
    },
    "5060": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5061": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4477"
    },
    "5064": {
      "fn": "Competition.updateInformationBatch",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5065": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5066": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17036
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 58,
      "value": "0xFFFFFFFF"
    },
    "5071": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17036
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5072": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17036
      ],
      "op": "AND",
      "path": "2"
    },
    "5073": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17036
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5075": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17036
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5076": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17036
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5077": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17036
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5078": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "5080": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17036
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5082": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17036
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5083": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17036
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5085": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17036
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5086": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17036
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5087": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17042
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5089": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17042
      ],
      "op": "ADD",
      "path": "2"
    },
    "5090": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17042
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5091": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17046,
        17047
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5093": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17042
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5095": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17042
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5096": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17042
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5097": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17042
      ],
      "op": "AND",
      "path": "2"
    },
    "5098": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17047
      ],
      "op": "LT",
      "path": "2"
    },
    "5099": {
      "branch": 224,
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17008,
        17047
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5100": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17000,
        17123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x146D"
    },
    "5103": {
      "branch": 224,
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17000,
        17123
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5104": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17000,
        17123
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5106": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17000,
        17123
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5107": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5111": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5113": {
      "op": "SHL"
    },
    "5114": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17000,
        17123
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5115": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17000,
        17123
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5118": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17000,
        17123
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5120": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17000,
        17123
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5121": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17000,
        17123
      ],
      "op": "ADD",
      "path": "2"
    },
    "5122": {
      "op": "MSTORE"
    },
    "5123": {
      "op": "PUSH1",
      "value": "0x47"
    },
    "5125": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5127": {
      "op": "DUP3"
    },
    "5128": {
      "op": "ADD"
    },
    "5129": {
      "op": "MSTORE"
    },
    "5130": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20757064617465496E666F726D6174696F6E42"
    },
    "5163": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5165": {
      "op": "DUP3"
    },
    "5166": {
      "op": "ADD"
    },
    "5167": {
      "op": "MSTORE"
    },
    "5168": {
      "op": "PUSH32",
      "value": "0x617463683A204368616C6C656E676520697320696E20756E6578706563746564"
    },
    "5201": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5203": {
      "op": "DUP3"
    },
    "5204": {
      "op": "ADD"
    },
    "5205": {
      "op": "MSTORE"
    },
    "5206": {
      "op": "PUSH7",
      "value": "0x1039BA30BA3297"
    },
    "5214": {
      "op": "PUSH1",
      "value": "0xC9"
    },
    "5216": {
      "op": "SHL"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5219": {
      "op": "DUP3"
    },
    "5220": {
      "op": "ADD"
    },
    "5221": {
      "op": "MSTORE"
    },
    "5222": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "5224": {
      "op": "ADD"
    },
    "5225": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17000,
        17123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "5228": {
      "op": "JUMP"
    },
    "5229": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17000,
        17123
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5230": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17141,
        17177
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 59
    },
    "5231": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17141,
        17177
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5232": {
      "branch": 225,
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17141,
        17177
      ],
      "op": "EQ",
      "path": "2"
    },
    "5233": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17133,
        17268
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1501"
    },
    "5236": {
      "branch": 225,
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17133,
        17268
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5237": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17133,
        17268
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5239": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17133,
        17268
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5240": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5244": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5246": {
      "op": "SHL"
    },
    "5247": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17133,
        17268
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5248": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17133,
        17268
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5251": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17133,
        17268
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5253": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17133,
        17268
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5254": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17133,
        17268
      ],
      "op": "ADD",
      "path": "2"
    },
    "5255": {
      "op": "MSTORE"
    },
    "5256": {
      "op": "PUSH1",
      "value": "0x56"
    },
    "5258": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5260": {
      "op": "DUP3"
    },
    "5261": {
      "op": "ADD"
    },
    "5262": {
      "op": "MSTORE"
    },
    "5263": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20757064617465496E666F726D6174696F6E42"
    },
    "5296": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5298": {
      "op": "DUP3"
    },
    "5299": {
      "op": "ADD"
    },
    "5300": {
      "op": "MSTORE"
    },
    "5301": {
      "op": "PUSH32",
      "value": "0x617463683A204E756D626572206F66207061727469636970616E747320616E64"
    },
    "5334": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5336": {
      "op": "DUP3"
    },
    "5337": {
      "op": "ADD"
    },
    "5338": {
      "op": "MSTORE"
    },
    "5339": {
      "op": "PUSH22",
      "value": "0x103B30B63AB2B99030B932903234B33332B932B73A17"
    },
    "5362": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "5364": {
      "op": "SHL"
    },
    "5365": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5367": {
      "op": "DUP3"
    },
    "5368": {
      "op": "ADD"
    },
    "5369": {
      "op": "MSTORE"
    },
    "5370": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "5372": {
      "op": "ADD"
    },
    "5373": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17133,
        17268
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "5376": {
      "op": "JUMP"
    },
    "5377": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17133,
        17268
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5378": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17284,
        17290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5380": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17279,
        17447
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5381": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17296,
        17319
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5382": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17296,
        17319
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5383": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17296,
        17319
      ],
      "op": "LT",
      "path": "2"
    },
    "5384": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17279,
        17447
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5385": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17279,
        17447
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15C8"
    },
    "5388": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17279,
        17447
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5389": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17433
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 60
    },
    "5390": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17433
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5391": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17434,
        17435
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5392": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17436
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5393": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17436
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5394": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17436
      ],
      "op": "LT",
      "path": "2"
    },
    "5395": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17436
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x152C"
    },
    "5398": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17436
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5399": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5406": {
      "op": "SHL"
    },
    "5407": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5409": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17436
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5410": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x32"
    },
    "5412": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5414": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17436
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5415": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "5417": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5419": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17436
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5420": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17436
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5421": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17436
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5422": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17436
      ],
      "op": "POP",
      "path": "2"
    },
    "5423": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17436
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5425": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17436
      ],
      "op": "MUL",
      "path": "2"
    },
    "5426": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17436
      ],
      "op": "ADD",
      "path": "2"
    },
    "5427": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17427,
        17436
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "5428": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17359
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "5430": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5432": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17360,
        17375
      ],
      "op": "DUP11",
      "path": "2"
    },
    "5433": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17376
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "5438": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17376
      ],
      "op": "AND",
      "path": "2"
    },
    "5439": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17376
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "5444": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17376
      ],
      "op": "AND",
      "path": "2"
    },
    "5445": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17376
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5446": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17376
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5447": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5449": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17376
      ],
      "op": "ADD",
      "path": "2"
    },
    "5450": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17376
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5451": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17376
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5452": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17376
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5453": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5455": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17376
      ],
      "op": "ADD",
      "path": "2"
    },
    "5456": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5458": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17376
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5459": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17390
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "5461": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17390
      ],
      "op": "ADD",
      "path": "2"
    },
    "5462": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5464": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17403
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5465": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17403
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5466": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17404,
        17405
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5467": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5468": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5469": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "LT",
      "path": "2"
    },
    "5470": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1577"
    },
    "5473": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5474": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5479": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5481": {
      "op": "SHL"
    },
    "5482": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5484": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5485": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x32"
    },
    "5487": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5489": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5490": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "5492": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5494": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5495": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5496": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5497": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "POP",
      "path": "2"
    },
    "5498": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5500": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "MUL",
      "path": "2"
    },
    "5501": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "ADD",
      "path": "2"
    },
    "5502": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5504": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5505": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "ADD",
      "path": "2"
    },
    "5506": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5507": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x158C"
    },
    "5510": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5511": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5512": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F25"
    },
    "5515": {
      "fn": "Competition.updateInformationBatch",
      "jump": "i",
      "offset": [
        17391,
        17406
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5516": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17391,
        17406
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5523": {
      "op": "SHL"
    },
    "5524": {
      "op": "SUB"
    },
    "5525": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17407
      ],
      "op": "AND",
      "path": "2"
    },
    "5526": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17407
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5527": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17407
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5528": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5530": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17407
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5531": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17407
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5532": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17407
      ],
      "op": "ADD",
      "path": "2"
    },
    "5533": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17407
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5534": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17407
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5535": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17407
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5536": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17407
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5537": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5539": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17407
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5540": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17407
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5541": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17407
      ],
      "op": "ADD",
      "path": "2"
    },
    "5542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5544": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17407
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5545": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17407
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5546": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17407
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5547": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17424
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5548": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17424
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5549": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17424
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5550": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "5552": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17412
      ],
      "op": "ADD",
      "path": "2"
    },
    "5553": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17424
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5554": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17424
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5555": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17424
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5556": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17424
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5557": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17424
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5558": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17348,
        17436
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5559": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17321,
        17324
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 61
    },
    "5560": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17321,
        17324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15C0"
    },
    "5563": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17321,
        17324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5564": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17321,
        17324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x457A"
    },
    "5567": {
      "fn": "Competition.updateInformationBatch",
      "jump": "i",
      "offset": [
        17321,
        17324
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5568": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17321,
        17324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5569": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17321,
        17324
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5570": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17321,
        17324
      ],
      "op": "POP",
      "path": "2"
    },
    "5571": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17321,
        17324
      ],
      "op": "POP",
      "path": "2"
    },
    "5572": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17279,
        17447
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1504"
    },
    "5575": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17279,
        17447
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5576": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17279,
        17447
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5577": {
      "op": "POP"
    },
    "5578": {
      "op": "POP"
    },
    "5579": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17486,
        17538
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 62,
      "value": "0x40"
    },
    "5581": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17486,
        17538
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5582": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17466,
        17470
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 63,
      "value": "0x1"
    },
    "5584": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17466,
        17470
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5585": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17527,
        17537
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5586": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17527,
        17537
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5587": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17486,
        17538
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "5592": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17486,
        17538
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5593": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17486,
        17538
      ],
      "op": "AND",
      "path": "2"
    },
    "5594": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17486,
        17538
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5595": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17486,
        17538
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDFC0E8D429222115BCDEAE8834D5FBCECC360F743768FC2A9693A30A379999E9"
    },
    "5628": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17486,
        17538
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5629": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17486,
        17538
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5631": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17486,
        17538
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5632": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        17486,
        17538
      ],
      "op": "LOG3",
      "path": "2"
    },
    "5633": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        16794,
        17545
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "5634": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        16794,
        17545
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "5635": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        16794,
        17545
      ],
      "op": "POP",
      "path": "2"
    },
    "5636": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        16794,
        17545
      ],
      "op": "POP",
      "path": "2"
    },
    "5637": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        16794,
        17545
      ],
      "op": "POP",
      "path": "2"
    },
    "5638": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        16794,
        17545
      ],
      "op": "POP",
      "path": "2"
    },
    "5639": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        16794,
        17545
      ],
      "op": "POP",
      "path": "2"
    },
    "5640": {
      "fn": "Competition.updateInformationBatch",
      "offset": [
        16794,
        17545
      ],
      "op": "POP",
      "path": "2"
    },
    "5641": {
      "fn": "Competition.updateInformationBatch",
      "jump": "o",
      "offset": [
        16794,
        17545
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5642": {
      "fn": "Competition.updateDataset",
      "offset": [
        8710,
        9208
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5643": {
      "fn": "Competition.updateDataset",
      "offset": [
        8826,
        8838
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5645": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1624"
    },
    "5648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5650": {
      "op": "DUP1"
    },
    "5651": {
      "op": "MLOAD"
    },
    "5652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5654": {
      "op": "PUSH2",
      "value": "0x45D0"
    },
    "5657": {
      "op": "DUP4"
    },
    "5658": {
      "op": "CODECOPY"
    },
    "5659": {
      "op": "DUP2"
    },
    "5660": {
      "op": "MLOAD"
    },
    "5661": {
      "op": "SWAP2"
    },
    "5662": {
      "op": "MSTORE"
    },
    "5663": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5664": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D96"
    },
    "5667": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5668": {
      "fn": "Competition.updateDataset",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5669": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1640"
    },
    "5672": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5673": {
      "fn": "Competition.updateDataset",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5675": {
      "fn": "Competition.updateDataset",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5676": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5680": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5682": {
      "op": "SHL"
    },
    "5683": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5684": {
      "fn": "Competition.updateDataset",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5685": {
      "fn": "Competition.updateDataset",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5687": {
      "fn": "Competition.updateDataset",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "5688": {
      "fn": "Competition.updateDataset",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB18"
    },
    "5691": {
      "fn": "Competition.updateDataset",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5692": {
      "fn": "Competition.updateDataset",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4477"
    },
    "5695": {
      "fn": "Competition.updateDataset",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5696": {
      "fn": "Competition.updateDataset",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5697": {
      "fn": "Competition.updateDataset",
      "offset": [
        8879,
        8896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5699": {
      "fn": "Competition.updateDataset",
      "offset": [
        8879,
        8896
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5700": {
      "fn": "Competition.updateDataset",
      "offset": [
        8879,
        8896
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5705": {
      "op": "SHL"
    },
    "5706": {
      "fn": "Competition.updateDataset",
      "offset": [
        8879,
        8896
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5707": {
      "fn": "Competition.updateDataset",
      "offset": [
        8879,
        8896
      ],
      "op": "DIV",
      "path": "2"
    },
    "5708": {
      "fn": "Competition.updateDataset",
      "offset": [
        8879,
        8896
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "5713": {
      "fn": "Competition.updateDataset",
      "offset": [
        8879,
        8896
      ],
      "op": "AND",
      "path": "2"
    },
    "5714": {
      "fn": "Competition.updateDataset",
      "offset": [
        8854,
        8876
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5716": {
      "fn": "Competition.updateDataset",
      "offset": [
        8914,
        8942
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 64
    },
    "5717": {
      "fn": "Competition.updateDataset",
      "offset": [
        8914,
        8942
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5718": {
      "fn": "Competition.updateDataset",
      "offset": [
        8914,
        8942
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5719": {
      "fn": "Competition.updateDataset",
      "offset": [
        8914,
        8925
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "5721": {
      "fn": "Competition.updateDataset",
      "offset": [
        8914,
        8942
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5723": {
      "fn": "Competition.updateDataset",
      "offset": [
        8914,
        8942
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5724": {
      "fn": "Competition.updateDataset",
      "offset": [
        8914,
        8942
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5726": {
      "fn": "Competition.updateDataset",
      "offset": [
        8914,
        8942
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5727": {
      "fn": "Competition.updateDataset",
      "offset": [
        8914,
        8942
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5728": {
      "fn": "Competition.updateDataset",
      "offset": [
        8914,
        8948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5730": {
      "fn": "Competition.updateDataset",
      "offset": [
        8914,
        8948
      ],
      "op": "ADD",
      "path": "2"
    },
    "5731": {
      "fn": "Competition.updateDataset",
      "offset": [
        8914,
        8948
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5732": {
      "fn": "Competition.updateDataset",
      "offset": [
        8879,
        8896
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5733": {
      "fn": "Competition.updateDataset",
      "offset": [
        8879,
        8896
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5734": {
      "fn": "Competition.updateDataset",
      "offset": [
        8914,
        8948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5736": {
      "fn": "Competition.updateDataset",
      "offset": [
        8914,
        8948
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5737": {
      "fn": "Competition.updateDataset",
      "offset": [
        8914,
        8948
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5738": {
      "fn": "Competition.updateDataset",
      "offset": [
        8914,
        8948
      ],
      "op": "AND",
      "path": "2"
    },
    "5739": {
      "branch": 226,
      "fn": "Competition.updateDataset",
      "offset": [
        8914,
        8953
      ],
      "op": "EQ",
      "path": "2"
    },
    "5740": {
      "fn": "Competition.updateDataset",
      "offset": [
        8906,
        9007
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16D1"
    },
    "5743": {
      "branch": 226,
      "fn": "Competition.updateDataset",
      "offset": [
        8906,
        9007
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5744": {
      "fn": "Competition.updateDataset",
      "offset": [
        8906,
        9007
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5746": {
      "fn": "Competition.updateDataset",
      "offset": [
        8906,
        9007
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5747": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5751": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5753": {
      "op": "SHL"
    },
    "5754": {
      "fn": "Competition.updateDataset",
      "offset": [
        8906,
        9007
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5755": {
      "fn": "Competition.updateDataset",
      "offset": [
        8906,
        9007
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5758": {
      "fn": "Competition.updateDataset",
      "offset": [
        8906,
        9007
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5760": {
      "fn": "Competition.updateDataset",
      "offset": [
        8906,
        9007
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5761": {
      "fn": "Competition.updateDataset",
      "offset": [
        8906,
        9007
      ],
      "op": "ADD",
      "path": "2"
    },
    "5762": {
      "op": "MSTORE"
    },
    "5763": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "5765": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5767": {
      "op": "DUP3"
    },
    "5768": {
      "op": "ADD"
    },
    "5769": {
      "op": "MSTORE"
    },
    "5770": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20757064617465446174617365743A20436861"
    },
    "5803": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5805": {
      "op": "DUP3"
    },
    "5806": {
      "op": "ADD"
    },
    "5807": {
      "op": "MSTORE"
    },
    "5808": {
      "op": "PUSH17",
      "value": "0x363632B733B29034B99031B637B9B2B217"
    },
    "5826": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "5828": {
      "op": "SHL"
    },
    "5829": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5831": {
      "op": "DUP3"
    },
    "5832": {
      "op": "ADD"
    },
    "5833": {
      "op": "MSTORE"
    },
    "5834": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5836": {
      "op": "ADD"
    },
    "5837": {
      "fn": "Competition.updateDataset",
      "offset": [
        8906,
        9007
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "5840": {
      "op": "JUMP"
    },
    "5841": {
      "fn": "Competition.updateDataset",
      "offset": [
        8906,
        9007
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5842": {
      "branch": 227,
      "fn": "Competition.updateDataset",
      "offset": [
        9025,
        9053
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 65
    },
    "5843": {
      "fn": "Competition.updateDataset",
      "offset": [
        9017,
        9118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1744"
    },
    "5846": {
      "branch": 227,
      "fn": "Competition.updateDataset",
      "offset": [
        9017,
        9118
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5847": {
      "fn": "Competition.updateDataset",
      "offset": [
        9017,
        9118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5849": {
      "fn": "Competition.updateDataset",
      "offset": [
        9017,
        9118
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5850": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5854": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5856": {
      "op": "SHL"
    },
    "5857": {
      "fn": "Competition.updateDataset",
      "offset": [
        9017,
        9118
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5858": {
      "fn": "Competition.updateDataset",
      "offset": [
        9017,
        9118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5861": {
      "fn": "Competition.updateDataset",
      "offset": [
        9017,
        9118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5863": {
      "fn": "Competition.updateDataset",
      "offset": [
        9017,
        9118
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5864": {
      "fn": "Competition.updateDataset",
      "offset": [
        9017,
        9118
      ],
      "op": "ADD",
      "path": "2"
    },
    "5865": {
      "op": "MSTORE"
    },
    "5866": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "5868": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5870": {
      "op": "DUP3"
    },
    "5871": {
      "op": "ADD"
    },
    "5872": {
      "op": "MSTORE"
    },
    "5873": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20757064617465446174617365743A204D7573"
    },
    "5906": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5908": {
      "op": "DUP3"
    },
    "5909": {
      "op": "ADD"
    },
    "5910": {
      "op": "MSTORE"
    },
    "5911": {
      "op": "PUSH32",
      "value": "0x742068617665207072652D6578697374696E6720646174617365742E00000000"
    },
    "5944": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5946": {
      "op": "DUP3"
    },
    "5947": {
      "op": "ADD"
    },
    "5948": {
      "op": "MSTORE"
    },
    "5949": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5951": {
      "op": "ADD"
    },
    "5952": {
      "fn": "Competition.updateDataset",
      "offset": [
        9017,
        9118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "5955": {
      "op": "JUMP"
    },
    "5956": {
      "fn": "Competition.updateDataset",
      "offset": [
        9017,
        9118
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5957": {
      "fn": "Competition.updateDataset",
      "offset": [
        9138,
        9201
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 66,
      "value": "0x107F"
    },
    "5960": {
      "fn": "Competition.updateDataset",
      "offset": [
        9153,
        9168
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5961": {
      "fn": "Competition.updateDataset",
      "offset": [
        9170,
        9184
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5962": {
      "fn": "Competition.updateDataset",
      "offset": [
        9186,
        9200
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5963": {
      "fn": "Competition.updateDataset",
      "offset": [
        9138,
        9152
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3146"
    },
    "5966": {
      "fn": "Competition.updateDataset",
      "jump": "i",
      "offset": [
        9138,
        9201
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5967": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21289,
        21789
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5968": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21414,
        21430
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "5970": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21446,
        21473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5972": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21490,
        21511
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x175D"
    },
    "5975": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21501,
        21511
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5976": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21490,
        21498
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5977": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21490,
        21511
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4505"
    },
    "5980": {
      "fn": "Competition.getSubmitters",
      "jump": "i",
      "offset": [
        21490,
        21511
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5981": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21490,
        21511
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5982": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5991": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5992": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "GT",
      "path": "2"
    },
    "5993": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5994": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1783"
    },
    "5997": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5998": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6003": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6005": {
      "op": "SHL"
    },
    "6006": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6008": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6009": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x41"
    },
    "6011": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6013": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6014": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "6016": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6018": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "REVERT",
      "path": "2"
    },
    "6019": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6020": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6022": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6023": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6024": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6025": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6026": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6027": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6028": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6030": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "MUL",
      "path": "2"
    },
    "6031": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6033": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "ADD",
      "path": "2"
    },
    "6034": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6035": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "ADD",
      "path": "2"
    },
    "6036": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6038": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6039": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6040": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6041": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17AC"
    },
    "6044": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6045": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6046": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6048": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "ADD",
      "path": "2"
    },
    "6049": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6051": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6052": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "MUL",
      "path": "2"
    },
    "6053": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6054": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "6055": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6056": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "6057": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "ADD",
      "path": "2"
    },
    "6058": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6059": {
      "op": "POP"
    },
    "6060": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21476,
        21512
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6061": {
      "op": "POP"
    },
    "6062": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21571,
        21599
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "6067": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21571,
        21599
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6068": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21571,
        21599
      ],
      "op": "AND",
      "path": "2"
    },
    "6069": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21522,
        21568
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6071": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21571,
        21599
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6072": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21571,
        21599
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6073": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21571,
        21599
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6074": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21571,
        21582
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "6076": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21571,
        21599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6078": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21571,
        21599
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6079": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21571,
        21599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6081": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21571,
        21599
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6082": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21571,
        21599
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6083": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21446,
        21512
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6084": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21446,
        21512
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6085": {
      "op": "POP"
    },
    "6086": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21571,
        21610
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6088": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21571,
        21610
      ],
      "op": "ADD",
      "path": "2"
    },
    "6089": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21634,
        21644
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6090": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21620,
        21755
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6091": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21650,
        21658
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6092": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21646,
        21647
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6093": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21646,
        21658
      ],
      "op": "LT",
      "path": "2"
    },
    "6094": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21620,
        21755
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6095": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21620,
        21755
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x182F"
    },
    "6098": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21620,
        21755
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6099": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21709,
        21743
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 67,
      "value": "0x17DC"
    },
    "6102": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21726,
        21739
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6103": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21741,
        21742
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6104": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21709,
        21725
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32A6"
    },
    "6107": {
      "fn": "Competition.getSubmitters",
      "jump": "i",
      "offset": [
        21709,
        21743
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6108": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21709,
        21743
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6109": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21689
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6110": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21690,
        21704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17E7"
    },
    "6113": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21694,
        21704
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6114": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21690,
        21691
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6115": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21690,
        21704
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4505"
    },
    "6118": {
      "fn": "Competition.getSubmitters",
      "jump": "i",
      "offset": [
        21690,
        21704
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6119": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21690,
        21704
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6120": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6121": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6122": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6123": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "LT",
      "path": "2"
    },
    "6124": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1805"
    },
    "6127": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6128": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6133": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6135": {
      "op": "SHL"
    },
    "6136": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6138": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6139": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x32"
    },
    "6141": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6143": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6144": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "6146": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6148": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "REVERT",
      "path": "2"
    },
    "6149": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6156": {
      "op": "SHL"
    },
    "6157": {
      "op": "SUB"
    },
    "6158": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21744
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6159": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21744
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6160": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21744
      ],
      "op": "AND",
      "path": "2"
    },
    "6161": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6163": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6164": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6165": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "MUL",
      "path": "2"
    },
    "6166": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6167": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6168": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6169": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "ADD",
      "path": "2"
    },
    "6170": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6171": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6172": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21705
      ],
      "op": "ADD",
      "path": "2"
    },
    "6173": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21679,
        21744
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6174": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21660,
        21663
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 68
    },
    "6175": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21660,
        21663
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1827"
    },
    "6178": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21660,
        21663
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6179": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21660,
        21663
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x457A"
    },
    "6182": {
      "fn": "Competition.getSubmitters",
      "jump": "i",
      "offset": [
        21660,
        21663
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6183": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21660,
        21663
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6184": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21660,
        21663
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6185": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21660,
        21663
      ],
      "op": "POP",
      "path": "2"
    },
    "6186": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21660,
        21663
      ],
      "op": "POP",
      "path": "2"
    },
    "6187": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21620,
        21755
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17CA"
    },
    "6190": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21620,
        21755
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6191": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21620,
        21755
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6192": {
      "op": "POP"
    },
    "6193": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21772,
        21782
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 69
    },
    "6194": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21772,
        21782
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "6195": {
      "fn": "Competition.getSubmitters",
      "offset": [
        21289,
        21789
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6196": {
      "op": "POP"
    },
    "6197": {
      "op": "POP"
    },
    "6198": {
      "op": "POP"
    },
    "6199": {
      "op": "POP"
    },
    "6200": {
      "op": "POP"
    },
    "6201": {
      "fn": "Competition.getSubmitters",
      "jump": "o",
      "offset": [
        21289,
        21789
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6202": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6058,
        6301
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6203": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6157,
        6169
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6205": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1854"
    },
    "6208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6210": {
      "op": "DUP1"
    },
    "6211": {
      "op": "MLOAD"
    },
    "6212": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6214": {
      "op": "PUSH2",
      "value": "0x45D0"
    },
    "6217": {
      "op": "DUP4"
    },
    "6218": {
      "op": "CODECOPY"
    },
    "6219": {
      "op": "DUP2"
    },
    "6220": {
      "op": "MLOAD"
    },
    "6221": {
      "op": "SWAP2"
    },
    "6222": {
      "op": "MSTORE"
    },
    "6223": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "6224": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D96"
    },
    "6227": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6228": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6229": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1870"
    },
    "6232": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6233": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6235": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6236": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6240": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6242": {
      "op": "SHL"
    },
    "6243": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6244": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6245": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6247": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "6248": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB18"
    },
    "6251": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6252": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4477"
    },
    "6255": {
      "fn": "Competition.updateRewardsThreshold",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6256": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6257": {
      "op": "POP"
    },
    "6258": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6185,
        6202
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 70,
      "value": "0x4"
    },
    "6260": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6185,
        6217
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6261": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6185,
        6217
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6262": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6185,
        6217
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6263": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6257,
        6294
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 71,
      "value": "0x40"
    },
    "6265": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6257,
        6294
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6266": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6237,
        6241
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 72,
      "value": "0x1"
    },
    "6268": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6237,
        6241
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6269": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6205,
        6217
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6270": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6205,
        6217
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6271": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6257,
        6294
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x73E002420A7DEFB91818836F9AAA83222B749A40C213C7C0FBCCAACDD259E052"
    },
    "6304": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6257,
        6294
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6305": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6257,
        6294
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6307": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6257,
        6294
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6308": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6257,
        6294
      ],
      "op": "LOG2",
      "path": "2"
    },
    "6309": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6058,
        6301
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6310": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6058,
        6301
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6311": {
      "fn": "Competition.updateRewardsThreshold",
      "offset": [
        6058,
        6301
      ],
      "op": "POP",
      "path": "2"
    },
    "6312": {
      "fn": "Competition.updateRewardsThreshold",
      "jump": "o",
      "offset": [
        6058,
        6301
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6313": {
      "fn": "Competition.increaseStake",
      "offset": [
        1295,
        2179
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6314": {
      "fn": "Competition.increaseStake",
      "offset": [
        1443,
        1460
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6316": {
      "fn": "Competition.increaseStake",
      "offset": [
        1443,
        1460
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6317": {
      "fn": "Competition.increaseStake",
      "offset": [
        1390,
        1402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6319": {
      "fn": "Competition.increaseStake",
      "offset": [
        1390,
        1402
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6324": {
      "op": "SHL"
    },
    "6325": {
      "fn": "Competition.increaseStake",
      "offset": [
        1443,
        1460
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6326": {
      "fn": "Competition.increaseStake",
      "offset": [
        1443,
        1460
      ],
      "op": "DIV",
      "path": "2"
    },
    "6327": {
      "fn": "Competition.increaseStake",
      "offset": [
        1443,
        1460
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "6332": {
      "fn": "Competition.increaseStake",
      "offset": [
        1443,
        1460
      ],
      "op": "AND",
      "path": "2"
    },
    "6333": {
      "fn": "Competition.increaseStake",
      "offset": [
        1443,
        1460
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6338": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6340": {
      "op": "SHL"
    },
    "6341": {
      "op": "SUB"
    },
    "6342": {
      "fn": "Competition.increaseStake",
      "offset": [
        1500,
        1506
      ],
      "op": "AND",
      "path": "2",
      "statement": 73
    },
    "6343": {
      "fn": "Competition.increaseStake",
      "offset": [
        1478,
        1488
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6344": {
      "branch": 228,
      "fn": "Competition.increaseStake",
      "offset": [
        1478,
        1507
      ],
      "op": "EQ",
      "path": "2"
    },
    "6345": {
      "fn": "Competition.increaseStake",
      "offset": [
        1470,
        1590
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1951"
    },
    "6348": {
      "branch": 228,
      "fn": "Competition.increaseStake",
      "offset": [
        1470,
        1590
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6349": {
      "fn": "Competition.increaseStake",
      "offset": [
        1470,
        1590
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6351": {
      "fn": "Competition.increaseStake",
      "offset": [
        1470,
        1590
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6352": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6356": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6358": {
      "op": "SHL"
    },
    "6359": {
      "fn": "Competition.increaseStake",
      "offset": [
        1470,
        1590
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6360": {
      "fn": "Competition.increaseStake",
      "offset": [
        1470,
        1590
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6363": {
      "fn": "Competition.increaseStake",
      "offset": [
        1470,
        1590
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6365": {
      "fn": "Competition.increaseStake",
      "offset": [
        1470,
        1590
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6366": {
      "fn": "Competition.increaseStake",
      "offset": [
        1470,
        1590
      ],
      "op": "ADD",
      "path": "2"
    },
    "6367": {
      "op": "MSTORE"
    },
    "6368": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "6370": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6372": {
      "op": "DUP3"
    },
    "6373": {
      "op": "ADD"
    },
    "6374": {
      "op": "MSTORE"
    },
    "6375": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20696E6372656173655374616B653A20506C65"
    },
    "6408": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6410": {
      "op": "DUP3"
    },
    "6411": {
      "op": "ADD"
    },
    "6412": {
      "op": "MSTORE"
    },
    "6413": {
      "op": "PUSH32",
      "value": "0x6173652063616C6C20746869732066756E6374696F6E20766961207468652074"
    },
    "6446": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6448": {
      "op": "DUP3"
    },
    "6449": {
      "op": "ADD"
    },
    "6450": {
      "op": "MSTORE"
    },
    "6451": {
      "op": "PUSH14",
      "value": "0x37B5B2B71031B7B73A3930B1BA17"
    },
    "6466": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "6468": {
      "op": "SHL"
    },
    "6469": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6471": {
      "op": "DUP3"
    },
    "6472": {
      "op": "ADD"
    },
    "6473": {
      "op": "MSTORE"
    },
    "6474": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "6476": {
      "op": "ADD"
    },
    "6477": {
      "fn": "Competition.increaseStake",
      "offset": [
        1470,
        1590
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "6480": {
      "op": "JUMP"
    },
    "6481": {
      "fn": "Competition.increaseStake",
      "offset": [
        1470,
        1590
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6482": {
      "fn": "Competition.increaseStake",
      "offset": [
        1608,
        1636
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 74,
      "value": "0xFFFFFFFF"
    },
    "6487": {
      "fn": "Competition.increaseStake",
      "offset": [
        1608,
        1636
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6488": {
      "fn": "Competition.increaseStake",
      "offset": [
        1608,
        1636
      ],
      "op": "AND",
      "path": "2"
    },
    "6489": {
      "fn": "Competition.increaseStake",
      "offset": [
        1608,
        1636
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6491": {
      "fn": "Competition.increaseStake",
      "offset": [
        1608,
        1636
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6492": {
      "fn": "Competition.increaseStake",
      "offset": [
        1608,
        1636
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6493": {
      "fn": "Competition.increaseStake",
      "offset": [
        1608,
        1636
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6494": {
      "fn": "Competition.increaseStake",
      "offset": [
        1608,
        1619
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "6496": {
      "fn": "Competition.increaseStake",
      "offset": [
        1608,
        1636
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6498": {
      "fn": "Competition.increaseStake",
      "offset": [
        1608,
        1636
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6499": {
      "fn": "Competition.increaseStake",
      "offset": [
        1608,
        1636
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6501": {
      "fn": "Competition.increaseStake",
      "offset": [
        1608,
        1636
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6502": {
      "fn": "Competition.increaseStake",
      "offset": [
        1608,
        1636
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6503": {
      "fn": "Competition.increaseStake",
      "offset": [
        1608,
        1642
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6505": {
      "fn": "Competition.increaseStake",
      "offset": [
        1608,
        1642
      ],
      "op": "ADD",
      "path": "2"
    },
    "6506": {
      "fn": "Competition.increaseStake",
      "offset": [
        1608,
        1642
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6507": {
      "fn": "Competition.increaseStake",
      "offset": [
        1608,
        1642
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6509": {
      "fn": "Competition.increaseStake",
      "offset": [
        1608,
        1642
      ],
      "op": "AND",
      "path": "2"
    },
    "6510": {
      "fn": "Competition.increaseStake",
      "offset": [
        1646,
        1647
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6512": {
      "fn": "Competition.increaseStake",
      "offset": [
        1608,
        1647
      ],
      "op": "EQ",
      "path": "2"
    },
    "6513": {
      "branch": 229,
      "fn": "Competition.increaseStake",
      "offset": [
        1608,
        1647
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6514": {
      "fn": "Competition.increaseStake",
      "offset": [
        1600,
        1754
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A18"
    },
    "6517": {
      "branch": 229,
      "fn": "Competition.increaseStake",
      "offset": [
        1600,
        1754
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6518": {
      "fn": "Competition.increaseStake",
      "offset": [
        1600,
        1754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6520": {
      "fn": "Competition.increaseStake",
      "offset": [
        1600,
        1754
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6521": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6525": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6527": {
      "op": "SHL"
    },
    "6528": {
      "fn": "Competition.increaseStake",
      "offset": [
        1600,
        1754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6529": {
      "fn": "Competition.increaseStake",
      "offset": [
        1600,
        1754
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6532": {
      "fn": "Competition.increaseStake",
      "offset": [
        1600,
        1754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6534": {
      "fn": "Competition.increaseStake",
      "offset": [
        1600,
        1754
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6535": {
      "fn": "Competition.increaseStake",
      "offset": [
        1600,
        1754
      ],
      "op": "ADD",
      "path": "2"
    },
    "6536": {
      "op": "MSTORE"
    },
    "6537": {
      "op": "PUSH1",
      "value": "0x66"
    },
    "6539": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6541": {
      "op": "DUP3"
    },
    "6542": {
      "op": "ADD"
    },
    "6543": {
      "op": "MSTORE"
    },
    "6544": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20696E6372656173655374616B653A20506C65"
    },
    "6577": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6579": {
      "op": "DUP3"
    },
    "6580": {
      "op": "ADD"
    },
    "6581": {
      "op": "MSTORE"
    },
    "6582": {
      "op": "PUSH32",
      "value": "0x617365207761697420666F7220746865207374616B696E6720706572696F6420"
    },
    "6615": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6617": {
      "op": "DUP3"
    },
    "6618": {
      "op": "ADD"
    },
    "6619": {
      "op": "MSTORE"
    },
    "6620": {
      "op": "PUSH32",
      "value": "0x746F20756E6C6F636B206265666F7265206D6F64696679696E6720796F757220"
    },
    "6653": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6655": {
      "op": "DUP3"
    },
    "6656": {
      "op": "ADD"
    },
    "6657": {
      "op": "MSTORE"
    },
    "6658": {
      "op": "PUSH6",
      "value": "0x39BA30B5B297"
    },
    "6665": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "6667": {
      "op": "SHL"
    },
    "6668": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "6670": {
      "op": "DUP3"
    },
    "6671": {
      "op": "ADD"
    },
    "6672": {
      "op": "MSTORE"
    },
    "6673": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "6675": {
      "op": "ADD"
    },
    "6676": {
      "fn": "Competition.increaseStake",
      "offset": [
        1600,
        1754
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "6679": {
      "op": "JUMP"
    },
    "6680": {
      "fn": "Competition.increaseStake",
      "offset": [
        1600,
        1754
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6687": {
      "op": "SHL"
    },
    "6688": {
      "op": "SUB"
    },
    "6689": {
      "fn": "Competition.increaseStake",
      "offset": [
        1786,
        1801
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6690": {
      "fn": "Competition.increaseStake",
      "offset": [
        1786,
        1801
      ],
      "op": "AND",
      "path": "2"
    },
    "6691": {
      "fn": "Competition.increaseStake",
      "offset": [
        1765,
        1783
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6693": {
      "fn": "Competition.increaseStake",
      "offset": [
        1786,
        1801
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6694": {
      "fn": "Competition.increaseStake",
      "offset": [
        1786,
        1801
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6695": {
      "fn": "Competition.increaseStake",
      "offset": [
        1786,
        1801
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6696": {
      "fn": "Competition.increaseStake",
      "offset": [
        1786,
        1793
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "6698": {
      "fn": "Competition.increaseStake",
      "offset": [
        1786,
        1801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6700": {
      "fn": "Competition.increaseStake",
      "offset": [
        1786,
        1801
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6701": {
      "fn": "Competition.increaseStake",
      "offset": [
        1786,
        1801
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6702": {
      "fn": "Competition.increaseStake",
      "offset": [
        1786,
        1801
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6703": {
      "fn": "Competition.increaseStake",
      "offset": [
        1786,
        1801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6705": {
      "fn": "Competition.increaseStake",
      "offset": [
        1786,
        1801
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6706": {
      "fn": "Competition.increaseStake",
      "offset": [
        1786,
        1801
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6707": {
      "fn": "Competition.increaseStake",
      "offset": [
        1786,
        1801
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6708": {
      "fn": "Competition.increaseStake",
      "offset": [
        1786,
        1801
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6709": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1843
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "6714": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1843
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6715": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1843
      ],
      "op": "AND",
      "path": "2"
    },
    "6716": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1843
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6717": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1843
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6718": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "6720": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1843
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6721": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1843
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6722": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1843
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6723": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1843
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6724": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1843
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6725": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1865
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6726": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1865
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6727": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1865
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6728": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1857
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6730": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1857
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6731": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1857
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6732": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1857
      ],
      "op": "ADD",
      "path": "2"
    },
    "6733": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1865
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6734": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1865
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6735": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1865
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6736": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1865
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6737": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1865
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6738": {
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1876
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6739": {
      "branch": 230,
      "fn": "Competition.increaseStake",
      "offset": [
        1815,
        1890
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6740": {
      "fn": "Competition.increaseStake",
      "offset": [
        1811,
        2000
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A92"
    },
    "6743": {
      "branch": 230,
      "fn": "Competition.increaseStake",
      "offset": [
        1811,
        2000
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6744": {
      "fn": "Competition.increaseStake",
      "offset": [
        1965,
        1989
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 75,
      "value": "0x1A61"
    },
    "6747": {
      "fn": "Competition.increaseStake",
      "offset": [
        1978,
        1989
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6748": {
      "fn": "Competition.increaseStake",
      "offset": [
        1965,
        1975
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6749": {
      "fn": "Competition.increaseStake",
      "offset": [
        1965,
        1989
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "6752": {
      "fn": "Competition.increaseStake",
      "jump": "i",
      "offset": [
        1965,
        1989
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6753": {
      "fn": "Competition.increaseStake",
      "offset": [
        1965,
        1989
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6754": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1933
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "6759": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1933
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6760": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1933
      ],
      "op": "AND",
      "path": "2"
    },
    "6761": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1933
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6763": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1933
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6764": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1933
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6765": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1933
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6766": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1916
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "6768": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1933
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6770": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1933
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6771": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1933
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6772": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1933
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6773": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1933
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6775": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1933
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6776": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1933
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6777": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1933
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6784": {
      "op": "SHL"
    },
    "6785": {
      "op": "SUB"
    },
    "6786": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1955
      ],
      "op": "DUP11",
      "path": "2"
    },
    "6787": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1955
      ],
      "op": "AND",
      "path": "2"
    },
    "6788": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1955
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6789": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1955
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6790": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1947
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6792": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1947
      ],
      "op": "ADD",
      "path": "2"
    },
    "6793": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1955
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6794": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1955
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6795": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1955
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6796": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1955
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6797": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1955
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6798": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1962
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6800": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1962
      ],
      "op": "ADD",
      "path": "2"
    },
    "6801": {
      "fn": "Competition.increaseStake",
      "offset": [
        1905,
        1989
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6802": {
      "fn": "Competition.increaseStake",
      "offset": [
        1811,
        2000
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6803": {
      "fn": "Competition.increaseStake",
      "offset": [
        2028,
        2052
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 76,
      "value": "0x1A9C"
    },
    "6806": {
      "fn": "Competition.increaseStake",
      "offset": [
        2041,
        2052
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6807": {
      "fn": "Competition.increaseStake",
      "offset": [
        2028,
        2038
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6808": {
      "fn": "Competition.increaseStake",
      "offset": [
        2028,
        2052
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "6811": {
      "fn": "Competition.increaseStake",
      "jump": "i",
      "offset": [
        2028,
        2052
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6812": {
      "fn": "Competition.increaseStake",
      "offset": [
        2028,
        2052
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6819": {
      "op": "SHL"
    },
    "6820": {
      "op": "SUB"
    },
    "6821": {
      "fn": "Competition.increaseStake",
      "offset": [
        2010,
        2025
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6822": {
      "fn": "Competition.increaseStake",
      "offset": [
        2010,
        2025
      ],
      "op": "AND",
      "path": "2"
    },
    "6823": {
      "fn": "Competition.increaseStake",
      "offset": [
        2010,
        2025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6825": {
      "fn": "Competition.increaseStake",
      "offset": [
        2010,
        2025
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6826": {
      "fn": "Competition.increaseStake",
      "offset": [
        2010,
        2025
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6827": {
      "fn": "Competition.increaseStake",
      "offset": [
        2010,
        2025
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6828": {
      "fn": "Competition.increaseStake",
      "offset": [
        2010,
        2017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "6830": {
      "fn": "Competition.increaseStake",
      "offset": [
        2010,
        2025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6832": {
      "fn": "Competition.increaseStake",
      "offset": [
        2010,
        2025
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6833": {
      "fn": "Competition.increaseStake",
      "offset": [
        2010,
        2025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6835": {
      "fn": "Competition.increaseStake",
      "offset": [
        2010,
        2025
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6836": {
      "fn": "Competition.increaseStake",
      "offset": [
        2010,
        2025
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6837": {
      "fn": "Competition.increaseStake",
      "offset": [
        2010,
        2052
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6838": {
      "fn": "Competition.increaseStake",
      "offset": [
        2010,
        2052
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6839": {
      "fn": "Competition.increaseStake",
      "offset": [
        2010,
        2052
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6840": {
      "fn": "Competition.increaseStake",
      "offset": [
        2010,
        2052
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6841": {
      "fn": "Competition.increaseStake",
      "offset": [
        2062,
        2081
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 77,
      "value": "0x5"
    },
    "6843": {
      "fn": "Competition.increaseStake",
      "offset": [
        2062,
        2096
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6844": {
      "fn": "Competition.increaseStake",
      "offset": [
        2062,
        2096
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6845": {
      "fn": "Competition.increaseStake",
      "offset": [
        2085,
        2096
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6846": {
      "fn": "Competition.increaseStake",
      "offset": [
        2085,
        2096
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6847": {
      "fn": "Competition.increaseStake",
      "offset": [
        2010,
        2025
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6848": {
      "fn": "Competition.increaseStake",
      "offset": [
        2062,
        2096
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1ACA"
    },
    "6851": {
      "fn": "Competition.increaseStake",
      "offset": [
        2062,
        2096
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6852": {
      "fn": "Competition.increaseStake",
      "offset": [
        2085,
        2096
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6853": {
      "fn": "Competition.increaseStake",
      "offset": [
        2085,
        2096
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6854": {
      "fn": "Competition.increaseStake",
      "offset": [
        2062,
        2096
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "6857": {
      "fn": "Competition.increaseStake",
      "jump": "i",
      "offset": [
        2062,
        2096
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6858": {
      "fn": "Competition.increaseStake",
      "offset": [
        2062,
        2096
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6859": {
      "fn": "Competition.increaseStake",
      "offset": [
        2062,
        2096
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6860": {
      "fn": "Competition.increaseStake",
      "offset": [
        2062,
        2096
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6861": {
      "fn": "Competition.increaseStake",
      "offset": [
        2062,
        2096
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6862": {
      "op": "POP"
    },
    "6863": {
      "op": "POP"
    },
    "6864": {
      "fn": "Competition.increaseStake",
      "offset": [
        2137,
        2172
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 78,
      "value": "0x40"
    },
    "6866": {
      "fn": "Competition.increaseStake",
      "offset": [
        2137,
        2172
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6867": {
      "fn": "Competition.increaseStake",
      "offset": [
        2117,
        2121
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 79,
      "value": "0x1"
    },
    "6869": {
      "fn": "Competition.increaseStake",
      "offset": [
        2117,
        2121
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6870": {
      "op": "POP"
    },
    "6871": {
      "fn": "Competition.increaseStake",
      "offset": [
        2160,
        2171
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6872": {
      "fn": "Competition.increaseStake",
      "offset": [
        2160,
        2171
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6879": {
      "op": "SHL"
    },
    "6880": {
      "op": "SUB"
    },
    "6881": {
      "fn": "Competition.increaseStake",
      "offset": [
        2137,
        2172
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6882": {
      "fn": "Competition.increaseStake",
      "offset": [
        2137,
        2172
      ],
      "op": "AND",
      "path": "2"
    },
    "6883": {
      "fn": "Competition.increaseStake",
      "offset": [
        2137,
        2172
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6884": {
      "fn": "Competition.increaseStake",
      "offset": [
        2137,
        2172
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8B0ED825817A2E696C9A931715AF4609FC60E1701F09C89EE7645130E937EB2D"
    },
    "6917": {
      "fn": "Competition.increaseStake",
      "offset": [
        2137,
        2172
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6918": {
      "fn": "Competition.increaseStake",
      "offset": [
        2137,
        2172
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6920": {
      "fn": "Competition.increaseStake",
      "offset": [
        2137,
        2172
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6921": {
      "fn": "Competition.increaseStake",
      "offset": [
        2137,
        2172
      ],
      "op": "LOG3",
      "path": "2"
    },
    "6922": {
      "fn": "Competition.increaseStake",
      "offset": [
        1295,
        2179
      ],
      "op": "POP",
      "path": "2"
    },
    "6923": {
      "fn": "Competition.increaseStake",
      "offset": [
        1295,
        2179
      ],
      "op": "POP",
      "path": "2"
    },
    "6924": {
      "fn": "Competition.increaseStake",
      "offset": [
        1295,
        2179
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6925": {
      "fn": "Competition.increaseStake",
      "offset": [
        1295,
        2179
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6926": {
      "fn": "Competition.increaseStake",
      "offset": [
        1295,
        2179
      ],
      "op": "POP",
      "path": "2"
    },
    "6927": {
      "fn": "Competition.increaseStake",
      "offset": [
        1295,
        2179
      ],
      "op": "POP",
      "path": "2"
    },
    "6928": {
      "fn": "Competition.increaseStake",
      "jump": "o",
      "offset": [
        1295,
        2179
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6929": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        6862,
        7156
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6930": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        6978,
        6990
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6932": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B2B"
    },
    "6935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6937": {
      "op": "DUP1"
    },
    "6938": {
      "op": "MLOAD"
    },
    "6939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6941": {
      "op": "PUSH2",
      "value": "0x45D0"
    },
    "6944": {
      "op": "DUP4"
    },
    "6945": {
      "op": "CODECOPY"
    },
    "6946": {
      "op": "DUP2"
    },
    "6947": {
      "op": "MLOAD"
    },
    "6948": {
      "op": "SWAP2"
    },
    "6949": {
      "op": "MSTORE"
    },
    "6950": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "6951": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D96"
    },
    "6954": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6955": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6956": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B47"
    },
    "6959": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6960": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6962": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6963": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6967": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6969": {
      "op": "SHL"
    },
    "6970": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6971": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6972": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6974": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "6975": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB18"
    },
    "6978": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6979": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4477"
    },
    "6982": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6983": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6984": {
      "op": "POP"
    },
    "6985": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        7006,
        7039
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 80,
      "value": "0xA"
    },
    "6987": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        7006,
        7055
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6988": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        7006,
        7055
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6989": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        7006,
        7055
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6990": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        7095,
        7149
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 81,
      "value": "0x40"
    },
    "6992": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        7095,
        7149
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6993": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        7075,
        7079
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 82,
      "value": "0x1"
    },
    "6995": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        7075,
        7079
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6996": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        7042,
        7055
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6997": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        7042,
        7055
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6998": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        7095,
        7149
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x211318E1B6942C96EAAD65D5F6C4C520722236466093427DE4DACB729BD36DFB"
    },
    "7031": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        7095,
        7149
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7032": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        7095,
        7149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7034": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        7095,
        7149
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7035": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        7095,
        7149
      ],
      "op": "LOG2",
      "path": "2"
    },
    "7036": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        6862,
        7156
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7037": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        6862,
        7156
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7038": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "offset": [
        6862,
        7156
      ],
      "op": "POP",
      "path": "2"
    },
    "7039": {
      "fn": "Competition.updateTournamentRewardsPercentageInWei",
      "jump": "o",
      "offset": [
        6862,
        7156
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7040": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6307,
        6559
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7041": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6409,
        6421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7043": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B9A"
    },
    "7046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7048": {
      "op": "DUP1"
    },
    "7049": {
      "op": "MLOAD"
    },
    "7050": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7052": {
      "op": "PUSH2",
      "value": "0x45D0"
    },
    "7055": {
      "op": "DUP4"
    },
    "7056": {
      "op": "CODECOPY"
    },
    "7057": {
      "op": "DUP2"
    },
    "7058": {
      "op": "MLOAD"
    },
    "7059": {
      "op": "SWAP2"
    },
    "7060": {
      "op": "MSTORE"
    },
    "7061": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "7062": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D96"
    },
    "7065": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7066": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7067": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BB6"
    },
    "7070": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7071": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7073": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7074": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7078": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7080": {
      "op": "SHL"
    },
    "7081": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7082": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7083": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7085": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "7086": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB18"
    },
    "7089": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7090": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4477"
    },
    "7093": {
      "fn": "Competition.updateStakeThreshold",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7094": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7095": {
      "op": "POP"
    },
    "7096": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6437,
        6452
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 83,
      "value": "0x2"
    },
    "7098": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6437,
        6472
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7099": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6437,
        6472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7100": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6437,
        6472
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7101": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6512,
        6552
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 84,
      "value": "0x40"
    },
    "7103": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6512,
        6552
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7104": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6492,
        6496
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 85,
      "value": "0x1"
    },
    "7106": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6492,
        6496
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7107": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6455,
        6472
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7108": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6455,
        6472
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7109": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6512,
        6552
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x99C5AF1F811B150D39D592621F8F23F4DF7E5664642F227684973847EB2888BE"
    },
    "7142": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6512,
        6552
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7143": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6512,
        6552
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7145": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6512,
        6552
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7146": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6512,
        6552
      ],
      "op": "LOG2",
      "path": "2"
    },
    "7147": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6307,
        6559
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7148": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6307,
        6559
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7149": {
      "fn": "Competition.updateStakeThreshold",
      "offset": [
        6307,
        6559
      ],
      "op": "POP",
      "path": "2"
    },
    "7150": {
      "fn": "Competition.updateStakeThreshold",
      "jump": "o",
      "offset": [
        6307,
        6559
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7151": {
      "fn": "Competition.updateKey",
      "offset": [
        9214,
        9672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7152": {
      "fn": "Competition.updateKey",
      "offset": [
        9318,
        9330
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7154": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C09"
    },
    "7157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7159": {
      "op": "DUP1"
    },
    "7160": {
      "op": "MLOAD"
    },
    "7161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7163": {
      "op": "PUSH2",
      "value": "0x45D0"
    },
    "7166": {
      "op": "DUP4"
    },
    "7167": {
      "op": "CODECOPY"
    },
    "7168": {
      "op": "DUP2"
    },
    "7169": {
      "op": "MLOAD"
    },
    "7170": {
      "op": "SWAP2"
    },
    "7171": {
      "op": "MSTORE"
    },
    "7172": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "7173": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D96"
    },
    "7176": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7177": {
      "fn": "Competition.updateKey",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7178": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C25"
    },
    "7181": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7182": {
      "fn": "Competition.updateKey",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7184": {
      "fn": "Competition.updateKey",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7185": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7189": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7191": {
      "op": "SHL"
    },
    "7192": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7193": {
      "fn": "Competition.updateKey",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7194": {
      "fn": "Competition.updateKey",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7196": {
      "fn": "Competition.updateKey",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "7197": {
      "fn": "Competition.updateKey",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB18"
    },
    "7200": {
      "fn": "Competition.updateKey",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7201": {
      "fn": "Competition.updateKey",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4477"
    },
    "7204": {
      "fn": "Competition.updateKey",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7205": {
      "fn": "Competition.updateKey",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7206": {
      "fn": "Competition.updateKey",
      "offset": [
        9371,
        9388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7208": {
      "fn": "Competition.updateKey",
      "offset": [
        9371,
        9388
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7209": {
      "fn": "Competition.updateKey",
      "offset": [
        9371,
        9388
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7214": {
      "op": "SHL"
    },
    "7215": {
      "fn": "Competition.updateKey",
      "offset": [
        9371,
        9388
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7216": {
      "fn": "Competition.updateKey",
      "offset": [
        9371,
        9388
      ],
      "op": "DIV",
      "path": "2"
    },
    "7217": {
      "fn": "Competition.updateKey",
      "offset": [
        9371,
        9388
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "7222": {
      "fn": "Competition.updateKey",
      "offset": [
        9371,
        9388
      ],
      "op": "AND",
      "path": "2"
    },
    "7223": {
      "fn": "Competition.updateKey",
      "offset": [
        9346,
        9368
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7225": {
      "fn": "Competition.updateKey",
      "offset": [
        9406,
        9434
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 86
    },
    "7226": {
      "fn": "Competition.updateKey",
      "offset": [
        9406,
        9434
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7227": {
      "fn": "Competition.updateKey",
      "offset": [
        9406,
        9434
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7228": {
      "fn": "Competition.updateKey",
      "offset": [
        9406,
        9417
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "7230": {
      "fn": "Competition.updateKey",
      "offset": [
        9406,
        9434
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7232": {
      "fn": "Competition.updateKey",
      "offset": [
        9406,
        9434
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7233": {
      "fn": "Competition.updateKey",
      "offset": [
        9406,
        9434
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7235": {
      "fn": "Competition.updateKey",
      "offset": [
        9406,
        9434
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7236": {
      "fn": "Competition.updateKey",
      "offset": [
        9406,
        9434
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7237": {
      "fn": "Competition.updateKey",
      "offset": [
        9406,
        9440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7239": {
      "fn": "Competition.updateKey",
      "offset": [
        9406,
        9440
      ],
      "op": "ADD",
      "path": "2"
    },
    "7240": {
      "fn": "Competition.updateKey",
      "offset": [
        9406,
        9440
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7241": {
      "fn": "Competition.updateKey",
      "offset": [
        9371,
        9388
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7242": {
      "fn": "Competition.updateKey",
      "offset": [
        9371,
        9388
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7243": {
      "fn": "Competition.updateKey",
      "offset": [
        9406,
        9440
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "7245": {
      "fn": "Competition.updateKey",
      "offset": [
        9406,
        9440
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7246": {
      "fn": "Competition.updateKey",
      "offset": [
        9406,
        9440
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7247": {
      "fn": "Competition.updateKey",
      "offset": [
        9406,
        9440
      ],
      "op": "AND",
      "path": "2"
    },
    "7248": {
      "branch": 231,
      "fn": "Competition.updateKey",
      "offset": [
        9406,
        9445
      ],
      "op": "EQ",
      "path": "2"
    },
    "7249": {
      "fn": "Competition.updateKey",
      "offset": [
        9398,
        9495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CB2"
    },
    "7252": {
      "branch": 231,
      "fn": "Competition.updateKey",
      "offset": [
        9398,
        9495
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7253": {
      "fn": "Competition.updateKey",
      "offset": [
        9398,
        9495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7255": {
      "fn": "Competition.updateKey",
      "offset": [
        9398,
        9495
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7256": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7260": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7262": {
      "op": "SHL"
    },
    "7263": {
      "fn": "Competition.updateKey",
      "offset": [
        9398,
        9495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7264": {
      "fn": "Competition.updateKey",
      "offset": [
        9398,
        9495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7267": {
      "fn": "Competition.updateKey",
      "offset": [
        9398,
        9495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7269": {
      "fn": "Competition.updateKey",
      "offset": [
        9398,
        9495
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7270": {
      "fn": "Competition.updateKey",
      "offset": [
        9398,
        9495
      ],
      "op": "ADD",
      "path": "2"
    },
    "7271": {
      "op": "MSTORE"
    },
    "7272": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "7274": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7276": {
      "op": "DUP3"
    },
    "7277": {
      "op": "ADD"
    },
    "7278": {
      "op": "MSTORE"
    },
    "7279": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D207570646174654B65793A204368616C6C656E"
    },
    "7312": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7314": {
      "op": "DUP3"
    },
    "7315": {
      "op": "ADD"
    },
    "7316": {
      "op": "MSTORE"
    },
    "7317": {
      "op": "PUSH13",
      "value": "0x33B29034B99031B637B9B2B217"
    },
    "7331": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "7333": {
      "op": "SHL"
    },
    "7334": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7336": {
      "op": "DUP3"
    },
    "7337": {
      "op": "ADD"
    },
    "7338": {
      "op": "MSTORE"
    },
    "7339": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7341": {
      "op": "ADD"
    },
    "7342": {
      "fn": "Competition.updateKey",
      "offset": [
        9398,
        9495
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "7345": {
      "op": "JUMP"
    },
    "7346": {
      "fn": "Competition.updateKey",
      "offset": [
        9398,
        9495
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7347": {
      "branch": 232,
      "fn": "Competition.updateKey",
      "offset": [
        9513,
        9537
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 87
    },
    "7348": {
      "fn": "Competition.updateKey",
      "offset": [
        9505,
        9594
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D1C"
    },
    "7351": {
      "branch": 232,
      "fn": "Competition.updateKey",
      "offset": [
        9505,
        9594
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7352": {
      "fn": "Competition.updateKey",
      "offset": [
        9505,
        9594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7354": {
      "fn": "Competition.updateKey",
      "offset": [
        9505,
        9594
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7355": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7359": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7361": {
      "op": "SHL"
    },
    "7362": {
      "fn": "Competition.updateKey",
      "offset": [
        9505,
        9594
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7363": {
      "fn": "Competition.updateKey",
      "offset": [
        9505,
        9594
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7366": {
      "fn": "Competition.updateKey",
      "offset": [
        9505,
        9594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7368": {
      "fn": "Competition.updateKey",
      "offset": [
        9505,
        9594
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7369": {
      "fn": "Competition.updateKey",
      "offset": [
        9505,
        9594
      ],
      "op": "ADD",
      "path": "2"
    },
    "7370": {
      "op": "MSTORE"
    },
    "7371": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "7373": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7375": {
      "op": "DUP3"
    },
    "7376": {
      "op": "ADD"
    },
    "7377": {
      "op": "MSTORE"
    },
    "7378": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D207570646174654B65793A204D757374206861"
    },
    "7411": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7413": {
      "op": "DUP3"
    },
    "7414": {
      "op": "ADD"
    },
    "7415": {
      "op": "MSTORE"
    },
    "7416": {
      "op": "PUSH20",
      "value": "0x3B329038393296B2BC34B9BA34B7339035B2BC97"
    },
    "7437": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "7439": {
      "op": "SHL"
    },
    "7440": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7442": {
      "op": "DUP3"
    },
    "7443": {
      "op": "ADD"
    },
    "7444": {
      "op": "MSTORE"
    },
    "7445": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7447": {
      "op": "ADD"
    },
    "7448": {
      "fn": "Competition.updateKey",
      "offset": [
        9505,
        9594
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "7451": {
      "op": "JUMP"
    },
    "7452": {
      "fn": "Competition.updateKey",
      "offset": [
        9505,
        9594
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7453": {
      "fn": "Competition.updateKey",
      "offset": [
        9614,
        9665
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 88,
      "value": "0x107F"
    },
    "7456": {
      "fn": "Competition.updateKey",
      "offset": [
        9625,
        9640
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7457": {
      "fn": "Competition.updateKey",
      "offset": [
        9642,
        9652
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7458": {
      "fn": "Competition.updateKey",
      "offset": [
        9654,
        9664
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7459": {
      "fn": "Competition.updateKey",
      "offset": [
        9614,
        9624
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32B2"
    },
    "7462": {
      "fn": "Competition.updateKey",
      "jump": "i",
      "offset": [
        9614,
        9665
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7463": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6565,
        6856
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7464": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6680,
        6692
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7466": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D41"
    },
    "7469": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7471": {
      "op": "DUP1"
    },
    "7472": {
      "op": "MLOAD"
    },
    "7473": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7475": {
      "op": "PUSH2",
      "value": "0x45D0"
    },
    "7478": {
      "op": "DUP4"
    },
    "7479": {
      "op": "CODECOPY"
    },
    "7480": {
      "op": "DUP2"
    },
    "7481": {
      "op": "MLOAD"
    },
    "7482": {
      "op": "SWAP2"
    },
    "7483": {
      "op": "MSTORE"
    },
    "7484": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "7485": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D96"
    },
    "7488": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7489": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7490": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D5D"
    },
    "7493": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7494": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7496": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7497": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7501": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7503": {
      "op": "SHL"
    },
    "7504": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7505": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7506": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7508": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "7509": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB18"
    },
    "7512": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7513": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4477"
    },
    "7516": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7517": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7518": {
      "op": "POP"
    },
    "7519": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6708,
        6740
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 89,
      "value": "0x9"
    },
    "7521": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6708,
        6756
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7522": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6708,
        6756
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7523": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6708,
        6756
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7524": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6796,
        6849
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 90,
      "value": "0x40"
    },
    "7526": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6796,
        6849
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7527": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6776,
        6780
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 91,
      "value": "0x1"
    },
    "7529": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6776,
        6780
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7530": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6743,
        6756
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7531": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6743,
        6756
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7532": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6796,
        6849
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x94327140B3BB3BB989865FEF53B345CD1DDD7991B30E3233137AB646448FBEB5"
    },
    "7565": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6796,
        6849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7566": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6796,
        6849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7568": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6796,
        6849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7569": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6796,
        6849
      ],
      "op": "LOG2",
      "path": "2"
    },
    "7570": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6565,
        6856
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7571": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6565,
        6856
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7572": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "offset": [
        6565,
        6856
      ],
      "op": "POP",
      "path": "2"
    },
    "7573": {
      "fn": "Competition.updateChallengeRewardsPercentageInWei",
      "jump": "o",
      "offset": [
        6565,
        6856
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7574": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3867,
        4004
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7575": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3945,
        3949
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7577": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 92
    },
    "7578": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7579": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7580": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7582": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7583": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7584": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7585": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7587": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7588": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7589": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3980
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7596": {
      "op": "SHL"
    },
    "7597": {
      "op": "SUB"
    },
    "7598": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "7599": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7600": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "7601": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "AND",
      "path": "7"
    },
    "7602": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7603": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7604": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7605": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7606": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7607": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7608": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7609": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7610": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "7612": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "AND",
      "path": "7"
    },
    "7613": {
      "fn": "AccessControl.hasRole",
      "offset": [
        3968,
        3997
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7614": {
      "fn": "AccessControl.hasRole",
      "jump": "o",
      "offset": [
        3867,
        4004
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7615": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23654,
        24073
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7616": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24021
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 93,
      "value": "0xFFFFFFFF"
    },
    "7621": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24021
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7622": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24021
      ],
      "op": "AND",
      "path": "2"
    },
    "7623": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23766,
        23788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7625": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24021
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7626": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24021
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7627": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24021
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7628": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24004
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "7630": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24021
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7632": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24021
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7633": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24021
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7634": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24021
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7635": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24021
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7637": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24021
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7638": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24021
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7639": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24021
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7646": {
      "op": "SHL"
    },
    "7647": {
      "op": "SUB"
    },
    "7648": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24048
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7649": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24048
      ],
      "op": "AND",
      "path": "2"
    },
    "7650": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24048
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7651": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24048
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7652": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "7654": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24035
      ],
      "op": "ADD",
      "path": "2"
    },
    "7655": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24048
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7656": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24048
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7657": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24048
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7658": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24048
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7659": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24048
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7660": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24066
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7662": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24066
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7663": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24066
      ],
      "op": "ADD",
      "path": "2"
    },
    "7664": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24066
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7665": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23910,
        23982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "7667": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23910,
        23982
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7668": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23910,
        23982
      ],
      "op": "ADD",
      "path": "2"
    },
    "7669": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23910,
        23982
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7670": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23829,
        23899
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7672": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23829,
        23899
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7673": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23829,
        23899
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7674": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23829,
        23899
      ],
      "op": "ADD",
      "path": "2"
    },
    "7675": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23829,
        23899
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7676": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24066
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7677": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23993,
        24066
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7678": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23829,
        23982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E06"
    },
    "7681": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23829,
        23982
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7682": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23829,
        23982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "7685": {
      "fn": "Competition.getOverallRewards",
      "jump": "i",
      "offset": [
        23829,
        23982
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7686": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23829,
        23982
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7687": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23829,
        24066
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E10"
    },
    "7690": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23829,
        24066
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7691": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23829,
        24066
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7692": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23829,
        24066
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "7695": {
      "fn": "Competition.getOverallRewards",
      "jump": "i",
      "offset": [
        23829,
        24066
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7696": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23829,
        24066
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7697": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23804,
        24066
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "7698": {
      "fn": "Competition.getOverallRewards",
      "offset": [
        23654,
        24073
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7699": {
      "op": "POP"
    },
    "7700": {
      "op": "POP"
    },
    "7701": {
      "op": "POP"
    },
    "7702": {
      "fn": "Competition.getOverallRewards",
      "jump": "o",
      "offset": [
        23654,
        24073
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7703": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3408,
        3932
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7704": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3564,
        3574
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7705": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3497,
        3519
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7707": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3556,
        3575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7708": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3556,
        3575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7709": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3556,
        3575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7710": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3556,
        3563
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "7712": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3556,
        3575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7714": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3556,
        3575
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7715": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3556,
        3575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7717": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3556,
        3575
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7718": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3556,
        3575
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7719": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3556,
        3575
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7720": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3607,
        3622
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 94,
      "value": "0x2"
    },
    "7722": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3607,
        3622
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7723": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3593,
        3622
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7724": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3593,
        3622
      ],
      "op": "LT",
      "path": "2"
    },
    "7725": {
      "branch": 233,
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3593,
        3622
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7726": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3585,
        3688
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E9F"
    },
    "7729": {
      "branch": 233,
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3585,
        3688
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7730": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3585,
        3688
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7732": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3585,
        3688
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7733": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7737": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7739": {
      "op": "SHL"
    },
    "7740": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3585,
        3688
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7741": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3585,
        3688
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7744": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3585,
        3688
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7746": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3585,
        3688
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7747": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3585,
        3688
      ],
      "op": "ADD",
      "path": "2"
    },
    "7748": {
      "op": "MSTORE"
    },
    "7749": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "7751": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7753": {
      "op": "DUP3"
    },
    "7754": {
      "op": "ADD"
    },
    "7755": {
      "op": "MSTORE"
    },
    "7756": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D207375626D69744E657750726564696374696F"
    },
    "7789": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7791": {
      "op": "DUP3"
    },
    "7792": {
      "op": "ADD"
    },
    "7793": {
      "op": "MSTORE"
    },
    "7794": {
      "op": "PUSH32",
      "value": "0x6E733A205374616B652069732062656C6F77207468726573686F6C642E000000"
    },
    "7827": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7829": {
      "op": "DUP3"
    },
    "7830": {
      "op": "ADD"
    },
    "7831": {
      "op": "MSTORE"
    },
    "7832": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7834": {
      "op": "ADD"
    },
    "7835": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3585,
        3688
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "7838": {
      "op": "JUMP"
    },
    "7839": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3585,
        3688
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7840": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3716,
        3761
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 95,
      "value": "0x1EAA"
    },
    "7843": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3742,
        3743
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7845": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3746,
        3760
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7846": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3716,
        3733
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x340E"
    },
    "7849": {
      "fn": "Competition.submitNewPredictions",
      "jump": "i",
      "offset": [
        3716,
        3761
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7850": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3716,
        3761
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7851": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3789,
        3817
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 96,
      "value": "0xFFFFFFFF"
    },
    "7856": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3789,
        3817
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7857": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3789,
        3817
      ],
      "op": "AND",
      "path": "2"
    },
    "7858": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3789,
        3817
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7860": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3789,
        3817
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7861": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3789,
        3817
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7862": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3789,
        3817
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7863": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3789,
        3800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "7865": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3789,
        3817
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7867": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3789,
        3817
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7868": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3789,
        3817
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7870": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3789,
        3817
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7871": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3789,
        3817
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7872": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3698,
        3761
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7873": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3698,
        3761
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7874": {
      "op": "POP"
    },
    "7875": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3771,
        3841
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1ECF"
    },
    "7878": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3771,
        3841
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7879": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3789,
        3828
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "7881": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3789,
        3828
      ],
      "op": "ADD",
      "path": "2"
    },
    "7882": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3830,
        3840
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7883": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3771,
        3788
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35FA"
    },
    "7886": {
      "fn": "Competition.submitNewPredictions",
      "jump": "i",
      "offset": [
        3771,
        3841
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7887": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3771,
        3841
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7888": {
      "op": "POP"
    },
    "7889": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3879
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 97,
      "value": "0xFFFFFFFF"
    },
    "7894": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3879
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7895": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3879
      ],
      "op": "AND",
      "path": "2"
    },
    "7896": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7898": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3879
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7899": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3879
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7900": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3879
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7901": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3862
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "7903": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7905": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3879
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7906": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3879
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7907": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3879
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7908": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7910": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3879
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7911": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3879
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7912": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3879
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7913": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3894,
        3904
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7914": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3905
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7915": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3905
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7916": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3893
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "7918": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3893
      ],
      "op": "ADD",
      "path": "2"
    },
    "7919": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3905
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7920": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3905
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7921": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3905
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7922": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3905
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7923": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3905
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7924": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3912
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7926": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3912
      ],
      "op": "ADD",
      "path": "2"
    },
    "7927": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3851,
        3925
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7928": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3863,
        3878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7929": {
      "fn": "Competition.submitNewPredictions",
      "offset": [
        3408,
        3932
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7930": {
      "op": "POP"
    },
    "7931": {
      "fn": "Competition.submitNewPredictions",
      "jump": "o",
      "offset": [
        3408,
        3932
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7932": {
      "fn": "Competition.initialize",
      "offset": [
        691,
        1242
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7933": {
      "offset": [
        1495,
        1508
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE"
    },
    "7935": {
      "fn": "Competition.initialize",
      "offset": [
        1495,
        1508
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "7936": {
      "fn": "Competition.initialize",
      "offset": [
        1495,
        1508
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "7939": {
      "fn": "Competition.initialize",
      "offset": [
        1495,
        1508
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "7940": {
      "fn": "Competition.initialize",
      "offset": [
        1495,
        1508
      ],
      "op": "DIV",
      "path": "13"
    },
    "7941": {
      "fn": "Competition.initialize",
      "offset": [
        1495,
        1508
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "7943": {
      "fn": "Competition.initialize",
      "offset": [
        1495,
        1508
      ],
      "op": "AND",
      "path": "13"
    },
    "7944": {
      "branch": 266,
      "fn": "Competition.initialize",
      "offset": [
        1495,
        1508
      ],
      "op": "DUP1",
      "path": "13"
    },
    "7945": {
      "offset": [
        1495,
        1525
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F15"
    },
    "7948": {
      "branch": 266,
      "offset": [
        1495,
        1525
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "7949": {
      "op": "POP"
    },
    "7950": {
      "offset": [
        1513,
        1525
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE"
    },
    "7952": {
      "fn": "Competition.initialize",
      "offset": [
        1513,
        1525
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "7953": {
      "fn": "Competition.initialize",
      "offset": [
        1513,
        1525
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "7955": {
      "branch": 267,
      "fn": "Competition.initialize",
      "offset": [
        1513,
        1525
      ],
      "op": "AND",
      "path": "13"
    },
    "7956": {
      "offset": [
        1512,
        1525
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "7957": {
      "offset": [
        1495,
        1525
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "7958": {
      "offset": [
        1487,
        1576
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F78"
    },
    "7961": {
      "branch": 267,
      "offset": [
        1487,
        1576
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "7962": {
      "fn": "Competition.initialize",
      "offset": [
        1487,
        1576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "7964": {
      "fn": "Competition.initialize",
      "offset": [
        1487,
        1576
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "7965": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7969": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7971": {
      "op": "SHL"
    },
    "7972": {
      "offset": [
        1487,
        1576
      ],
      "op": "DUP2",
      "path": "13"
    },
    "7973": {
      "fn": "Competition.initialize",
      "offset": [
        1487,
        1576
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "7974": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7976": {
      "offset": [
        1487,
        1576
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "7978": {
      "fn": "Competition.initialize",
      "offset": [
        1487,
        1576
      ],
      "op": "DUP3",
      "path": "13"
    },
    "7979": {
      "fn": "Competition.initialize",
      "offset": [
        1487,
        1576
      ],
      "op": "ADD",
      "path": "13"
    },
    "7980": {
      "op": "MSTORE"
    },
    "7981": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "7983": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7985": {
      "op": "DUP3"
    },
    "7986": {
      "op": "ADD"
    },
    "7987": {
      "op": "MSTORE"
    },
    "7988": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "8021": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8023": {
      "op": "DUP3"
    },
    "8024": {
      "op": "ADD"
    },
    "8025": {
      "op": "MSTORE"
    },
    "8026": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "8041": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "8043": {
      "op": "SHL"
    },
    "8044": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8046": {
      "op": "DUP3"
    },
    "8047": {
      "op": "ADD"
    },
    "8048": {
      "op": "MSTORE"
    },
    "8049": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8051": {
      "op": "ADD"
    },
    "8052": {
      "offset": [
        1487,
        1576
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB18"
    },
    "8055": {
      "op": "JUMP"
    },
    "8056": {
      "offset": [
        1487,
        1576
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8057": {
      "offset": [
        1610,
        1623
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE"
    },
    "8059": {
      "fn": "Competition.initialize",
      "offset": [
        1610,
        1623
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8060": {
      "fn": "Competition.initialize",
      "offset": [
        1610,
        1623
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x100"
    },
    "8063": {
      "fn": "Competition.initialize",
      "offset": [
        1610,
        1623
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8064": {
      "fn": "Competition.initialize",
      "offset": [
        1610,
        1623
      ],
      "op": "DIV",
      "path": "13"
    },
    "8065": {
      "fn": "Competition.initialize",
      "offset": [
        1610,
        1623
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "8067": {
      "fn": "Competition.initialize",
      "offset": [
        1610,
        1623
      ],
      "op": "AND",
      "path": "13"
    },
    "8068": {
      "offset": [
        1609,
        1623
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8069": {
      "offset": [
        1633,
        1731
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8070": {
      "fn": "Competition.initialize",
      "offset": [
        1633,
        1731
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8071": {
      "fn": "Competition.initialize",
      "offset": [
        1633,
        1731
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x1F9A"
    },
    "8074": {
      "fn": "Competition.initialize",
      "offset": [
        1633,
        1731
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8075": {
      "offset": [
        1667,
        1680
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE"
    },
    "8077": {
      "offset": [
        1667,
        1687
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8078": {
      "fn": "Competition.initialize",
      "offset": [
        1667,
        1687
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8079": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "8082": {
      "op": "NOT"
    },
    "8083": {
      "offset": [
        1701,
        1720
      ],
      "op": "AND",
      "path": "13"
    },
    "8084": {
      "fn": "Competition.initialize",
      "offset": [
        1701,
        1720
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x101"
    },
    "8087": {
      "fn": "Competition.initialize",
      "offset": [
        1701,
        1720
      ],
      "op": "OR",
      "path": "13"
    },
    "8088": {
      "fn": "Competition.initialize",
      "offset": [
        1701,
        1720
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8089": {
      "fn": "Competition.initialize",
      "offset": [
        1701,
        1720
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "8090": {
      "offset": [
        1633,
        1731
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8095": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8097": {
      "op": "SHL"
    },
    "8098": {
      "op": "SUB"
    },
    "8099": {
      "fn": "Competition.initialize",
      "offset": [
        837,
        864
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 98
    },
    "8100": {
      "branch": 234,
      "fn": "Competition.initialize",
      "offset": [
        837,
        864
      ],
      "op": "AND",
      "path": "2"
    },
    "8101": {
      "fn": "Competition.initialize",
      "offset": [
        829,
        892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FF0"
    },
    "8104": {
      "branch": 234,
      "fn": "Competition.initialize",
      "offset": [
        829,
        892
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8105": {
      "fn": "Competition.initialize",
      "offset": [
        829,
        892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8107": {
      "fn": "Competition.initialize",
      "offset": [
        829,
        892
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8108": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8112": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8114": {
      "op": "SHL"
    },
    "8115": {
      "fn": "Competition.initialize",
      "offset": [
        829,
        892
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8116": {
      "fn": "Competition.initialize",
      "offset": [
        829,
        892
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8119": {
      "fn": "Competition.initialize",
      "offset": [
        829,
        892
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8121": {
      "fn": "Competition.initialize",
      "offset": [
        829,
        892
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8122": {
      "fn": "Competition.initialize",
      "offset": [
        829,
        892
      ],
      "op": "ADD",
      "path": "2"
    },
    "8123": {
      "op": "MSTORE"
    },
    "8124": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "8126": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8128": {
      "op": "DUP3"
    },
    "8129": {
      "op": "ADD"
    },
    "8130": {
      "op": "MSTORE"
    },
    "8131": {
      "op": "PUSH32",
      "value": "0x4E6F20746F6B656E206164647265737320666F756E642E000000000000000000"
    },
    "8164": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8166": {
      "op": "DUP3"
    },
    "8167": {
      "op": "ADD"
    },
    "8168": {
      "op": "MSTORE"
    },
    "8169": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8171": {
      "op": "ADD"
    },
    "8172": {
      "fn": "Competition.initialize",
      "offset": [
        829,
        892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "8175": {
      "op": "JUMP"
    },
    "8176": {
      "fn": "Competition.initialize",
      "offset": [
        829,
        892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8177": {
      "fn": "Competition.initialize",
      "offset": [
        902,
        923
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 99,
      "value": "0x1FF8"
    },
    "8180": {
      "fn": "Competition.initialize",
      "offset": [
        902,
        921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x360F"
    },
    "8183": {
      "fn": "Competition.initialize",
      "jump": "i",
      "offset": [
        902,
        923
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8184": {
      "fn": "Competition.initialize",
      "offset": [
        902,
        923
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8185": {
      "fn": "Competition.initialize",
      "offset": [
        933,
        948
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 100,
      "value": "0x2"
    },
    "8187": {
      "fn": "Competition.initialize",
      "offset": [
        933,
        966
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8188": {
      "fn": "Competition.initialize",
      "offset": [
        933,
        966
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8189": {
      "fn": "Competition.initialize",
      "offset": [
        933,
        966
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8190": {
      "fn": "Competition.initialize",
      "offset": [
        976,
        993
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 101,
      "value": "0x4"
    },
    "8192": {
      "fn": "Competition.initialize",
      "offset": [
        976,
        1013
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8193": {
      "fn": "Competition.initialize",
      "offset": [
        976,
        1013
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8194": {
      "fn": "Competition.initialize",
      "offset": [
        976,
        1013
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8195": {
      "fn": "Competition.initialize",
      "offset": [
        1023,
        1029
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 102,
      "value": "0x1"
    },
    "8197": {
      "fn": "Competition.initialize",
      "offset": [
        1023,
        1053
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8198": {
      "fn": "Competition.initialize",
      "offset": [
        1023,
        1053
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8203": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "8205": {
      "op": "SHL"
    },
    "8206": {
      "op": "SUB"
    },
    "8207": {
      "op": "NOT"
    },
    "8208": {
      "fn": "Competition.initialize",
      "offset": [
        1063,
        1084
      ],
      "op": "AND",
      "path": "2",
      "statement": 103
    },
    "8209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8215": {
      "op": "SHL"
    },
    "8216": {
      "op": "SUB"
    },
    "8217": {
      "fn": "Competition.initialize",
      "offset": [
        1023,
        1053
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8218": {
      "fn": "Competition.initialize",
      "offset": [
        1023,
        1053
      ],
      "op": "AND",
      "path": "2"
    },
    "8219": {
      "fn": "Competition.initialize",
      "offset": [
        1063,
        1084
      ],
      "op": "OR",
      "path": "2"
    },
    "8220": {
      "fn": "Competition.initialize",
      "offset": [
        1063,
        1084
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8221": {
      "fn": "Competition.initialize",
      "offset": [
        1063,
        1084
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8222": {
      "fn": "Competition.initialize",
      "offset": [
        1063,
        1084
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8223": {
      "fn": "Competition.initialize",
      "offset": [
        1063,
        1084
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8228": {
      "op": "SHL"
    },
    "8229": {
      "fn": "Competition.initialize",
      "offset": [
        1106,
        1123
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 104
    },
    "8230": {
      "fn": "Competition.initialize",
      "offset": [
        1106,
        1123
      ],
      "op": "DIV",
      "path": "2"
    },
    "8231": {
      "fn": "Competition.initialize",
      "offset": [
        1063,
        1084
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "8236": {
      "fn": "Competition.initialize",
      "offset": [
        1106,
        1123
      ],
      "op": "AND",
      "path": "2"
    },
    "8237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8239": {
      "fn": "Competition.initialize",
      "offset": [
        1094,
        1124
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8240": {
      "fn": "Competition.initialize",
      "offset": [
        1094,
        1124
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8241": {
      "fn": "Competition.initialize",
      "offset": [
        1094,
        1124
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8242": {
      "fn": "Competition.initialize",
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "8244": {
      "fn": "Competition.initialize",
      "offset": [
        1094,
        1124
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8246": {
      "fn": "Competition.initialize",
      "offset": [
        1094,
        1124
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8247": {
      "fn": "Competition.initialize",
      "offset": [
        1094,
        1124
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8249": {
      "fn": "Competition.initialize",
      "offset": [
        1094,
        1124
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8250": {
      "fn": "Competition.initialize",
      "offset": [
        1094,
        1124
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8251": {
      "fn": "Competition.initialize",
      "offset": [
        1094,
        1130
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8252": {
      "fn": "Competition.initialize",
      "offset": [
        1094,
        1130
      ],
      "op": "ADD",
      "path": "2"
    },
    "8253": {
      "fn": "Competition.initialize",
      "offset": [
        1094,
        1134
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8254": {
      "fn": "Competition.initialize",
      "offset": [
        1094,
        1134
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8255": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8257": {
      "op": "NOT"
    },
    "8258": {
      "fn": "Competition.initialize",
      "offset": [
        1094,
        1134
      ],
      "op": "AND",
      "path": "2"
    },
    "8259": {
      "fn": "Competition.initialize",
      "offset": [
        1094,
        1134
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8260": {
      "fn": "Competition.initialize",
      "offset": [
        1094,
        1134
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8261": {
      "fn": "Competition.initialize",
      "offset": [
        1094,
        1134
      ],
      "op": "OR",
      "path": "2"
    },
    "8262": {
      "fn": "Competition.initialize",
      "offset": [
        1094,
        1134
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8263": {
      "fn": "Competition.initialize",
      "offset": [
        1094,
        1134
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8264": {
      "fn": "Competition.initialize",
      "offset": [
        1179,
        1184
      ],
      "op": "PUSH8",
      "path": "2",
      "statement": 105,
      "value": "0x2C68AF0BB140000"
    },
    "8273": {
      "fn": "Competition.initialize",
      "offset": [
        1144,
        1176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "8275": {
      "fn": "Competition.initialize",
      "offset": [
        1144,
        1184
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8276": {
      "fn": "Competition.initialize",
      "offset": [
        1230,
        1235
      ],
      "op": "PUSH8",
      "path": "2",
      "statement": 106,
      "value": "0x853A0D2313C0000"
    },
    "8285": {
      "fn": "Competition.initialize",
      "offset": [
        1194,
        1227
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "8287": {
      "fn": "Competition.initialize",
      "offset": [
        1194,
        1235
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8288": {
      "offset": [
        1753,
        1819
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8289": {
      "fn": "Competition.initialize",
      "offset": [
        1753,
        1819
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8290": {
      "fn": "Competition.initialize",
      "offset": [
        1753,
        1819
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2071"
    },
    "8293": {
      "fn": "Competition.initialize",
      "offset": [
        1753,
        1819
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "8294": {
      "offset": [
        1787,
        1800
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE"
    },
    "8296": {
      "offset": [
        1787,
        1808
      ],
      "op": "DUP1",
      "path": "13"
    },
    "8297": {
      "fn": "Competition.initialize",
      "offset": [
        1787,
        1808
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "8298": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "8301": {
      "op": "NOT"
    },
    "8302": {
      "offset": [
        1787,
        1808
      ],
      "op": "AND",
      "path": "13"
    },
    "8303": {
      "fn": "Competition.initialize",
      "offset": [
        1787,
        1808
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "8304": {
      "fn": "Competition.initialize",
      "offset": [
        1787,
        1808
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "8305": {
      "offset": [
        1753,
        1819
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "8306": {
      "fn": "Competition.initialize",
      "offset": [
        691,
        1242
      ],
      "op": "POP",
      "path": "2"
    },
    "8307": {
      "fn": "Competition.initialize",
      "offset": [
        691,
        1242
      ],
      "op": "POP",
      "path": "2"
    },
    "8308": {
      "fn": "Competition.initialize",
      "offset": [
        691,
        1242
      ],
      "op": "POP",
      "path": "2"
    },
    "8309": {
      "fn": "Competition.initialize",
      "offset": [
        691,
        1242
      ],
      "op": "POP",
      "path": "2"
    },
    "8310": {
      "fn": "Competition.initialize",
      "jump": "o",
      "offset": [
        691,
        1242
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8311": {
      "fn": "Competition.sponsor",
      "offset": [
        25433,
        25955
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8312": {
      "fn": "Competition.sponsor",
      "offset": [
        25554,
        25571
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 107,
      "value": "0x1"
    },
    "8314": {
      "fn": "Competition.sponsor",
      "offset": [
        25554,
        25571
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8317": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8319": {
      "op": "SHL"
    },
    "8320": {
      "fn": "Competition.sponsor",
      "offset": [
        25554,
        25571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8321": {
      "fn": "Competition.sponsor",
      "offset": [
        25554,
        25571
      ],
      "op": "DIV",
      "path": "2"
    },
    "8322": {
      "fn": "Competition.sponsor",
      "offset": [
        25554,
        25571
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "8327": {
      "fn": "Competition.sponsor",
      "offset": [
        25554,
        25571
      ],
      "op": "AND",
      "path": "2"
    },
    "8328": {
      "fn": "Competition.sponsor",
      "offset": [
        25506,
        25518
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8330": {
      "fn": "Competition.sponsor",
      "offset": [
        25542,
        25572
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8331": {
      "fn": "Competition.sponsor",
      "offset": [
        25542,
        25572
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8332": {
      "fn": "Competition.sponsor",
      "offset": [
        25542,
        25572
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8333": {
      "fn": "Competition.sponsor",
      "offset": [
        25542,
        25553
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "8335": {
      "fn": "Competition.sponsor",
      "offset": [
        25542,
        25572
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8337": {
      "fn": "Competition.sponsor",
      "offset": [
        25542,
        25572
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8338": {
      "fn": "Competition.sponsor",
      "offset": [
        25542,
        25572
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8340": {
      "fn": "Competition.sponsor",
      "offset": [
        25542,
        25572
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8341": {
      "fn": "Competition.sponsor",
      "offset": [
        25542,
        25572
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8342": {
      "fn": "Competition.sponsor",
      "offset": [
        25542,
        25578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8344": {
      "fn": "Competition.sponsor",
      "offset": [
        25542,
        25578
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8345": {
      "fn": "Competition.sponsor",
      "offset": [
        25542,
        25578
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8346": {
      "fn": "Competition.sponsor",
      "offset": [
        25542,
        25578
      ],
      "op": "ADD",
      "path": "2"
    },
    "8347": {
      "fn": "Competition.sponsor",
      "offset": [
        25542,
        25578
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8348": {
      "fn": "Competition.sponsor",
      "offset": [
        25542,
        25578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8350": {
      "fn": "Competition.sponsor",
      "offset": [
        25542,
        25578
      ],
      "op": "AND",
      "path": "2"
    },
    "8351": {
      "branch": 235,
      "fn": "Competition.sponsor",
      "offset": [
        25542,
        25583
      ],
      "op": "EQ",
      "path": "2"
    },
    "8352": {
      "fn": "Competition.sponsor",
      "offset": [
        25534,
        25671
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x212D"
    },
    "8355": {
      "branch": 235,
      "fn": "Competition.sponsor",
      "offset": [
        25534,
        25671
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8356": {
      "fn": "Competition.sponsor",
      "offset": [
        25534,
        25671
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8358": {
      "fn": "Competition.sponsor",
      "offset": [
        25534,
        25671
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8359": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8363": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8365": {
      "op": "SHL"
    },
    "8366": {
      "fn": "Competition.sponsor",
      "offset": [
        25534,
        25671
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8367": {
      "fn": "Competition.sponsor",
      "offset": [
        25534,
        25671
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8368": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8370": {
      "fn": "Competition.sponsor",
      "offset": [
        25534,
        25671
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8372": {
      "fn": "Competition.sponsor",
      "offset": [
        25534,
        25671
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8373": {
      "fn": "Competition.sponsor",
      "offset": [
        25534,
        25671
      ],
      "op": "ADD",
      "path": "2"
    },
    "8374": {
      "op": "MSTORE"
    },
    "8375": {
      "op": "PUSH1",
      "value": "0x53"
    },
    "8377": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8379": {
      "op": "DUP3"
    },
    "8380": {
      "op": "ADD"
    },
    "8381": {
      "op": "MSTORE"
    },
    "8382": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D2073706F6E736F723A20504C65617365207761"
    },
    "8415": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8417": {
      "op": "DUP3"
    },
    "8418": {
      "op": "ADD"
    },
    "8419": {
      "op": "MSTORE"
    },
    "8420": {
      "op": "PUSH32",
      "value": "0x697420666F7220746865206368616C6C656E676520746F20636F6D706C657465"
    },
    "8453": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8455": {
      "op": "DUP3"
    },
    "8456": {
      "op": "ADD"
    },
    "8457": {
      "op": "MSTORE"
    },
    "8458": {
      "op": "PUSH19",
      "value": "0x103132B337B9329039B837B739B7B934B73397"
    },
    "8478": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "8480": {
      "op": "SHL"
    },
    "8481": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8483": {
      "op": "DUP3"
    },
    "8484": {
      "op": "ADD"
    },
    "8485": {
      "op": "MSTORE"
    },
    "8486": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "8488": {
      "op": "ADD"
    },
    "8489": {
      "fn": "Competition.sponsor",
      "offset": [
        25534,
        25671
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "8492": {
      "op": "JUMP"
    },
    "8493": {
      "fn": "Competition.sponsor",
      "offset": [
        25534,
        25671
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8494": {
      "fn": "Competition.sponsor",
      "offset": [
        25710,
        25726
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8496": {
      "fn": "Competition.sponsor",
      "offset": [
        25710,
        25726
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8497": {
      "fn": "Competition.sponsor",
      "offset": [
        25755,
        25787
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 108,
      "value": "0x213A"
    },
    "8500": {
      "fn": "Competition.sponsor",
      "offset": [
        25776,
        25787
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8501": {
      "fn": "Competition.sponsor",
      "offset": [
        25710,
        25726
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8502": {
      "fn": "Competition.sponsor",
      "offset": [
        25755,
        25787
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "8505": {
      "fn": "Competition.sponsor",
      "jump": "i",
      "offset": [
        25755,
        25787
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8506": {
      "fn": "Competition.sponsor",
      "offset": [
        25755,
        25787
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8507": {
      "fn": "Competition.sponsor",
      "offset": [
        25736,
        25752
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "8509": {
      "fn": "Competition.sponsor",
      "offset": [
        25736,
        25787
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8510": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25813
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 109,
      "value": "0x1"
    },
    "8512": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25813
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8513": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8515": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8516": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "8521": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8523": {
      "op": "SHL"
    },
    "8524": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8525": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8526": {
      "fn": "Competition.sponsor",
      "offset": [
        25827,
        25837
      ],
      "op": "CALLER",
      "path": "2"
    },
    "8527": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8529": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8530": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "ADD",
      "path": "2"
    },
    "8531": {
      "op": "MSTORE"
    },
    "8532": {
      "fn": "Competition.sponsor",
      "offset": [
        25847,
        25851
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "8533": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8535": {
      "op": "DUP3"
    },
    "8536": {
      "op": "ADD"
    },
    "8537": {
      "op": "MSTORE"
    },
    "8538": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8540": {
      "op": "DUP2"
    },
    "8541": {
      "op": "ADD"
    },
    "8542": {
      "op": "DUP6"
    },
    "8543": {
      "op": "SWAP1"
    },
    "8544": {
      "op": "MSTORE"
    },
    "8545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8551": {
      "op": "SHL"
    },
    "8552": {
      "op": "SUB"
    },
    "8553": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25813
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8554": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25813
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8555": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25813
      ],
      "op": "AND",
      "path": "2"
    },
    "8556": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25813
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8557": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25826
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "8562": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25826
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8563": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8565": {
      "op": "ADD"
    },
    "8566": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8568": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8570": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8571": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8572": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8573": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "SUB",
      "path": "2"
    },
    "8574": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8575": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8577": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8578": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8579": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "8580": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8581": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8582": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8583": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x218F"
    },
    "8586": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8587": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8589": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8590": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8591": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8592": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "POP",
      "path": "2"
    },
    "8593": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "GAS",
      "path": "2"
    },
    "8594": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "CALL",
      "path": "2"
    },
    "8595": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8596": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8597": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8598": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21A3"
    },
    "8601": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8602": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8603": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8605": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8606": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "8607": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8608": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8610": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "REVERT",
      "path": "2"
    },
    "8611": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8612": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "POP",
      "path": "2"
    },
    "8613": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "POP",
      "path": "2"
    },
    "8614": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "POP",
      "path": "2"
    },
    "8615": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "POP",
      "path": "2"
    },
    "8616": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8618": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8619": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "8620": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8622": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "NOT",
      "path": "2"
    },
    "8623": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8625": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8626": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "ADD",
      "path": "2"
    },
    "8627": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "AND",
      "path": "2"
    },
    "8628": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8629": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "ADD",
      "path": "2"
    },
    "8630": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8631": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8633": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8634": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "POP",
      "path": "2"
    },
    "8635": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8636": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "ADD",
      "path": "2"
    },
    "8637": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8638": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21C7"
    },
    "8641": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8642": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8643": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4027"
    },
    "8646": {
      "fn": "Competition.sponsor",
      "jump": "i",
      "offset": [
        25807,
        25866
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8647": {
      "fn": "Competition.sponsor",
      "offset": [
        25807,
        25866
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8648": {
      "fn": "Competition.sponsor",
      "offset": [
        25797,
        25866
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8649": {
      "op": "POP"
    },
    "8650": {
      "fn": "Competition.sponsor",
      "offset": [
        25915,
        25947
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 110,
      "value": "0x21D3"
    },
    "8653": {
      "fn": "Competition.sponsor",
      "offset": [
        25936,
        25947
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8654": {
      "fn": "Competition.sponsor",
      "offset": [
        25915,
        25933
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8655": {
      "fn": "Competition.sponsor",
      "offset": [
        25915,
        25947
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "8658": {
      "fn": "Competition.sponsor",
      "jump": "i",
      "offset": [
        25915,
        25947
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8659": {
      "fn": "Competition.sponsor",
      "offset": [
        25915,
        25947
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8660": {
      "fn": "Competition.sponsor",
      "offset": [
        25882,
        25948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8662": {
      "fn": "Competition.sponsor",
      "offset": [
        25882,
        25948
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8663": {
      "fn": "Competition.sponsor",
      "offset": [
        25902,
        25913
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8664": {
      "fn": "Competition.sponsor",
      "offset": [
        25902,
        25913
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8665": {
      "fn": "Competition.sponsor",
      "offset": [
        25890,
        25900
      ],
      "op": "CALLER",
      "path": "2"
    },
    "8666": {
      "fn": "Competition.sponsor",
      "offset": [
        25890,
        25900
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8667": {
      "fn": "Competition.sponsor",
      "offset": [
        25882,
        25948
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x64939930C3FD0A1FE9E7FB9810272DB7730A0F02B900972787BCB79FB6FD3D2D"
    },
    "8700": {
      "fn": "Competition.sponsor",
      "offset": [
        25882,
        25948
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8701": {
      "fn": "Competition.sponsor",
      "offset": [
        25882,
        25948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8703": {
      "fn": "Competition.sponsor",
      "offset": [
        25882,
        25948
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8704": {
      "fn": "Competition.sponsor",
      "offset": [
        25882,
        25948
      ],
      "op": "LOG4",
      "path": "2"
    },
    "8705": {
      "fn": "Competition.sponsor",
      "offset": [
        25433,
        25955
      ],
      "op": "POP",
      "path": "2"
    },
    "8706": {
      "fn": "Competition.sponsor",
      "offset": [
        25433,
        25955
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8707": {
      "fn": "Competition.sponsor",
      "offset": [
        25433,
        25955
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8708": {
      "fn": "Competition.sponsor",
      "offset": [
        25433,
        25955
      ],
      "op": "POP",
      "path": "2"
    },
    "8709": {
      "fn": "Competition.sponsor",
      "jump": "o",
      "offset": [
        25433,
        25955
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8710": {
      "fn": "Competition.updateResults",
      "offset": [
        11364,
        11682
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8711": {
      "fn": "Competition.updateResults",
      "offset": [
        11480,
        11492
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8713": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2220"
    },
    "8716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8718": {
      "op": "DUP1"
    },
    "8719": {
      "op": "MLOAD"
    },
    "8720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8722": {
      "op": "PUSH2",
      "value": "0x45D0"
    },
    "8725": {
      "op": "DUP4"
    },
    "8726": {
      "op": "CODECOPY"
    },
    "8727": {
      "op": "DUP2"
    },
    "8728": {
      "op": "MLOAD"
    },
    "8729": {
      "op": "SWAP2"
    },
    "8730": {
      "op": "MSTORE"
    },
    "8731": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "8732": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D96"
    },
    "8735": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8736": {
      "fn": "Competition.updateResults",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8737": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x223C"
    },
    "8740": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8741": {
      "fn": "Competition.updateResults",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8743": {
      "fn": "Competition.updateResults",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8744": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8748": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8750": {
      "op": "SHL"
    },
    "8751": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8752": {
      "fn": "Competition.updateResults",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8753": {
      "fn": "Competition.updateResults",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8755": {
      "fn": "Competition.updateResults",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "8756": {
      "fn": "Competition.updateResults",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB18"
    },
    "8759": {
      "fn": "Competition.updateResults",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8760": {
      "fn": "Competition.updateResults",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4477"
    },
    "8763": {
      "fn": "Competition.updateResults",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8764": {
      "fn": "Competition.updateResults",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8765": {
      "branch": 236,
      "fn": "Competition.updateResults",
      "offset": [
        11516,
        11544
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 111
    },
    "8766": {
      "fn": "Competition.updateResults",
      "offset": [
        11508,
        11609
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22AF"
    },
    "8769": {
      "branch": 236,
      "fn": "Competition.updateResults",
      "offset": [
        11508,
        11609
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8770": {
      "fn": "Competition.updateResults",
      "offset": [
        11508,
        11609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8772": {
      "fn": "Competition.updateResults",
      "offset": [
        11508,
        11609
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8773": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8777": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8779": {
      "op": "SHL"
    },
    "8780": {
      "fn": "Competition.updateResults",
      "offset": [
        11508,
        11609
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8781": {
      "fn": "Competition.updateResults",
      "offset": [
        11508,
        11609
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8784": {
      "fn": "Competition.updateResults",
      "offset": [
        11508,
        11609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8786": {
      "fn": "Competition.updateResults",
      "offset": [
        11508,
        11609
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8787": {
      "fn": "Competition.updateResults",
      "offset": [
        11508,
        11609
      ],
      "op": "ADD",
      "path": "2"
    },
    "8788": {
      "op": "MSTORE"
    },
    "8789": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "8791": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8793": {
      "op": "DUP3"
    },
    "8794": {
      "op": "ADD"
    },
    "8795": {
      "op": "MSTORE"
    },
    "8796": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20757064617465526573756C74733A204D7573"
    },
    "8829": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8831": {
      "op": "DUP3"
    },
    "8832": {
      "op": "ADD"
    },
    "8833": {
      "op": "MSTORE"
    },
    "8834": {
      "op": "PUSH32",
      "value": "0x742068617665207072652D6578697374696E6720726573756C74732E00000000"
    },
    "8867": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8869": {
      "op": "DUP3"
    },
    "8870": {
      "op": "ADD"
    },
    "8871": {
      "op": "MSTORE"
    },
    "8872": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8874": {
      "op": "ADD"
    },
    "8875": {
      "fn": "Competition.updateResults",
      "offset": [
        11508,
        11609
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "8878": {
      "op": "JUMP"
    },
    "8879": {
      "fn": "Competition.updateResults",
      "offset": [
        11508,
        11609
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8880": {
      "fn": "Competition.updateResults",
      "offset": [
        11629,
        11675
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 112,
      "value": "0x1E10"
    },
    "8883": {
      "fn": "Competition.updateResults",
      "offset": [
        11644,
        11658
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8884": {
      "fn": "Competition.updateResults",
      "offset": [
        11660,
        11674
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8885": {
      "fn": "Competition.updateResults",
      "offset": [
        11629,
        11643
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EDA"
    },
    "8888": {
      "fn": "Competition.updateResults",
      "jump": "i",
      "offset": [
        11629,
        11675
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8889": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21060,
        21283
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8890": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21236,
        21264
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 113,
      "value": "0xFFFFFFFF"
    },
    "8895": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21236,
        21264
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8896": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21236,
        21264
      ],
      "op": "AND",
      "path": "2"
    },
    "8897": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21154,
        21179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8899": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21236,
        21264
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8900": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21236,
        21264
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8901": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21236,
        21264
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8902": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21236,
        21247
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "8904": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21236,
        21264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8906": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21236,
        21264
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8907": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21236,
        21264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8909": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21236,
        21264
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8910": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21236,
        21264
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8911": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21215,
        21276
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xADC"
    },
    "8914": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21215,
        21276
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8915": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21236,
        21275
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "8917": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21236,
        21275
      ],
      "op": "ADD",
      "path": "2"
    },
    "8918": {
      "fn": "Competition.getSubmissionCounter",
      "offset": [
        21215,
        21235
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x367F"
    },
    "8921": {
      "fn": "Competition.getSubmissionCounter",
      "jump": "i",
      "offset": [
        21215,
        21276
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8922": {
      "fn": "Competition.getMessage",
      "offset": [
        25233,
        25357
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8923": {
      "fn": "Competition.getMessage",
      "offset": [
        25295,
        25316
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "8925": {
      "fn": "Competition.getMessage",
      "offset": [
        25342,
        25350
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 114,
      "value": "0xB"
    },
    "8927": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8928": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8929": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22E9"
    },
    "8932": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8933": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x453F"
    },
    "8936": {
      "fn": "Competition.getMessage",
      "jump": "i",
      "offset": [
        25332,
        25350
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8937": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8938": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8939": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8941": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "ADD",
      "path": "2"
    },
    "8942": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8944": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8945": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8946": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DIV",
      "path": "2"
    },
    "8947": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "MUL",
      "path": "2"
    },
    "8948": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8950": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "ADD",
      "path": "2"
    },
    "8951": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8953": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8954": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8955": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8956": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "ADD",
      "path": "2"
    },
    "8957": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8959": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8960": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8961": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8962": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8963": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8964": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8965": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8966": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8967": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8969": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "ADD",
      "path": "2"
    },
    "8970": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8971": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8972": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8973": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2315"
    },
    "8976": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8977": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x453F"
    },
    "8980": {
      "fn": "Competition.getMessage",
      "jump": "i",
      "offset": [
        25332,
        25350
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8981": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8982": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8983": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8984": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2362"
    },
    "8987": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8988": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8989": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "8991": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "LT",
      "path": "2"
    },
    "8992": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2337"
    },
    "8995": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8996": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "8999": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9000": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9001": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9002": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DIV",
      "path": "2"
    },
    "9003": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "MUL",
      "path": "2"
    },
    "9004": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9005": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9006": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9007": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9009": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "ADD",
      "path": "2"
    },
    "9010": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9011": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2362"
    },
    "9014": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9015": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9016": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9017": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "ADD",
      "path": "2"
    },
    "9018": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9019": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9020": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9022": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9023": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9025": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9027": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9028": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9029": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9030": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9031": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9032": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9033": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9034": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9035": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9037": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "ADD",
      "path": "2"
    },
    "9038": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9039": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9041": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "ADD",
      "path": "2"
    },
    "9042": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9043": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9044": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "GT",
      "path": "2"
    },
    "9045": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2345"
    },
    "9048": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9049": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9050": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9051": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SUB",
      "path": "2"
    },
    "9052": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "9054": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "AND",
      "path": "2"
    },
    "9055": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9056": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "ADD",
      "path": "2"
    },
    "9057": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9058": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9059": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "POP",
      "path": "2"
    },
    "9060": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "POP",
      "path": "2"
    },
    "9061": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "POP",
      "path": "2"
    },
    "9062": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "POP",
      "path": "2"
    },
    "9063": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "POP",
      "path": "2"
    },
    "9064": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9065": {
      "fn": "Competition.getMessage",
      "offset": [
        25332,
        25350
      ],
      "op": "POP",
      "path": "2"
    },
    "9066": {
      "fn": "Competition.getMessage",
      "offset": [
        25233,
        25357
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9067": {
      "fn": "Competition.getMessage",
      "jump": "o",
      "offset": [
        25233,
        25357
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9068": {
      "fn": "Competition.payRewards",
      "offset": [
        12419,
        12765
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9069": {
      "fn": "Competition.payRewards",
      "offset": [
        12625,
        12637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9071": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2386"
    },
    "9074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9076": {
      "op": "DUP1"
    },
    "9077": {
      "op": "MLOAD"
    },
    "9078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9080": {
      "op": "PUSH2",
      "value": "0x45D0"
    },
    "9083": {
      "op": "DUP4"
    },
    "9084": {
      "op": "CODECOPY"
    },
    "9085": {
      "op": "DUP2"
    },
    "9086": {
      "op": "MLOAD"
    },
    "9087": {
      "op": "SWAP2"
    },
    "9088": {
      "op": "MSTORE"
    },
    "9089": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "9090": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D96"
    },
    "9093": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9094": {
      "fn": "Competition.payRewards",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9095": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23A2"
    },
    "9098": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9099": {
      "fn": "Competition.payRewards",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9101": {
      "fn": "Competition.payRewards",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9102": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9106": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9108": {
      "op": "SHL"
    },
    "9109": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9110": {
      "fn": "Competition.payRewards",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9111": {
      "fn": "Competition.payRewards",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9113": {
      "fn": "Competition.payRewards",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "9114": {
      "fn": "Competition.payRewards",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB18"
    },
    "9117": {
      "fn": "Competition.payRewards",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9118": {
      "fn": "Competition.payRewards",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4477"
    },
    "9121": {
      "fn": "Competition.payRewards",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9122": {
      "fn": "Competition.payRewards",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9123": {
      "fn": "Competition.payRewards",
      "offset": [
        12675,
        12692
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 115,
      "value": "0x1"
    },
    "9125": {
      "fn": "Competition.payRewards",
      "offset": [
        12675,
        12692
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9126": {
      "fn": "Competition.payRewards",
      "offset": [
        12663,
        12758
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23C3"
    },
    "9129": {
      "fn": "Competition.payRewards",
      "offset": [
        12663,
        12758
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9132": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9134": {
      "op": "SHL"
    },
    "9135": {
      "fn": "Competition.payRewards",
      "offset": [
        12675,
        12692
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9136": {
      "fn": "Competition.payRewards",
      "offset": [
        12675,
        12692
      ],
      "op": "DIV",
      "path": "2"
    },
    "9137": {
      "fn": "Competition.payRewards",
      "offset": [
        12675,
        12692
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "9142": {
      "fn": "Competition.payRewards",
      "offset": [
        12675,
        12692
      ],
      "op": "AND",
      "path": "2"
    },
    "9143": {
      "fn": "Competition.payRewards",
      "offset": [
        12694,
        12704
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9144": {
      "fn": "Competition.payRewards",
      "offset": [
        12694,
        12704
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9145": {
      "fn": "Competition.payRewards",
      "offset": [
        12706,
        12720
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9146": {
      "fn": "Competition.payRewards",
      "offset": [
        12706,
        12720
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9147": {
      "fn": "Competition.payRewards",
      "offset": [
        12722,
        12738
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9148": {
      "fn": "Competition.payRewards",
      "offset": [
        12722,
        12738
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9149": {
      "fn": "Competition.payRewards",
      "offset": [
        12740,
        12757
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9150": {
      "fn": "Competition.payRewards",
      "offset": [
        12740,
        12757
      ],
      "op": "DUP11",
      "path": "2"
    },
    "9151": {
      "fn": "Competition.payRewards",
      "offset": [
        12663,
        12674
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3689"
    },
    "9154": {
      "fn": "Competition.payRewards",
      "jump": "i",
      "offset": [
        12663,
        12758
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9155": {
      "fn": "Competition.payRewards",
      "offset": [
        12663,
        12758
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9156": {
      "fn": "Competition.payRewards",
      "offset": [
        12653,
        12758
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "9157": {
      "fn": "Competition.payRewards",
      "offset": [
        12419,
        12765
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "9158": {
      "op": "POP"
    },
    "9159": {
      "op": "POP"
    },
    "9160": {
      "op": "POP"
    },
    "9161": {
      "op": "POP"
    },
    "9162": {
      "op": "POP"
    },
    "9163": {
      "op": "POP"
    },
    "9164": {
      "op": "POP"
    },
    "9165": {
      "op": "POP"
    },
    "9166": {
      "op": "POP"
    },
    "9167": {
      "fn": "Competition.payRewards",
      "jump": "o",
      "offset": [
        12419,
        12765
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9168": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5018,
        5249
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9169": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4251,
        4258
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "9171": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "DUP3",
      "path": "7"
    },
    "9172": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "DUP2",
      "path": "7"
    },
    "9173": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9174": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "9176": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "DUP2",
      "path": "7"
    },
    "9177": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9178": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9179": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "9181": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9182": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "9183": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "9185": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "ADD",
      "path": "7"
    },
    "9186": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "9187": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5111,
        5152
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 116,
      "value": "0x23EB"
    },
    "9190": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5111,
        5152
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9191": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5119,
        5137
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x109E"
    },
    "9194": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4185,
        4306
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9195": {
      "branch": 260,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5111,
        5152
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9196": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5103,
        5205
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11C7"
    },
    "9199": {
      "branch": 260,
      "fn": "AccessControl.revokeRole",
      "offset": [
        5103,
        5205
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "9200": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5103,
        5205
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "9202": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5103,
        5205
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "9203": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9207": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9209": {
      "op": "SHL"
    },
    "9210": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5103,
        5205
      ],
      "op": "DUP2",
      "path": "7"
    },
    "9211": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5103,
        5205
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9212": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9214": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5103,
        5205
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "9216": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5103,
        5205
      ],
      "op": "DUP3",
      "path": "7"
    },
    "9217": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5103,
        5205
      ],
      "op": "ADD",
      "path": "7"
    },
    "9218": {
      "op": "MSTORE"
    },
    "9219": {
      "op": "PUSH1",
      "value": "0x30"
    },
    "9221": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9223": {
      "op": "DUP3"
    },
    "9224": {
      "op": "ADD"
    },
    "9225": {
      "op": "MSTORE"
    },
    "9226": {
      "op": "PUSH32",
      "value": "0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E"
    },
    "9259": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9261": {
      "op": "DUP3"
    },
    "9262": {
      "op": "ADD"
    },
    "9263": {
      "op": "MSTORE"
    },
    "9264": {
      "op": "PUSH16",
      "value": "0x2061646D696E20746F207265766F6B65"
    },
    "9281": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9283": {
      "op": "SHL"
    },
    "9284": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9286": {
      "op": "DUP3"
    },
    "9287": {
      "op": "ADD"
    },
    "9288": {
      "op": "MSTORE"
    },
    "9289": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9291": {
      "op": "ADD"
    },
    "9292": {
      "fn": "AccessControl.revokeRole",
      "offset": [
        5103,
        5205
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB18"
    },
    "9295": {
      "op": "JUMP"
    },
    "9296": {
      "fn": "Competition.openChallenge",
      "offset": [
        7440,
        8704
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9297": {
      "fn": "Competition.openChallenge",
      "offset": [
        7610,
        7622
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9299": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x246A"
    },
    "9302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9304": {
      "op": "DUP1"
    },
    "9305": {
      "op": "MLOAD"
    },
    "9306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9308": {
      "op": "PUSH2",
      "value": "0x45D0"
    },
    "9311": {
      "op": "DUP4"
    },
    "9312": {
      "op": "CODECOPY"
    },
    "9313": {
      "op": "DUP2"
    },
    "9314": {
      "op": "MLOAD"
    },
    "9315": {
      "op": "SWAP2"
    },
    "9316": {
      "op": "MSTORE"
    },
    "9317": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "9318": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D96"
    },
    "9321": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9322": {
      "fn": "Competition.openChallenge",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9323": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2486"
    },
    "9326": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9327": {
      "fn": "Competition.openChallenge",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9329": {
      "fn": "Competition.openChallenge",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9330": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9334": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9336": {
      "op": "SHL"
    },
    "9337": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9338": {
      "fn": "Competition.openChallenge",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9339": {
      "fn": "Competition.openChallenge",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9341": {
      "fn": "Competition.openChallenge",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "9342": {
      "fn": "Competition.openChallenge",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB18"
    },
    "9345": {
      "fn": "Competition.openChallenge",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9346": {
      "fn": "Competition.openChallenge",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4477"
    },
    "9349": {
      "fn": "Competition.openChallenge",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9350": {
      "fn": "Competition.openChallenge",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9351": {
      "fn": "Competition.openChallenge",
      "offset": [
        7663,
        7680
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9353": {
      "fn": "Competition.openChallenge",
      "offset": [
        7663,
        7680
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9358": {
      "op": "SHL"
    },
    "9359": {
      "fn": "Competition.openChallenge",
      "offset": [
        7663,
        7680
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9360": {
      "fn": "Competition.openChallenge",
      "offset": [
        7663,
        7680
      ],
      "op": "DIV",
      "path": "2"
    },
    "9361": {
      "fn": "Competition.openChallenge",
      "offset": [
        7663,
        7680
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "9366": {
      "fn": "Competition.openChallenge",
      "offset": [
        7663,
        7680
      ],
      "op": "AND",
      "path": "2"
    },
    "9367": {
      "fn": "Competition.openChallenge",
      "offset": [
        7638,
        7660
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9369": {
      "fn": "Competition.openChallenge",
      "offset": [
        7698,
        7726
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 117
    },
    "9370": {
      "fn": "Competition.openChallenge",
      "offset": [
        7698,
        7726
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9371": {
      "fn": "Competition.openChallenge",
      "offset": [
        7698,
        7726
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9372": {
      "fn": "Competition.openChallenge",
      "offset": [
        7698,
        7709
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "9374": {
      "fn": "Competition.openChallenge",
      "offset": [
        7698,
        7726
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9376": {
      "fn": "Competition.openChallenge",
      "offset": [
        7698,
        7726
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9377": {
      "fn": "Competition.openChallenge",
      "offset": [
        7698,
        7726
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9379": {
      "fn": "Competition.openChallenge",
      "offset": [
        7698,
        7726
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9380": {
      "fn": "Competition.openChallenge",
      "offset": [
        7698,
        7726
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9381": {
      "fn": "Competition.openChallenge",
      "offset": [
        7698,
        7732
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9383": {
      "fn": "Competition.openChallenge",
      "offset": [
        7698,
        7732
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9384": {
      "fn": "Competition.openChallenge",
      "offset": [
        7698,
        7732
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9385": {
      "fn": "Competition.openChallenge",
      "offset": [
        7698,
        7732
      ],
      "op": "ADD",
      "path": "2"
    },
    "9386": {
      "fn": "Competition.openChallenge",
      "offset": [
        7698,
        7732
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9387": {
      "fn": "Competition.openChallenge",
      "offset": [
        7698,
        7732
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "9389": {
      "fn": "Competition.openChallenge",
      "offset": [
        7698,
        7732
      ],
      "op": "AND",
      "path": "2"
    },
    "9390": {
      "branch": 237,
      "fn": "Competition.openChallenge",
      "offset": [
        7698,
        7737
      ],
      "op": "EQ",
      "path": "2"
    },
    "9391": {
      "fn": "Competition.openChallenge",
      "offset": [
        7690,
        7800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2520"
    },
    "9394": {
      "branch": 237,
      "fn": "Competition.openChallenge",
      "offset": [
        7690,
        7800
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9395": {
      "fn": "Competition.openChallenge",
      "offset": [
        7690,
        7800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9397": {
      "fn": "Competition.openChallenge",
      "offset": [
        7690,
        7800
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9398": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9402": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9404": {
      "op": "SHL"
    },
    "9405": {
      "fn": "Competition.openChallenge",
      "offset": [
        7690,
        7800
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9406": {
      "fn": "Competition.openChallenge",
      "offset": [
        7690,
        7800
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9407": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9409": {
      "fn": "Competition.openChallenge",
      "offset": [
        7690,
        7800
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9411": {
      "fn": "Competition.openChallenge",
      "offset": [
        7690,
        7800
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9412": {
      "fn": "Competition.openChallenge",
      "offset": [
        7690,
        7800
      ],
      "op": "ADD",
      "path": "2"
    },
    "9413": {
      "op": "MSTORE"
    },
    "9414": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "9416": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9418": {
      "op": "DUP3"
    },
    "9419": {
      "op": "ADD"
    },
    "9420": {
      "op": "MSTORE"
    },
    "9421": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D206F70656E4368616C6C656E67653A20507265"
    },
    "9454": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9456": {
      "op": "DUP3"
    },
    "9457": {
      "op": "ADD"
    },
    "9458": {
      "op": "MSTORE"
    },
    "9459": {
      "op": "PUSH32",
      "value": "0x76696F757320706861736520697320696E636F6D706C6574652E000000000000"
    },
    "9492": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9494": {
      "op": "DUP3"
    },
    "9495": {
      "op": "ADD"
    },
    "9496": {
      "op": "MSTORE"
    },
    "9497": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9499": {
      "op": "ADD"
    },
    "9500": {
      "fn": "Competition.openChallenge",
      "offset": [
        7690,
        7800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "9503": {
      "op": "JUMP"
    },
    "9504": {
      "fn": "Competition.openChallenge",
      "offset": [
        7690,
        7800
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9505": {
      "fn": "Competition.openChallenge",
      "offset": [
        7838,
        7855
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 118,
      "value": "0x4"
    },
    "9507": {
      "fn": "Competition.openChallenge",
      "offset": [
        7838,
        7855
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9508": {
      "fn": "Competition.openChallenge",
      "offset": [
        7818,
        7834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "9510": {
      "fn": "Competition.openChallenge",
      "offset": [
        7818,
        7834
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9511": {
      "fn": "Competition.openChallenge",
      "offset": [
        7818,
        7855
      ],
      "op": "LT",
      "path": "2"
    },
    "9512": {
      "branch": 238,
      "fn": "Competition.openChallenge",
      "offset": [
        7818,
        7855
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "9513": {
      "fn": "Competition.openChallenge",
      "offset": [
        7810,
        7907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x258C"
    },
    "9516": {
      "branch": 238,
      "fn": "Competition.openChallenge",
      "offset": [
        7810,
        7907
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "9517": {
      "fn": "Competition.openChallenge",
      "offset": [
        7810,
        7907
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9519": {
      "fn": "Competition.openChallenge",
      "offset": [
        7810,
        7907
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9520": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9524": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9526": {
      "op": "SHL"
    },
    "9527": {
      "fn": "Competition.openChallenge",
      "offset": [
        7810,
        7907
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9528": {
      "fn": "Competition.openChallenge",
      "offset": [
        7810,
        7907
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9531": {
      "fn": "Competition.openChallenge",
      "offset": [
        7810,
        7907
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9533": {
      "fn": "Competition.openChallenge",
      "offset": [
        7810,
        7907
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9534": {
      "fn": "Competition.openChallenge",
      "offset": [
        7810,
        7907
      ],
      "op": "ADD",
      "path": "2"
    },
    "9535": {
      "op": "MSTORE"
    },
    "9536": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "9538": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9540": {
      "op": "DUP3"
    },
    "9541": {
      "op": "ADD"
    },
    "9542": {
      "op": "MSTORE"
    },
    "9543": {
      "op": "PUSH32",
      "value": "0x436F6D70657469746F6E202D206F70656E4368616C6C656E67653A204E6F7420"
    },
    "9576": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9578": {
      "op": "DUP3"
    },
    "9579": {
      "op": "ADD"
    },
    "9580": {
      "op": "MSTORE"
    },
    "9581": {
      "op": "PUSH15",
      "value": "0x32B737BAB3B4103932BBB0B9323997"
    },
    "9597": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "9599": {
      "op": "SHL"
    },
    "9600": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9602": {
      "op": "DUP3"
    },
    "9603": {
      "op": "ADD"
    },
    "9604": {
      "op": "MSTORE"
    },
    "9605": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9607": {
      "op": "ADD"
    },
    "9608": {
      "fn": "Competition.openChallenge",
      "offset": [
        7810,
        7907
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "9611": {
      "op": "JUMP"
    },
    "9612": {
      "fn": "Competition.openChallenge",
      "offset": [
        7810,
        7907
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9613": {
      "fn": "Competition.openChallenge",
      "offset": [
        7918,
        7935
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 119
    },
    "9614": {
      "fn": "Competition.openChallenge",
      "offset": [
        7918,
        7935
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2596"
    },
    "9617": {
      "fn": "Competition.openChallenge",
      "offset": [
        7918,
        7935
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9618": {
      "fn": "Competition.openChallenge",
      "offset": [
        7918,
        7935
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4595"
    },
    "9621": {
      "fn": "Competition.openChallenge",
      "jump": "i",
      "offset": [
        7918,
        7935
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9622": {
      "fn": "Competition.openChallenge",
      "offset": [
        7918,
        7935
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9623": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7974
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 120,
      "value": "0xFFFFFFFF"
    },
    "9628": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7974
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9629": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7974
      ],
      "op": "AND",
      "path": "2"
    },
    "9630": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9632": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7974
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9633": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7974
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9634": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7974
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9635": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "9637": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9639": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7974
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9640": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9642": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7974
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9643": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7974
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9644": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7980
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "9646": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7980
      ],
      "op": "ADD",
      "path": "2"
    },
    "9647": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7984
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9648": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7984
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9649": {
      "fn": "Competition.openChallenge",
      "offset": [
        7983,
        7984
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9651": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9653": {
      "op": "NOT"
    },
    "9654": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7984
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9655": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7984
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9656": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7984
      ],
      "op": "AND",
      "path": "2"
    },
    "9657": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7984
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9658": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7984
      ],
      "op": "OR",
      "path": "2"
    },
    "9659": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7984
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9660": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7984
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9661": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7984
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9662": {
      "fn": "Competition.openChallenge",
      "offset": [
        7994,
        8029
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 121
    },
    "9663": {
      "fn": "Competition.openChallenge",
      "offset": [
        7994,
        8029
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9664": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "9669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9671": {
      "op": "SHL"
    },
    "9672": {
      "op": "NOT"
    },
    "9673": {
      "fn": "Competition.openChallenge",
      "offset": [
        7994,
        8029
      ],
      "op": "AND",
      "path": "2"
    },
    "9674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9676": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9678": {
      "op": "SHL"
    },
    "9679": {
      "fn": "Competition.openChallenge",
      "offset": [
        7994,
        8029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9680": {
      "fn": "Competition.openChallenge",
      "offset": [
        7994,
        8029
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9681": {
      "fn": "Competition.openChallenge",
      "offset": [
        7994,
        8029
      ],
      "op": "MUL",
      "path": "2"
    },
    "9682": {
      "fn": "Competition.openChallenge",
      "offset": [
        7994,
        8029
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9683": {
      "fn": "Competition.openChallenge",
      "offset": [
        7994,
        8029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9684": {
      "fn": "Competition.openChallenge",
      "offset": [
        7994,
        8029
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9685": {
      "fn": "Competition.openChallenge",
      "offset": [
        7994,
        8029
      ],
      "op": "OR",
      "path": "2"
    },
    "9686": {
      "fn": "Competition.openChallenge",
      "offset": [
        7994,
        8029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9687": {
      "fn": "Competition.openChallenge",
      "offset": [
        7994,
        8029
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9688": {
      "fn": "Competition.openChallenge",
      "offset": [
        7994,
        8029
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9689": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9690": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7974
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9691": {
      "op": "POP"
    },
    "9692": {
      "fn": "Competition.openChallenge",
      "offset": [
        8040,
        8096
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 122,
      "value": "0x25E8"
    },
    "9695": {
      "fn": "Competition.openChallenge",
      "offset": [
        8040,
        8096
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9696": {
      "op": "POP"
    },
    "9697": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7974
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9698": {
      "fn": "Competition.openChallenge",
      "offset": [
        7946,
        7974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9699": {
      "fn": "Competition.openChallenge",
      "offset": [
        8084,
        8095
      ],
      "op": "DUP9",
      "path": "2"
    },
    "9700": {
      "fn": "Competition.openChallenge",
      "offset": [
        8040,
        8054
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3146"
    },
    "9703": {
      "fn": "Competition.openChallenge",
      "jump": "i",
      "offset": [
        8040,
        8096
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9704": {
      "fn": "Competition.openChallenge",
      "offset": [
        8040,
        8096
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9705": {
      "op": "POP"
    },
    "9706": {
      "fn": "Competition.openChallenge",
      "offset": [
        8106,
        8154
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 123,
      "value": "0x25F5"
    },
    "9709": {
      "fn": "Competition.openChallenge",
      "offset": [
        8117,
        8132
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9710": {
      "fn": "Competition.openChallenge",
      "offset": [
        8142,
        8143
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9712": {
      "fn": "Competition.openChallenge",
      "offset": [
        8146,
        8153
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9713": {
      "fn": "Competition.openChallenge",
      "offset": [
        8106,
        8116
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32B2"
    },
    "9716": {
      "fn": "Competition.openChallenge",
      "jump": "i",
      "offset": [
        8106,
        8154
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9717": {
      "fn": "Competition.openChallenge",
      "offset": [
        8106,
        8154
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9718": {
      "fn": "Competition.openChallenge",
      "offset": [
        8106,
        8154
      ],
      "op": "POP",
      "path": "2"
    },
    "9719": {
      "fn": "Competition.openChallenge",
      "offset": [
        8251,
        8255
      ],
      "op": "PUSH8",
      "path": "2",
      "statement": 124,
      "value": "0xDE0B6B3A7640000"
    },
    "9728": {
      "fn": "Competition.openChallenge",
      "offset": [
        8217,
        8249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "9730": {
      "fn": "Competition.openChallenge",
      "offset": [
        8217,
        8249
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9731": {
      "fn": "Competition.openChallenge",
      "offset": [
        8198,
        8214
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "9733": {
      "fn": "Competition.openChallenge",
      "offset": [
        8198,
        8214
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9734": {
      "fn": "Competition.openChallenge",
      "offset": [
        8198,
        8249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x260F"
    },
    "9737": {
      "fn": "Competition.openChallenge",
      "offset": [
        8198,
        8249
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9738": {
      "fn": "Competition.openChallenge",
      "offset": [
        8198,
        8249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9739": {
      "fn": "Competition.openChallenge",
      "offset": [
        8198,
        8249
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44E6"
    },
    "9742": {
      "fn": "Competition.openChallenge",
      "jump": "i",
      "offset": [
        8198,
        8249
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9743": {
      "fn": "Competition.openChallenge",
      "offset": [
        8198,
        8249
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9744": {
      "fn": "Competition.openChallenge",
      "offset": [
        8198,
        8256
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2619"
    },
    "9747": {
      "fn": "Competition.openChallenge",
      "offset": [
        8198,
        8256
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9748": {
      "fn": "Competition.openChallenge",
      "offset": [
        8198,
        8256
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9749": {
      "fn": "Competition.openChallenge",
      "offset": [
        8198,
        8256
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44C6"
    },
    "9752": {
      "fn": "Competition.openChallenge",
      "jump": "i",
      "offset": [
        8198,
        8256
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9753": {
      "fn": "Competition.openChallenge",
      "offset": [
        8198,
        8256
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9754": {
      "fn": "Competition.openChallenge",
      "offset": [
        8165,
        8195
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "9756": {
      "fn": "Competition.openChallenge",
      "offset": [
        8165,
        8256
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9757": {
      "fn": "Competition.openChallenge",
      "offset": [
        8319,
        8352
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 125,
      "value": "0xA"
    },
    "9759": {
      "fn": "Competition.openChallenge",
      "offset": [
        8319,
        8352
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9760": {
      "fn": "Competition.openChallenge",
      "offset": [
        8300,
        8316
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "9762": {
      "fn": "Competition.openChallenge",
      "offset": [
        8300,
        8316
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9763": {
      "fn": "Competition.openChallenge",
      "offset": [
        8354,
        8358
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0xDE0B6B3A7640000"
    },
    "9772": {
      "fn": "Competition.openChallenge",
      "offset": [
        8354,
        8358
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9773": {
      "fn": "Competition.openChallenge",
      "offset": [
        8300,
        8352
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2635"
    },
    "9776": {
      "fn": "Competition.openChallenge",
      "offset": [
        8300,
        8352
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9777": {
      "fn": "Competition.openChallenge",
      "offset": [
        8300,
        8352
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44E6"
    },
    "9780": {
      "fn": "Competition.openChallenge",
      "jump": "i",
      "offset": [
        8300,
        8352
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9781": {
      "fn": "Competition.openChallenge",
      "offset": [
        8300,
        8352
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9782": {
      "fn": "Competition.openChallenge",
      "offset": [
        8300,
        8359
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x263F"
    },
    "9785": {
      "fn": "Competition.openChallenge",
      "offset": [
        8300,
        8359
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9786": {
      "fn": "Competition.openChallenge",
      "offset": [
        8300,
        8359
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9787": {
      "fn": "Competition.openChallenge",
      "offset": [
        8300,
        8359
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44C6"
    },
    "9790": {
      "fn": "Competition.openChallenge",
      "jump": "i",
      "offset": [
        8300,
        8359
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9791": {
      "fn": "Competition.openChallenge",
      "offset": [
        8300,
        8359
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9792": {
      "fn": "Competition.openChallenge",
      "offset": [
        8266,
        8297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "9794": {
      "fn": "Competition.openChallenge",
      "offset": [
        8266,
        8359
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9795": {
      "fn": "Competition.openChallenge",
      "offset": [
        8266,
        8359
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9796": {
      "fn": "Competition.openChallenge",
      "offset": [
        8266,
        8359
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9797": {
      "fn": "Competition.openChallenge",
      "offset": [
        8419,
        8449
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 126,
      "value": "0x7"
    },
    "9799": {
      "fn": "Competition.openChallenge",
      "offset": [
        8419,
        8449
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9800": {
      "fn": "Competition.openChallenge",
      "offset": [
        8400,
        8416
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "9802": {
      "fn": "Competition.openChallenge",
      "offset": [
        8400,
        8416
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9803": {
      "fn": "Competition.openChallenge",
      "offset": [
        8400,
        8449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2654"
    },
    "9806": {
      "fn": "Competition.openChallenge",
      "offset": [
        8400,
        8449
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9807": {
      "fn": "Competition.openChallenge",
      "offset": [
        8419,
        8449
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9808": {
      "fn": "Competition.openChallenge",
      "offset": [
        8400,
        8449
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4505"
    },
    "9811": {
      "fn": "Competition.openChallenge",
      "jump": "i",
      "offset": [
        8400,
        8449
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9812": {
      "fn": "Competition.openChallenge",
      "offset": [
        8400,
        8449
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9813": {
      "fn": "Competition.openChallenge",
      "offset": [
        8400,
        8483
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x265E"
    },
    "9816": {
      "fn": "Competition.openChallenge",
      "offset": [
        8400,
        8483
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9817": {
      "fn": "Competition.openChallenge",
      "offset": [
        8400,
        8483
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9818": {
      "fn": "Competition.openChallenge",
      "offset": [
        8400,
        8483
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4505"
    },
    "9821": {
      "fn": "Competition.openChallenge",
      "jump": "i",
      "offset": [
        8400,
        8483
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9822": {
      "fn": "Competition.openChallenge",
      "offset": [
        8400,
        8483
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9823": {
      "fn": "Competition.openChallenge",
      "offset": [
        8369,
        8397
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "9825": {
      "fn": "Competition.openChallenge",
      "offset": [
        8369,
        8483
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9826": {
      "fn": "Competition.openChallenge",
      "offset": [
        8369,
        8483
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9827": {
      "fn": "Competition.openChallenge",
      "offset": [
        8369,
        8483
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9828": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "9833": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9834": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "AND",
      "path": "2"
    },
    "9835": {
      "fn": "Competition.openChallenge",
      "offset": [
        8528,
        8529
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 127,
      "value": "0x0"
    },
    "9837": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9838": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9839": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9840": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "9842": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "9844": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9845": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9846": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9847": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "9849": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9850": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9851": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9852": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9853": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9854": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9855": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6002
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9856": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6002
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "9857": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6002
      ],
      "op": "ADD",
      "path": "2"
    },
    "9858": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9859": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9860": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9861": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "DUP2",
      "path": "2"
    },
    "9862": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9863": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6021
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9864": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6021
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9865": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6021
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9866": {
      "fn": "Competition.openChallenge",
      "offset": [
        8599,
        8600
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 128,
      "value": "0x1"
    },
    "9868": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "DUP1",
      "path": "2"
    },
    "9869": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9870": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "9871": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "DUP4",
      "path": "2"
    },
    "9872": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "DUP3",
      "path": "2"
    },
    "9873": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6009
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "9874": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6021
      ],
      "op": "DUP8",
      "path": "2"
    },
    "9875": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6021
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9876": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        6021
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "9877": {
      "fn": "Competition.openChallenge",
      "offset": [
        8665,
        8697
      ],
      "op": "SWAP3",
      "path": "2",
      "statement": 129
    },
    "9878": {
      "fn": "Competition.openChallenge",
      "offset": [
        8665,
        8697
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "9879": {
      "fn": "Competition.openChallenge",
      "offset": [
        8599,
        8600
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "9880": {
      "fn": "Competition.openChallenge",
      "offset": [
        8599,
        8600
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "9881": {
      "op": "POP"
    },
    "9882": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9883": {
      "fn": "Competition._updateDeadlines",
      "offset": [
        5964,
        5992
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9884": {
      "fn": "Competition.openChallenge",
      "offset": [
        8665,
        8697
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x9DA6F4CD0F617F153C3EBC9840A08792CFF9F0FD8C796CE09C5D2006F42DA6D9"
    },
    "9917": {
      "fn": "Competition.openChallenge",
      "offset": [
        8665,
        8697
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "9918": {
      "fn": "Competition.openChallenge",
      "offset": [
        8528,
        8529
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9919": {
      "fn": "Competition.openChallenge",
      "offset": [
        8665,
        8697
      ],
      "op": "LOG2",
      "path": "2"
    },
    "9920": {
      "offset": [
        563,
        564
      ],
      "op": "POP",
      "path": "0"
    },
    "9921": {
      "fn": "Competition.openChallenge",
      "offset": [
        7440,
        8704
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "9922": {
      "fn": "Competition.openChallenge",
      "offset": [
        7440,
        8704
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "9923": {
      "fn": "Competition.openChallenge",
      "offset": [
        7440,
        8704
      ],
      "op": "POP",
      "path": "2"
    },
    "9924": {
      "fn": "Competition.openChallenge",
      "offset": [
        7440,
        8704
      ],
      "op": "POP",
      "path": "2"
    },
    "9925": {
      "fn": "Competition.openChallenge",
      "offset": [
        7440,
        8704
      ],
      "op": "POP",
      "path": "2"
    },
    "9926": {
      "fn": "Competition.openChallenge",
      "offset": [
        7440,
        8704
      ],
      "op": "POP",
      "path": "2"
    },
    "9927": {
      "fn": "Competition.openChallenge",
      "jump": "o",
      "offset": [
        7440,
        8704
      ],
      "op": "JUMP",
      "path": "2"
    },
    "9928": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17551,
        18066
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "9929": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17633,
        17645
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "9931": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26E2"
    },
    "9934": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9936": {
      "op": "DUP1"
    },
    "9937": {
      "op": "MLOAD"
    },
    "9938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9940": {
      "op": "PUSH2",
      "value": "0x45D0"
    },
    "9943": {
      "op": "DUP4"
    },
    "9944": {
      "op": "CODECOPY"
    },
    "9945": {
      "op": "DUP2"
    },
    "9946": {
      "op": "MLOAD"
    },
    "9947": {
      "op": "SWAP2"
    },
    "9948": {
      "op": "MSTORE"
    },
    "9949": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "9950": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D96"
    },
    "9953": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9954": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9955": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26FE"
    },
    "9958": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9959": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9961": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9962": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9966": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9968": {
      "op": "SHL"
    },
    "9969": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9970": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9971": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9973": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "9974": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB18"
    },
    "9977": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9978": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4477"
    },
    "9981": {
      "fn": "Competition.advanceToPhase",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9982": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9983": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17686,
        17703
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "9985": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17686,
        17703
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "9986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9990": {
      "op": "SHL"
    },
    "9991": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17686,
        17703
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "9992": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17686,
        17703
      ],
      "op": "DIV",
      "path": "2"
    },
    "9993": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17686,
        17703
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "9998": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17686,
        17703
      ],
      "op": "AND",
      "path": "2"
    },
    "9999": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17722,
        17731
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 130,
      "value": "0xFF"
    },
    "10001": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17722,
        17731
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10002": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17722,
        17731
      ],
      "op": "AND",
      "path": "2"
    },
    "10003": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17722,
        17723
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "10005": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17722,
        17731
      ],
      "op": "LT",
      "path": "2"
    },
    "10006": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17721,
        17747
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10007": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17721,
        17747
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10008": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17721,
        17747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2724"
    },
    "10011": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17721,
        17747
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10012": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17721,
        17747
      ],
      "op": "POP",
      "path": "2"
    },
    "10013": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17745,
        17746
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "10015": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17737,
        17742
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10016": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17737,
        17746
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "10018": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17737,
        17746
      ],
      "op": "AND",
      "path": "2"
    },
    "10019": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17737,
        17746
      ],
      "op": "LT",
      "path": "2"
    },
    "10020": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17721,
        17747
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10021": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17713,
        17843
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27BC"
    },
    "10024": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17713,
        17843
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10025": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17713,
        17843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10027": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17713,
        17843
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10028": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10032": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10034": {
      "op": "SHL"
    },
    "10035": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17713,
        17843
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10036": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17713,
        17843
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10037": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10039": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17713,
        17843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10041": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17713,
        17843
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10042": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17713,
        17843
      ],
      "op": "ADD",
      "path": "2"
    },
    "10043": {
      "op": "MSTORE"
    },
    "10044": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "10046": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10048": {
      "op": "DUP3"
    },
    "10049": {
      "op": "ADD"
    },
    "10050": {
      "op": "MSTORE"
    },
    "10051": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20616476616E6365546F50686173653A20596F"
    },
    "10084": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10086": {
      "op": "DUP3"
    },
    "10087": {
      "op": "ADD"
    },
    "10088": {
      "op": "MSTORE"
    },
    "10089": {
      "op": "PUSH32",
      "value": "0x75206D6179206F6E6C79207573652074686973206D6574686F6420666F722061"
    },
    "10122": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10124": {
      "op": "DUP3"
    },
    "10125": {
      "op": "ADD"
    },
    "10126": {
      "op": "MSTORE"
    },
    "10127": {
      "op": "PUSH32",
      "value": "0x6476616E63696E6720746F207068617365732033206F7220342E000000000000"
    },
    "10160": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10162": {
      "op": "DUP3"
    },
    "10163": {
      "op": "ADD"
    },
    "10164": {
      "op": "MSTORE"
    },
    "10165": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "10167": {
      "op": "ADD"
    },
    "10168": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17713,
        17843
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "10171": {
      "op": "JUMP"
    },
    "10172": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17713,
        17843
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10173": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17874,
        17902
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 131,
      "value": "0xFFFFFFFF"
    },
    "10178": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17874,
        17902
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10179": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17874,
        17902
      ],
      "op": "AND",
      "path": "2"
    },
    "10180": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17874,
        17902
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10182": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17874,
        17902
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10183": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17874,
        17902
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10184": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17874,
        17902
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10185": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17874,
        17885
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "10187": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17874,
        17902
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10189": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17874,
        17902
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10190": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17874,
        17902
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10192": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17874,
        17902
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10193": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17874,
        17902
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10194": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17874,
        17908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10196": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17874,
        17908
      ],
      "op": "ADD",
      "path": "2"
    },
    "10197": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17874,
        17908
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10198": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17874,
        17908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "10200": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17874,
        17908
      ],
      "op": "AND",
      "path": "2"
    },
    "10201": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17862,
        17869
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27E3"
    },
    "10204": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17874,
        17908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "10206": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17862,
        17867
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10207": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17862,
        17869
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x451C"
    },
    "10210": {
      "fn": "Competition.advanceToPhase",
      "jump": "i",
      "offset": [
        17862,
        17869
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10211": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17862,
        17869
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10212": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17861,
        17908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "10214": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17861,
        17908
      ],
      "op": "AND",
      "path": "2"
    },
    "10215": {
      "branch": 239,
      "fn": "Competition.advanceToPhase",
      "offset": [
        17861,
        17908
      ],
      "op": "EQ",
      "path": "2"
    },
    "10216": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17853,
        17982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2867"
    },
    "10219": {
      "branch": 239,
      "fn": "Competition.advanceToPhase",
      "offset": [
        17853,
        17982
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10220": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17853,
        17982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10222": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17853,
        17982
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10223": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10227": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10229": {
      "op": "SHL"
    },
    "10230": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17853,
        17982
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10231": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17853,
        17982
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10234": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17853,
        17982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10236": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17853,
        17982
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10237": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17853,
        17982
      ],
      "op": "ADD",
      "path": "2"
    },
    "10238": {
      "op": "MSTORE"
    },
    "10239": {
      "op": "PUSH1",
      "value": "0x45"
    },
    "10241": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10243": {
      "op": "DUP3"
    },
    "10244": {
      "op": "ADD"
    },
    "10245": {
      "op": "MSTORE"
    },
    "10246": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20616476616E6365546F50686173653A20596F"
    },
    "10279": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10281": {
      "op": "DUP3"
    },
    "10282": {
      "op": "ADD"
    },
    "10283": {
      "op": "MSTORE"
    },
    "10284": {
      "op": "PUSH32",
      "value": "0x75206D6179206F6E6C7920616476616E636520746F20746865206E6578742070"
    },
    "10317": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10319": {
      "op": "DUP3"
    },
    "10320": {
      "op": "ADD"
    },
    "10321": {
      "op": "MSTORE"
    },
    "10322": {
      "op": "PUSH5",
      "value": "0x3430B9B297"
    },
    "10328": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "10330": {
      "op": "SHL"
    },
    "10331": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10333": {
      "op": "DUP3"
    },
    "10334": {
      "op": "ADD"
    },
    "10335": {
      "op": "MSTORE"
    },
    "10336": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "10338": {
      "op": "ADD"
    },
    "10339": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17853,
        17982
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "10342": {
      "op": "JUMP"
    },
    "10343": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17853,
        17982
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10344": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18020
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 132,
      "value": "0xFFFFFFFF"
    },
    "10349": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18020
      ],
      "op": "AND",
      "path": "2"
    },
    "10350": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18020
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10352": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18020
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10353": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18020
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10354": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18020
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10355": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18003
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "10357": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18020
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10359": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18020
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10360": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18020
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10362": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18020
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10363": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18020
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10364": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18026
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10366": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18026
      ],
      "op": "ADD",
      "path": "2"
    },
    "10367": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18034
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10368": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18034
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10369": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10371": {
      "op": "NOT"
    },
    "10372": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18034
      ],
      "op": "AND",
      "path": "2"
    },
    "10373": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18034
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "10375": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18034
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10376": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18034
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10377": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18034
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "10378": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18034
      ],
      "op": "AND",
      "path": "2"
    },
    "10379": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18034
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10380": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18034
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10381": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18034
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "10382": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18034
      ],
      "op": "OR",
      "path": "2"
    },
    "10383": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18034
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10384": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18034
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10385": {
      "fn": "Competition.advanceToPhase",
      "offset": [
        17992,
        18034
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10386": {
      "op": "POP"
    },
    "10387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10389": {
      "op": "SWAP1"
    },
    "10390": {
      "fn": "Competition.advanceToPhase",
      "jump": "o",
      "offset": [
        17551,
        18066
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10391": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15665,
        16788
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10392": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15884,
        15896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10394": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28B1"
    },
    "10397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10399": {
      "op": "DUP1"
    },
    "10400": {
      "op": "MLOAD"
    },
    "10401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10403": {
      "op": "PUSH2",
      "value": "0x45D0"
    },
    "10406": {
      "op": "DUP4"
    },
    "10407": {
      "op": "CODECOPY"
    },
    "10408": {
      "op": "DUP2"
    },
    "10409": {
      "op": "MLOAD"
    },
    "10410": {
      "op": "SWAP2"
    },
    "10411": {
      "op": "MSTORE"
    },
    "10412": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "10413": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D96"
    },
    "10416": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10417": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10418": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28CD"
    },
    "10421": {
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10422": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10424": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10425": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10429": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10431": {
      "op": "SHL"
    },
    "10432": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10433": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10434": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10436": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "10437": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB18"
    },
    "10440": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10441": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4477"
    },
    "10444": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10445": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10446": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15948
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 133,
      "value": "0xFFFFFFFF"
    },
    "10451": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15948
      ],
      "op": "DUP9",
      "path": "2"
    },
    "10452": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15948
      ],
      "op": "AND",
      "path": "2"
    },
    "10453": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10455": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15948
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10456": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15948
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10457": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15948
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10458": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15931
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "10460": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10462": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15948
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10463": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15948
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10465": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15948
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10466": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15948
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10467": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15954
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10469": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15954
      ],
      "op": "ADD",
      "path": "2"
    },
    "10470": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15954
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "10471": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15958,
        15959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "10473": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15954
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "10475": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15954
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10476": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15954
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10477": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15954
      ],
      "op": "AND",
      "path": "2"
    },
    "10478": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15959
      ],
      "op": "LT",
      "path": "2"
    },
    "10479": {
      "branch": 240,
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15920,
        15959
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10480": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15912,
        16047
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x297D"
    },
    "10483": {
      "branch": 240,
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15912,
        16047
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10484": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15912,
        16047
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10486": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15912,
        16047
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10487": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10491": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10493": {
      "op": "SHL"
    },
    "10494": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15912,
        16047
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10495": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15912,
        16047
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10498": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15912,
        16047
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10500": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15912,
        16047
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10501": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15912,
        16047
      ],
      "op": "ADD",
      "path": "2"
    },
    "10502": {
      "op": "MSTORE"
    },
    "10503": {
      "op": "PUSH1",
      "value": "0x53"
    },
    "10505": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10507": {
      "op": "DUP3"
    },
    "10508": {
      "op": "ADD"
    },
    "10509": {
      "op": "MSTORE"
    },
    "10510": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D207570646174654368616C6C656E6765416E64"
    },
    "10543": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10545": {
      "op": "DUP3"
    },
    "10546": {
      "op": "ADD"
    },
    "10547": {
      "op": "MSTORE"
    },
    "10548": {
      "op": "PUSH32",
      "value": "0x546F75726E616D656E7453636F7265733A204368616C6C656E67652069732069"
    },
    "10581": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10583": {
      "op": "DUP3"
    },
    "10584": {
      "op": "ADD"
    },
    "10585": {
      "op": "MSTORE"
    },
    "10586": {
      "op": "PUSH19",
      "value": "0x37103AB732BC3832B1BA32B21039BA30BA3297"
    },
    "10606": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "10608": {
      "op": "SHL"
    },
    "10609": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10611": {
      "op": "DUP3"
    },
    "10612": {
      "op": "ADD"
    },
    "10613": {
      "op": "MSTORE"
    },
    "10614": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "10616": {
      "op": "ADD"
    },
    "10617": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15912,
        16047
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "10620": {
      "op": "JUMP"
    },
    "10621": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15912,
        16047
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10622": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16066,
        16111
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 134
    },
    "10623": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16066,
        16111
      ],
      "op": "DUP5",
      "path": "2"
    },
    "10624": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16066,
        16111
      ],
      "op": "EQ",
      "path": "2"
    },
    "10625": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16065,
        16164
      ],
      "op": "DUP1",
      "path": "2"
    },
    "10626": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16065,
        16164
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10627": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16065,
        16164
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x298B"
    },
    "10630": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16065,
        16164
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10631": {
      "op": "POP"
    },
    "10632": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16117,
        16163
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10633": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16117,
        16163
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10634": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16117,
        16163
      ],
      "op": "EQ",
      "path": "2"
    },
    "10635": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16065,
        16164
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10636": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16057,
        16267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A2E"
    },
    "10639": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16057,
        16267
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10640": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16057,
        16267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10642": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16057,
        16267
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "10643": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10647": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10649": {
      "op": "SHL"
    },
    "10650": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16057,
        16267
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10651": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16057,
        16267
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10654": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16057,
        16267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10656": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16057,
        16267
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10657": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16057,
        16267
      ],
      "op": "ADD",
      "path": "2"
    },
    "10658": {
      "op": "MSTORE"
    },
    "10659": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "10661": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10663": {
      "op": "DUP3"
    },
    "10664": {
      "op": "ADD"
    },
    "10665": {
      "op": "MSTORE"
    },
    "10666": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D207570646174654368616C6C656E6765416E64"
    },
    "10699": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10701": {
      "op": "DUP3"
    },
    "10702": {
      "op": "ADD"
    },
    "10703": {
      "op": "MSTORE"
    },
    "10704": {
      "op": "PUSH32",
      "value": "0x546F75726E616D656E7453636F7265733A204E756D626572206F662070617274"
    },
    "10737": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10739": {
      "op": "DUP3"
    },
    "10740": {
      "op": "ADD"
    },
    "10741": {
      "op": "MSTORE"
    },
    "10742": {
      "op": "PUSH32",
      "value": "0x69636970616E747320616E642073636F7265732061726520646966666572656E"
    },
    "10775": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10777": {
      "op": "DUP3"
    },
    "10778": {
      "op": "ADD"
    },
    "10779": {
      "op": "MSTORE"
    },
    "10780": {
      "op": "PUSH2",
      "value": "0x3A17"
    },
    "10783": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "10785": {
      "op": "SHL"
    },
    "10786": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "10788": {
      "op": "DUP3"
    },
    "10789": {
      "op": "ADD"
    },
    "10790": {
      "op": "MSTORE"
    },
    "10791": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "10793": {
      "op": "ADD"
    },
    "10794": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16057,
        16267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "10797": {
      "op": "JUMP"
    },
    "10798": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16057,
        16267
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10799": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16283,
        16289
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10801": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16278,
        16689
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10802": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16295,
        16318
      ],
      "op": "DUP7",
      "path": "2"
    },
    "10803": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16295,
        16318
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10804": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16295,
        16318
      ],
      "op": "LT",
      "path": "2"
    },
    "10805": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16278,
        16689
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "10806": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16278,
        16689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B85"
    },
    "10809": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16278,
        16689
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10810": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16563
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 135
    },
    "10811": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16563
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10812": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16564,
        16565
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10813": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16566
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10814": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16566
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10815": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16566
      ],
      "op": "LT",
      "path": "2"
    },
    "10816": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A59"
    },
    "10819": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16566
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10820": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10825": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10827": {
      "op": "SHL"
    },
    "10828": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10830": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16566
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10831": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x32"
    },
    "10833": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10835": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16566
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10836": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "10838": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10840": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16566
      ],
      "op": "REVERT",
      "path": "2"
    },
    "10841": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16566
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10842": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16566
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10843": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16566
      ],
      "op": "POP",
      "path": "2"
    },
    "10844": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10846": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16566
      ],
      "op": "MUL",
      "path": "2"
    },
    "10847": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16566
      ],
      "op": "ADD",
      "path": "2"
    },
    "10848": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16548,
        16566
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "10849": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16481
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "10851": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10853": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16482,
        16497
      ],
      "op": "DUP12",
      "path": "2"
    },
    "10854": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16498
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "10859": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16498
      ],
      "op": "AND",
      "path": "2"
    },
    "10860": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16498
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "10865": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16498
      ],
      "op": "AND",
      "path": "2"
    },
    "10866": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16498
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10867": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16498
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10868": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10870": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16498
      ],
      "op": "ADD",
      "path": "2"
    },
    "10871": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16498
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10872": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16498
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10873": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16498
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10874": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10876": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16498
      ],
      "op": "ADD",
      "path": "2"
    },
    "10877": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10879": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16498
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10880": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "10882": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16512
      ],
      "op": "ADD",
      "path": "2"
    },
    "10883": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10885": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16525
      ],
      "op": "DUP11",
      "path": "2"
    },
    "10886": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16525
      ],
      "op": "DUP11",
      "path": "2"
    },
    "10887": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16526,
        16527
      ],
      "op": "DUP6",
      "path": "2"
    },
    "10888": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10889": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10890": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "LT",
      "path": "2"
    },
    "10891": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AA4"
    },
    "10894": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10895": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10900": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10902": {
      "op": "SHL"
    },
    "10903": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10905": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10906": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x32"
    },
    "10908": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10910": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10911": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "10913": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10915": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "REVERT",
      "path": "2"
    },
    "10916": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10917": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10918": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "POP",
      "path": "2"
    },
    "10919": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10921": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "MUL",
      "path": "2"
    },
    "10922": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "ADD",
      "path": "2"
    },
    "10923": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10925": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10926": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "ADD",
      "path": "2"
    },
    "10927": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10928": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AB9"
    },
    "10931": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10932": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10933": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F25"
    },
    "10936": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "jump": "i",
      "offset": [
        16513,
        16528
      ],
      "op": "JUMP",
      "path": "2"
    },
    "10937": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16513,
        16528
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10944": {
      "op": "SHL"
    },
    "10945": {
      "op": "SUB"
    },
    "10946": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16529
      ],
      "op": "AND",
      "path": "2"
    },
    "10947": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16529
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10948": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16529
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10949": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "10951": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16529
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10952": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16529
      ],
      "op": "ADD",
      "path": "2"
    },
    "10953": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16529
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10954": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16529
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "10955": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16529
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "10956": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16529
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10957": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "10959": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16529
      ],
      "op": "ADD",
      "path": "2"
    },
    "10960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10962": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16529
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "10963": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16545
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "10965": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16545
      ],
      "op": "ADD",
      "path": "2"
    },
    "10966": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16470,
        16566
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "10967": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16675
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 136
    },
    "10968": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16675
      ],
      "op": "DUP4",
      "path": "2"
    },
    "10969": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16676,
        16677
      ],
      "op": "DUP3",
      "path": "2"
    },
    "10970": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16678
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10971": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16678
      ],
      "op": "DUP2",
      "path": "2"
    },
    "10972": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16678
      ],
      "op": "LT",
      "path": "2"
    },
    "10973": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16678
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AF6"
    },
    "10976": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16678
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "10977": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10982": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10984": {
      "op": "SHL"
    },
    "10985": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16678
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10987": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16678
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10988": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16678
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x32"
    },
    "10990": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16678
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "10992": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16678
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "10993": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16678
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "10995": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16678
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "10997": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16678
      ],
      "op": "REVERT",
      "path": "2"
    },
    "10998": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16678
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "10999": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16678
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11000": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16678
      ],
      "op": "POP",
      "path": "2"
    },
    "11001": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16678
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11003": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16678
      ],
      "op": "MUL",
      "path": "2"
    },
    "11004": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16678
      ],
      "op": "ADD",
      "path": "2"
    },
    "11005": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16659,
        16678
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "11006": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "11008": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16608
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11010": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16592,
        16607
      ],
      "op": "DUP12",
      "path": "2"
    },
    "11011": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16608
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "11016": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16608
      ],
      "op": "AND",
      "path": "2"
    },
    "11017": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16608
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "11022": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16608
      ],
      "op": "AND",
      "path": "2"
    },
    "11023": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16608
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11024": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16608
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11025": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16608
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11027": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16608
      ],
      "op": "ADD",
      "path": "2"
    },
    "11028": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16608
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11029": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16608
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11030": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16608
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11031": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16608
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11033": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16608
      ],
      "op": "ADD",
      "path": "2"
    },
    "11034": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16608
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11036": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16608
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11037": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16622
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "11039": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16622
      ],
      "op": "ADD",
      "path": "2"
    },
    "11040": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11042": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16635
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11043": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16635
      ],
      "op": "DUP11",
      "path": "2"
    },
    "11044": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16636,
        16637
      ],
      "op": "DUP6",
      "path": "2"
    },
    "11045": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11046": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11047": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "LT",
      "path": "2"
    },
    "11048": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B41"
    },
    "11051": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11052": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11057": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11059": {
      "op": "SHL"
    },
    "11060": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11062": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11063": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x32"
    },
    "11065": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11067": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11068": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "11070": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11072": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "REVERT",
      "path": "2"
    },
    "11073": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11074": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11075": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "POP",
      "path": "2"
    },
    "11076": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11078": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "MUL",
      "path": "2"
    },
    "11079": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "ADD",
      "path": "2"
    },
    "11080": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11082": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11083": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "ADD",
      "path": "2"
    },
    "11084": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11085": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B56"
    },
    "11088": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11089": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11090": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F25"
    },
    "11093": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "jump": "i",
      "offset": [
        16623,
        16638
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11094": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16623,
        16638
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11101": {
      "op": "SHL"
    },
    "11102": {
      "op": "SUB"
    },
    "11103": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16639
      ],
      "op": "AND",
      "path": "2"
    },
    "11104": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16639
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11105": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16639
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11106": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11108": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16639
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11109": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16639
      ],
      "op": "ADD",
      "path": "2"
    },
    "11110": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16639
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11111": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16639
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11112": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16639
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11113": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16639
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11114": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11116": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16639
      ],
      "op": "ADD",
      "path": "2"
    },
    "11117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11119": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16639
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11120": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16656
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "11122": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16656
      ],
      "op": "ADD",
      "path": "2"
    },
    "11123": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16580,
        16678
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11124": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16320,
        16323
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 137
    },
    "11125": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16320,
        16323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B7D"
    },
    "11128": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16320,
        16323
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11129": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16320,
        16323
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x457A"
    },
    "11132": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "jump": "i",
      "offset": [
        16320,
        16323
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11133": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16320,
        16323
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11134": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16320,
        16323
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11135": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16320,
        16323
      ],
      "op": "POP",
      "path": "2"
    },
    "11136": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16320,
        16323
      ],
      "op": "POP",
      "path": "2"
    },
    "11137": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16278,
        16689
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A31"
    },
    "11140": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16278,
        16689
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11141": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16278,
        16689
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11142": {
      "op": "POP"
    },
    "11143": {
      "op": "POP"
    },
    "11144": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16729,
        16781
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 138,
      "value": "0x40"
    },
    "11146": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16729,
        16781
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11147": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16709,
        16713
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 139,
      "value": "0x1"
    },
    "11149": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16709,
        16713
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11150": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16729,
        16781
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "11155": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16729,
        16781
      ],
      "op": "DUP10",
      "path": "2"
    },
    "11156": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16729,
        16781
      ],
      "op": "AND",
      "path": "2"
    },
    "11157": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16729,
        16781
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11158": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16729,
        16781
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x6FA7224843E16AB8C76A13B984CFCF54DE67707A118BF52CE93E0E5BE3589871"
    },
    "11191": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16729,
        16781
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11192": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16729,
        16781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11194": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16729,
        16781
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11195": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        16729,
        16781
      ],
      "op": "LOG2",
      "path": "2"
    },
    "11196": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15665,
        16788
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "11197": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15665,
        16788
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "11198": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15665,
        16788
      ],
      "op": "POP",
      "path": "2"
    },
    "11199": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15665,
        16788
      ],
      "op": "POP",
      "path": "2"
    },
    "11200": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15665,
        16788
      ],
      "op": "POP",
      "path": "2"
    },
    "11201": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15665,
        16788
      ],
      "op": "POP",
      "path": "2"
    },
    "11202": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15665,
        16788
      ],
      "op": "POP",
      "path": "2"
    },
    "11203": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15665,
        16788
      ],
      "op": "POP",
      "path": "2"
    },
    "11204": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "offset": [
        15665,
        16788
      ],
      "op": "POP",
      "path": "2"
    },
    "11205": {
      "fn": "Competition.updateChallengeAndTournamentScores",
      "jump": "o",
      "offset": [
        15665,
        16788
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11206": {
      "fn": "Competition.getRemainder",
      "offset": [
        25041,
        25227
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11207": {
      "fn": "Competition.getRemainder",
      "offset": [
        25204,
        25220
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 140,
      "value": "0x3"
    },
    "11209": {
      "fn": "Competition.getRemainder",
      "offset": [
        25204,
        25220
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11210": {
      "fn": "Competition.getRemainder",
      "offset": [
        25182,
        25201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "11212": {
      "fn": "Competition.getRemainder",
      "offset": [
        25182,
        25201
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11213": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25154
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11215": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25154
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11216": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11218": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11219": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "11224": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11226": {
      "op": "SHL"
    },
    "11227": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11228": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11229": {
      "fn": "Competition.getRemainder",
      "offset": [
        25173,
        25177
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "11230": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11232": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11233": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "ADD",
      "path": "2"
    },
    "11234": {
      "op": "MSTORE"
    },
    "11235": {
      "fn": "Competition.getRemainder",
      "offset": [
        25103,
        25120
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11237": {
      "fn": "Competition.getRemainder",
      "offset": [
        25103,
        25120
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "11238": {
      "fn": "Competition.getRemainder",
      "offset": [
        25204,
        25220
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11239": {
      "fn": "Competition.getRemainder",
      "offset": [
        25182,
        25201
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11246": {
      "op": "SHL"
    },
    "11247": {
      "op": "SUB"
    },
    "11248": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25154
      ],
      "op": "AND",
      "path": "2"
    },
    "11249": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25154
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11250": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25164
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "11255": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25164
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11256": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11258": {
      "op": "ADD"
    },
    "11259": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11261": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11263": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11264": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11265": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11266": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "SUB",
      "path": "2"
    },
    "11267": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11268": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "DUP7",
      "path": "2"
    },
    "11269": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11270": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "11271": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11272": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11273": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11274": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C12"
    },
    "11277": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11278": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11280": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11281": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "REVERT",
      "path": "2"
    },
    "11282": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11283": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "POP",
      "path": "2"
    },
    "11284": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "GAS",
      "path": "2"
    },
    "11285": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "11286": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11287": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11288": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "11289": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C26"
    },
    "11292": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11293": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11294": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11296": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11297": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "11298": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11299": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11301": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "REVERT",
      "path": "2"
    },
    "11302": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11303": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "POP",
      "path": "2"
    },
    "11304": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "POP",
      "path": "2"
    },
    "11305": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "POP",
      "path": "2"
    },
    "11306": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "POP",
      "path": "2"
    },
    "11307": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11309": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11310": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "11311": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "11313": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "NOT",
      "path": "2"
    },
    "11314": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "11316": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11317": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "ADD",
      "path": "2"
    },
    "11318": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "AND",
      "path": "2"
    },
    "11319": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11320": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "ADD",
      "path": "2"
    },
    "11321": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11322": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11324": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11325": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "POP",
      "path": "2"
    },
    "11326": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11327": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "ADD",
      "path": "2"
    },
    "11328": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11329": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C4A"
    },
    "11332": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11333": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11334": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4171"
    },
    "11337": {
      "fn": "Competition.getRemainder",
      "jump": "i",
      "offset": [
        25148,
        25179
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11338": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25179
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11339": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C54"
    },
    "11342": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25201
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11343": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25201
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11344": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4505"
    },
    "11347": {
      "fn": "Competition.getRemainder",
      "jump": "i",
      "offset": [
        25148,
        25201
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11348": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11349": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25220
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C5E"
    },
    "11352": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25220
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11353": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25220
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11354": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25220
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4505"
    },
    "11357": {
      "fn": "Competition.getRemainder",
      "jump": "i",
      "offset": [
        25148,
        25220
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11358": {
      "fn": "Competition.getRemainder",
      "offset": [
        25148,
        25220
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11359": {
      "fn": "Competition.getRemainder",
      "offset": [
        25136,
        25220
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11360": {
      "fn": "Competition.getRemainder",
      "offset": [
        25136,
        25220
      ],
      "op": "POP",
      "path": "2"
    },
    "11361": {
      "fn": "Competition.getRemainder",
      "offset": [
        25041,
        25227
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11362": {
      "fn": "Competition.getRemainder",
      "jump": "o",
      "offset": [
        25041,
        25227
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11363": {
      "fn": "Competition.updateSubmission",
      "offset": [
        3938,
        4514
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11364": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4053,
        4075
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11366": {
      "branch": 241,
      "fn": "Competition.updateSubmission",
      "offset": [
        4099,
        4130
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 141
    },
    "11367": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4091,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CD1"
    },
    "11370": {
      "branch": 241,
      "fn": "Competition.updateSubmission",
      "offset": [
        4091,
        4201
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11371": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4091,
        4201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11373": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4091,
        4201
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11374": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11378": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11380": {
      "op": "SHL"
    },
    "11381": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4091,
        4201
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11382": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4091,
        4201
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11383": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11385": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4091,
        4201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11387": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4091,
        4201
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11388": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4091,
        4201
      ],
      "op": "ADD",
      "path": "2"
    },
    "11389": {
      "op": "MSTORE"
    },
    "11390": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "11392": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11394": {
      "op": "DUP3"
    },
    "11395": {
      "op": "ADD"
    },
    "11396": {
      "op": "MSTORE"
    },
    "11397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11399": {
      "op": "DUP1"
    },
    "11400": {
      "op": "MLOAD"
    },
    "11401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11403": {
      "op": "PUSH2",
      "value": "0x4610"
    },
    "11406": {
      "op": "DUP4"
    },
    "11407": {
      "op": "CODECOPY"
    },
    "11408": {
      "op": "DUP2"
    },
    "11409": {
      "op": "MLOAD"
    },
    "11410": {
      "op": "SWAP2"
    },
    "11411": {
      "op": "MSTORE"
    },
    "11412": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11414": {
      "op": "DUP3"
    },
    "11415": {
      "op": "ADD"
    },
    "11416": {
      "op": "MSTORE"
    },
    "11417": {
      "op": "PUSH32",
      "value": "0x4D7573742068617665207072652D6578697374696E67207375626D697373696F"
    },
    "11450": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11452": {
      "op": "DUP3"
    },
    "11453": {
      "op": "ADD"
    },
    "11454": {
      "op": "MSTORE"
    },
    "11455": {
      "op": "PUSH2",
      "value": "0x3717"
    },
    "11458": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "11460": {
      "op": "SHL"
    },
    "11461": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11463": {
      "op": "DUP3"
    },
    "11464": {
      "op": "ADD"
    },
    "11465": {
      "op": "MSTORE"
    },
    "11466": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "11468": {
      "op": "ADD"
    },
    "11469": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4091,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "11472": {
      "op": "JUMP"
    },
    "11473": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4091,
        4201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11474": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4229,
        4284
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 142,
      "value": "0x2CDB"
    },
    "11477": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4247,
        4264
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11478": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4266,
        4283
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11479": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4229,
        4246
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x340E"
    },
    "11482": {
      "fn": "Competition.updateSubmission",
      "jump": "i",
      "offset": [
        4229,
        4284
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11483": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4229,
        4284
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11484": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4211,
        4284
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11485": {
      "op": "POP"
    },
    "11486": {
      "branch": 242,
      "fn": "Competition.updateSubmission",
      "offset": [
        4299,
        4330
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11487": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4295,
        4508
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xADC"
    },
    "11490": {
      "branch": 242,
      "fn": "Competition.updateSubmission",
      "offset": [
        4295,
        4508
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11491": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4366,
        4394
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 143,
      "value": "0xFFFFFFFF"
    },
    "11496": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4366,
        4394
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11497": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4366,
        4394
      ],
      "op": "AND",
      "path": "2"
    },
    "11498": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4366,
        4394
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11500": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4366,
        4394
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11501": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4366,
        4394
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11502": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4366,
        4394
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11503": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4366,
        4377
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "11505": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4366,
        4394
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11507": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4366,
        4394
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11508": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4366,
        4394
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11510": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4366,
        4394
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11511": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4366,
        4394
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11512": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4345,
        4418
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D04"
    },
    "11515": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4345,
        4418
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11516": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4366,
        4405
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "11518": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4366,
        4405
      ],
      "op": "ADD",
      "path": "2"
    },
    "11519": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4407,
        4417
      ],
      "op": "CALLER",
      "path": "2"
    },
    "11520": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4345,
        4365
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39EC"
    },
    "11523": {
      "fn": "Competition.updateSubmission",
      "jump": "i",
      "offset": [
        4345,
        4418
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11524": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4345,
        4418
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11525": {
      "op": "POP"
    },
    "11526": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4460
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 144,
      "value": "0xFFFFFFFF"
    },
    "11531": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4460
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11532": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4460
      ],
      "op": "AND",
      "path": "2"
    },
    "11533": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4496,
        4497
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11535": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4460
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11536": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4460
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11537": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4460
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11538": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4443
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "11540": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4460
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11542": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4460
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11543": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4460
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11544": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4460
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11545": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4460
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11547": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4460
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11548": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4460
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11549": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4460
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11550": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4475,
        4485
      ],
      "op": "CALLER",
      "path": "2"
    },
    "11551": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4486
      ],
      "op": "DUP5",
      "path": "2"
    },
    "11552": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4486
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11553": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4474
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "11555": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4474
      ],
      "op": "ADD",
      "path": "2"
    },
    "11556": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4486
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11557": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4486
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11558": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4486
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11559": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4486
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11560": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4486
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11561": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4493
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11563": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4493
      ],
      "op": "ADD",
      "path": "2"
    },
    "11564": {
      "fn": "Competition.updateSubmission",
      "offset": [
        4432,
        4497
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11565": {
      "fn": "Competition.updateSubmission",
      "offset": [
        3938,
        4514
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "11566": {
      "fn": "Competition.updateSubmission",
      "offset": [
        3938,
        4514
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11567": {
      "fn": "Competition.updateSubmission",
      "offset": [
        3938,
        4514
      ],
      "op": "POP",
      "path": "2"
    },
    "11568": {
      "fn": "Competition.updateSubmission",
      "offset": [
        3938,
        4514
      ],
      "op": "POP",
      "path": "2"
    },
    "11569": {
      "fn": "Competition.updateSubmission",
      "jump": "o",
      "offset": [
        3938,
        4514
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11570": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10786,
        11179
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11571": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10858,
        10870
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11573": {
      "offset": [
        489,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D4C"
    },
    "11576": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11578": {
      "op": "DUP1"
    },
    "11579": {
      "op": "MLOAD"
    },
    "11580": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11582": {
      "op": "PUSH2",
      "value": "0x45D0"
    },
    "11585": {
      "op": "DUP4"
    },
    "11586": {
      "op": "CODECOPY"
    },
    "11587": {
      "op": "DUP2"
    },
    "11588": {
      "op": "MLOAD"
    },
    "11589": {
      "op": "SWAP2"
    },
    "11590": {
      "op": "MSTORE"
    },
    "11591": {
      "offset": [
        514,
        524
      ],
      "op": "CALLER",
      "path": "0"
    },
    "11592": {
      "offset": [
        489,
        496
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D96"
    },
    "11595": {
      "jump": "i",
      "offset": [
        489,
        525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11596": {
      "branch": 263,
      "fn": "Competition.closeSubmission",
      "offset": [
        489,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11597": {
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D68"
    },
    "11600": {
      "branch": 263,
      "offset": [
        481,
        553
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11601": {
      "fn": "Competition.closeSubmission",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11603": {
      "fn": "Competition.closeSubmission",
      "offset": [
        481,
        553
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11604": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11608": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11610": {
      "op": "SHL"
    },
    "11611": {
      "offset": [
        481,
        553
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11612": {
      "fn": "Competition.closeSubmission",
      "offset": [
        481,
        553
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11613": {
      "fn": "Competition.closeSubmission",
      "offset": [
        481,
        553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11615": {
      "fn": "Competition.closeSubmission",
      "offset": [
        481,
        553
      ],
      "op": "ADD",
      "path": "0"
    },
    "11616": {
      "fn": "Competition.closeSubmission",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB18"
    },
    "11619": {
      "fn": "Competition.closeSubmission",
      "offset": [
        481,
        553
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11620": {
      "fn": "Competition.closeSubmission",
      "offset": [
        481,
        553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4477"
    },
    "11623": {
      "fn": "Competition.closeSubmission",
      "jump": "i",
      "offset": [
        481,
        553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11624": {
      "fn": "Competition.closeSubmission",
      "offset": [
        481,
        553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11625": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10911,
        10928
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11627": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10911,
        10928
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11628": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10911,
        10928
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11631": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11633": {
      "op": "SHL"
    },
    "11634": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10911,
        10928
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11635": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10911,
        10928
      ],
      "op": "DIV",
      "path": "2"
    },
    "11636": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10911,
        10928
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "11641": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10911,
        10928
      ],
      "op": "AND",
      "path": "2"
    },
    "11642": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10886,
        10908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11644": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10946,
        10974
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 145
    },
    "11645": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10946,
        10974
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11646": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10946,
        10974
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11647": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10946,
        10957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "11649": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10946,
        10974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11651": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10946,
        10974
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11652": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10946,
        10974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11654": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10946,
        10974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11655": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10946,
        10974
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11656": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10946,
        10980
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11658": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10946,
        10980
      ],
      "op": "ADD",
      "path": "2"
    },
    "11659": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10946,
        10980
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11660": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10911,
        10928
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11661": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10911,
        10928
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11662": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10946,
        10980
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "11664": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10946,
        10980
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11665": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10946,
        10980
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11666": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10946,
        10980
      ],
      "op": "AND",
      "path": "2"
    },
    "11667": {
      "branch": 243,
      "fn": "Competition.closeSubmission",
      "offset": [
        10946,
        10985
      ],
      "op": "EQ",
      "path": "2"
    },
    "11668": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10938,
        11051
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E05"
    },
    "11671": {
      "branch": 243,
      "fn": "Competition.closeSubmission",
      "offset": [
        10938,
        11051
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "11672": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10938,
        11051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11674": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10938,
        11051
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "11675": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11679": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11681": {
      "op": "SHL"
    },
    "11682": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10938,
        11051
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11683": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10938,
        11051
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11686": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10938,
        11051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11688": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10938,
        11051
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11689": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10938,
        11051
      ],
      "op": "ADD",
      "path": "2"
    },
    "11690": {
      "op": "MSTORE"
    },
    "11691": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "11693": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11695": {
      "op": "DUP3"
    },
    "11696": {
      "op": "ADD"
    },
    "11697": {
      "op": "MSTORE"
    },
    "11698": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20636C6F73655375626D697373696F6E3A2043"
    },
    "11731": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11733": {
      "op": "DUP3"
    },
    "11734": {
      "op": "ADD"
    },
    "11735": {
      "op": "MSTORE"
    },
    "11736": {
      "op": "PUSH32",
      "value": "0x68616C6C656E676520696E20756E65787065637465642073746174652E000000"
    },
    "11769": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11771": {
      "op": "DUP3"
    },
    "11772": {
      "op": "ADD"
    },
    "11773": {
      "op": "MSTORE"
    },
    "11774": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11776": {
      "op": "ADD"
    },
    "11777": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10938,
        11051
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "11780": {
      "op": "JUMP"
    },
    "11781": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10938,
        11051
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11782": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11089
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 146,
      "value": "0xFFFFFFFF"
    },
    "11787": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11089
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11788": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11089
      ],
      "op": "AND",
      "path": "2"
    },
    "11789": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11791": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11089
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11792": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11089
      ],
      "op": "DUP2",
      "path": "2"
    },
    "11793": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11089
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11794": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11072
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "11796": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "11798": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11089
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "11799": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "11801": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11089
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11802": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11089
      ],
      "op": "DUP3",
      "path": "2"
    },
    "11803": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11089
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "11804": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11095
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "11806": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11095
      ],
      "op": "ADD",
      "path": "2"
    },
    "11807": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11099
      ],
      "op": "DUP1",
      "path": "2"
    },
    "11808": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11099
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "11809": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11811": {
      "op": "NOT"
    },
    "11812": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11099
      ],
      "op": "AND",
      "path": "2"
    },
    "11813": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11098,
        11099
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "11815": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11099
      ],
      "op": "OR",
      "path": "2"
    },
    "11816": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11099
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11817": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11099
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "11818": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11139,
        11172
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 147
    },
    "11819": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11099
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "11821": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11099
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "11822": {
      "op": "POP"
    },
    "11823": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11139,
        11172
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xAA5EBDC7900B87A79257AABBAB219AF255ADA0BE7148632CE5AFCD622DF7A88B"
    },
    "11856": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11139,
        11172
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "11857": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11061,
        11089
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11858": {
      "fn": "Competition.closeSubmission",
      "offset": [
        11139,
        11172
      ],
      "op": "LOG2",
      "path": "2"
    },
    "11859": {
      "offset": [
        563,
        564
      ],
      "op": "POP",
      "path": "0"
    },
    "11860": {
      "fn": "Competition.closeSubmission",
      "offset": [
        10786,
        11179
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "11861": {
      "fn": "Competition.closeSubmission",
      "jump": "o",
      "offset": [
        10786,
        11179
      ],
      "op": "JUMP",
      "path": "2"
    },
    "11862": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6952,
        7176
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11863": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7026,
        7048
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2E60"
    },
    "11866": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7034,
        7038
      ],
      "op": "DUP3",
      "path": "7"
    },
    "11867": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7040,
        7047
      ],
      "op": "DUP3",
      "path": "7"
    },
    "11868": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7026,
        7033
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D96"
    },
    "11871": {
      "fn": "AccessControl._grantRole",
      "jump": "i",
      "offset": [
        7026,
        7048
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11872": {
      "branch": 261,
      "fn": "AccessControl._grantRole",
      "offset": [
        7026,
        7048
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11873": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7021,
        7170
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1112"
    },
    "11876": {
      "branch": 261,
      "fn": "AccessControl._grantRole",
      "offset": [
        7021,
        7170
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "11877": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7070
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 148,
      "value": "0x0"
    },
    "11879": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "DUP3",
      "path": "7"
    },
    "11880": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11881": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11882": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "11884": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11885": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11886": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11887": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "11889": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "DUP1",
      "path": "7"
    },
    "11890": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "DUP4",
      "path": "7"
    },
    "11891": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7076
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "11892": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11898": {
      "op": "SHL"
    },
    "11899": {
      "op": "SUB"
    },
    "11900": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7093
      ],
      "op": "DUP6",
      "path": "7"
    },
    "11901": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7093
      ],
      "op": "AND",
      "path": "7"
    },
    "11902": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7093
      ],
      "op": "DUP5",
      "path": "7"
    },
    "11903": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7093
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11904": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7093
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11905": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7093
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "11906": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7093
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "11907": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7093
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11908": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7093
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "11909": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7100
      ],
      "op": "DUP1",
      "path": "7"
    },
    "11910": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7100
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "11911": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "11913": {
      "op": "NOT"
    },
    "11914": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7100
      ],
      "op": "AND",
      "path": "7"
    },
    "11915": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7096,
        7100
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "11917": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7100
      ],
      "op": "OR",
      "path": "7"
    },
    "11918": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7100
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11919": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7064,
        7100
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "11920": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7146,
        7158
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 149,
      "value": "0x2E96"
    },
    "11923": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "19"
    },
    "11924": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "11925": {
      "fn": "Context._msgSender",
      "offset": [
        586,
        682
      ],
      "op": "JUMP",
      "path": "19"
    },
    "11926": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7146,
        7158
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "11927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11933": {
      "op": "SHL"
    },
    "11934": {
      "op": "SUB"
    },
    "11935": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "AND",
      "path": "7"
    },
    "11936": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7137,
        7144
      ],
      "op": "DUP2",
      "path": "7"
    },
    "11937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11943": {
      "op": "SHL"
    },
    "11944": {
      "op": "SUB"
    },
    "11945": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "AND",
      "path": "7"
    },
    "11946": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7131,
        7135
      ],
      "op": "DUP4",
      "path": "7"
    },
    "11947": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
    },
    "11980": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "11982": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "11983": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "11985": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "11986": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "DUP1",
      "path": "7"
    },
    "11987": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "11988": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "SUB",
      "path": "7"
    },
    "11989": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "11990": {
      "fn": "AccessControl._grantRole",
      "offset": [
        7119,
        7159
      ],
      "op": "LOG4",
      "path": "7"
    },
    "11991": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6952,
        7176
      ],
      "op": "POP",
      "path": "7"
    },
    "11992": {
      "fn": "AccessControl._grantRole",
      "offset": [
        6952,
        7176
      ],
      "op": "POP",
      "path": "7"
    },
    "11993": {
      "fn": "AccessControl._grantRole",
      "jump": "o",
      "offset": [
        6952,
        7176
      ],
      "op": "JUMP",
      "path": "7"
    },
    "11994": {
      "fn": "Competition._updateResults",
      "offset": [
        11688,
        12413
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "11995": {
      "fn": "Competition._updateResults",
      "offset": [
        11785,
        11797
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "11997": {
      "fn": "Competition._updateResults",
      "offset": [
        11839,
        11853
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 150
    },
    "11998": {
      "fn": "Competition._updateResults",
      "offset": [
        11821,
        11835
      ],
      "op": "DUP4",
      "path": "2"
    },
    "11999": {
      "fn": "Competition._updateResults",
      "offset": [
        11821,
        11853
      ],
      "op": "EQ",
      "path": "2"
    },
    "12000": {
      "branch": 244,
      "fn": "Competition._updateResults",
      "offset": [
        11821,
        11853
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12001": {
      "fn": "Competition._updateResults",
      "offset": [
        11813,
        11930
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F63"
    },
    "12004": {
      "branch": 244,
      "fn": "Competition._updateResults",
      "offset": [
        11813,
        11930
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12005": {
      "fn": "Competition._updateResults",
      "offset": [
        11813,
        11930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12007": {
      "fn": "Competition._updateResults",
      "offset": [
        11813,
        11930
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12008": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12012": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12014": {
      "op": "SHL"
    },
    "12015": {
      "fn": "Competition._updateResults",
      "offset": [
        11813,
        11930
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12016": {
      "fn": "Competition._updateResults",
      "offset": [
        11813,
        11930
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12017": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12019": {
      "fn": "Competition._updateResults",
      "offset": [
        11813,
        11930
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12021": {
      "fn": "Competition._updateResults",
      "offset": [
        11813,
        11930
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12022": {
      "fn": "Competition._updateResults",
      "offset": [
        11813,
        11930
      ],
      "op": "ADD",
      "path": "2"
    },
    "12023": {
      "op": "MSTORE"
    },
    "12024": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "12026": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12028": {
      "op": "DUP3"
    },
    "12029": {
      "op": "ADD"
    },
    "12030": {
      "op": "MSTORE"
    },
    "12031": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20757064617465526573756C74733A2043616E"
    },
    "12064": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12066": {
      "op": "DUP3"
    },
    "12067": {
      "op": "ADD"
    },
    "12068": {
      "op": "MSTORE"
    },
    "12069": {
      "op": "PUSH32",
      "value": "0x6E6F74207570646174652077697468207468652073616D652068617368206173"
    },
    "12102": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12104": {
      "op": "DUP3"
    },
    "12105": {
      "op": "ADD"
    },
    "12106": {
      "op": "MSTORE"
    },
    "12107": {
      "op": "PUSH8",
      "value": "0x103132B337B93297"
    },
    "12116": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "12118": {
      "op": "SHL"
    },
    "12119": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12121": {
      "op": "DUP3"
    },
    "12122": {
      "op": "ADD"
    },
    "12123": {
      "op": "MSTORE"
    },
    "12124": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "12126": {
      "op": "ADD"
    },
    "12127": {
      "fn": "Competition._updateResults",
      "offset": [
        11813,
        11930
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "12130": {
      "op": "JUMP"
    },
    "12131": {
      "fn": "Competition._updateResults",
      "offset": [
        11813,
        11930
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12132": {
      "fn": "Competition._updateResults",
      "offset": [
        11965,
        11982
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12134": {
      "fn": "Competition._updateResults",
      "offset": [
        11965,
        11982
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12139": {
      "op": "SHL"
    },
    "12140": {
      "fn": "Competition._updateResults",
      "offset": [
        11965,
        11982
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12141": {
      "fn": "Competition._updateResults",
      "offset": [
        11965,
        11982
      ],
      "op": "DIV",
      "path": "2"
    },
    "12142": {
      "fn": "Competition._updateResults",
      "offset": [
        11965,
        11982
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "12147": {
      "fn": "Competition._updateResults",
      "offset": [
        11965,
        11982
      ],
      "op": "AND",
      "path": "2"
    },
    "12148": {
      "fn": "Competition._updateResults",
      "offset": [
        11940,
        11962
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12150": {
      "fn": "Competition._updateResults",
      "offset": [
        12000,
        12028
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 151
    },
    "12151": {
      "fn": "Competition._updateResults",
      "offset": [
        12000,
        12028
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12152": {
      "fn": "Competition._updateResults",
      "offset": [
        12000,
        12028
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12153": {
      "fn": "Competition._updateResults",
      "offset": [
        12000,
        12011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "12155": {
      "fn": "Competition._updateResults",
      "offset": [
        12000,
        12028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12157": {
      "fn": "Competition._updateResults",
      "offset": [
        12000,
        12028
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12158": {
      "fn": "Competition._updateResults",
      "offset": [
        12000,
        12028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12160": {
      "fn": "Competition._updateResults",
      "offset": [
        12000,
        12028
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12161": {
      "fn": "Competition._updateResults",
      "offset": [
        12000,
        12028
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12162": {
      "fn": "Competition._updateResults",
      "offset": [
        12000,
        12034
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12164": {
      "fn": "Competition._updateResults",
      "offset": [
        12000,
        12034
      ],
      "op": "ADD",
      "path": "2"
    },
    "12165": {
      "fn": "Competition._updateResults",
      "offset": [
        12000,
        12034
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12166": {
      "fn": "Competition._updateResults",
      "offset": [
        12038,
        12039
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "12168": {
      "fn": "Competition._updateResults",
      "offset": [
        12000,
        12034
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "12170": {
      "fn": "Competition._updateResults",
      "offset": [
        12000,
        12034
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12171": {
      "fn": "Competition._updateResults",
      "offset": [
        12000,
        12034
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12172": {
      "fn": "Competition._updateResults",
      "offset": [
        12000,
        12034
      ],
      "op": "AND",
      "path": "2"
    },
    "12173": {
      "fn": "Competition._updateResults",
      "offset": [
        12000,
        12039
      ],
      "op": "LT",
      "path": "2"
    },
    "12174": {
      "branch": 245,
      "fn": "Competition._updateResults",
      "offset": [
        12000,
        12039
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12175": {
      "fn": "Competition._updateResults",
      "offset": [
        11992,
        12103
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3000"
    },
    "12178": {
      "branch": 245,
      "fn": "Competition._updateResults",
      "offset": [
        11992,
        12103
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12179": {
      "fn": "Competition._updateResults",
      "offset": [
        11992,
        12103
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12181": {
      "fn": "Competition._updateResults",
      "offset": [
        11992,
        12103
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12182": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12186": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12188": {
      "op": "SHL"
    },
    "12189": {
      "fn": "Competition._updateResults",
      "offset": [
        11992,
        12103
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12190": {
      "fn": "Competition._updateResults",
      "offset": [
        11992,
        12103
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12193": {
      "fn": "Competition._updateResults",
      "offset": [
        11992,
        12103
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12195": {
      "fn": "Competition._updateResults",
      "offset": [
        11992,
        12103
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12196": {
      "fn": "Competition._updateResults",
      "offset": [
        11992,
        12103
      ],
      "op": "ADD",
      "path": "2"
    },
    "12197": {
      "op": "MSTORE"
    },
    "12198": {
      "op": "PUSH1",
      "value": "0x3B"
    },
    "12200": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12202": {
      "op": "DUP3"
    },
    "12203": {
      "op": "ADD"
    },
    "12204": {
      "op": "MSTORE"
    },
    "12205": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20757064617465526573756C74733A20436861"
    },
    "12238": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12240": {
      "op": "DUP3"
    },
    "12241": {
      "op": "ADD"
    },
    "12242": {
      "op": "MSTORE"
    },
    "12243": {
      "op": "PUSH32",
      "value": "0x6C6C656E676520696E20756E65787065637465642073746174652E0000000000"
    },
    "12276": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12278": {
      "op": "DUP3"
    },
    "12279": {
      "op": "ADD"
    },
    "12280": {
      "op": "MSTORE"
    },
    "12281": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12283": {
      "op": "ADD"
    },
    "12284": {
      "fn": "Competition._updateResults",
      "offset": [
        11992,
        12103
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "12287": {
      "op": "JUMP"
    },
    "12288": {
      "fn": "Competition._updateResults",
      "offset": [
        11992,
        12103
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12289": {
      "fn": "Competition._updateResults",
      "offset": [
        12121,
        12149
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 152,
      "value": "0xFFFFFFFF"
    },
    "12294": {
      "fn": "Competition._updateResults",
      "offset": [
        12121,
        12149
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12295": {
      "fn": "Competition._updateResults",
      "offset": [
        12121,
        12149
      ],
      "op": "AND",
      "path": "2"
    },
    "12296": {
      "fn": "Competition._updateResults",
      "offset": [
        12121,
        12149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12298": {
      "fn": "Competition._updateResults",
      "offset": [
        12121,
        12149
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12299": {
      "fn": "Competition._updateResults",
      "offset": [
        12121,
        12149
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12300": {
      "fn": "Competition._updateResults",
      "offset": [
        12121,
        12149
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12301": {
      "fn": "Competition._updateResults",
      "offset": [
        12121,
        12132
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "12303": {
      "fn": "Competition._updateResults",
      "offset": [
        12121,
        12149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12305": {
      "fn": "Competition._updateResults",
      "offset": [
        12121,
        12149
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12306": {
      "fn": "Competition._updateResults",
      "offset": [
        12121,
        12149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12308": {
      "fn": "Competition._updateResults",
      "offset": [
        12121,
        12149
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12309": {
      "fn": "Competition._updateResults",
      "offset": [
        12121,
        12149
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12310": {
      "fn": "Competition._updateResults",
      "offset": [
        12121,
        12157
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12312": {
      "fn": "Competition._updateResults",
      "offset": [
        12121,
        12157
      ],
      "op": "ADD",
      "path": "2"
    },
    "12313": {
      "fn": "Competition._updateResults",
      "offset": [
        12121,
        12157
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12314": {
      "fn": "Competition._updateResults",
      "offset": [
        12121,
        12175
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12315": {
      "branch": 246,
      "fn": "Competition._updateResults",
      "offset": [
        12121,
        12175
      ],
      "op": "EQ",
      "path": "2"
    },
    "12316": {
      "fn": "Competition._updateResults",
      "offset": [
        12113,
        12240
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x308D"
    },
    "12319": {
      "branch": 246,
      "fn": "Competition._updateResults",
      "offset": [
        12113,
        12240
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12320": {
      "fn": "Competition._updateResults",
      "offset": [
        12113,
        12240
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12322": {
      "fn": "Competition._updateResults",
      "offset": [
        12113,
        12240
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12323": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12327": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12329": {
      "op": "SHL"
    },
    "12330": {
      "fn": "Competition._updateResults",
      "offset": [
        12113,
        12240
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12331": {
      "fn": "Competition._updateResults",
      "offset": [
        12113,
        12240
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12334": {
      "fn": "Competition._updateResults",
      "offset": [
        12113,
        12240
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12336": {
      "fn": "Competition._updateResults",
      "offset": [
        12113,
        12240
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12337": {
      "fn": "Competition._updateResults",
      "offset": [
        12113,
        12240
      ],
      "op": "ADD",
      "path": "2"
    },
    "12338": {
      "op": "MSTORE"
    },
    "12339": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "12341": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12343": {
      "op": "DUP3"
    },
    "12344": {
      "op": "ADD"
    },
    "12345": {
      "op": "MSTORE"
    },
    "12346": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20757064617465526573756C74733A20436C61"
    },
    "12379": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12381": {
      "op": "DUP3"
    },
    "12382": {
      "op": "ADD"
    },
    "12383": {
      "op": "MSTORE"
    },
    "12384": {
      "op": "PUSH32",
      "value": "0x736820696E206578697374696E6720726573756C747320686173682E00000000"
    },
    "12417": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12419": {
      "op": "DUP3"
    },
    "12420": {
      "op": "ADD"
    },
    "12421": {
      "op": "MSTORE"
    },
    "12422": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12424": {
      "op": "ADD"
    },
    "12425": {
      "fn": "Competition._updateResults",
      "offset": [
        12113,
        12240
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "12428": {
      "op": "JUMP"
    },
    "12429": {
      "fn": "Competition._updateResults",
      "offset": [
        12113,
        12240
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12430": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12278
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 153,
      "value": "0xFFFFFFFF"
    },
    "12435": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12278
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12436": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12278
      ],
      "op": "AND",
      "path": "2"
    },
    "12437": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12278
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12439": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12278
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12440": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12278
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12441": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12278
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12442": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "12444": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12278
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12446": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12278
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12447": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12278
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12449": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12278
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12450": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12278
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12451": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12278
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12452": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "12454": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12286
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12455": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12286
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12456": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12286
      ],
      "op": "ADD",
      "path": "2"
    },
    "12457": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12303
      ],
      "op": "DUP8",
      "path": "2"
    },
    "12458": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12303
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12459": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12303
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12460": {
      "fn": "Competition._updateResults",
      "offset": [
        12343,
        12406
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 154
    },
    "12461": {
      "fn": "Competition._updateResults",
      "offset": [
        12343,
        12406
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12462": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12286
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12463": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12286
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "12464": {
      "op": "POP"
    },
    "12465": {
      "fn": "Competition._updateResults",
      "offset": [
        12289,
        12303
      ],
      "op": "DUP6",
      "path": "2"
    },
    "12466": {
      "fn": "Competition._updateResults",
      "offset": [
        12289,
        12303
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12467": {
      "fn": "Competition._updateResults",
      "offset": [
        12375,
        12389
      ],
      "op": "DUP8",
      "path": "2"
    },
    "12468": {
      "fn": "Competition._updateResults",
      "offset": [
        12375,
        12389
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12469": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12278
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12470": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12278
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12471": {
      "fn": "Competition._updateResults",
      "offset": [
        12343,
        12406
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xFB7D772905D44C5FDD59D4AB87C7F40281E09F93E2E189D03737C6D82B154EA"
    },
    "12504": {
      "fn": "Competition._updateResults",
      "offset": [
        12343,
        12406
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12505": {
      "fn": "Competition._updateResults",
      "offset": [
        12250,
        12278
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12506": {
      "fn": "Competition._updateResults",
      "offset": [
        12343,
        12406
      ],
      "op": "LOG4",
      "path": "2"
    },
    "12507": {
      "fn": "Competition._updateResults",
      "offset": [
        11688,
        12413
      ],
      "op": "POP",
      "path": "2"
    },
    "12508": {
      "fn": "Competition._updateResults",
      "offset": [
        11688,
        12413
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12509": {
      "fn": "Competition._updateResults",
      "offset": [
        11688,
        12413
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12510": {
      "fn": "Competition._updateResults",
      "offset": [
        11688,
        12413
      ],
      "op": "POP",
      "path": "2"
    },
    "12511": {
      "fn": "Competition._updateResults",
      "offset": [
        11688,
        12413
      ],
      "op": "POP",
      "path": "2"
    },
    "12512": {
      "fn": "Competition._updateResults",
      "jump": "o",
      "offset": [
        11688,
        12413
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12513": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7182,
        7407
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "12514": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7256,
        7278
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x30EB"
    },
    "12517": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7264,
        7268
      ],
      "op": "DUP3",
      "path": "7"
    },
    "12518": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7270,
        7277
      ],
      "op": "DUP3",
      "path": "7"
    },
    "12519": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7256,
        7263
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D96"
    },
    "12522": {
      "fn": "AccessControl._revokeRole",
      "jump": "i",
      "offset": [
        7256,
        7278
      ],
      "op": "JUMP",
      "path": "7"
    },
    "12523": {
      "branch": 262,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7256,
        7278
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "12524": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7252,
        7401
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "12525": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7252,
        7401
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1112"
    },
    "12528": {
      "branch": 262,
      "fn": "AccessControl._revokeRole",
      "offset": [
        7252,
        7401
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "12529": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7326,
        7331
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 155,
      "value": "0x0"
    },
    "12531": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "DUP3",
      "path": "7"
    },
    "12532": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "DUP2",
      "path": "7"
    },
    "12533": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "12534": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "12536": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "DUP2",
      "path": "7"
    },
    "12537": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "DUP2",
      "path": "7"
    },
    "12538": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "12539": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "12541": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "DUP1",
      "path": "7"
    },
    "12542": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "DUP4",
      "path": "7"
    },
    "12543": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "12544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12550": {
      "op": "SHL"
    },
    "12551": {
      "op": "SUB"
    },
    "12552": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7323
      ],
      "op": "DUP6",
      "path": "7"
    },
    "12553": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7323
      ],
      "op": "AND",
      "path": "7"
    },
    "12554": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7323
      ],
      "op": "DUP1",
      "path": "7"
    },
    "12555": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7323
      ],
      "op": "DUP6",
      "path": "7"
    },
    "12556": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7323
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "12557": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7323
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "12558": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7323
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "12559": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7323
      ],
      "op": "DUP1",
      "path": "7"
    },
    "12560": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7323
      ],
      "op": "DUP4",
      "path": "7"
    },
    "12561": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7323
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "12562": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7331
      ],
      "op": "DUP1",
      "path": "7"
    },
    "12563": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7331
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "12564": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12566": {
      "op": "NOT"
    },
    "12567": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7331
      ],
      "op": "AND",
      "path": "7"
    },
    "12568": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7331
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "12569": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7331
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "12570": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7350,
        7390
      ],
      "op": "MLOAD",
      "path": "7",
      "statement": 156
    },
    "12571": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "19"
    },
    "12572": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "12573": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "DUP6",
      "path": "7"
    },
    "12574": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7294,
        7306
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "12575": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7350,
        7390
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
    },
    "12608": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7350,
        7390
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "12609": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7326,
        7331
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "12610": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7350,
        7390
      ],
      "op": "LOG4",
      "path": "7"
    },
    "12611": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7182,
        7407
      ],
      "op": "POP",
      "path": "7"
    },
    "12612": {
      "fn": "AccessControl._revokeRole",
      "offset": [
        7182,
        7407
      ],
      "op": "POP",
      "path": "7"
    },
    "12613": {
      "fn": "AccessControl._revokeRole",
      "jump": "o",
      "offset": [
        7182,
        7407
      ],
      "op": "JUMP",
      "path": "7"
    },
    "12614": {
      "fn": "Competition._updateDataset",
      "offset": [
        9678,
        10255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12615": {
      "fn": "Competition._updateDataset",
      "offset": [
        9799,
        9811
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12617": {
      "fn": "Competition._updateDataset",
      "offset": [
        9853,
        9867
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 157
    },
    "12618": {
      "fn": "Competition._updateDataset",
      "offset": [
        9835,
        9849
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12619": {
      "fn": "Competition._updateDataset",
      "offset": [
        9835,
        9867
      ],
      "op": "EQ",
      "path": "2"
    },
    "12620": {
      "branch": 247,
      "fn": "Competition._updateDataset",
      "offset": [
        9835,
        9867
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12621": {
      "fn": "Competition._updateDataset",
      "offset": [
        9827,
        9944
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31CF"
    },
    "12624": {
      "branch": 247,
      "fn": "Competition._updateDataset",
      "offset": [
        9827,
        9944
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12625": {
      "fn": "Competition._updateDataset",
      "offset": [
        9827,
        9944
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12627": {
      "fn": "Competition._updateDataset",
      "offset": [
        9827,
        9944
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12628": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12632": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12634": {
      "op": "SHL"
    },
    "12635": {
      "fn": "Competition._updateDataset",
      "offset": [
        9827,
        9944
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12636": {
      "fn": "Competition._updateDataset",
      "offset": [
        9827,
        9944
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12639": {
      "fn": "Competition._updateDataset",
      "offset": [
        9827,
        9944
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12641": {
      "fn": "Competition._updateDataset",
      "offset": [
        9827,
        9944
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12642": {
      "fn": "Competition._updateDataset",
      "offset": [
        9827,
        9944
      ],
      "op": "ADD",
      "path": "2"
    },
    "12643": {
      "op": "MSTORE"
    },
    "12644": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "12646": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12648": {
      "op": "DUP3"
    },
    "12649": {
      "op": "ADD"
    },
    "12650": {
      "op": "MSTORE"
    },
    "12651": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20757064617465446174617365743A2043616E"
    },
    "12684": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12686": {
      "op": "DUP3"
    },
    "12687": {
      "op": "ADD"
    },
    "12688": {
      "op": "MSTORE"
    },
    "12689": {
      "op": "PUSH32",
      "value": "0x6E6F74207570646174652077697468207468652073616D652068617368206173"
    },
    "12722": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12724": {
      "op": "DUP3"
    },
    "12725": {
      "op": "ADD"
    },
    "12726": {
      "op": "MSTORE"
    },
    "12727": {
      "op": "PUSH8",
      "value": "0x103132B337B93297"
    },
    "12736": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "12738": {
      "op": "SHL"
    },
    "12739": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12741": {
      "op": "DUP3"
    },
    "12742": {
      "op": "ADD"
    },
    "12743": {
      "op": "MSTORE"
    },
    "12744": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "12746": {
      "op": "ADD"
    },
    "12747": {
      "fn": "Competition._updateDataset",
      "offset": [
        9827,
        9944
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "12750": {
      "op": "JUMP"
    },
    "12751": {
      "fn": "Competition._updateDataset",
      "offset": [
        9827,
        9944
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12752": {
      "fn": "Competition._updateDataset",
      "offset": [
        9962,
        9990
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 158,
      "value": "0xFFFFFFFF"
    },
    "12757": {
      "fn": "Competition._updateDataset",
      "offset": [
        9962,
        9990
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12758": {
      "fn": "Competition._updateDataset",
      "offset": [
        9962,
        9990
      ],
      "op": "AND",
      "path": "2"
    },
    "12759": {
      "fn": "Competition._updateDataset",
      "offset": [
        9962,
        9990
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12761": {
      "fn": "Competition._updateDataset",
      "offset": [
        9962,
        9990
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12762": {
      "fn": "Competition._updateDataset",
      "offset": [
        9962,
        9990
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12763": {
      "fn": "Competition._updateDataset",
      "offset": [
        9962,
        9990
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12764": {
      "fn": "Competition._updateDataset",
      "offset": [
        9962,
        9973
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "12766": {
      "fn": "Competition._updateDataset",
      "offset": [
        9962,
        9990
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12768": {
      "fn": "Competition._updateDataset",
      "offset": [
        9962,
        9990
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12769": {
      "fn": "Competition._updateDataset",
      "offset": [
        9962,
        9990
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12771": {
      "fn": "Competition._updateDataset",
      "offset": [
        9962,
        9990
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12772": {
      "fn": "Competition._updateDataset",
      "offset": [
        9962,
        9990
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12773": {
      "fn": "Competition._updateDataset",
      "offset": [
        9962,
        9998
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "12774": {
      "fn": "Competition._updateDataset",
      "offset": [
        9962,
        10016
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12775": {
      "branch": 248,
      "fn": "Competition._updateDataset",
      "offset": [
        9962,
        10016
      ],
      "op": "EQ",
      "path": "2"
    },
    "12776": {
      "fn": "Competition._updateDataset",
      "offset": [
        9954,
        10082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3259"
    },
    "12779": {
      "branch": 248,
      "fn": "Competition._updateDataset",
      "offset": [
        9954,
        10082
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12780": {
      "fn": "Competition._updateDataset",
      "offset": [
        9954,
        10082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12782": {
      "fn": "Competition._updateDataset",
      "offset": [
        9954,
        10082
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12783": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12787": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12789": {
      "op": "SHL"
    },
    "12790": {
      "fn": "Competition._updateDataset",
      "offset": [
        9954,
        10082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12791": {
      "fn": "Competition._updateDataset",
      "offset": [
        9954,
        10082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12792": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12794": {
      "fn": "Competition._updateDataset",
      "offset": [
        9954,
        10082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "12796": {
      "fn": "Competition._updateDataset",
      "offset": [
        9954,
        10082
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12797": {
      "fn": "Competition._updateDataset",
      "offset": [
        9954,
        10082
      ],
      "op": "ADD",
      "path": "2"
    },
    "12798": {
      "op": "MSTORE"
    },
    "12799": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "12801": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12803": {
      "op": "DUP3"
    },
    "12804": {
      "op": "ADD"
    },
    "12805": {
      "op": "MSTORE"
    },
    "12806": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20757064617465446174617365743A20496E63"
    },
    "12839": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12841": {
      "op": "DUP3"
    },
    "12842": {
      "op": "ADD"
    },
    "12843": {
      "op": "MSTORE"
    },
    "12844": {
      "op": "PUSH32",
      "value": "0x6F7272656374206F6C642064617461736574207265666572656E63652E000000"
    },
    "12877": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12879": {
      "op": "DUP3"
    },
    "12880": {
      "op": "ADD"
    },
    "12881": {
      "op": "MSTORE"
    },
    "12882": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12884": {
      "op": "ADD"
    },
    "12885": {
      "fn": "Competition._updateDataset",
      "offset": [
        9954,
        10082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "12888": {
      "op": "JUMP"
    },
    "12889": {
      "fn": "Competition._updateDataset",
      "offset": [
        9954,
        10082
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12890": {
      "op": "POP"
    },
    "12891": {
      "fn": "Competition._updateDataset",
      "offset": [
        10092,
        10120
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 159,
      "value": "0xFFFFFFFF"
    },
    "12896": {
      "fn": "Competition._updateDataset",
      "offset": [
        10092,
        10120
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12897": {
      "fn": "Competition._updateDataset",
      "offset": [
        10092,
        10120
      ],
      "op": "AND",
      "path": "2"
    },
    "12898": {
      "fn": "Competition._updateDataset",
      "offset": [
        10092,
        10120
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12900": {
      "fn": "Competition._updateDataset",
      "offset": [
        10092,
        10120
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12901": {
      "fn": "Competition._updateDataset",
      "offset": [
        10092,
        10120
      ],
      "op": "DUP2",
      "path": "2"
    },
    "12902": {
      "fn": "Competition._updateDataset",
      "offset": [
        10092,
        10120
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12903": {
      "fn": "Competition._updateDataset",
      "offset": [
        10092,
        10103
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "12905": {
      "fn": "Competition._updateDataset",
      "offset": [
        10092,
        10120
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "12907": {
      "fn": "Competition._updateDataset",
      "offset": [
        10092,
        10120
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "12908": {
      "fn": "Competition._updateDataset",
      "offset": [
        10092,
        10120
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12910": {
      "fn": "Competition._updateDataset",
      "offset": [
        10092,
        10120
      ],
      "op": "DUP1",
      "path": "2"
    },
    "12911": {
      "fn": "Competition._updateDataset",
      "offset": [
        10092,
        10120
      ],
      "op": "DUP3",
      "path": "2"
    },
    "12912": {
      "fn": "Competition._updateDataset",
      "offset": [
        10092,
        10120
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "12913": {
      "fn": "Competition._updateDataset",
      "offset": [
        10092,
        10145
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12914": {
      "fn": "Competition._updateDataset",
      "offset": [
        10092,
        10145
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12915": {
      "fn": "Competition._updateDataset",
      "offset": [
        10092,
        10145
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "12916": {
      "fn": "Competition._updateDataset",
      "offset": [
        10185,
        10248
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 160
    },
    "12917": {
      "fn": "Competition._updateDataset",
      "offset": [
        10165,
        10169
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 161,
      "value": "0x1"
    },
    "12919": {
      "fn": "Competition._updateDataset",
      "offset": [
        10165,
        10169
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12920": {
      "fn": "Competition._updateDataset",
      "offset": [
        10131,
        10145
      ],
      "op": "DUP5",
      "path": "2"
    },
    "12921": {
      "fn": "Competition._updateDataset",
      "offset": [
        10131,
        10145
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12922": {
      "fn": "Competition._updateDataset",
      "offset": [
        10217,
        10231
      ],
      "op": "DUP7",
      "path": "2"
    },
    "12923": {
      "fn": "Competition._updateDataset",
      "offset": [
        10217,
        10231
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12924": {
      "fn": "Competition._updateDataset",
      "offset": [
        10185,
        10248
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xB4AD7E2453C3C06A28C5CFE29A3067C6EDDE6EB03BE4DF2A461F9D806CB747E"
    },
    "12957": {
      "fn": "Competition._updateDataset",
      "offset": [
        10185,
        10248
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "12958": {
      "fn": "Competition._updateDataset",
      "offset": [
        10092,
        10120
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "12959": {
      "fn": "Competition._updateDataset",
      "offset": [
        10185,
        10248
      ],
      "op": "LOG4",
      "path": "2"
    },
    "12960": {
      "fn": "Competition._updateDataset",
      "offset": [
        9678,
        10255
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "12961": {
      "fn": "Competition._updateDataset",
      "offset": [
        9678,
        10255
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "12962": {
      "fn": "Competition._updateDataset",
      "offset": [
        9678,
        10255
      ],
      "op": "POP",
      "path": "2"
    },
    "12963": {
      "fn": "Competition._updateDataset",
      "offset": [
        9678,
        10255
      ],
      "op": "POP",
      "path": "2"
    },
    "12964": {
      "fn": "Competition._updateDataset",
      "offset": [
        9678,
        10255
      ],
      "op": "POP",
      "path": "2"
    },
    "12965": {
      "fn": "Competition._updateDataset",
      "jump": "o",
      "offset": [
        9678,
        10255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "12966": {
      "fn": "EnumerableSet.at",
      "offset": [
        7669,
        7825
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "12967": {
      "fn": "EnumerableSet.at",
      "offset": [
        7743,
        7750
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "12969": {
      "fn": "EnumerableSet.at",
      "offset": [
        7793,
        7815
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 162,
      "value": "0x1E10"
    },
    "12972": {
      "fn": "EnumerableSet.at",
      "offset": [
        7797,
        7800
      ],
      "op": "DUP4",
      "path": "23"
    },
    "12973": {
      "fn": "EnumerableSet.at",
      "offset": [
        7809,
        7814
      ],
      "op": "DUP4",
      "path": "23"
    },
    "12974": {
      "fn": "EnumerableSet.at",
      "offset": [
        7793,
        7796
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3A01"
    },
    "12977": {
      "fn": "EnumerableSet.at",
      "jump": "i",
      "offset": [
        7793,
        7815
      ],
      "op": "JUMP",
      "path": "23"
    },
    "12978": {
      "fn": "Competition._updateKey",
      "offset": [
        10261,
        10780
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "12979": {
      "fn": "Competition._updateKey",
      "offset": [
        10370,
        10382
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "12981": {
      "fn": "Competition._updateKey",
      "offset": [
        10420,
        10430
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 163
    },
    "12982": {
      "fn": "Competition._updateKey",
      "offset": [
        10406,
        10416
      ],
      "op": "DUP4",
      "path": "2"
    },
    "12983": {
      "fn": "Competition._updateKey",
      "offset": [
        10406,
        10430
      ],
      "op": "EQ",
      "path": "2"
    },
    "12984": {
      "branch": 249,
      "fn": "Competition._updateKey",
      "offset": [
        10406,
        10430
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "12985": {
      "fn": "Competition._updateKey",
      "offset": [
        10398,
        10504
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3338"
    },
    "12988": {
      "branch": 249,
      "fn": "Competition._updateKey",
      "offset": [
        10398,
        10504
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12989": {
      "fn": "Competition._updateKey",
      "offset": [
        10398,
        10504
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "12991": {
      "fn": "Competition._updateKey",
      "offset": [
        10398,
        10504
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "12992": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12996": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12998": {
      "op": "SHL"
    },
    "12999": {
      "fn": "Competition._updateKey",
      "offset": [
        10398,
        10504
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13000": {
      "fn": "Competition._updateKey",
      "offset": [
        10398,
        10504
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13001": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13003": {
      "fn": "Competition._updateKey",
      "offset": [
        10398,
        10504
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13005": {
      "fn": "Competition._updateKey",
      "offset": [
        10398,
        10504
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13006": {
      "fn": "Competition._updateKey",
      "offset": [
        10398,
        10504
      ],
      "op": "ADD",
      "path": "2"
    },
    "13007": {
      "op": "MSTORE"
    },
    "13008": {
      "op": "PUSH1",
      "value": "0x45"
    },
    "13010": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13012": {
      "op": "DUP3"
    },
    "13013": {
      "op": "ADD"
    },
    "13014": {
      "op": "MSTORE"
    },
    "13015": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D205F7570646174654B65793A2043616E6E6F74"
    },
    "13048": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13050": {
      "op": "DUP3"
    },
    "13051": {
      "op": "ADD"
    },
    "13052": {
      "op": "MSTORE"
    },
    "13053": {
      "op": "PUSH32",
      "value": "0x207570646174652077697468207468652073616D652068617368206173206265"
    },
    "13086": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13088": {
      "op": "DUP3"
    },
    "13089": {
      "op": "ADD"
    },
    "13090": {
      "op": "MSTORE"
    },
    "13091": {
      "op": "PUSH5",
      "value": "0x3337B93297"
    },
    "13097": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "13099": {
      "op": "SHL"
    },
    "13100": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13102": {
      "op": "DUP3"
    },
    "13103": {
      "op": "ADD"
    },
    "13104": {
      "op": "MSTORE"
    },
    "13105": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "13107": {
      "op": "ADD"
    },
    "13108": {
      "fn": "Competition._updateKey",
      "offset": [
        10398,
        10504
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "13111": {
      "op": "JUMP"
    },
    "13112": {
      "fn": "Competition._updateKey",
      "offset": [
        10398,
        10504
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13113": {
      "fn": "Competition._updateKey",
      "offset": [
        10522,
        10550
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 164,
      "value": "0xFFFFFFFF"
    },
    "13118": {
      "fn": "Competition._updateKey",
      "offset": [
        10522,
        10550
      ],
      "op": "DUP5",
      "path": "2"
    },
    "13119": {
      "fn": "Competition._updateKey",
      "offset": [
        10522,
        10550
      ],
      "op": "AND",
      "path": "2"
    },
    "13120": {
      "fn": "Competition._updateKey",
      "offset": [
        10522,
        10550
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13122": {
      "fn": "Competition._updateKey",
      "offset": [
        10522,
        10550
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13123": {
      "fn": "Competition._updateKey",
      "offset": [
        10522,
        10550
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13124": {
      "fn": "Competition._updateKey",
      "offset": [
        10522,
        10550
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13125": {
      "fn": "Competition._updateKey",
      "offset": [
        10522,
        10533
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "13127": {
      "fn": "Competition._updateKey",
      "offset": [
        10522,
        10550
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13129": {
      "fn": "Competition._updateKey",
      "offset": [
        10522,
        10550
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13130": {
      "fn": "Competition._updateKey",
      "offset": [
        10522,
        10550
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13132": {
      "fn": "Competition._updateKey",
      "offset": [
        10522,
        10550
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13133": {
      "fn": "Competition._updateKey",
      "offset": [
        10522,
        10550
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13134": {
      "fn": "Competition._updateKey",
      "offset": [
        10522,
        10554
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "13136": {
      "fn": "Competition._updateKey",
      "offset": [
        10522,
        10554
      ],
      "op": "ADD",
      "path": "2"
    },
    "13137": {
      "fn": "Competition._updateKey",
      "offset": [
        10522,
        10554
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13138": {
      "fn": "Competition._updateKey",
      "offset": [
        10522,
        10568
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13139": {
      "branch": 250,
      "fn": "Competition._updateKey",
      "offset": [
        10522,
        10568
      ],
      "op": "EQ",
      "path": "2"
    },
    "13140": {
      "fn": "Competition._updateKey",
      "offset": [
        10514,
        10627
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33BE"
    },
    "13143": {
      "branch": 250,
      "fn": "Competition._updateKey",
      "offset": [
        10514,
        10627
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13144": {
      "fn": "Competition._updateKey",
      "offset": [
        10514,
        10627
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13146": {
      "fn": "Competition._updateKey",
      "offset": [
        10514,
        10627
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13147": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13151": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13153": {
      "op": "SHL"
    },
    "13154": {
      "fn": "Competition._updateKey",
      "offset": [
        10514,
        10627
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13155": {
      "fn": "Competition._updateKey",
      "offset": [
        10514,
        10627
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13156": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13158": {
      "fn": "Competition._updateKey",
      "offset": [
        10514,
        10627
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13160": {
      "fn": "Competition._updateKey",
      "offset": [
        10514,
        10627
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13161": {
      "fn": "Competition._updateKey",
      "offset": [
        10514,
        10627
      ],
      "op": "ADD",
      "path": "2"
    },
    "13162": {
      "op": "MSTORE"
    },
    "13163": {
      "op": "PUSH1",
      "value": "0x36"
    },
    "13165": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13167": {
      "op": "DUP3"
    },
    "13168": {
      "op": "ADD"
    },
    "13169": {
      "op": "MSTORE"
    },
    "13170": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D205F7570646174654B65793A20496E636F7272"
    },
    "13203": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13205": {
      "op": "DUP3"
    },
    "13206": {
      "op": "ADD"
    },
    "13207": {
      "op": "MSTORE"
    },
    "13208": {
      "op": "PUSH22",
      "value": "0x32B1BA1037B6321035B2BC903932B332B932B731B297"
    },
    "13231": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "13233": {
      "op": "SHL"
    },
    "13234": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13236": {
      "op": "DUP3"
    },
    "13237": {
      "op": "ADD"
    },
    "13238": {
      "op": "MSTORE"
    },
    "13239": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13241": {
      "op": "ADD"
    },
    "13242": {
      "fn": "Competition._updateKey",
      "offset": [
        10514,
        10627
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "13245": {
      "op": "JUMP"
    },
    "13246": {
      "fn": "Competition._updateKey",
      "offset": [
        10514,
        10627
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13247": {
      "op": "POP"
    },
    "13248": {
      "fn": "Competition._updateKey",
      "offset": [
        10637,
        10665
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 165,
      "value": "0xFFFFFFFF"
    },
    "13253": {
      "fn": "Competition._updateKey",
      "offset": [
        10637,
        10665
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13254": {
      "fn": "Competition._updateKey",
      "offset": [
        10637,
        10665
      ],
      "op": "AND",
      "path": "2"
    },
    "13255": {
      "fn": "Competition._updateKey",
      "offset": [
        10637,
        10665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13257": {
      "fn": "Competition._updateKey",
      "offset": [
        10637,
        10665
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13258": {
      "fn": "Competition._updateKey",
      "offset": [
        10637,
        10665
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13259": {
      "fn": "Competition._updateKey",
      "offset": [
        10637,
        10665
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13260": {
      "fn": "Competition._updateKey",
      "offset": [
        10637,
        10648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "13262": {
      "fn": "Competition._updateKey",
      "offset": [
        10637,
        10665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13264": {
      "fn": "Competition._updateKey",
      "offset": [
        10637,
        10665
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13265": {
      "fn": "Competition._updateKey",
      "offset": [
        10637,
        10665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13267": {
      "fn": "Competition._updateKey",
      "offset": [
        10637,
        10665
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13268": {
      "fn": "Competition._updateKey",
      "offset": [
        10637,
        10665
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13269": {
      "fn": "Competition._updateKey",
      "offset": [
        10637,
        10665
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13270": {
      "fn": "Competition._updateKey",
      "offset": [
        10637,
        10669
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "13272": {
      "fn": "Competition._updateKey",
      "offset": [
        10637,
        10669
      ],
      "op": "ADD",
      "path": "2"
    },
    "13273": {
      "fn": "Competition._updateKey",
      "offset": [
        10637,
        10682
      ],
      "op": "DUP5",
      "path": "2"
    },
    "13274": {
      "fn": "Competition._updateKey",
      "offset": [
        10637,
        10682
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13275": {
      "fn": "Competition._updateKey",
      "offset": [
        10637,
        10682
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "13276": {
      "fn": "Competition._updateKey",
      "offset": [
        10722,
        10773
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 166
    },
    "13277": {
      "fn": "Competition._updateKey",
      "offset": [
        10702,
        10706
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 167,
      "value": "0x1"
    },
    "13279": {
      "fn": "Competition._updateKey",
      "offset": [
        10702,
        10706
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "13280": {
      "fn": "Competition._updateKey",
      "offset": [
        10672,
        10682
      ],
      "op": "DUP5",
      "path": "2"
    },
    "13281": {
      "fn": "Competition._updateKey",
      "offset": [
        10672,
        10682
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "13282": {
      "fn": "Competition._updateKey",
      "offset": [
        10750,
        10760
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13283": {
      "fn": "Competition._updateKey",
      "offset": [
        10750,
        10760
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "13284": {
      "fn": "Competition._updateKey",
      "offset": [
        10722,
        10773
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x7A2B6B0F48D13449D72D8FD2C1FAE94CD13C970CC0DC738ABD0BAE8D50CE81C6"
    },
    "13317": {
      "fn": "Competition._updateKey",
      "offset": [
        10722,
        10773
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13318": {
      "fn": "Competition._updateKey",
      "offset": [
        10637,
        10665
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13319": {
      "fn": "Competition._updateKey",
      "offset": [
        10722,
        10773
      ],
      "op": "LOG4",
      "path": "2"
    },
    "13320": {
      "fn": "Competition._updateKey",
      "offset": [
        10261,
        10780
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "13321": {
      "fn": "Competition._updateKey",
      "offset": [
        10261,
        10780
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "13322": {
      "fn": "Competition._updateKey",
      "offset": [
        10261,
        10780
      ],
      "op": "POP",
      "path": "2"
    },
    "13323": {
      "fn": "Competition._updateKey",
      "offset": [
        10261,
        10780
      ],
      "op": "POP",
      "path": "2"
    },
    "13324": {
      "fn": "Competition._updateKey",
      "offset": [
        10261,
        10780
      ],
      "op": "POP",
      "path": "2"
    },
    "13325": {
      "fn": "Competition._updateKey",
      "jump": "o",
      "offset": [
        10261,
        10780
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13326": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4520,
        5333
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13327": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4682,
        4699
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 168,
      "value": "0x1"
    },
    "13329": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4682,
        4699
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13330": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4682,
        4699
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13335": {
      "op": "SHL"
    },
    "13336": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4682,
        4699
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13337": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4682,
        4699
      ],
      "op": "DIV",
      "path": "2"
    },
    "13338": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4682,
        4699
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "13343": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4682,
        4699
      ],
      "op": "AND",
      "path": "2"
    },
    "13344": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4626,
        4648
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13346": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4717,
        4745
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 169
    },
    "13347": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4717,
        4745
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13348": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4717,
        4745
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13349": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4717,
        4728
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "13351": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4717,
        4745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13353": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4717,
        4745
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13354": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4717,
        4745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13356": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4717,
        4745
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13357": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4717,
        4745
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13358": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4717,
        4751
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13360": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4717,
        4751
      ],
      "op": "ADD",
      "path": "2"
    },
    "13361": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4717,
        4751
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13362": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4682,
        4699
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13363": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4682,
        4699
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13364": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4717,
        4751
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "13366": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4717,
        4751
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13367": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4717,
        4751
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13368": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4717,
        4751
      ],
      "op": "AND",
      "path": "2"
    },
    "13369": {
      "branch": 251,
      "fn": "Competition._updateSubmission",
      "offset": [
        4717,
        4756
      ],
      "op": "EQ",
      "path": "2"
    },
    "13370": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4709,
        4823
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3499"
    },
    "13373": {
      "branch": 251,
      "fn": "Competition._updateSubmission",
      "offset": [
        4709,
        4823
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13374": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4709,
        4823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13376": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4709,
        4823
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13377": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13381": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13383": {
      "op": "SHL"
    },
    "13384": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4709,
        4823
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13385": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4709,
        4823
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13388": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4709,
        4823
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13390": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4709,
        4823
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13391": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4709,
        4823
      ],
      "op": "ADD",
      "path": "2"
    },
    "13392": {
      "op": "MSTORE"
    },
    "13393": {
      "op": "PUSH1",
      "value": "0x3E"
    },
    "13395": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13397": {
      "op": "DUP3"
    },
    "13398": {
      "op": "ADD"
    },
    "13399": {
      "op": "MSTORE"
    },
    "13400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13402": {
      "op": "DUP1"
    },
    "13403": {
      "op": "MLOAD"
    },
    "13404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13406": {
      "op": "PUSH2",
      "value": "0x4610"
    },
    "13409": {
      "op": "DUP4"
    },
    "13410": {
      "op": "CODECOPY"
    },
    "13411": {
      "op": "DUP2"
    },
    "13412": {
      "op": "MLOAD"
    },
    "13413": {
      "op": "SWAP2"
    },
    "13414": {
      "op": "MSTORE"
    },
    "13415": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13417": {
      "op": "DUP3"
    },
    "13418": {
      "op": "ADD"
    },
    "13419": {
      "op": "MSTORE"
    },
    "13420": {
      "op": "PUSH32",
      "value": "0x4E6F7420617661696C61626C6520666F72207375626D697373696F6E732E0000"
    },
    "13453": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13455": {
      "op": "DUP3"
    },
    "13456": {
      "op": "ADD"
    },
    "13457": {
      "op": "MSTORE"
    },
    "13458": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13460": {
      "op": "ADD"
    },
    "13461": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4709,
        4823
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "13464": {
      "op": "JUMP"
    },
    "13465": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4709,
        4823
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13466": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4862,
        4879
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 170
    },
    "13467": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4841,
        4858
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13468": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4841,
        4879
      ],
      "op": "EQ",
      "path": "2"
    },
    "13469": {
      "branch": 252,
      "fn": "Competition._updateSubmission",
      "offset": [
        4841,
        4879
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13470": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4833,
        4959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3511"
    },
    "13473": {
      "branch": 252,
      "fn": "Competition._updateSubmission",
      "offset": [
        4833,
        4959
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13474": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4833,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13476": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4833,
        4959
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13477": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13481": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13483": {
      "op": "SHL"
    },
    "13484": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4833,
        4959
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13485": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4833,
        4959
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13486": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13488": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4833,
        4959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13490": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4833,
        4959
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13491": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4833,
        4959
      ],
      "op": "ADD",
      "path": "2"
    },
    "13492": {
      "op": "MSTORE"
    },
    "13493": {
      "op": "PUSH1",
      "value": "0x4B"
    },
    "13495": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13497": {
      "op": "DUP3"
    },
    "13498": {
      "op": "ADD"
    },
    "13499": {
      "op": "MSTORE"
    },
    "13500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13502": {
      "op": "DUP1"
    },
    "13503": {
      "op": "MLOAD"
    },
    "13504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13506": {
      "op": "PUSH2",
      "value": "0x4610"
    },
    "13509": {
      "op": "DUP4"
    },
    "13510": {
      "op": "CODECOPY"
    },
    "13511": {
      "op": "DUP2"
    },
    "13512": {
      "op": "MLOAD"
    },
    "13513": {
      "op": "SWAP2"
    },
    "13514": {
      "op": "MSTORE"
    },
    "13515": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13517": {
      "op": "DUP3"
    },
    "13518": {
      "op": "ADD"
    },
    "13519": {
      "op": "MSTORE"
    },
    "13520": {
      "op": "PUSH32",
      "value": "0x43616E6E6F74207570646174652077697468207468652073616D652068617368"
    },
    "13553": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13555": {
      "op": "DUP3"
    },
    "13556": {
      "op": "ADD"
    },
    "13557": {
      "op": "MSTORE"
    },
    "13558": {
      "op": "PUSH11",
      "value": "0x1030B9903132B337B93297"
    },
    "13570": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "13572": {
      "op": "SHL"
    },
    "13573": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13575": {
      "op": "DUP3"
    },
    "13576": {
      "op": "ADD"
    },
    "13577": {
      "op": "MSTORE"
    },
    "13578": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "13580": {
      "op": "ADD"
    },
    "13581": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4833,
        4959
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "13584": {
      "op": "JUMP"
    },
    "13585": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4833,
        4959
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13586": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5005
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 171,
      "value": "0xFFFFFFFF"
    },
    "13591": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5005
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13592": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5005
      ],
      "op": "AND",
      "path": "2"
    },
    "13593": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13595": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5005
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13596": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5005
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13597": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5005
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13598": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        4988
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "13600": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13602": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5005
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13603": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5005
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13604": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5005
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13605": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13607": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5005
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13608": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5005
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13609": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5005
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13610": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5020,
        5030
      ],
      "op": "CALLER",
      "path": "2"
    },
    "13611": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5031
      ],
      "op": "DUP5",
      "path": "2"
    },
    "13612": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5031
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13613": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "13615": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5019
      ],
      "op": "ADD",
      "path": "2"
    },
    "13616": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5031
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13617": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5031
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13618": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5031
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13619": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5031
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13620": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5031
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13621": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5042
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13622": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5063
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13623": {
      "branch": 253,
      "fn": "Competition._updateSubmission",
      "offset": [
        4977,
        5063
      ],
      "op": "EQ",
      "path": "2"
    },
    "13624": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4969,
        5150
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x35A2"
    },
    "13627": {
      "branch": 253,
      "fn": "Competition._updateSubmission",
      "offset": [
        4969,
        5150
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13628": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4969,
        5150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13630": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4969,
        5150
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "13631": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13635": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13637": {
      "op": "SHL"
    },
    "13638": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4969,
        5150
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13639": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4969,
        5150
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13642": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4969,
        5150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13644": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4969,
        5150
      ],
      "op": "DUP3",
      "path": "2"
    },
    "13645": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4969,
        5150
      ],
      "op": "ADD",
      "path": "2"
    },
    "13646": {
      "op": "MSTORE"
    },
    "13647": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "13649": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13651": {
      "op": "DUP3"
    },
    "13652": {
      "op": "ADD"
    },
    "13653": {
      "op": "MSTORE"
    },
    "13654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13656": {
      "op": "DUP1"
    },
    "13657": {
      "op": "MLOAD"
    },
    "13658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13660": {
      "op": "PUSH2",
      "value": "0x4610"
    },
    "13663": {
      "op": "DUP4"
    },
    "13664": {
      "op": "CODECOPY"
    },
    "13665": {
      "op": "DUP2"
    },
    "13666": {
      "op": "MLOAD"
    },
    "13667": {
      "op": "SWAP2"
    },
    "13668": {
      "op": "MSTORE"
    },
    "13669": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "13671": {
      "op": "DUP3"
    },
    "13672": {
      "op": "ADD"
    },
    "13673": {
      "op": "MSTORE"
    },
    "13674": {
      "op": "PUSH32",
      "value": "0x436C61736820696E206578697374696E67207375626D697373696F6E20686173"
    },
    "13707": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "13709": {
      "op": "DUP3"
    },
    "13710": {
      "op": "ADD"
    },
    "13711": {
      "op": "MSTORE"
    },
    "13712": {
      "op": "PUSH2",
      "value": "0x3417"
    },
    "13715": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "13717": {
      "op": "SHL"
    },
    "13718": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "13720": {
      "op": "DUP3"
    },
    "13721": {
      "op": "ADD"
    },
    "13722": {
      "op": "MSTORE"
    },
    "13723": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "13725": {
      "op": "ADD"
    },
    "13726": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4969,
        5150
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "13729": {
      "op": "JUMP"
    },
    "13730": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4969,
        5150
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13731": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5188
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 172,
      "value": "0xFFFFFFFF"
    },
    "13736": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5188
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13737": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5188
      ],
      "op": "AND",
      "path": "2"
    },
    "13738": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5188
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13740": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5188
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13741": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5188
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13742": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5188
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13743": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5171
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "13745": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5188
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13747": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5188
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13748": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5188
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13749": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5188
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13750": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5188
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13752": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5188
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13753": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5188
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13754": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5188
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13755": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5203,
        5213
      ],
      "op": "CALLER",
      "path": "2"
    },
    "13756": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5214
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13757": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5214
      ],
      "op": "DUP6",
      "path": "2"
    },
    "13758": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5214
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13759": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "13761": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5202
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13762": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5202
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13763": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5202
      ],
      "op": "ADD",
      "path": "2"
    },
    "13764": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5214
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13765": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5214
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "13766": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5214
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13767": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5214
      ],
      "op": "DUP1",
      "path": "2"
    },
    "13768": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5214
      ],
      "op": "DUP4",
      "path": "2"
    },
    "13769": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5214
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13770": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5245
      ],
      "op": "DUP7",
      "path": "2"
    },
    "13771": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5245
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13772": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5160,
        5245
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "13773": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5261,
        5326
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 173
    },
    "13774": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5228,
        5245
      ],
      "op": "DUP6",
      "path": "2"
    },
    "13775": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5228,
        5245
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "13776": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5203,
        5213
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13777": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5203,
        5213
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "13778": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5261,
        5326
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x953E3B79BB71898776BB2EF8BB919748C883B8B27C42E334DE1ECDBF79D472BB"
    },
    "13811": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5261,
        5326
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13812": {
      "fn": "Competition._updateSubmission",
      "offset": [
        5261,
        5326
      ],
      "op": "LOG4",
      "path": "2"
    },
    "13813": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4520,
        5333
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "13814": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4520,
        5333
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13815": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4520,
        5333
      ],
      "op": "POP",
      "path": "2"
    },
    "13816": {
      "fn": "Competition._updateSubmission",
      "offset": [
        4520,
        5333
      ],
      "op": "POP",
      "path": "2"
    },
    "13817": {
      "fn": "Competition._updateSubmission",
      "jump": "o",
      "offset": [
        4520,
        5333
      ],
      "op": "JUMP",
      "path": "2"
    },
    "13818": {
      "fn": "EnumerableSet.add",
      "offset": [
        6421,
        6571
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13819": {
      "fn": "EnumerableSet.add",
      "offset": [
        6491,
        6495
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "13821": {
      "fn": "EnumerableSet.add",
      "offset": [
        6514,
        6564
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 174,
      "value": "0x1E10"
    },
    "13824": {
      "fn": "EnumerableSet.add",
      "offset": [
        6519,
        6522
      ],
      "op": "DUP4",
      "path": "23"
    },
    "13825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13831": {
      "op": "SHL"
    },
    "13832": {
      "op": "SUB"
    },
    "13833": {
      "fn": "EnumerableSet.add",
      "offset": [
        6539,
        6562
      ],
      "op": "DUP5",
      "path": "23"
    },
    "13834": {
      "fn": "EnumerableSet.add",
      "offset": [
        6539,
        6562
      ],
      "op": "AND",
      "path": "23"
    },
    "13835": {
      "fn": "EnumerableSet.add",
      "offset": [
        6514,
        6518
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3A95"
    },
    "13838": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        6514,
        6564
      ],
      "op": "JUMP",
      "path": "23"
    },
    "13839": {
      "fn": "AccessControlRci._initializeRciAdmin",
      "offset": [
        577,
        841
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13840": {
      "fn": "AccessControlRci._initializeRciAdmin",
      "offset": [
        635,
        673
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 175,
      "value": "0x3627"
    },
    "13843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13845": {
      "op": "DUP1"
    },
    "13846": {
      "op": "MLOAD"
    },
    "13847": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13849": {
      "op": "PUSH2",
      "value": "0x45F0"
    },
    "13852": {
      "op": "DUP4"
    },
    "13853": {
      "op": "CODECOPY"
    },
    "13854": {
      "op": "DUP2"
    },
    "13855": {
      "op": "MLOAD"
    },
    "13856": {
      "op": "SWAP2"
    },
    "13857": {
      "op": "MSTORE"
    },
    "13858": {
      "fn": "AccessControlRci._initializeRciAdmin",
      "offset": [
        662,
        672
      ],
      "op": "CALLER",
      "path": "0"
    },
    "13859": {
      "fn": "AccessControlRci._initializeRciAdmin",
      "offset": [
        635,
        645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1108"
    },
    "13862": {
      "fn": "AccessControlRci._initializeRciAdmin",
      "jump": "i",
      "offset": [
        635,
        673
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13863": {
      "fn": "AccessControlRci._initializeRciAdmin",
      "offset": [
        635,
        673
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13864": {
      "fn": "AccessControlRci._initializeRciAdmin",
      "offset": [
        683,
        728
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 176,
      "value": "0x363F"
    },
    "13867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13869": {
      "op": "DUP1"
    },
    "13870": {
      "op": "MLOAD"
    },
    "13871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13873": {
      "op": "PUSH2",
      "value": "0x45F0"
    },
    "13876": {
      "op": "DUP4"
    },
    "13877": {
      "op": "CODECOPY"
    },
    "13878": {
      "op": "DUP2"
    },
    "13879": {
      "op": "MLOAD"
    },
    "13880": {
      "op": "SWAP2"
    },
    "13881": {
      "op": "MSTORE"
    },
    "13882": {
      "offset": [
        202,
        229
      ],
      "op": "DUP1",
      "path": "0"
    },
    "13883": {
      "fn": "AccessControlRci._initializeRciAdmin",
      "offset": [
        683,
        696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AE4"
    },
    "13886": {
      "fn": "AccessControlRci._initializeRciAdmin",
      "jump": "i",
      "offset": [
        683,
        728
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13887": {
      "fn": "AccessControlRci._initializeRciAdmin",
      "offset": [
        683,
        728
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13888": {
      "fn": "AccessControlRci._initializeRciAdmin",
      "offset": [
        739,
        778
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 177,
      "value": "0x3657"
    },
    "13891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13893": {
      "op": "DUP1"
    },
    "13894": {
      "op": "MLOAD"
    },
    "13895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13897": {
      "op": "PUSH2",
      "value": "0x45D0"
    },
    "13900": {
      "op": "DUP4"
    },
    "13901": {
      "op": "CODECOPY"
    },
    "13902": {
      "op": "DUP2"
    },
    "13903": {
      "op": "MLOAD"
    },
    "13904": {
      "op": "SWAP2"
    },
    "13905": {
      "op": "MSTORE"
    },
    "13906": {
      "fn": "AccessControlRci._initializeRciAdmin",
      "offset": [
        767,
        777
      ],
      "op": "CALLER",
      "path": "0"
    },
    "13907": {
      "fn": "AccessControlRci._initializeRciAdmin",
      "offset": [
        739,
        749
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1108"
    },
    "13910": {
      "fn": "AccessControlRci._initializeRciAdmin",
      "jump": "i",
      "offset": [
        739,
        778
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13911": {
      "fn": "AccessControlRci._initializeRciAdmin",
      "offset": [
        739,
        778
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13912": {
      "fn": "AccessControlRci._initializeRciAdmin",
      "offset": [
        788,
        834
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 178,
      "value": "0x367D"
    },
    "13915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13917": {
      "op": "DUP1"
    },
    "13918": {
      "op": "MLOAD"
    },
    "13919": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13921": {
      "op": "PUSH2",
      "value": "0x45D0"
    },
    "13924": {
      "op": "DUP4"
    },
    "13925": {
      "op": "CODECOPY"
    },
    "13926": {
      "op": "DUP2"
    },
    "13927": {
      "op": "MLOAD"
    },
    "13928": {
      "op": "SWAP2"
    },
    "13929": {
      "op": "MSTORE"
    },
    "13930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13932": {
      "op": "DUP1"
    },
    "13933": {
      "op": "MLOAD"
    },
    "13934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13936": {
      "op": "PUSH2",
      "value": "0x45F0"
    },
    "13939": {
      "op": "DUP4"
    },
    "13940": {
      "op": "CODECOPY"
    },
    "13941": {
      "op": "DUP2"
    },
    "13942": {
      "op": "MLOAD"
    },
    "13943": {
      "op": "SWAP2"
    },
    "13944": {
      "op": "MSTORE"
    },
    "13945": {
      "fn": "AccessControlRci._initializeRciAdmin",
      "offset": [
        788,
        801
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AE4"
    },
    "13948": {
      "fn": "AccessControlRci._initializeRciAdmin",
      "jump": "i",
      "offset": [
        788,
        834
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13949": {
      "fn": "AccessControlRci._initializeRciAdmin",
      "offset": [
        788,
        834
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "13950": {
      "fn": "AccessControlRci._initializeRciAdmin",
      "jump": "o",
      "offset": [
        577,
        841
      ],
      "op": "JUMP",
      "path": "0"
    },
    "13951": {
      "fn": "EnumerableSet.length",
      "offset": [
        7222,
        7337
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "13952": {
      "fn": "EnumerableSet.length",
      "offset": [
        7285,
        7292
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "13954": {
      "fn": "EnumerableSet.length",
      "offset": [
        7311,
        7330
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 179,
      "value": "0xADC"
    },
    "13957": {
      "fn": "EnumerableSet.length",
      "offset": [
        7319,
        7322
      ],
      "op": "DUP3",
      "path": "23"
    },
    "13958": {
      "fn": "EnumerableSet._length",
      "offset": [
        4087,
        4105
      ],
      "op": "SLOAD",
      "path": "23",
      "statement": 180
    },
    "13959": {
      "fn": "EnumerableSet._length",
      "offset": [
        4087,
        4105
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "13960": {
      "fn": "EnumerableSet._length",
      "offset": [
        4005,
        4112
      ],
      "op": "JUMP",
      "path": "23"
    },
    "13961": {
      "fn": "Competition._payRewards",
      "offset": [
        12771,
        14575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "13962": {
      "fn": "Competition._payRewards",
      "offset": [
        13018,
        13046
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 181,
      "value": "0xFFFFFFFF"
    },
    "13967": {
      "fn": "Competition._payRewards",
      "offset": [
        13018,
        13046
      ],
      "op": "DUP10",
      "path": "2"
    },
    "13968": {
      "fn": "Competition._payRewards",
      "offset": [
        13018,
        13046
      ],
      "op": "AND",
      "path": "2"
    },
    "13969": {
      "fn": "Competition._payRewards",
      "offset": [
        12982,
        12994
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "13971": {
      "fn": "Competition._payRewards",
      "offset": [
        13018,
        13046
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13972": {
      "fn": "Competition._payRewards",
      "offset": [
        13018,
        13046
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13973": {
      "fn": "Competition._payRewards",
      "offset": [
        13018,
        13046
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13974": {
      "fn": "Competition._payRewards",
      "offset": [
        13018,
        13029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "13976": {
      "fn": "Competition._payRewards",
      "offset": [
        13018,
        13046
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "13978": {
      "fn": "Competition._payRewards",
      "offset": [
        13018,
        13046
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "13979": {
      "fn": "Competition._payRewards",
      "offset": [
        13018,
        13046
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "13981": {
      "fn": "Competition._payRewards",
      "offset": [
        13018,
        13046
      ],
      "op": "DUP2",
      "path": "2"
    },
    "13982": {
      "fn": "Competition._payRewards",
      "offset": [
        13018,
        13046
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "13983": {
      "fn": "Competition._payRewards",
      "offset": [
        13018,
        13052
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "13985": {
      "fn": "Competition._payRewards",
      "offset": [
        13018,
        13052
      ],
      "op": "ADD",
      "path": "2"
    },
    "13986": {
      "fn": "Competition._payRewards",
      "offset": [
        13018,
        13052
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "13987": {
      "fn": "Competition._payRewards",
      "offset": [
        13056,
        13057
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "13989": {
      "fn": "Competition._payRewards",
      "offset": [
        13018,
        13052
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "13991": {
      "fn": "Competition._payRewards",
      "offset": [
        13018,
        13052
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "13992": {
      "fn": "Competition._payRewards",
      "offset": [
        13018,
        13052
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "13993": {
      "fn": "Competition._payRewards",
      "offset": [
        13018,
        13052
      ],
      "op": "AND",
      "path": "2"
    },
    "13994": {
      "fn": "Competition._payRewards",
      "offset": [
        13018,
        13057
      ],
      "op": "LT",
      "path": "2"
    },
    "13995": {
      "branch": 254,
      "fn": "Competition._payRewards",
      "offset": [
        13018,
        13057
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "13996": {
      "fn": "Competition._payRewards",
      "offset": [
        13010,
        13121
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x371D"
    },
    "13999": {
      "branch": 254,
      "fn": "Competition._payRewards",
      "offset": [
        13010,
        13121
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14000": {
      "fn": "Competition._payRewards",
      "offset": [
        13010,
        13121
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14002": {
      "fn": "Competition._payRewards",
      "offset": [
        13010,
        13121
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14003": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14007": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14009": {
      "op": "SHL"
    },
    "14010": {
      "fn": "Competition._payRewards",
      "offset": [
        13010,
        13121
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14011": {
      "fn": "Competition._payRewards",
      "offset": [
        13010,
        13121
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14014": {
      "fn": "Competition._payRewards",
      "offset": [
        13010,
        13121
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14016": {
      "fn": "Competition._payRewards",
      "offset": [
        13010,
        13121
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14017": {
      "fn": "Competition._payRewards",
      "offset": [
        13010,
        13121
      ],
      "op": "ADD",
      "path": "2"
    },
    "14018": {
      "op": "MSTORE"
    },
    "14019": {
      "op": "PUSH1",
      "value": "0x3B"
    },
    "14021": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14023": {
      "op": "DUP3"
    },
    "14024": {
      "op": "ADD"
    },
    "14025": {
      "op": "MSTORE"
    },
    "14026": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20706179526577617264733A204368616C6C65"
    },
    "14059": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14061": {
      "op": "DUP3"
    },
    "14062": {
      "op": "ADD"
    },
    "14063": {
      "op": "MSTORE"
    },
    "14064": {
      "op": "PUSH32",
      "value": "0x6E676520697320696E20756E65787065637465642073746174652E0000000000"
    },
    "14097": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14099": {
      "op": "DUP3"
    },
    "14100": {
      "op": "ADD"
    },
    "14101": {
      "op": "MSTORE"
    },
    "14102": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "14104": {
      "op": "ADD"
    },
    "14105": {
      "fn": "Competition._payRewards",
      "offset": [
        13010,
        13121
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "14108": {
      "op": "JUMP"
    },
    "14109": {
      "fn": "Competition._payRewards",
      "offset": [
        13010,
        13121
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14110": {
      "fn": "Competition._payRewards",
      "offset": [
        13140,
        13182
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 182
    },
    "14111": {
      "fn": "Competition._payRewards",
      "offset": [
        13140,
        13182
      ],
      "op": "DUP7",
      "path": "2"
    },
    "14112": {
      "fn": "Competition._payRewards",
      "offset": [
        13140,
        13182
      ],
      "op": "EQ",
      "path": "2"
    },
    "14113": {
      "fn": "Competition._payRewards",
      "offset": [
        13139,
        13245
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14114": {
      "fn": "Competition._payRewards",
      "offset": [
        13139,
        13245
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "14115": {
      "fn": "Competition._payRewards",
      "offset": [
        13139,
        13245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x372B"
    },
    "14118": {
      "fn": "Competition._payRewards",
      "offset": [
        13139,
        13245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14119": {
      "op": "POP"
    },
    "14120": {
      "fn": "Competition._payRewards",
      "offset": [
        13200,
        13244
      ],
      "op": "DUP8",
      "path": "2"
    },
    "14121": {
      "fn": "Competition._payRewards",
      "offset": [
        13200,
        13244
      ],
      "op": "DUP5",
      "path": "2"
    },
    "14122": {
      "fn": "Competition._payRewards",
      "offset": [
        13200,
        13244
      ],
      "op": "EQ",
      "path": "2"
    },
    "14123": {
      "fn": "Competition._payRewards",
      "offset": [
        13139,
        13245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14124": {
      "fn": "Competition._payRewards",
      "offset": [
        13139,
        13308
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14125": {
      "fn": "Competition._payRewards",
      "offset": [
        13139,
        13308
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "14126": {
      "fn": "Competition._payRewards",
      "offset": [
        13139,
        13308
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3736"
    },
    "14129": {
      "fn": "Competition._payRewards",
      "offset": [
        13139,
        13308
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14130": {
      "op": "POP"
    },
    "14131": {
      "fn": "Competition._payRewards",
      "offset": [
        13262,
        13307
      ],
      "op": "DUP8",
      "path": "2"
    },
    "14132": {
      "fn": "Competition._payRewards",
      "offset": [
        13262,
        13307
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14133": {
      "fn": "Competition._payRewards",
      "offset": [
        13262,
        13307
      ],
      "op": "EQ",
      "path": "2"
    },
    "14134": {
      "fn": "Competition._payRewards",
      "offset": [
        13139,
        13308
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14135": {
      "fn": "Competition._payRewards",
      "offset": [
        13131,
        13398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37BA"
    },
    "14138": {
      "fn": "Competition._payRewards",
      "offset": [
        13131,
        13398
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14139": {
      "fn": "Competition._payRewards",
      "offset": [
        13131,
        13398
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "14141": {
      "fn": "Competition._payRewards",
      "offset": [
        13131,
        13398
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "14142": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14146": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14148": {
      "op": "SHL"
    },
    "14149": {
      "fn": "Competition._payRewards",
      "offset": [
        13131,
        13398
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14150": {
      "fn": "Competition._payRewards",
      "offset": [
        13131,
        13398
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14153": {
      "fn": "Competition._payRewards",
      "offset": [
        13131,
        13398
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14155": {
      "fn": "Competition._payRewards",
      "offset": [
        13131,
        13398
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14156": {
      "fn": "Competition._payRewards",
      "offset": [
        13131,
        13398
      ],
      "op": "ADD",
      "path": "2"
    },
    "14157": {
      "op": "MSTORE"
    },
    "14158": {
      "op": "PUSH1",
      "value": "0x49"
    },
    "14160": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14162": {
      "op": "DUP3"
    },
    "14163": {
      "op": "ADD"
    },
    "14164": {
      "op": "MSTORE"
    },
    "14165": {
      "op": "PUSH32",
      "value": "0x436F6D7065746974696F6E202D20706179526577617264733A204E756D626572"
    },
    "14198": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14200": {
      "op": "DUP3"
    },
    "14201": {
      "op": "ADD"
    },
    "14202": {
      "op": "MSTORE"
    },
    "14203": {
      "op": "PUSH32",
      "value": "0x206F66207375626D69747465727320616E642072657761726473206172652064"
    },
    "14236": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14238": {
      "op": "DUP3"
    },
    "14239": {
      "op": "ADD"
    },
    "14240": {
      "op": "MSTORE"
    },
    "14241": {
      "op": "PUSH9",
      "value": "0x34B33332B932B73A17"
    },
    "14251": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "14253": {
      "op": "SHL"
    },
    "14254": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "14256": {
      "op": "DUP3"
    },
    "14257": {
      "op": "ADD"
    },
    "14258": {
      "op": "MSTORE"
    },
    "14259": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "14261": {
      "op": "ADD"
    },
    "14262": {
      "fn": "Competition._payRewards",
      "offset": [
        13131,
        13398
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "14265": {
      "op": "JUMP"
    },
    "14266": {
      "fn": "Competition._payRewards",
      "offset": [
        13131,
        13398
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14267": {
      "fn": "Competition._payRewards",
      "offset": [
        13409,
        13435
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14269": {
      "fn": "Competition._payRewards",
      "offset": [
        13409,
        13435
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14270": {
      "fn": "Competition._payRewards",
      "offset": [
        13409,
        13435
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14271": {
      "fn": "Competition._payRewards",
      "offset": [
        13409,
        13435
      ],
      "op": "DUP1",
      "path": "2"
    },
    "14272": {
      "fn": "Competition._payRewards",
      "offset": [
        13523,
        14008
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14273": {
      "fn": "Competition._payRewards",
      "offset": [
        13540,
        13561
      ],
      "op": "DUP12",
      "path": "2"
    },
    "14274": {
      "fn": "Competition._payRewards",
      "offset": [
        13540,
        13561
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14275": {
      "fn": "Competition._payRewards",
      "offset": [
        13540,
        13561
      ],
      "op": "LT",
      "path": "2"
    },
    "14276": {
      "fn": "Competition._payRewards",
      "offset": [
        13523,
        14008
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "14277": {
      "fn": "Competition._payRewards",
      "offset": [
        13523,
        14008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3929"
    },
    "14280": {
      "fn": "Competition._payRewards",
      "offset": [
        13523,
        14008
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14281": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13752
      ],
      "op": "DUP11",
      "path": "2",
      "statement": 183
    },
    "14282": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13752
      ],
      "op": "DUP11",
      "path": "2"
    },
    "14283": {
      "fn": "Competition._payRewards",
      "offset": [
        13753,
        13754
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14284": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13755
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14285": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13755
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14286": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13755
      ],
      "op": "LT",
      "path": "2"
    },
    "14287": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13755
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37E8"
    },
    "14290": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13755
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14291": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14296": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14298": {
      "op": "SHL"
    },
    "14299": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14301": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13755
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14302": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x32"
    },
    "14304": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14306": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13755
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14307": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "14309": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14311": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13755
      ],
      "op": "REVERT",
      "path": "2"
    },
    "14312": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13755
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14313": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13755
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14314": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13755
      ],
      "op": "POP",
      "path": "2"
    },
    "14315": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13755
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "14317": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13755
      ],
      "op": "MUL",
      "path": "2"
    },
    "14318": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13755
      ],
      "op": "ADD",
      "path": "2"
    },
    "14319": {
      "fn": "Competition._payRewards",
      "offset": [
        13738,
        13755
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "14320": {
      "fn": "Competition._payRewards",
      "offset": [
        13716,
        13755
      ],
      "op": "DUP5",
      "path": "2"
    },
    "14321": {
      "fn": "Competition._payRewards",
      "offset": [
        13716,
        13755
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37FA"
    },
    "14324": {
      "fn": "Competition._payRewards",
      "offset": [
        13716,
        13755
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14325": {
      "fn": "Competition._payRewards",
      "offset": [
        13716,
        13755
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14326": {
      "fn": "Competition._payRewards",
      "offset": [
        13716,
        13755
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "14329": {
      "fn": "Competition._payRewards",
      "jump": "i",
      "offset": [
        13716,
        13755
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14330": {
      "fn": "Competition._payRewards",
      "offset": [
        13716,
        13755
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14331": {
      "fn": "Competition._payRewards",
      "offset": [
        13716,
        13755
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "14332": {
      "fn": "Competition._payRewards",
      "offset": [
        13716,
        13755
      ],
      "op": "POP",
      "path": "2"
    },
    "14333": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13809
      ],
      "op": "DUP9",
      "path": "2",
      "statement": 184
    },
    "14334": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13809
      ],
      "op": "DUP9",
      "path": "2"
    },
    "14335": {
      "fn": "Competition._payRewards",
      "offset": [
        13810,
        13811
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14336": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13812
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14337": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13812
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14338": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13812
      ],
      "op": "LT",
      "path": "2"
    },
    "14339": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13812
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381C"
    },
    "14342": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13812
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14343": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14348": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14350": {
      "op": "SHL"
    },
    "14351": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13812
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14353": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13812
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14354": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13812
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x32"
    },
    "14356": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13812
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14358": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13812
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14359": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13812
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "14361": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13812
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14363": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13812
      ],
      "op": "REVERT",
      "path": "2"
    },
    "14364": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13812
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14365": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13812
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14366": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13812
      ],
      "op": "POP",
      "path": "2"
    },
    "14367": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13812
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "14369": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13812
      ],
      "op": "MUL",
      "path": "2"
    },
    "14370": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13812
      ],
      "op": "ADD",
      "path": "2"
    },
    "14371": {
      "fn": "Competition._payRewards",
      "offset": [
        13793,
        13812
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "14372": {
      "fn": "Competition._payRewards",
      "offset": [
        13769,
        13812
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14373": {
      "fn": "Competition._payRewards",
      "offset": [
        13769,
        13812
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x382E"
    },
    "14376": {
      "fn": "Competition._payRewards",
      "offset": [
        13769,
        13812
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14377": {
      "fn": "Competition._payRewards",
      "offset": [
        13769,
        13812
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14378": {
      "fn": "Competition._payRewards",
      "offset": [
        13769,
        13812
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "14381": {
      "fn": "Competition._payRewards",
      "jump": "i",
      "offset": [
        13769,
        13812
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14382": {
      "fn": "Competition._payRewards",
      "offset": [
        13769,
        13812
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14383": {
      "fn": "Competition._payRewards",
      "offset": [
        13769,
        13812
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14384": {
      "fn": "Competition._payRewards",
      "offset": [
        13769,
        13812
      ],
      "op": "POP",
      "path": "2"
    },
    "14385": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13868
      ],
      "op": "DUP7",
      "path": "2",
      "statement": 185
    },
    "14386": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13868
      ],
      "op": "DUP7",
      "path": "2"
    },
    "14387": {
      "fn": "Competition._payRewards",
      "offset": [
        13869,
        13870
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14388": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13871
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14389": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13871
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14390": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13871
      ],
      "op": "LT",
      "path": "2"
    },
    "14391": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13871
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3850"
    },
    "14394": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13871
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14395": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14400": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14402": {
      "op": "SHL"
    },
    "14403": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14405": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13871
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14406": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x32"
    },
    "14408": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14410": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13871
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14411": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "14413": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14415": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13871
      ],
      "op": "REVERT",
      "path": "2"
    },
    "14416": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13871
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14417": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13871
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14418": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13871
      ],
      "op": "POP",
      "path": "2"
    },
    "14419": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13871
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "14421": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13871
      ],
      "op": "MUL",
      "path": "2"
    },
    "14422": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13871
      ],
      "op": "ADD",
      "path": "2"
    },
    "14423": {
      "fn": "Competition._payRewards",
      "offset": [
        13851,
        13871
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "14424": {
      "fn": "Competition._payRewards",
      "offset": [
        13826,
        13871
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14425": {
      "fn": "Competition._payRewards",
      "offset": [
        13826,
        13871
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3862"
    },
    "14428": {
      "fn": "Competition._payRewards",
      "offset": [
        13826,
        13871
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14429": {
      "fn": "Competition._payRewards",
      "offset": [
        13826,
        13871
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14430": {
      "fn": "Competition._payRewards",
      "offset": [
        13826,
        13871
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "14433": {
      "fn": "Competition._payRewards",
      "jump": "i",
      "offset": [
        13826,
        13871
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14434": {
      "fn": "Competition._payRewards",
      "offset": [
        13826,
        13871
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14435": {
      "fn": "Competition._payRewards",
      "offset": [
        13826,
        13871
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14436": {
      "fn": "Competition._payRewards",
      "offset": [
        13826,
        13871
      ],
      "op": "POP",
      "path": "2"
    },
    "14437": {
      "fn": "Competition._payRewards",
      "offset": [
        13886,
        13997
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 186,
      "value": "0x3917"
    },
    "14440": {
      "fn": "Competition._payRewards",
      "offset": [
        13904,
        13919
      ],
      "op": "DUP15",
      "path": "2"
    },
    "14441": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13931
      ],
      "op": "DUP15",
      "path": "2"
    },
    "14442": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13931
      ],
      "op": "DUP15",
      "path": "2"
    },
    "14443": {
      "fn": "Competition._payRewards",
      "offset": [
        13932,
        13933
      ],
      "op": "DUP5",
      "path": "2"
    },
    "14444": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14445": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14446": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "LT",
      "path": "2"
    },
    "14447": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3888"
    },
    "14450": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14451": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14456": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14458": {
      "op": "SHL"
    },
    "14459": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14461": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14462": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x32"
    },
    "14464": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14466": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14467": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "14469": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14471": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "REVERT",
      "path": "2"
    },
    "14472": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14473": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14474": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "POP",
      "path": "2"
    },
    "14475": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "14477": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "MUL",
      "path": "2"
    },
    "14478": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "ADD",
      "path": "2"
    },
    "14479": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "14481": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14482": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "ADD",
      "path": "2"
    },
    "14483": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14484": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x389D"
    },
    "14487": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14488": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14489": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F25"
    },
    "14492": {
      "fn": "Competition._payRewards",
      "jump": "i",
      "offset": [
        13921,
        13934
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14493": {
      "fn": "Competition._payRewards",
      "offset": [
        13921,
        13934
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14494": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13950
      ],
      "op": "DUP14",
      "path": "2"
    },
    "14495": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13950
      ],
      "op": "DUP14",
      "path": "2"
    },
    "14496": {
      "fn": "Competition._payRewards",
      "offset": [
        13951,
        13952
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14497": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13953
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14498": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13953
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14499": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13953
      ],
      "op": "LT",
      "path": "2"
    },
    "14500": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13953
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38BD"
    },
    "14503": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13953
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14504": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14509": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14511": {
      "op": "SHL"
    },
    "14512": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14514": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13953
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14515": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x32"
    },
    "14517": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14519": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13953
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14520": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "14522": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14524": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13953
      ],
      "op": "REVERT",
      "path": "2"
    },
    "14525": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13953
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14526": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13953
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14527": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13953
      ],
      "op": "POP",
      "path": "2"
    },
    "14528": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "14530": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13953
      ],
      "op": "MUL",
      "path": "2"
    },
    "14531": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13953
      ],
      "op": "ADD",
      "path": "2"
    },
    "14532": {
      "fn": "Competition._payRewards",
      "offset": [
        13936,
        13953
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "14533": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13971
      ],
      "op": "DUP13",
      "path": "2"
    },
    "14534": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13971
      ],
      "op": "DUP13",
      "path": "2"
    },
    "14535": {
      "fn": "Competition._payRewards",
      "offset": [
        13972,
        13973
      ],
      "op": "DUP7",
      "path": "2"
    },
    "14536": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13974
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14537": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13974
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14538": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13974
      ],
      "op": "LT",
      "path": "2"
    },
    "14539": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13974
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38E4"
    },
    "14542": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13974
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14543": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14548": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14550": {
      "op": "SHL"
    },
    "14551": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14553": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13974
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14554": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x32"
    },
    "14556": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14558": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13974
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14559": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "14561": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14563": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13974
      ],
      "op": "REVERT",
      "path": "2"
    },
    "14564": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13974
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14565": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14566": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13974
      ],
      "op": "POP",
      "path": "2"
    },
    "14567": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "14569": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13974
      ],
      "op": "MUL",
      "path": "2"
    },
    "14570": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13974
      ],
      "op": "ADD",
      "path": "2"
    },
    "14571": {
      "fn": "Competition._payRewards",
      "offset": [
        13955,
        13974
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "14572": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13993
      ],
      "op": "DUP12",
      "path": "2"
    },
    "14573": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13993
      ],
      "op": "DUP12",
      "path": "2"
    },
    "14574": {
      "fn": "Competition._payRewards",
      "offset": [
        13994,
        13995
      ],
      "op": "DUP8",
      "path": "2"
    },
    "14575": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13996
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14576": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13996
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14577": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13996
      ],
      "op": "LT",
      "path": "2"
    },
    "14578": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13996
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x390B"
    },
    "14581": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13996
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "14582": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14587": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14589": {
      "op": "SHL"
    },
    "14590": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13996
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14592": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13996
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14593": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13996
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x32"
    },
    "14595": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13996
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "14597": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13996
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "14598": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13996
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "14600": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13996
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14602": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13996
      ],
      "op": "REVERT",
      "path": "2"
    },
    "14603": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13996
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14604": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13996
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14605": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13996
      ],
      "op": "POP",
      "path": "2"
    },
    "14606": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13996
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "14608": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13996
      ],
      "op": "MUL",
      "path": "2"
    },
    "14609": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13996
      ],
      "op": "ADD",
      "path": "2"
    },
    "14610": {
      "fn": "Competition._payRewards",
      "offset": [
        13976,
        13996
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "14611": {
      "fn": "Competition._payRewards",
      "offset": [
        13886,
        13903
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B38"
    },
    "14614": {
      "fn": "Competition._payRewards",
      "jump": "i",
      "offset": [
        13886,
        13997
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14615": {
      "fn": "Competition._payRewards",
      "offset": [
        13886,
        13997
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14616": {
      "fn": "Competition._payRewards",
      "offset": [
        13563,
        13566
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 187
    },
    "14617": {
      "fn": "Competition._payRewards",
      "offset": [
        13563,
        13566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3921"
    },
    "14620": {
      "fn": "Competition._payRewards",
      "offset": [
        13563,
        13566
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14621": {
      "fn": "Competition._payRewards",
      "offset": [
        13563,
        13566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x457A"
    },
    "14624": {
      "fn": "Competition._payRewards",
      "jump": "i",
      "offset": [
        13563,
        13566
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14625": {
      "fn": "Competition._payRewards",
      "offset": [
        13563,
        13566
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14626": {
      "fn": "Competition._payRewards",
      "offset": [
        13563,
        13566
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14627": {
      "fn": "Competition._payRewards",
      "offset": [
        13563,
        13566
      ],
      "op": "POP",
      "path": "2"
    },
    "14628": {
      "fn": "Competition._payRewards",
      "offset": [
        13563,
        13566
      ],
      "op": "POP",
      "path": "2"
    },
    "14629": {
      "fn": "Competition._payRewards",
      "offset": [
        13523,
        14008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37C0"
    },
    "14632": {
      "fn": "Competition._payRewards",
      "offset": [
        13523,
        14008
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14633": {
      "fn": "Competition._payRewards",
      "offset": [
        13523,
        14008
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14634": {
      "fn": "Competition._payRewards",
      "offset": [
        13523,
        14008
      ],
      "op": "POP",
      "path": "2"
    },
    "14635": {
      "fn": "Competition._payRewards",
      "offset": [
        14094,
        14112
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 188
    },
    "14636": {
      "fn": "Competition._payRewards",
      "offset": [
        14062,
        14090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "14638": {
      "fn": "Competition._payRewards",
      "offset": [
        14062,
        14090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14640": {
      "fn": "Competition._payRewards",
      "offset": [
        14062,
        14112
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14641": {
      "fn": "Competition._payRewards",
      "offset": [
        14062,
        14112
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14642": {
      "fn": "Competition._payRewards",
      "offset": [
        14062,
        14112
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "14643": {
      "fn": "Competition._payRewards",
      "offset": [
        14062,
        14112
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x393C"
    },
    "14646": {
      "fn": "Competition._payRewards",
      "offset": [
        14062,
        14112
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14647": {
      "fn": "Competition._payRewards",
      "offset": [
        14062,
        14112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14648": {
      "fn": "Competition._payRewards",
      "offset": [
        14062,
        14112
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4505"
    },
    "14651": {
      "fn": "Competition._payRewards",
      "jump": "i",
      "offset": [
        14062,
        14112
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14652": {
      "fn": "Competition._payRewards",
      "offset": [
        14062,
        14112
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14653": {
      "fn": "Competition._payRewards",
      "offset": [
        14062,
        14112
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14654": {
      "fn": "Competition._payRewards",
      "offset": [
        14062,
        14112
      ],
      "op": "POP",
      "path": "2"
    },
    "14655": {
      "fn": "Competition._payRewards",
      "offset": [
        14062,
        14112
      ],
      "op": "POP",
      "path": "2"
    },
    "14656": {
      "fn": "Competition._payRewards",
      "offset": [
        14062,
        14112
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14657": {
      "fn": "Competition._payRewards",
      "offset": [
        14062,
        14112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14658": {
      "fn": "Competition._payRewards",
      "offset": [
        14062,
        14112
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14659": {
      "fn": "Competition._payRewards",
      "offset": [
        14062,
        14112
      ],
      "op": "POP",
      "path": "2"
    },
    "14660": {
      "fn": "Competition._payRewards",
      "offset": [
        14156,
        14176
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 189
    },
    "14661": {
      "fn": "Competition._payRewards",
      "offset": [
        14122,
        14152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "14663": {
      "fn": "Competition._payRewards",
      "offset": [
        14122,
        14152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14665": {
      "fn": "Competition._payRewards",
      "offset": [
        14122,
        14176
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14666": {
      "fn": "Competition._payRewards",
      "offset": [
        14122,
        14176
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14667": {
      "fn": "Competition._payRewards",
      "offset": [
        14122,
        14176
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "14668": {
      "fn": "Competition._payRewards",
      "offset": [
        14122,
        14176
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3955"
    },
    "14671": {
      "fn": "Competition._payRewards",
      "offset": [
        14122,
        14176
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14672": {
      "fn": "Competition._payRewards",
      "offset": [
        14122,
        14176
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14673": {
      "fn": "Competition._payRewards",
      "offset": [
        14122,
        14176
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4505"
    },
    "14676": {
      "fn": "Competition._payRewards",
      "jump": "i",
      "offset": [
        14122,
        14176
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14677": {
      "fn": "Competition._payRewards",
      "offset": [
        14122,
        14176
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14678": {
      "fn": "Competition._payRewards",
      "offset": [
        14122,
        14176
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "14679": {
      "fn": "Competition._payRewards",
      "offset": [
        14122,
        14176
      ],
      "op": "POP",
      "path": "2"
    },
    "14680": {
      "fn": "Competition._payRewards",
      "offset": [
        14122,
        14176
      ],
      "op": "POP",
      "path": "2"
    },
    "14681": {
      "fn": "Competition._payRewards",
      "offset": [
        14122,
        14176
      ],
      "op": "DUP2",
      "path": "2"
    },
    "14682": {
      "fn": "Competition._payRewards",
      "offset": [
        14122,
        14176
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14683": {
      "fn": "Competition._payRewards",
      "offset": [
        14122,
        14176
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14684": {
      "fn": "Competition._payRewards",
      "offset": [
        14122,
        14176
      ],
      "op": "POP",
      "path": "2"
    },
    "14685": {
      "fn": "Competition._payRewards",
      "offset": [
        14221,
        14242
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 190
    },
    "14686": {
      "fn": "Competition._payRewards",
      "offset": [
        14186,
        14217
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "14688": {
      "fn": "Competition._payRewards",
      "offset": [
        14186,
        14217
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14690": {
      "fn": "Competition._payRewards",
      "offset": [
        14186,
        14242
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14691": {
      "fn": "Competition._payRewards",
      "offset": [
        14186,
        14242
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14692": {
      "fn": "Competition._payRewards",
      "offset": [
        14186,
        14242
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "14693": {
      "fn": "Competition._payRewards",
      "offset": [
        14186,
        14242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x396E"
    },
    "14696": {
      "fn": "Competition._payRewards",
      "offset": [
        14186,
        14242
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14697": {
      "fn": "Competition._payRewards",
      "offset": [
        14186,
        14242
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14698": {
      "fn": "Competition._payRewards",
      "offset": [
        14186,
        14242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4505"
    },
    "14701": {
      "fn": "Competition._payRewards",
      "jump": "i",
      "offset": [
        14186,
        14242
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14702": {
      "fn": "Competition._payRewards",
      "offset": [
        14186,
        14242
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14703": {
      "fn": "Competition._payRewards",
      "offset": [
        14186,
        14242
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14704": {
      "fn": "Competition._payRewards",
      "offset": [
        14186,
        14242
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14705": {
      "fn": "Competition._payRewards",
      "offset": [
        14186,
        14242
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14706": {
      "op": "POP"
    },
    "14707": {
      "fn": "Competition._payRewards",
      "offset": [
        14317,
        14338
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 191
    },
    "14708": {
      "fn": "Competition._payRewards",
      "offset": [
        14317,
        14338
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14709": {
      "op": "POP"
    },
    "14710": {
      "fn": "Competition._payRewards",
      "offset": [
        14273,
        14314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x397F"
    },
    "14713": {
      "fn": "Competition._payRewards",
      "offset": [
        14294,
        14314
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14714": {
      "fn": "Competition._payRewards",
      "offset": [
        14273,
        14291
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14715": {
      "fn": "Competition._payRewards",
      "offset": [
        14273,
        14314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "14718": {
      "fn": "Competition._payRewards",
      "jump": "i",
      "offset": [
        14273,
        14314
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14719": {
      "fn": "Competition._payRewards",
      "offset": [
        14273,
        14314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14720": {
      "fn": "Competition._payRewards",
      "offset": [
        14273,
        14338
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3989"
    },
    "14723": {
      "fn": "Competition._payRewards",
      "offset": [
        14273,
        14338
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14724": {
      "fn": "Competition._payRewards",
      "offset": [
        14273,
        14338
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14725": {
      "fn": "Competition._payRewards",
      "offset": [
        14273,
        14338
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "14728": {
      "fn": "Competition._payRewards",
      "jump": "i",
      "offset": [
        14273,
        14338
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14729": {
      "fn": "Competition._payRewards",
      "offset": [
        14273,
        14338
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14730": {
      "fn": "Competition._payRewards",
      "offset": [
        14253,
        14269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "14732": {
      "fn": "Competition._payRewards",
      "offset": [
        14253,
        14269
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14734": {
      "fn": "Competition._payRewards",
      "offset": [
        14253,
        14338
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14735": {
      "fn": "Competition._payRewards",
      "offset": [
        14253,
        14338
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14736": {
      "fn": "Competition._payRewards",
      "offset": [
        14253,
        14338
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "14737": {
      "fn": "Competition._payRewards",
      "offset": [
        14253,
        14338
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x399A"
    },
    "14740": {
      "fn": "Competition._payRewards",
      "offset": [
        14253,
        14338
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14741": {
      "fn": "Competition._payRewards",
      "offset": [
        14253,
        14338
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14742": {
      "fn": "Competition._payRewards",
      "offset": [
        14253,
        14338
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4505"
    },
    "14745": {
      "fn": "Competition._payRewards",
      "jump": "i",
      "offset": [
        14253,
        14338
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14746": {
      "fn": "Competition._payRewards",
      "offset": [
        14253,
        14338
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14747": {
      "fn": "Competition._payRewards",
      "offset": [
        14253,
        14338
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14748": {
      "fn": "Competition._payRewards",
      "offset": [
        14253,
        14338
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14749": {
      "fn": "Competition._payRewards",
      "offset": [
        14253,
        14338
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14750": {
      "op": "POP"
    },
    "14751": {
      "fn": "Competition._payRewards",
      "offset": [
        14415,
        14436
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 192
    },
    "14752": {
      "fn": "Competition._payRewards",
      "offset": [
        14415,
        14436
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14753": {
      "op": "POP"
    },
    "14754": {
      "fn": "Competition._payRewards",
      "offset": [
        14371,
        14412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39AB"
    },
    "14757": {
      "fn": "Competition._payRewards",
      "offset": [
        14392,
        14412
      ],
      "op": "DUP4",
      "path": "2"
    },
    "14758": {
      "fn": "Competition._payRewards",
      "offset": [
        14371,
        14389
      ],
      "op": "DUP6",
      "path": "2"
    },
    "14759": {
      "fn": "Competition._payRewards",
      "offset": [
        14371,
        14412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "14762": {
      "fn": "Competition._payRewards",
      "jump": "i",
      "offset": [
        14371,
        14412
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14763": {
      "fn": "Competition._payRewards",
      "offset": [
        14371,
        14412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14764": {
      "fn": "Competition._payRewards",
      "offset": [
        14371,
        14436
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39B5"
    },
    "14767": {
      "fn": "Competition._payRewards",
      "offset": [
        14371,
        14436
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14768": {
      "fn": "Competition._payRewards",
      "offset": [
        14371,
        14436
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14769": {
      "fn": "Competition._payRewards",
      "offset": [
        14371,
        14436
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "14772": {
      "fn": "Competition._payRewards",
      "jump": "i",
      "offset": [
        14371,
        14436
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14773": {
      "fn": "Competition._payRewards",
      "offset": [
        14371,
        14436
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14774": {
      "fn": "Competition._payRewards",
      "offset": [
        14348,
        14367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "14776": {
      "fn": "Competition._payRewards",
      "offset": [
        14348,
        14367
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14778": {
      "fn": "Competition._payRewards",
      "offset": [
        14348,
        14436
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14779": {
      "fn": "Competition._payRewards",
      "offset": [
        14348,
        14436
      ],
      "op": "DUP3",
      "path": "2"
    },
    "14780": {
      "fn": "Competition._payRewards",
      "offset": [
        14348,
        14436
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "14781": {
      "fn": "Competition._payRewards",
      "offset": [
        14348,
        14436
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39C6"
    },
    "14784": {
      "fn": "Competition._payRewards",
      "offset": [
        14348,
        14436
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14785": {
      "fn": "Competition._payRewards",
      "offset": [
        14348,
        14436
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14786": {
      "fn": "Competition._payRewards",
      "offset": [
        14348,
        14436
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "14789": {
      "fn": "Competition._payRewards",
      "jump": "i",
      "offset": [
        14348,
        14436
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14790": {
      "fn": "Competition._payRewards",
      "offset": [
        14348,
        14436
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14791": {
      "fn": "Competition._payRewards",
      "offset": [
        14348,
        14436
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14792": {
      "fn": "Competition._payRewards",
      "offset": [
        14348,
        14436
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "14793": {
      "fn": "Competition._payRewards",
      "offset": [
        14348,
        14436
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "14794": {
      "op": "POP"
    },
    "14795": {
      "fn": "Competition._payRewards",
      "offset": [
        14456,
        14460
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 193,
      "value": "0x1"
    },
    "14797": {
      "fn": "Competition._payRewards",
      "offset": [
        14456,
        14460
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "14798": {
      "op": "POP"
    },
    "14799": {
      "fn": "Competition._payRewards",
      "offset": [
        14471,
        14568
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 194,
      "value": "0x39DC"
    },
    "14802": {
      "fn": "Competition._payRewards",
      "offset": [
        14471,
        14568
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "14803": {
      "op": "POP"
    },
    "14804": {
      "fn": "Competition._payRewards",
      "offset": [
        14487,
        14502
      ],
      "op": "DUP14",
      "path": "2"
    },
    "14805": {
      "fn": "Competition._payRewards",
      "offset": [
        14504,
        14522
      ],
      "op": "DUP5",
      "path": "2"
    },
    "14806": {
      "fn": "Competition._payRewards",
      "offset": [
        14524,
        14544
      ],
      "op": "DUP5",
      "path": "2"
    },
    "14807": {
      "fn": "Competition._payRewards",
      "offset": [
        14546,
        14567
      ],
      "op": "DUP5",
      "path": "2"
    },
    "14808": {
      "fn": "Competition._payRewards",
      "offset": [
        14471,
        14486
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CB0"
    },
    "14811": {
      "fn": "Competition._payRewards",
      "jump": "i",
      "offset": [
        14471,
        14568
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14812": {
      "fn": "Competition._payRewards",
      "offset": [
        14471,
        14568
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "14813": {
      "fn": "Competition._payRewards",
      "offset": [
        12771,
        14575
      ],
      "op": "POP",
      "path": "2"
    },
    "14814": {
      "fn": "Competition._payRewards",
      "offset": [
        12771,
        14575
      ],
      "op": "POP",
      "path": "2"
    },
    "14815": {
      "fn": "Competition._payRewards",
      "offset": [
        12771,
        14575
      ],
      "op": "POP",
      "path": "2"
    },
    "14816": {
      "fn": "Competition._payRewards",
      "offset": [
        12771,
        14575
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "14817": {
      "fn": "Competition._payRewards",
      "offset": [
        12771,
        14575
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "14818": {
      "fn": "Competition._payRewards",
      "offset": [
        12771,
        14575
      ],
      "op": "POP",
      "path": "2"
    },
    "14819": {
      "fn": "Competition._payRewards",
      "offset": [
        12771,
        14575
      ],
      "op": "POP",
      "path": "2"
    },
    "14820": {
      "fn": "Competition._payRewards",
      "offset": [
        12771,
        14575
      ],
      "op": "POP",
      "path": "2"
    },
    "14821": {
      "fn": "Competition._payRewards",
      "offset": [
        12771,
        14575
      ],
      "op": "POP",
      "path": "2"
    },
    "14822": {
      "fn": "Competition._payRewards",
      "offset": [
        12771,
        14575
      ],
      "op": "POP",
      "path": "2"
    },
    "14823": {
      "fn": "Competition._payRewards",
      "offset": [
        12771,
        14575
      ],
      "op": "POP",
      "path": "2"
    },
    "14824": {
      "fn": "Competition._payRewards",
      "offset": [
        12771,
        14575
      ],
      "op": "POP",
      "path": "2"
    },
    "14825": {
      "fn": "Competition._payRewards",
      "offset": [
        12771,
        14575
      ],
      "op": "POP",
      "path": "2"
    },
    "14826": {
      "fn": "Competition._payRewards",
      "offset": [
        12771,
        14575
      ],
      "op": "POP",
      "path": "2"
    },
    "14827": {
      "fn": "Competition._payRewards",
      "jump": "o",
      "offset": [
        12771,
        14575
      ],
      "op": "JUMP",
      "path": "2"
    },
    "14828": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6739,
        6895
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14829": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6812,
        6816
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14831": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6835,
        6888
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 195,
      "value": "0x1E10"
    },
    "14834": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6843,
        6846
      ],
      "op": "DUP4",
      "path": "23"
    },
    "14835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14841": {
      "op": "SHL"
    },
    "14842": {
      "op": "SUB"
    },
    "14843": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6863,
        6886
      ],
      "op": "DUP5",
      "path": "23"
    },
    "14844": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6863,
        6886
      ],
      "op": "AND",
      "path": "23"
    },
    "14845": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6835,
        6842
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3CF5"
    },
    "14848": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        6835,
        6888
      ],
      "op": "JUMP",
      "path": "23"
    },
    "14849": {
      "fn": "EnumerableSet._at",
      "offset": [
        4444,
        4645
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14850": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4556
      ],
      "op": "DUP2",
      "path": "23",
      "statement": 196
    },
    "14851": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4556
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "14852": {
      "fn": "EnumerableSet._at",
      "offset": [
        4511,
        4518
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14854": {
      "fn": "EnumerableSet._at",
      "offset": [
        4511,
        4518
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "14855": {
      "branch": 264,
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4564
      ],
      "op": "DUP3",
      "path": "23"
    },
    "14856": {
      "op": "LT"
    },
    "14857": {
      "fn": "EnumerableSet._at",
      "offset": [
        4530,
        4603
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3A5F"
    },
    "14860": {
      "branch": 264,
      "fn": "EnumerableSet._at",
      "offset": [
        4530,
        4603
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "14861": {
      "fn": "EnumerableSet._at",
      "offset": [
        4530,
        4603
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "14863": {
      "fn": "EnumerableSet._at",
      "offset": [
        4530,
        4603
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "14864": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14868": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14870": {
      "op": "SHL"
    },
    "14871": {
      "fn": "EnumerableSet._at",
      "offset": [
        4530,
        4603
      ],
      "op": "DUP2",
      "path": "23"
    },
    "14872": {
      "fn": "EnumerableSet._at",
      "offset": [
        4530,
        4603
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "14873": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14875": {
      "fn": "EnumerableSet._at",
      "offset": [
        4530,
        4603
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "14877": {
      "fn": "EnumerableSet._at",
      "offset": [
        4530,
        4603
      ],
      "op": "DUP3",
      "path": "23"
    },
    "14878": {
      "fn": "EnumerableSet._at",
      "offset": [
        4530,
        4603
      ],
      "op": "ADD",
      "path": "23"
    },
    "14879": {
      "op": "MSTORE"
    },
    "14880": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "14882": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "14884": {
      "op": "DUP3"
    },
    "14885": {
      "op": "ADD"
    },
    "14886": {
      "op": "MSTORE"
    },
    "14887": {
      "op": "PUSH32",
      "value": "0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E"
    },
    "14920": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "14922": {
      "op": "DUP3"
    },
    "14923": {
      "op": "ADD"
    },
    "14924": {
      "op": "MSTORE"
    },
    "14925": {
      "op": "PUSH2",
      "value": "0x6473"
    },
    "14928": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "14930": {
      "op": "SHL"
    },
    "14931": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "14933": {
      "op": "DUP3"
    },
    "14934": {
      "op": "ADD"
    },
    "14935": {
      "op": "MSTORE"
    },
    "14936": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "14938": {
      "op": "ADD"
    },
    "14939": {
      "fn": "EnumerableSet._at",
      "offset": [
        4530,
        4603
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xB18"
    },
    "14942": {
      "op": "JUMP"
    },
    "14943": {
      "fn": "EnumerableSet._at",
      "offset": [
        4530,
        4603
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14944": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4623
      ],
      "op": "DUP3",
      "path": "23",
      "statement": 197
    },
    "14945": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4631
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14947": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4631
      ],
      "op": "ADD",
      "path": "23"
    },
    "14948": {
      "fn": "EnumerableSet._at",
      "offset": [
        4632,
        4637
      ],
      "op": "DUP3",
      "path": "23"
    },
    "14949": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "DUP2",
      "path": "23"
    },
    "14950": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "14951": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "DUP2",
      "path": "23"
    },
    "14952": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "LT",
      "path": "23"
    },
    "14953": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3A82"
    },
    "14956": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "14957": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "14962": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14964": {
      "op": "SHL"
    },
    "14965": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14967": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "14968": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x32"
    },
    "14970": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "14972": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "14973": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "14975": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14977": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "REVERT",
      "path": "23"
    },
    "14978": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14979": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "14980": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14982": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "14983": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "14985": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "14987": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "14988": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "ADD",
      "path": "23"
    },
    "14989": {
      "fn": "EnumerableSet._at",
      "offset": [
        4620,
        4638
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "14990": {
      "fn": "EnumerableSet._at",
      "offset": [
        4613,
        4638
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "14991": {
      "fn": "EnumerableSet._at",
      "offset": [
        4613,
        4638
      ],
      "op": "POP",
      "path": "23"
    },
    "14992": {
      "fn": "EnumerableSet._at",
      "offset": [
        4444,
        4645
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "14993": {
      "fn": "EnumerableSet._at",
      "offset": [
        4444,
        4645
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "14994": {
      "fn": "EnumerableSet._at",
      "offset": [
        4444,
        4645
      ],
      "op": "POP",
      "path": "23"
    },
    "14995": {
      "fn": "EnumerableSet._at",
      "offset": [
        4444,
        4645
      ],
      "op": "POP",
      "path": "23"
    },
    "14996": {
      "fn": "EnumerableSet._at",
      "jump": "o",
      "offset": [
        4444,
        4645
      ],
      "op": "JUMP",
      "path": "23"
    },
    "14997": {
      "fn": "EnumerableSet._add",
      "offset": [
        1632,
        2036
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "14998": {
      "fn": "EnumerableSet._add",
      "offset": [
        1695,
        1699
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15000": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3893,
        3912
      ],
      "op": "DUP2",
      "path": "23",
      "statement": 198
    },
    "15001": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3893,
        3912
      ],
      "op": "DUP2",
      "path": "23"
    },
    "15002": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3893,
        3912
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "15003": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3893,
        3905
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "15005": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3893,
        3905
      ],
      "op": "DUP4",
      "path": "23"
    },
    "15006": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3893,
        3905
      ],
      "op": "ADD",
      "path": "23"
    },
    "15007": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3893,
        3912
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "15009": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3893,
        3912
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "15010": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3893,
        3912
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "15012": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3893,
        3912
      ],
      "op": "DUP2",
      "path": "23"
    },
    "15013": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3893,
        3912
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "15014": {
      "fn": "EnumerableSet._contains",
      "offset": [
        3893,
        3912
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "15015": {
      "fn": "EnumerableSet._add",
      "offset": [
        1711,
        2030
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3ADC"
    },
    "15018": {
      "fn": "EnumerableSet._add",
      "offset": [
        1711,
        2030
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "15019": {
      "op": "POP"
    },
    "15020": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP2",
      "path": "23",
      "statement": 199
    },
    "15021": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "15022": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "15024": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP2",
      "path": "23"
    },
    "15025": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP2",
      "path": "23"
    },
    "15026": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "ADD",
      "path": "23"
    },
    "15027": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP5",
      "path": "23"
    },
    "15028": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "15029": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1764
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15031": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP5",
      "path": "23"
    },
    "15032": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP2",
      "path": "23"
    },
    "15033": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "15034": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "15036": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP1",
      "path": "23"
    },
    "15037": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP3",
      "path": "23"
    },
    "15038": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "15039": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "15040": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "15041": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "ADD",
      "path": "23"
    },
    "15042": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "DUP5",
      "path": "23"
    },
    "15043": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "15044": {
      "fn": "EnumerableSet._add",
      "offset": [
        1753,
        1776
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "15045": {
      "fn": "EnumerableSet._add",
      "offset": [
        1933,
        1951
      ],
      "op": "DUP5",
      "path": "23",
      "statement": 200
    },
    "15046": {
      "fn": "EnumerableSet._add",
      "offset": [
        1933,
        1951
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "15047": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "DUP5",
      "path": "23"
    },
    "15048": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "DUP3",
      "path": "23"
    },
    "15049": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "15050": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1923
      ],
      "op": "DUP3",
      "path": "23"
    },
    "15051": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1923
      ],
      "op": "DUP7",
      "path": "23"
    },
    "15052": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1923
      ],
      "op": "ADD",
      "path": "23"
    },
    "15053": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "15054": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "15055": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "15056": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "15058": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "15059": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1930
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "15060": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1951
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "15061": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1951
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "15062": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1951
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "15063": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1951
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "15064": {
      "fn": "EnumerableSet._add",
      "offset": [
        1965,
        1976
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 201,
      "value": "0xADC"
    },
    "15067": {
      "fn": "EnumerableSet._add",
      "offset": [
        1965,
        1976
      ],
      "op": "JUMP",
      "path": "23"
    },
    "15068": {
      "fn": "EnumerableSet._add",
      "offset": [
        1711,
        2030
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "15069": {
      "op": "POP"
    },
    "15070": {
      "fn": "EnumerableSet._add",
      "offset": [
        2014,
        2019
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 202,
      "value": "0x0"
    },
    "15072": {
      "fn": "EnumerableSet._add",
      "offset": [
        2007,
        2019
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xADC"
    },
    "15075": {
      "fn": "EnumerableSet._add",
      "offset": [
        2007,
        2019
      ],
      "op": "JUMP",
      "path": "23"
    },
    "15076": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6754,
        6946
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "15077": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4251,
        4258
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "15079": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "DUP3",
      "path": "7"
    },
    "15080": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "DUP2",
      "path": "7"
    },
    "15081": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "15082": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "15084": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "DUP2",
      "path": "7"
    },
    "15085": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "15086": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "15087": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "15089": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "15090": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4289
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "15091": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "15093": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "ADD",
      "path": "7"
    },
    "15094": {
      "fn": "AccessControl.getRoleAdmin",
      "offset": [
        4277,
        4299
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "15095": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6885,
        6894
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 203
    },
    "15096": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6885,
        6894
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "15097": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6842,
        6895
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "15099": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6842,
        6895
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "15100": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6859,
        6863
      ],
      "op": "DUP5",
      "path": "7"
    },
    "15101": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6859,
        6863
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "15102": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6842,
        6895
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xBD79B86FFE0AB8E8776151514217CD7CACD52C909F66475C3AF44E129F0B00FF"
    },
    "15135": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6842,
        6895
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "15136": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6842,
        6895
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "15138": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6842,
        6895
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "15139": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6842,
        6895
      ],
      "op": "LOG4",
      "path": "7"
    },
    "15140": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6905,
        6911
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 204,
      "value": "0x0"
    },
    "15142": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6905,
        6917
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "15143": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6905,
        6917
      ],
      "op": "DUP3",
      "path": "7"
    },
    "15144": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6905,
        6917
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "15145": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6905,
        6917
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "15147": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6905,
        6917
      ],
      "op": "DUP3",
      "path": "7"
    },
    "15148": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6905,
        6917
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "15149": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6905,
        6917
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "15150": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6905,
        6917
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "15152": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6905,
        6917
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "15153": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6905,
        6917
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "15154": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6905,
        6917
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "15155": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6905,
        6927
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "15157": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6905,
        6927
      ],
      "op": "ADD",
      "path": "7"
    },
    "15158": {
      "fn": "AccessControl._setRoleAdmin",
      "offset": [
        6905,
        6939
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "15159": {
      "fn": "AccessControl._setRoleAdmin",
      "jump": "o",
      "offset": [
        6754,
        6946
      ],
      "op": "JUMP",
      "path": "7"
    },
    "15160": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14581,
        15379
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "15161": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14807,
        14823
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 205
    },
    "15162": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14773,
        14804
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B43"
    },
    "15165": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14789,
        14804
      ],
      "op": "DUP4",
      "path": "2"
    },
    "15166": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14773,
        14786
      ],
      "op": "DUP6",
      "path": "2"
    },
    "15167": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14773,
        14804
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "15170": {
      "fn": "Competition._paySingleAddress",
      "jump": "i",
      "offset": [
        14773,
        14804
      ],
      "op": "JUMP",
      "path": "2"
    },
    "15171": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14773,
        14804
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "15172": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14773,
        14823
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B4D"
    },
    "15175": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14773,
        14823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "15176": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14773,
        14823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15177": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14773,
        14823
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "15180": {
      "fn": "Competition._paySingleAddress",
      "jump": "i",
      "offset": [
        14773,
        14823
      ],
      "op": "JUMP",
      "path": "2"
    },
    "15181": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14773,
        14823
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "15182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15188": {
      "op": "SHL"
    },
    "15189": {
      "op": "SUB"
    },
    "15190": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14769
      ],
      "op": "DUP6",
      "path": "2"
    },
    "15191": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14769
      ],
      "op": "AND",
      "path": "2"
    },
    "15192": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15194": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14769
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15195": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14769
      ],
      "op": "DUP2",
      "path": "2"
    },
    "15196": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14769
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "15197": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14758
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "15199": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "15201": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14769
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "15202": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14769
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "15204": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14769
      ],
      "op": "DUP2",
      "path": "2"
    },
    "15205": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14769
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "15206": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14823
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15207": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14823
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "15208": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14769
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15209": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14769
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "15210": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14769
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15211": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14823
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B75"
    },
    "15214": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15215": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14823
      ],
      "op": "DUP5",
      "path": "2"
    },
    "15216": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15217": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14823
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "15220": {
      "fn": "Competition._paySingleAddress",
      "jump": "i",
      "offset": [
        14751,
        14823
      ],
      "op": "JUMP",
      "path": "2"
    },
    "15221": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14823
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "15222": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14823
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15223": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14823
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "15224": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14751,
        14823
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "15225": {
      "op": "POP"
    },
    "15226": {
      "op": "POP"
    },
    "15227": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14838,
        14855
      ],
      "op": "DUP3",
      "path": "2"
    },
    "15228": {
      "branch": 255,
      "fn": "Competition._paySingleAddress",
      "offset": [
        14838,
        14855
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "15229": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14834,
        14966
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BC5"
    },
    "15232": {
      "branch": 255,
      "fn": "Competition._paySingleAddress",
      "offset": [
        14834,
        14966
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "15233": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14898
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 206,
      "value": "0xFFFFFFFF"
    },
    "15238": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14898
      ],
      "op": "DUP6",
      "path": "2"
    },
    "15239": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14898
      ],
      "op": "AND",
      "path": "2"
    },
    "15240": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15242": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15243": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "15244": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "15245": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "15247": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "15249": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15250": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14898
      ],
      "op": "DUP2",
      "path": "2"
    },
    "15251": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14898
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "15252": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14898
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "15254": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14898
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15255": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14898
      ],
      "op": "DUP4",
      "path": "2"
    },
    "15256": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14898
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "15257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15263": {
      "op": "SHL"
    },
    "15264": {
      "op": "SUB"
    },
    "15265": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14923
      ],
      "op": "DUP9",
      "path": "2"
    },
    "15266": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14923
      ],
      "op": "AND",
      "path": "2"
    },
    "15267": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14923
      ],
      "op": "DUP5",
      "path": "2"
    },
    "15268": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14923
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "15269": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14912
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "15271": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14912
      ],
      "op": "ADD",
      "path": "2"
    },
    "15272": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14923
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15273": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14923
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "15274": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14923
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "15275": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14923
      ],
      "op": "DUP2",
      "path": "2"
    },
    "15276": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14923
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "15277": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14938
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "15279": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14938
      ],
      "op": "ADD",
      "path": "2"
    },
    "15280": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14955
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15281": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14955
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "15282": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14942,
        14955
      ],
      "op": "DUP6",
      "path": "2"
    },
    "15283": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14942,
        14955
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "15284": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14898
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15285": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14955
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BBF"
    },
    "15288": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14955
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15289": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14942,
        14955
      ],
      "op": "DUP5",
      "path": "2"
    },
    "15290": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14942,
        14955
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15291": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14955
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "15294": {
      "fn": "Competition._paySingleAddress",
      "jump": "i",
      "offset": [
        14870,
        14955
      ],
      "op": "JUMP",
      "path": "2"
    },
    "15295": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14955
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "15296": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14955
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15297": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14955
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "15298": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14870,
        14955
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "15299": {
      "op": "POP"
    },
    "15300": {
      "op": "POP"
    },
    "15301": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14834,
        14966
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "15302": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14980,
        14999
      ],
      "op": "DUP2",
      "path": "2"
    },
    "15303": {
      "branch": 256,
      "fn": "Competition._paySingleAddress",
      "offset": [
        14980,
        14999
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "15304": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14976,
        15114
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C10"
    },
    "15307": {
      "branch": 256,
      "fn": "Competition._paySingleAddress",
      "offset": [
        14976,
        15114
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "15308": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15042
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 207,
      "value": "0xFFFFFFFF"
    },
    "15313": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15042
      ],
      "op": "DUP6",
      "path": "2"
    },
    "15314": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15042
      ],
      "op": "AND",
      "path": "2"
    },
    "15315": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15042
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15317": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15042
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15318": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15042
      ],
      "op": "DUP2",
      "path": "2"
    },
    "15319": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15042
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "15320": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15025
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "15322": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15042
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "15324": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15042
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15325": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15042
      ],
      "op": "DUP2",
      "path": "2"
    },
    "15326": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15042
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "15327": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15042
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "15329": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15042
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15330": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15042
      ],
      "op": "DUP4",
      "path": "2"
    },
    "15331": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15042
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "15332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15338": {
      "op": "SHL"
    },
    "15339": {
      "op": "SUB"
    },
    "15340": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15067
      ],
      "op": "DUP9",
      "path": "2"
    },
    "15341": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15067
      ],
      "op": "AND",
      "path": "2"
    },
    "15342": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15067
      ],
      "op": "DUP5",
      "path": "2"
    },
    "15343": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15067
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "15344": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "15346": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15056
      ],
      "op": "ADD",
      "path": "2"
    },
    "15347": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15067
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15348": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15067
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "15349": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15067
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "15350": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15067
      ],
      "op": "DUP2",
      "path": "2"
    },
    "15351": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15067
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "15352": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "15354": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15084
      ],
      "op": "ADD",
      "path": "2"
    },
    "15355": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15103
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15356": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15103
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "15357": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15088,
        15103
      ],
      "op": "DUP5",
      "path": "2"
    },
    "15358": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15088,
        15103
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "15359": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15042
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15360": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15103
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C0A"
    },
    "15363": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15103
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15364": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15088,
        15103
      ],
      "op": "DUP5",
      "path": "2"
    },
    "15365": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15088,
        15103
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15366": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15103
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "15369": {
      "fn": "Competition._paySingleAddress",
      "jump": "i",
      "offset": [
        15014,
        15103
      ],
      "op": "JUMP",
      "path": "2"
    },
    "15370": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15103
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "15371": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15103
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15372": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15103
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "15373": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15014,
        15103
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "15374": {
      "op": "POP"
    },
    "15375": {
      "op": "POP"
    },
    "15376": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14976,
        15114
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "15377": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15128,
        15148
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15378": {
      "branch": 257,
      "fn": "Competition._paySingleAddress",
      "offset": [
        15128,
        15148
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "15379": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15124,
        15265
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C5B"
    },
    "15382": {
      "branch": 257,
      "fn": "Competition._paySingleAddress",
      "offset": [
        15124,
        15265
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "15383": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15191
      ],
      "op": "PUSH4",
      "path": "2",
      "statement": 208,
      "value": "0xFFFFFFFF"
    },
    "15388": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15191
      ],
      "op": "DUP6",
      "path": "2"
    },
    "15389": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15191
      ],
      "op": "AND",
      "path": "2"
    },
    "15390": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15191
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15392": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15191
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15393": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15191
      ],
      "op": "DUP2",
      "path": "2"
    },
    "15394": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15191
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "15395": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15174
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "15397": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15191
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "15399": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15191
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15400": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15191
      ],
      "op": "DUP2",
      "path": "2"
    },
    "15401": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15191
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "15402": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15191
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "15404": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15191
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15405": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15191
      ],
      "op": "DUP4",
      "path": "2"
    },
    "15406": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15191
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "15407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15413": {
      "op": "SHL"
    },
    "15414": {
      "op": "SUB"
    },
    "15415": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15216
      ],
      "op": "DUP9",
      "path": "2"
    },
    "15416": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15216
      ],
      "op": "AND",
      "path": "2"
    },
    "15417": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15216
      ],
      "op": "DUP5",
      "path": "2"
    },
    "15418": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15216
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "15419": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "15421": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15205
      ],
      "op": "ADD",
      "path": "2"
    },
    "15422": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15216
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15423": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15216
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "15424": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15216
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "15425": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15216
      ],
      "op": "DUP2",
      "path": "2"
    },
    "15426": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15216
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "15427": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "15429": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15234
      ],
      "op": "ADD",
      "path": "2"
    },
    "15430": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15254
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15431": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15254
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "15432": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15238,
        15254
      ],
      "op": "DUP4",
      "path": "2"
    },
    "15433": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15238,
        15254
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "15434": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15191
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15435": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C55"
    },
    "15438": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15439": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15238,
        15254
      ],
      "op": "DUP5",
      "path": "2"
    },
    "15440": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15238,
        15254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15441": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15254
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x44AE"
    },
    "15444": {
      "fn": "Competition._paySingleAddress",
      "jump": "i",
      "offset": [
        15163,
        15254
      ],
      "op": "JUMP",
      "path": "2"
    },
    "15445": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15254
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "15446": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15254
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15447": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15254
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "15448": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15163,
        15254
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "15449": {
      "op": "POP"
    },
    "15450": {
      "op": "POP"
    },
    "15451": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15124,
        15265
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "15452": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15280,
        15372
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 209,
      "value": "0x40"
    },
    "15454": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15280,
        15372
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15455": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15280,
        15372
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "15456": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "15461": {
      "op": "DUP8"
    },
    "15462": {
      "op": "AND"
    },
    "15463": {
      "op": "DUP2"
    },
    "15464": {
      "op": "MSTORE"
    },
    "15465": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15467": {
      "op": "DUP2"
    },
    "15468": {
      "op": "ADD"
    },
    "15469": {
      "op": "DUP6"
    },
    "15470": {
      "op": "SWAP1"
    },
    "15471": {
      "op": "MSTORE"
    },
    "15472": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15355,
        15371
      ],
      "op": "DUP3",
      "path": "2"
    },
    "15473": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15355,
        15371
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "15474": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15338,
        15353
      ],
      "op": "DUP5",
      "path": "2"
    },
    "15475": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15338,
        15353
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "15476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15482": {
      "op": "SHL"
    },
    "15483": {
      "op": "SUB"
    },
    "15484": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15280,
        15372
      ],
      "op": "DUP9",
      "path": "2"
    },
    "15485": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15280,
        15372
      ],
      "op": "AND",
      "path": "2"
    },
    "15486": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15280,
        15372
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "15487": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15280,
        15372
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x6BF9F9AB57EFEDD3554E5388390B4EC0CC61506E0DFC7AD37DB38D940A23B743"
    },
    "15520": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15280,
        15372
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "15521": {
      "op": "ADD"
    },
    "15522": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15280,
        15372
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "15524": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15280,
        15372
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "15525": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15280,
        15372
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15526": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15280,
        15372
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "15527": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15280,
        15372
      ],
      "op": "SUB",
      "path": "2"
    },
    "15528": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15280,
        15372
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15529": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        15280,
        15372
      ],
      "op": "LOG4",
      "path": "2"
    },
    "15530": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14581,
        15379
      ],
      "op": "POP",
      "path": "2"
    },
    "15531": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14581,
        15379
      ],
      "op": "POP",
      "path": "2"
    },
    "15532": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14581,
        15379
      ],
      "op": "POP",
      "path": "2"
    },
    "15533": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14581,
        15379
      ],
      "op": "POP",
      "path": "2"
    },
    "15534": {
      "fn": "Competition._paySingleAddress",
      "offset": [
        14581,
        15379
      ],
      "op": "POP",
      "path": "2"
    },
    "15535": {
      "fn": "Competition._paySingleAddress",
      "jump": "o",
      "offset": [
        14581,
        15379
      ],
      "op": "JUMP",
      "path": "2"
    },
    "15536": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15385,
        15659
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "15537": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15554,
        15652
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 210,
      "value": "0x40"
    },
    "15539": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15554,
        15652
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "15540": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "15545": {
      "op": "DUP6"
    },
    "15546": {
      "op": "AND"
    },
    "15547": {
      "op": "DUP2"
    },
    "15548": {
      "op": "MSTORE"
    },
    "15549": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15630,
        15651
      ],
      "op": "DUP2",
      "path": "2"
    },
    "15550": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15630,
        15651
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15551": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15608,
        15628
      ],
      "op": "DUP4",
      "path": "2"
    },
    "15552": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15608,
        15628
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15553": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15588,
        15606
      ],
      "op": "DUP6",
      "path": "2"
    },
    "15554": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15588,
        15606
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15555": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15554,
        15652
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8B77F1E219A52706FCF536BEDEC95F5DF41E062D16118AE8F4BEDFFD30AFC939"
    },
    "15588": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15554,
        15652
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15589": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15591": {
      "op": "ADD"
    },
    "15592": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15554,
        15652
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "15594": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15554,
        15652
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "15595": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15554,
        15652
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15596": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15554,
        15652
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "15597": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15554,
        15652
      ],
      "op": "SUB",
      "path": "2"
    },
    "15598": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15554,
        15652
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "15599": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15554,
        15652
      ],
      "op": "LOG4",
      "path": "2"
    },
    "15600": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15385,
        15659
      ],
      "op": "POP",
      "path": "2"
    },
    "15601": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15385,
        15659
      ],
      "op": "POP",
      "path": "2"
    },
    "15602": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15385,
        15659
      ],
      "op": "POP",
      "path": "2"
    },
    "15603": {
      "fn": "Competition._logRewardsPaid",
      "offset": [
        15385,
        15659
      ],
      "op": "POP",
      "path": "2"
    },
    "15604": {
      "fn": "Competition._logRewardsPaid",
      "jump": "o",
      "offset": [
        15385,
        15659
      ],
      "op": "JUMP",
      "path": "2"
    },
    "15605": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2204,
        3716
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "15606": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2270,
        2274
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15608": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "DUP2",
      "path": "23"
    },
    "15609": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "DUP2",
      "path": "23"
    },
    "15610": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "15611": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2419
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "15613": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2419
      ],
      "op": "DUP4",
      "path": "23"
    },
    "15614": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2419
      ],
      "op": "ADD",
      "path": "23"
    },
    "15615": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "15617": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "15618": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "15620": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "DUP2",
      "path": "23"
    },
    "15621": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "15622": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2407,
        2426
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "15623": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2441,
        2456
      ],
      "op": "DUP1",
      "path": "23"
    },
    "15624": {
      "branch": 265,
      "fn": "EnumerableSet._remove",
      "offset": [
        2441,
        2456
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "15625": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2437,
        3710
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3E08"
    },
    "15628": {
      "branch": 265,
      "fn": "EnumerableSet._remove",
      "offset": [
        2437,
        3710
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "15629": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2798,
        2819
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15631": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2822,
        2836
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3D19"
    },
    "15634": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2835,
        2836
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "15636": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2822,
        2832
      ],
      "op": "DUP4",
      "path": "23"
    },
    "15637": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2822,
        2836
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4505"
    },
    "15640": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        2822,
        2836
      ],
      "op": "JUMP",
      "path": "23"
    },
    "15641": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2822,
        2836
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "15642": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2870,
        2888
      ],
      "op": "DUP6",
      "path": "23"
    },
    "15643": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2870,
        2888
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "15644": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2798,
        2836
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "15645": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2798,
        2836
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "15646": {
      "op": "POP"
    },
    "15647": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2850,
        2867
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15649": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2850,
        2867
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "15650": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2870,
        2892
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3D2D"
    },
    "15653": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2870,
        2892
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "15654": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2891,
        2892
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "15656": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2891,
        2892
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "15657": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2870,
        2892
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x4505"
    },
    "15660": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        2870,
        2892
      ],
      "op": "JUMP",
      "path": "23"
    },
    "15661": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2870,
        2892
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "15662": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2850,
        2892
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "15663": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2850,
        2892
      ],
      "op": "POP",
      "path": "23"
    },
    "15664": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3132,
        3149
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15666": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3155
      ],
      "op": "DUP7",
      "path": "23"
    },
    "15667": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3163
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15669": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3163
      ],
      "op": "ADD",
      "path": "23"
    },
    "15670": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3164,
        3173
      ],
      "op": "DUP3",
      "path": "23"
    },
    "15671": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "DUP2",
      "path": "23"
    },
    "15672": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "15673": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "DUP2",
      "path": "23"
    },
    "15674": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "LT",
      "path": "23"
    },
    "15675": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3D54"
    },
    "15678": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "15679": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15684": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15686": {
      "op": "SHL"
    },
    "15687": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15689": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "15690": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x32"
    },
    "15692": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "15694": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "15695": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "15697": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15699": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "REVERT",
      "path": "23"
    },
    "15700": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "15701": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "15702": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15704": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "15705": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "15707": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15709": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "15710": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "ADD",
      "path": "23"
    },
    "15711": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3152,
        3174
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "15712": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3132,
        3174
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "15713": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3132,
        3174
      ],
      "op": "POP",
      "path": "23"
    },
    "15714": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3295,
        3304
      ],
      "op": "DUP1",
      "path": "23",
      "statement": 211
    },
    "15715": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3269
      ],
      "op": "DUP8",
      "path": "23"
    },
    "15716": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3277
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15718": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3277
      ],
      "op": "ADD",
      "path": "23"
    },
    "15719": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3278,
        3291
      ],
      "op": "DUP5",
      "path": "23"
    },
    "15720": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "DUP2",
      "path": "23"
    },
    "15721": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "15722": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "DUP2",
      "path": "23"
    },
    "15723": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "LT",
      "path": "23"
    },
    "15724": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3D85"
    },
    "15727": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "15728": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15733": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15735": {
      "op": "SHL"
    },
    "15736": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15738": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "15739": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x32"
    },
    "15741": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "15743": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "15744": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "15746": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15748": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "REVERT",
      "path": "23"
    },
    "15749": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "15750": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15752": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "15753": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "DUP3",
      "path": "23"
    },
    "15754": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "15755": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "15757": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "15758": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "15759": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "15760": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3292
      ],
      "op": "ADD",
      "path": "23"
    },
    "15761": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3266,
        3304
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "15762": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3396,
        3413
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 212,
      "value": "0x3D9C"
    },
    "15765": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3396,
        3409
      ],
      "op": "DUP4",
      "path": "23"
    },
    "15766": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3412,
        3413
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "15768": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3396,
        3413
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x44AE"
    },
    "15771": {
      "fn": "EnumerableSet._remove",
      "jump": "i",
      "offset": [
        3396,
        3413
      ],
      "op": "JUMP",
      "path": "23"
    },
    "15772": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3396,
        3413
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "15773": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15775": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "DUP3",
      "path": "23"
    },
    "15776": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "DUP2",
      "path": "23"
    },
    "15777": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "15778": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3382
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "15780": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3382
      ],
      "op": "DUP10",
      "path": "23"
    },
    "15781": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3382
      ],
      "op": "ADD",
      "path": "23"
    },
    "15782": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "15784": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "15785": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "15787": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "15788": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3393
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "15789": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3413
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "15790": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "DUP7",
      "path": "23",
      "statement": 213
    },
    "15791": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "15792": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3373
      ],
      "op": "DUP8",
      "path": "23"
    },
    "15793": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3370,
        3373
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "15794": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "DUP1",
      "path": "23"
    },
    "15795": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x3DCC"
    },
    "15798": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "15799": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "15804": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15806": {
      "op": "SHL"
    },
    "15807": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15809": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "15810": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x31"
    },
    "15812": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "15814": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "15815": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x24"
    },
    "15817": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15819": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "REVERT",
      "path": "23"
    },
    "15820": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "15821": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "15823": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "15824": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "SUB",
      "path": "23"
    },
    "15825": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "DUP2",
      "path": "23"
    },
    "15826": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "DUP2",
      "path": "23"
    },
    "15827": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "15828": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15830": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "15831": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "15833": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15835": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "15836": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "ADD",
      "path": "23"
    },
    "15837": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15839": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "15840": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "15841": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "15842": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3519,
        3536
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "15843": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3611,
        3614
      ],
      "op": "DUP7",
      "path": "23",
      "statement": 214
    },
    "15844": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3611,
        3623
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "15846": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3611,
        3623
      ],
      "op": "ADD",
      "path": "23"
    },
    "15847": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3611,
        3630
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15849": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3624,
        3629
      ],
      "op": "DUP8",
      "path": "23"
    },
    "15850": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3611,
        3630
      ],
      "op": "DUP2",
      "path": "23"
    },
    "15851": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3611,
        3630
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "15852": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3611,
        3630
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "15854": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3611,
        3630
      ],
      "op": "ADD",
      "path": "23"
    },
    "15855": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3611,
        3630
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "15856": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3611,
        3630
      ],
      "op": "DUP2",
      "path": "23"
    },
    "15857": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3611,
        3630
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "15858": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3611,
        3630
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "15860": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3611,
        3630
      ],
      "op": "ADD",
      "path": "23"
    },
    "15861": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3611,
        3630
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15863": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3611,
        3630
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "15864": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3604,
        3630
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "15866": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3604,
        3630
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "15867": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3604,
        3630
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "15868": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3652,
        3656
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 215,
      "value": "0x1"
    },
    "15870": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3645,
        3656
      ],
      "op": "SWAP5",
      "path": "23"
    },
    "15871": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3645,
        3656
      ],
      "op": "POP",
      "path": "23"
    },
    "15872": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3645,
        3656
      ],
      "op": "POP",
      "path": "23"
    },
    "15873": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3645,
        3656
      ],
      "op": "POP",
      "path": "23"
    },
    "15874": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3645,
        3656
      ],
      "op": "POP",
      "path": "23"
    },
    "15875": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3645,
        3656
      ],
      "op": "POP",
      "path": "23"
    },
    "15876": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3645,
        3656
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xADC"
    },
    "15879": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3645,
        3656
      ],
      "op": "JUMP",
      "path": "23"
    },
    "15880": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2437,
        3710
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "15881": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3694,
        3699
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 216,
      "value": "0x0"
    },
    "15883": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3687,
        3699
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "15884": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3687,
        3699
      ],
      "op": "POP",
      "path": "23"
    },
    "15885": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3687,
        3699
      ],
      "op": "POP",
      "path": "23"
    },
    "15886": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3687,
        3699
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xADC"
    },
    "15889": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3687,
        3699
      ],
      "op": "JUMP",
      "path": "23"
    },
    "15890": {
      "op": "JUMPDEST"
    },
    "15891": {
      "op": "DUP3"
    },
    "15892": {
      "op": "DUP1"
    },
    "15893": {
      "op": "SLOAD"
    },
    "15894": {
      "op": "PUSH2",
      "value": "0x3E1E"
    },
    "15897": {
      "op": "SWAP1"
    },
    "15898": {
      "op": "PUSH2",
      "value": "0x453F"
    },
    "15901": {
      "jump": "i",
      "op": "JUMP"
    },
    "15902": {
      "op": "JUMPDEST"
    },
    "15903": {
      "op": "SWAP1"
    },
    "15904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15906": {
      "op": "MSTORE"
    },
    "15907": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15911": {
      "op": "KECCAK256"
    },
    "15912": {
      "op": "SWAP1"
    },
    "15913": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15915": {
      "op": "ADD"
    },
    "15916": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15918": {
      "op": "SWAP1"
    },
    "15919": {
      "op": "DIV"
    },
    "15920": {
      "op": "DUP2"
    },
    "15921": {
      "op": "ADD"
    },
    "15922": {
      "op": "SWAP3"
    },
    "15923": {
      "op": "DUP3"
    },
    "15924": {
      "op": "PUSH2",
      "value": "0x3E40"
    },
    "15927": {
      "op": "JUMPI"
    },
    "15928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15930": {
      "op": "DUP6"
    },
    "15931": {
      "op": "SSTORE"
    },
    "15932": {
      "op": "PUSH2",
      "value": "0x3E86"
    },
    "15935": {
      "op": "JUMP"
    },
    "15936": {
      "op": "JUMPDEST"
    },
    "15937": {
      "op": "DUP3"
    },
    "15938": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15940": {
      "op": "LT"
    },
    "15941": {
      "op": "PUSH2",
      "value": "0x3E59"
    },
    "15944": {
      "op": "JUMPI"
    },
    "15945": {
      "op": "DUP3"
    },
    "15946": {
      "op": "DUP1"
    },
    "15947": {
      "op": "ADD"
    },
    "15948": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "15950": {
      "op": "NOT"
    },
    "15951": {
      "op": "DUP3"
    },
    "15952": {
      "op": "CALLDATALOAD"
    },
    "15953": {
      "op": "AND"
    },
    "15954": {
      "op": "OR"
    },
    "15955": {
      "op": "DUP6"
    },
    "15956": {
      "op": "SSTORE"
    },
    "15957": {
      "op": "PUSH2",
      "value": "0x3E86"
    },
    "15960": {
      "op": "JUMP"
    },
    "15961": {
      "op": "JUMPDEST"
    },
    "15962": {
      "op": "DUP3"
    },
    "15963": {
      "op": "DUP1"
    },
    "15964": {
      "op": "ADD"
    },
    "15965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15967": {
      "op": "ADD"
    },
    "15968": {
      "op": "DUP6"
    },
    "15969": {
      "op": "SSTORE"
    },
    "15970": {
      "op": "DUP3"
    },
    "15971": {
      "op": "ISZERO"
    },
    "15972": {
      "op": "PUSH2",
      "value": "0x3E86"
    },
    "15975": {
      "op": "JUMPI"
    },
    "15976": {
      "op": "SWAP2"
    },
    "15977": {
      "op": "DUP3"
    },
    "15978": {
      "op": "ADD"
    },
    "15979": {
      "op": "JUMPDEST"
    },
    "15980": {
      "op": "DUP3"
    },
    "15981": {
      "op": "DUP2"
    },
    "15982": {
      "op": "GT"
    },
    "15983": {
      "op": "ISZERO"
    },
    "15984": {
      "op": "PUSH2",
      "value": "0x3E86"
    },
    "15987": {
      "op": "JUMPI"
    },
    "15988": {
      "op": "DUP3"
    },
    "15989": {
      "op": "CALLDATALOAD"
    },
    "15990": {
      "op": "DUP3"
    },
    "15991": {
      "op": "SSTORE"
    },
    "15992": {
      "op": "SWAP2"
    },
    "15993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15995": {
      "op": "ADD"
    },
    "15996": {
      "op": "SWAP2"
    },
    "15997": {
      "op": "SWAP1"
    },
    "15998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16000": {
      "op": "ADD"
    },
    "16001": {
      "op": "SWAP1"
    },
    "16002": {
      "op": "PUSH2",
      "value": "0x3E6B"
    },
    "16005": {
      "op": "JUMP"
    },
    "16006": {
      "op": "JUMPDEST"
    },
    "16007": {
      "op": "POP"
    },
    "16008": {
      "op": "PUSH2",
      "value": "0x3E92"
    },
    "16011": {
      "op": "SWAP3"
    },
    "16012": {
      "op": "SWAP2"
    },
    "16013": {
      "op": "POP"
    },
    "16014": {
      "op": "PUSH2",
      "value": "0x3E96"
    },
    "16017": {
      "jump": "i",
      "op": "JUMP"
    },
    "16018": {
      "op": "JUMPDEST"
    },
    "16019": {
      "op": "POP"
    },
    "16020": {
      "op": "SWAP1"
    },
    "16021": {
      "jump": "o",
      "op": "JUMP"
    },
    "16022": {
      "op": "JUMPDEST"
    },
    "16023": {
      "op": "JUMPDEST"
    },
    "16024": {
      "op": "DUP1"
    },
    "16025": {
      "op": "DUP3"
    },
    "16026": {
      "op": "GT"
    },
    "16027": {
      "op": "ISZERO"
    },
    "16028": {
      "op": "PUSH2",
      "value": "0x3E92"
    },
    "16031": {
      "op": "JUMPI"
    },
    "16032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16034": {
      "op": "DUP2"
    },
    "16035": {
      "op": "SSTORE"
    },
    "16036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16038": {
      "op": "ADD"
    },
    "16039": {
      "op": "PUSH2",
      "value": "0x3E97"
    },
    "16042": {
      "op": "JUMP"
    },
    "16043": {
      "op": "JUMPDEST"
    },
    "16044": {
      "op": "DUP1"
    },
    "16045": {
      "op": "CALLDATALOAD"
    },
    "16046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16052": {
      "op": "SHL"
    },
    "16053": {
      "op": "SUB"
    },
    "16054": {
      "op": "DUP2"
    },
    "16055": {
      "op": "AND"
    },
    "16056": {
      "op": "DUP2"
    },
    "16057": {
      "op": "EQ"
    },
    "16058": {
      "op": "PUSH2",
      "value": "0x3EC2"
    },
    "16061": {
      "op": "JUMPI"
    },
    "16062": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16064": {
      "op": "DUP1"
    },
    "16065": {
      "op": "REVERT"
    },
    "16066": {
      "op": "JUMPDEST"
    },
    "16067": {
      "op": "SWAP2"
    },
    "16068": {
      "op": "SWAP1"
    },
    "16069": {
      "op": "POP"
    },
    "16070": {
      "jump": "o",
      "op": "JUMP"
    },
    "16071": {
      "op": "JUMPDEST"
    },
    "16072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16074": {
      "op": "DUP1"
    },
    "16075": {
      "op": "DUP4"
    },
    "16076": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16078": {
      "op": "DUP5"
    },
    "16079": {
      "op": "ADD"
    },
    "16080": {
      "op": "SLT"
    },
    "16081": {
      "op": "PUSH2",
      "value": "0x3ED8"
    },
    "16084": {
      "op": "JUMPI"
    },
    "16085": {
      "op": "DUP2"
    },
    "16086": {
      "op": "DUP3"
    },
    "16087": {
      "op": "REVERT"
    },
    "16088": {
      "op": "JUMPDEST"
    },
    "16089": {
      "op": "POP"
    },
    "16090": {
      "op": "DUP2"
    },
    "16091": {
      "op": "CALLDATALOAD"
    },
    "16092": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "16101": {
      "op": "DUP2"
    },
    "16102": {
      "op": "GT"
    },
    "16103": {
      "op": "ISZERO"
    },
    "16104": {
      "op": "PUSH2",
      "value": "0x3EEF"
    },
    "16107": {
      "op": "JUMPI"
    },
    "16108": {
      "op": "DUP2"
    },
    "16109": {
      "op": "DUP3"
    },
    "16110": {
      "op": "REVERT"
    },
    "16111": {
      "op": "JUMPDEST"
    },
    "16112": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16114": {
      "op": "DUP4"
    },
    "16115": {
      "op": "ADD"
    },
    "16116": {
      "op": "SWAP2"
    },
    "16117": {
      "op": "POP"
    },
    "16118": {
      "op": "DUP4"
    },
    "16119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16121": {
      "op": "DUP3"
    },
    "16122": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "16124": {
      "op": "SHL"
    },
    "16125": {
      "op": "DUP6"
    },
    "16126": {
      "op": "ADD"
    },
    "16127": {
      "op": "ADD"
    },
    "16128": {
      "op": "GT"
    },
    "16129": {
      "op": "ISZERO"
    },
    "16130": {
      "op": "PUSH2",
      "value": "0x3F0A"
    },
    "16133": {
      "op": "JUMPI"
    },
    "16134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16136": {
      "op": "DUP1"
    },
    "16137": {
      "op": "REVERT"
    },
    "16138": {
      "op": "JUMPDEST"
    },
    "16139": {
      "op": "SWAP3"
    },
    "16140": {
      "op": "POP"
    },
    "16141": {
      "op": "SWAP3"
    },
    "16142": {
      "op": "SWAP1"
    },
    "16143": {
      "op": "POP"
    },
    "16144": {
      "jump": "o",
      "op": "JUMP"
    },
    "16145": {
      "op": "JUMPDEST"
    },
    "16146": {
      "op": "DUP1"
    },
    "16147": {
      "op": "CALLDATALOAD"
    },
    "16148": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "16153": {
      "op": "DUP2"
    },
    "16154": {
      "op": "AND"
    },
    "16155": {
      "op": "DUP2"
    },
    "16156": {
      "op": "EQ"
    },
    "16157": {
      "op": "PUSH2",
      "value": "0x3EC2"
    },
    "16160": {
      "op": "JUMPI"
    },
    "16161": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16163": {
      "op": "DUP1"
    },
    "16164": {
      "op": "REVERT"
    },
    "16165": {
      "op": "JUMPDEST"
    },
    "16166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16170": {
      "op": "DUP3"
    },
    "16171": {
      "op": "DUP5"
    },
    "16172": {
      "op": "SUB"
    },
    "16173": {
      "op": "SLT"
    },
    "16174": {
      "op": "ISZERO"
    },
    "16175": {
      "op": "PUSH2",
      "value": "0x3F36"
    },
    "16178": {
      "op": "JUMPI"
    },
    "16179": {
      "op": "DUP1"
    },
    "16180": {
      "op": "DUP2"
    },
    "16181": {
      "op": "REVERT"
    },
    "16182": {
      "op": "JUMPDEST"
    },
    "16183": {
      "op": "PUSH2",
      "value": "0x1E10"
    },
    "16186": {
      "op": "DUP3"
    },
    "16187": {
      "op": "PUSH2",
      "value": "0x3EAB"
    },
    "16190": {
      "jump": "i",
      "op": "JUMP"
    },
    "16191": {
      "op": "JUMPDEST"
    },
    "16192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16194": {
      "op": "DUP1"
    },
    "16195": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16197": {
      "op": "DUP4"
    },
    "16198": {
      "op": "DUP6"
    },
    "16199": {
      "op": "SUB"
    },
    "16200": {
      "op": "SLT"
    },
    "16201": {
      "op": "ISZERO"
    },
    "16202": {
      "op": "PUSH2",
      "value": "0x3F51"
    },
    "16205": {
      "op": "JUMPI"
    },
    "16206": {
      "op": "DUP1"
    },
    "16207": {
      "op": "DUP2"
    },
    "16208": {
      "op": "REVERT"
    },
    "16209": {
      "op": "JUMPDEST"
    },
    "16210": {
      "op": "PUSH2",
      "value": "0x3F5A"
    },
    "16213": {
      "op": "DUP4"
    },
    "16214": {
      "op": "PUSH2",
      "value": "0x3EAB"
    },
    "16217": {
      "jump": "i",
      "op": "JUMP"
    },
    "16218": {
      "op": "JUMPDEST"
    },
    "16219": {
      "op": "SWAP5"
    },
    "16220": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16222": {
      "op": "SWAP4"
    },
    "16223": {
      "op": "SWAP1"
    },
    "16224": {
      "op": "SWAP4"
    },
    "16225": {
      "op": "ADD"
    },
    "16226": {
      "op": "CALLDATALOAD"
    },
    "16227": {
      "op": "SWAP4"
    },
    "16228": {
      "op": "POP"
    },
    "16229": {
      "op": "POP"
    },
    "16230": {
      "op": "POP"
    },
    "16231": {
      "jump": "o",
      "op": "JUMP"
    },
    "16232": {
      "op": "JUMPDEST"
    },
    "16233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16235": {
      "op": "DUP1"
    },
    "16236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16238": {
      "op": "DUP1"
    },
    "16239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16241": {
      "op": "DUP1"
    },
    "16242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16244": {
      "op": "DUP1"
    },
    "16245": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16247": {
      "op": "DUP10"
    },
    "16248": {
      "op": "DUP12"
    },
    "16249": {
      "op": "SUB"
    },
    "16250": {
      "op": "SLT"
    },
    "16251": {
      "op": "ISZERO"
    },
    "16252": {
      "op": "PUSH2",
      "value": "0x3F83"
    },
    "16255": {
      "op": "JUMPI"
    },
    "16256": {
      "op": "DUP4"
    },
    "16257": {
      "op": "DUP5"
    },
    "16258": {
      "op": "REVERT"
    },
    "16259": {
      "op": "JUMPDEST"
    },
    "16260": {
      "op": "DUP9"
    },
    "16261": {
      "op": "CALLDATALOAD"
    },
    "16262": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "16271": {
      "op": "DUP1"
    },
    "16272": {
      "op": "DUP3"
    },
    "16273": {
      "op": "GT"
    },
    "16274": {
      "op": "ISZERO"
    },
    "16275": {
      "op": "PUSH2",
      "value": "0x3F9A"
    },
    "16278": {
      "op": "JUMPI"
    },
    "16279": {
      "op": "DUP6"
    },
    "16280": {
      "op": "DUP7"
    },
    "16281": {
      "op": "REVERT"
    },
    "16282": {
      "op": "JUMPDEST"
    },
    "16283": {
      "op": "PUSH2",
      "value": "0x3FA6"
    },
    "16286": {
      "op": "DUP13"
    },
    "16287": {
      "op": "DUP4"
    },
    "16288": {
      "op": "DUP14"
    },
    "16289": {
      "op": "ADD"
    },
    "16290": {
      "op": "PUSH2",
      "value": "0x3EC7"
    },
    "16293": {
      "jump": "i",
      "op": "JUMP"
    },
    "16294": {
      "op": "JUMPDEST"
    },
    "16295": {
      "op": "SWAP1"
    },
    "16296": {
      "op": "SWAP11"
    },
    "16297": {
      "op": "POP"
    },
    "16298": {
      "op": "SWAP9"
    },
    "16299": {
      "op": "POP"
    },
    "16300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16302": {
      "op": "DUP12"
    },
    "16303": {
      "op": "ADD"
    },
    "16304": {
      "op": "CALLDATALOAD"
    },
    "16305": {
      "op": "SWAP2"
    },
    "16306": {
      "op": "POP"
    },
    "16307": {
      "op": "DUP1"
    },
    "16308": {
      "op": "DUP3"
    },
    "16309": {
      "op": "GT"
    },
    "16310": {
      "op": "ISZERO"
    },
    "16311": {
      "op": "PUSH2",
      "value": "0x3FBE"
    },
    "16314": {
      "op": "JUMPI"
    },
    "16315": {
      "op": "DUP6"
    },
    "16316": {
      "op": "DUP7"
    },
    "16317": {
      "op": "REVERT"
    },
    "16318": {
      "op": "JUMPDEST"
    },
    "16319": {
      "op": "PUSH2",
      "value": "0x3FCA"
    },
    "16322": {
      "op": "DUP13"
    },
    "16323": {
      "op": "DUP4"
    },
    "16324": {
      "op": "DUP14"
    },
    "16325": {
      "op": "ADD"
    },
    "16326": {
      "op": "PUSH2",
      "value": "0x3EC7"
    },
    "16329": {
      "jump": "i",
      "op": "JUMP"
    },
    "16330": {
      "op": "JUMPDEST"
    },
    "16331": {
      "op": "SWAP1"
    },
    "16332": {
      "op": "SWAP9"
    },
    "16333": {
      "op": "POP"
    },
    "16334": {
      "op": "SWAP7"
    },
    "16335": {
      "op": "POP"
    },
    "16336": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16338": {
      "op": "DUP12"
    },
    "16339": {
      "op": "ADD"
    },
    "16340": {
      "op": "CALLDATALOAD"
    },
    "16341": {
      "op": "SWAP2"
    },
    "16342": {
      "op": "POP"
    },
    "16343": {
      "op": "DUP1"
    },
    "16344": {
      "op": "DUP3"
    },
    "16345": {
      "op": "GT"
    },
    "16346": {
      "op": "ISZERO"
    },
    "16347": {
      "op": "PUSH2",
      "value": "0x3FE2"
    },
    "16350": {
      "op": "JUMPI"
    },
    "16351": {
      "op": "DUP6"
    },
    "16352": {
      "op": "DUP7"
    },
    "16353": {
      "op": "REVERT"
    },
    "16354": {
      "op": "JUMPDEST"
    },
    "16355": {
      "op": "PUSH2",
      "value": "0x3FEE"
    },
    "16358": {
      "op": "DUP13"
    },
    "16359": {
      "op": "DUP4"
    },
    "16360": {
      "op": "DUP14"
    },
    "16361": {
      "op": "ADD"
    },
    "16362": {
      "op": "PUSH2",
      "value": "0x3EC7"
    },
    "16365": {
      "jump": "i",
      "op": "JUMP"
    },
    "16366": {
      "op": "JUMPDEST"
    },
    "16367": {
      "op": "SWAP1"
    },
    "16368": {
      "op": "SWAP7"
    },
    "16369": {
      "op": "POP"
    },
    "16370": {
      "op": "SWAP5"
    },
    "16371": {
      "op": "POP"
    },
    "16372": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16374": {
      "op": "DUP12"
    },
    "16375": {
      "op": "ADD"
    },
    "16376": {
      "op": "CALLDATALOAD"
    },
    "16377": {
      "op": "SWAP2"
    },
    "16378": {
      "op": "POP"
    },
    "16379": {
      "op": "DUP1"
    },
    "16380": {
      "op": "DUP3"
    },
    "16381": {
      "op": "GT"
    },
    "16382": {
      "op": "ISZERO"
    },
    "16383": {
      "op": "PUSH2",
      "value": "0x4006"
    },
    "16386": {
      "op": "JUMPI"
    },
    "16387": {
      "op": "DUP4"
    },
    "16388": {
      "op": "DUP5"
    },
    "16389": {
      "op": "REVERT"
    },
    "16390": {
      "op": "JUMPDEST"
    },
    "16391": {
      "op": "POP"
    },
    "16392": {
      "op": "PUSH2",
      "value": "0x4013"
    },
    "16395": {
      "op": "DUP12"
    },
    "16396": {
      "op": "DUP3"
    },
    "16397": {
      "op": "DUP13"
    },
    "16398": {
      "op": "ADD"
    },
    "16399": {
      "op": "PUSH2",
      "value": "0x3EC7"
    },
    "16402": {
      "jump": "i",
      "op": "JUMP"
    },
    "16403": {
      "op": "JUMPDEST"
    },
    "16404": {
      "op": "SWAP10"
    },
    "16405": {
      "op": "SWAP13"
    },
    "16406": {
      "op": "SWAP9"
    },
    "16407": {
      "op": "SWAP12"
    },
    "16408": {
      "op": "POP"
    },
    "16409": {
      "op": "SWAP7"
    },
    "16410": {
      "op": "SWAP10"
    },
    "16411": {
      "op": "POP"
    },
    "16412": {
      "op": "SWAP5"
    },
    "16413": {
      "op": "SWAP8"
    },
    "16414": {
      "op": "SWAP4"
    },
    "16415": {
      "op": "SWAP7"
    },
    "16416": {
      "op": "SWAP3"
    },
    "16417": {
      "op": "SWAP6"
    },
    "16418": {
      "op": "SWAP5"
    },
    "16419": {
      "op": "POP"
    },
    "16420": {
      "op": "POP"
    },
    "16421": {
      "op": "POP"
    },
    "16422": {
      "jump": "o",
      "op": "JUMP"
    },
    "16423": {
      "op": "JUMPDEST"
    },
    "16424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16426": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16428": {
      "op": "DUP3"
    },
    "16429": {
      "op": "DUP5"
    },
    "16430": {
      "op": "SUB"
    },
    "16431": {
      "op": "SLT"
    },
    "16432": {
      "op": "ISZERO"
    },
    "16433": {
      "op": "PUSH2",
      "value": "0x4038"
    },
    "16436": {
      "op": "JUMPI"
    },
    "16437": {
      "op": "DUP1"
    },
    "16438": {
      "op": "DUP2"
    },
    "16439": {
      "op": "REVERT"
    },
    "16440": {
      "op": "JUMPDEST"
    },
    "16441": {
      "op": "DUP2"
    },
    "16442": {
      "op": "MLOAD"
    },
    "16443": {
      "op": "DUP1"
    },
    "16444": {
      "op": "ISZERO"
    },
    "16445": {
      "op": "ISZERO"
    },
    "16446": {
      "op": "DUP2"
    },
    "16447": {
      "op": "EQ"
    },
    "16448": {
      "op": "PUSH2",
      "value": "0x1E10"
    },
    "16451": {
      "op": "JUMPI"
    },
    "16452": {
      "op": "DUP2"
    },
    "16453": {
      "op": "DUP3"
    },
    "16454": {
      "op": "REVERT"
    },
    "16455": {
      "op": "JUMPDEST"
    },
    "16456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16458": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16460": {
      "op": "DUP3"
    },
    "16461": {
      "op": "DUP5"
    },
    "16462": {
      "op": "SUB"
    },
    "16463": {
      "op": "SLT"
    },
    "16464": {
      "op": "ISZERO"
    },
    "16465": {
      "op": "PUSH2",
      "value": "0x4058"
    },
    "16468": {
      "op": "JUMPI"
    },
    "16469": {
      "op": "DUP1"
    },
    "16470": {
      "op": "DUP2"
    },
    "16471": {
      "op": "REVERT"
    },
    "16472": {
      "op": "JUMPDEST"
    },
    "16473": {
      "op": "POP"
    },
    "16474": {
      "op": "CALLDATALOAD"
    },
    "16475": {
      "op": "SWAP2"
    },
    "16476": {
      "op": "SWAP1"
    },
    "16477": {
      "op": "POP"
    },
    "16478": {
      "jump": "o",
      "op": "JUMP"
    },
    "16479": {
      "op": "JUMPDEST"
    },
    "16480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16482": {
      "op": "DUP1"
    },
    "16483": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16485": {
      "op": "DUP4"
    },
    "16486": {
      "op": "DUP6"
    },
    "16487": {
      "op": "SUB"
    },
    "16488": {
      "op": "SLT"
    },
    "16489": {
      "op": "ISZERO"
    },
    "16490": {
      "op": "PUSH2",
      "value": "0x4071"
    },
    "16493": {
      "op": "JUMPI"
    },
    "16494": {
      "op": "DUP2"
    },
    "16495": {
      "op": "DUP3"
    },
    "16496": {
      "op": "REVERT"
    },
    "16497": {
      "op": "JUMPDEST"
    },
    "16498": {
      "op": "DUP3"
    },
    "16499": {
      "op": "CALLDATALOAD"
    },
    "16500": {
      "op": "SWAP2"
    },
    "16501": {
      "op": "POP"
    },
    "16502": {
      "op": "PUSH2",
      "value": "0x4081"
    },
    "16505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16507": {
      "op": "DUP5"
    },
    "16508": {
      "op": "ADD"
    },
    "16509": {
      "op": "PUSH2",
      "value": "0x3EAB"
    },
    "16512": {
      "jump": "i",
      "op": "JUMP"
    },
    "16513": {
      "op": "JUMPDEST"
    },
    "16514": {
      "op": "SWAP1"
    },
    "16515": {
      "op": "POP"
    },
    "16516": {
      "op": "SWAP3"
    },
    "16517": {
      "op": "POP"
    },
    "16518": {
      "op": "SWAP3"
    },
    "16519": {
      "op": "SWAP1"
    },
    "16520": {
      "op": "POP"
    },
    "16521": {
      "jump": "o",
      "op": "JUMP"
    },
    "16522": {
      "op": "JUMPDEST"
    },
    "16523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16525": {
      "op": "DUP1"
    },
    "16526": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16528": {
      "op": "DUP4"
    },
    "16529": {
      "op": "DUP6"
    },
    "16530": {
      "op": "SUB"
    },
    "16531": {
      "op": "SLT"
    },
    "16532": {
      "op": "ISZERO"
    },
    "16533": {
      "op": "PUSH2",
      "value": "0x409C"
    },
    "16536": {
      "op": "JUMPI"
    },
    "16537": {
      "op": "DUP2"
    },
    "16538": {
      "op": "DUP3"
    },
    "16539": {
      "op": "REVERT"
    },
    "16540": {
      "op": "JUMPDEST"
    },
    "16541": {
      "op": "POP"
    },
    "16542": {
      "op": "POP"
    },
    "16543": {
      "op": "DUP1"
    },
    "16544": {
      "op": "CALLDATALOAD"
    },
    "16545": {
      "op": "SWAP3"
    },
    "16546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16548": {
      "op": "SWAP1"
    },
    "16549": {
      "op": "SWAP2"
    },
    "16550": {
      "op": "ADD"
    },
    "16551": {
      "op": "CALLDATALOAD"
    },
    "16552": {
      "op": "SWAP2"
    },
    "16553": {
      "op": "POP"
    },
    "16554": {
      "jump": "o",
      "op": "JUMP"
    },
    "16555": {
      "op": "JUMPDEST"
    },
    "16556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16558": {
      "op": "DUP1"
    },
    "16559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16561": {
      "op": "DUP1"
    },
    "16562": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16564": {
      "op": "DUP6"
    },
    "16565": {
      "op": "DUP8"
    },
    "16566": {
      "op": "SUB"
    },
    "16567": {
      "op": "SLT"
    },
    "16568": {
      "op": "ISZERO"
    },
    "16569": {
      "op": "PUSH2",
      "value": "0x40C0"
    },
    "16572": {
      "op": "JUMPI"
    },
    "16573": {
      "op": "DUP4"
    },
    "16574": {
      "op": "DUP5"
    },
    "16575": {
      "op": "REVERT"
    },
    "16576": {
      "op": "JUMPDEST"
    },
    "16577": {
      "op": "POP"
    },
    "16578": {
      "op": "POP"
    },
    "16579": {
      "op": "DUP3"
    },
    "16580": {
      "op": "CALLDATALOAD"
    },
    "16581": {
      "op": "SWAP5"
    },
    "16582": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16584": {
      "op": "DUP5"
    },
    "16585": {
      "op": "ADD"
    },
    "16586": {
      "op": "CALLDATALOAD"
    },
    "16587": {
      "op": "SWAP5"
    },
    "16588": {
      "op": "POP"
    },
    "16589": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16591": {
      "op": "DUP5"
    },
    "16592": {
      "op": "ADD"
    },
    "16593": {
      "op": "CALLDATALOAD"
    },
    "16594": {
      "op": "SWAP4"
    },
    "16595": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16597": {
      "op": "ADD"
    },
    "16598": {
      "op": "CALLDATALOAD"
    },
    "16599": {
      "op": "SWAP3"
    },
    "16600": {
      "op": "POP"
    },
    "16601": {
      "op": "SWAP1"
    },
    "16602": {
      "op": "POP"
    },
    "16603": {
      "jump": "o",
      "op": "JUMP"
    },
    "16604": {
      "op": "JUMPDEST"
    },
    "16605": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16607": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16609": {
      "op": "DUP3"
    },
    "16610": {
      "op": "DUP5"
    },
    "16611": {
      "op": "SUB"
    },
    "16612": {
      "op": "SLT"
    },
    "16613": {
      "op": "ISZERO"
    },
    "16614": {
      "op": "PUSH2",
      "value": "0x40ED"
    },
    "16617": {
      "op": "JUMPI"
    },
    "16618": {
      "op": "DUP1"
    },
    "16619": {
      "op": "DUP2"
    },
    "16620": {
      "op": "REVERT"
    },
    "16621": {
      "op": "JUMPDEST"
    },
    "16622": {
      "op": "DUP2"
    },
    "16623": {
      "op": "CALLDATALOAD"
    },
    "16624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16628": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16630": {
      "op": "SHL"
    },
    "16631": {
      "op": "SUB"
    },
    "16632": {
      "op": "NOT"
    },
    "16633": {
      "op": "DUP2"
    },
    "16634": {
      "op": "AND"
    },
    "16635": {
      "op": "DUP2"
    },
    "16636": {
      "op": "EQ"
    },
    "16637": {
      "op": "PUSH2",
      "value": "0x1E10"
    },
    "16640": {
      "op": "JUMPI"
    },
    "16641": {
      "op": "DUP2"
    },
    "16642": {
      "op": "DUP3"
    },
    "16643": {
      "op": "REVERT"
    },
    "16644": {
      "op": "JUMPDEST"
    },
    "16645": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16647": {
      "op": "DUP1"
    },
    "16648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16650": {
      "op": "DUP4"
    },
    "16651": {
      "op": "DUP6"
    },
    "16652": {
      "op": "SUB"
    },
    "16653": {
      "op": "SLT"
    },
    "16654": {
      "op": "ISZERO"
    },
    "16655": {
      "op": "PUSH2",
      "value": "0x4116"
    },
    "16658": {
      "op": "JUMPI"
    },
    "16659": {
      "op": "DUP2"
    },
    "16660": {
      "op": "DUP3"
    },
    "16661": {
      "op": "REVERT"
    },
    "16662": {
      "op": "JUMPDEST"
    },
    "16663": {
      "op": "DUP3"
    },
    "16664": {
      "op": "CALLDATALOAD"
    },
    "16665": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "16674": {
      "op": "DUP1"
    },
    "16675": {
      "op": "DUP3"
    },
    "16676": {
      "op": "GT"
    },
    "16677": {
      "op": "ISZERO"
    },
    "16678": {
      "op": "PUSH2",
      "value": "0x412D"
    },
    "16681": {
      "op": "JUMPI"
    },
    "16682": {
      "op": "DUP4"
    },
    "16683": {
      "op": "DUP5"
    },
    "16684": {
      "op": "REVERT"
    },
    "16685": {
      "op": "JUMPDEST"
    },
    "16686": {
      "op": "DUP2"
    },
    "16687": {
      "op": "DUP6"
    },
    "16688": {
      "op": "ADD"
    },
    "16689": {
      "op": "SWAP2"
    },
    "16690": {
      "op": "POP"
    },
    "16691": {
      "op": "DUP6"
    },
    "16692": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16694": {
      "op": "DUP4"
    },
    "16695": {
      "op": "ADD"
    },
    "16696": {
      "op": "SLT"
    },
    "16697": {
      "op": "PUSH2",
      "value": "0x4140"
    },
    "16700": {
      "op": "JUMPI"
    },
    "16701": {
      "op": "DUP4"
    },
    "16702": {
      "op": "DUP5"
    },
    "16703": {
      "op": "REVERT"
    },
    "16704": {
      "op": "JUMPDEST"
    },
    "16705": {
      "op": "DUP2"
    },
    "16706": {
      "op": "CALLDATALOAD"
    },
    "16707": {
      "op": "DUP2"
    },
    "16708": {
      "op": "DUP2"
    },
    "16709": {
      "op": "GT"
    },
    "16710": {
      "op": "ISZERO"
    },
    "16711": {
      "op": "PUSH2",
      "value": "0x414E"
    },
    "16714": {
      "op": "JUMPI"
    },
    "16715": {
      "op": "DUP5"
    },
    "16716": {
      "op": "DUP6"
    },
    "16717": {
      "op": "REVERT"
    },
    "16718": {
      "op": "JUMPDEST"
    },
    "16719": {
      "op": "DUP7"
    },
    "16720": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16722": {
      "op": "DUP3"
    },
    "16723": {
      "op": "DUP6"
    },
    "16724": {
      "op": "ADD"
    },
    "16725": {
      "op": "ADD"
    },
    "16726": {
      "op": "GT"
    },
    "16727": {
      "op": "ISZERO"
    },
    "16728": {
      "op": "PUSH2",
      "value": "0x415F"
    },
    "16731": {
      "op": "JUMPI"
    },
    "16732": {
      "op": "DUP5"
    },
    "16733": {
      "op": "DUP6"
    },
    "16734": {
      "op": "REVERT"
    },
    "16735": {
      "op": "JUMPDEST"
    },
    "16736": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16738": {
      "op": "SWAP3"
    },
    "16739": {
      "op": "SWAP1"
    },
    "16740": {
      "op": "SWAP3"
    },
    "16741": {
      "op": "ADD"
    },
    "16742": {
      "op": "SWAP7"
    },
    "16743": {
      "op": "SWAP2"
    },
    "16744": {
      "op": "SWAP6"
    },
    "16745": {
      "op": "POP"
    },
    "16746": {
      "op": "SWAP1"
    },
    "16747": {
      "op": "SWAP4"
    },
    "16748": {
      "op": "POP"
    },
    "16749": {
      "op": "POP"
    },
    "16750": {
      "op": "POP"
    },
    "16751": {
      "op": "POP"
    },
    "16752": {
      "jump": "o",
      "op": "JUMP"
    },
    "16753": {
      "op": "JUMPDEST"
    },
    "16754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16756": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16758": {
      "op": "DUP3"
    },
    "16759": {
      "op": "DUP5"
    },
    "16760": {
      "op": "SUB"
    },
    "16761": {
      "op": "SLT"
    },
    "16762": {
      "op": "ISZERO"
    },
    "16763": {
      "op": "PUSH2",
      "value": "0x4182"
    },
    "16766": {
      "op": "JUMPI"
    },
    "16767": {
      "op": "DUP1"
    },
    "16768": {
      "op": "DUP2"
    },
    "16769": {
      "op": "REVERT"
    },
    "16770": {
      "op": "JUMPDEST"
    },
    "16771": {
      "op": "POP"
    },
    "16772": {
      "op": "MLOAD"
    },
    "16773": {
      "op": "SWAP2"
    },
    "16774": {
      "op": "SWAP1"
    },
    "16775": {
      "op": "POP"
    },
    "16776": {
      "jump": "o",
      "op": "JUMP"
    },
    "16777": {
      "op": "JUMPDEST"
    },
    "16778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16780": {
      "op": "DUP1"
    },
    "16781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16783": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16785": {
      "op": "DUP5"
    },
    "16786": {
      "op": "DUP7"
    },
    "16787": {
      "op": "SUB"
    },
    "16788": {
      "op": "SLT"
    },
    "16789": {
      "op": "ISZERO"
    },
    "16790": {
      "op": "PUSH2",
      "value": "0x419D"
    },
    "16793": {
      "op": "JUMPI"
    },
    "16794": {
      "op": "DUP3"
    },
    "16795": {
      "op": "DUP4"
    },
    "16796": {
      "op": "REVERT"
    },
    "16797": {
      "op": "JUMPDEST"
    },
    "16798": {
      "op": "DUP4"
    },
    "16799": {
      "op": "CALLDATALOAD"
    },
    "16800": {
      "op": "SWAP3"
    },
    "16801": {
      "op": "POP"
    },
    "16802": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16804": {
      "op": "DUP5"
    },
    "16805": {
      "op": "ADD"
    },
    "16806": {
      "op": "CALLDATALOAD"
    },
    "16807": {
      "op": "SWAP2"
    },
    "16808": {
      "op": "POP"
    },
    "16809": {
      "op": "PUSH2",
      "value": "0x41B4"
    },
    "16812": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16814": {
      "op": "DUP6"
    },
    "16815": {
      "op": "ADD"
    },
    "16816": {
      "op": "PUSH2",
      "value": "0x3EAB"
    },
    "16819": {
      "jump": "i",
      "op": "JUMP"
    },
    "16820": {
      "op": "JUMPDEST"
    },
    "16821": {
      "op": "SWAP1"
    },
    "16822": {
      "op": "POP"
    },
    "16823": {
      "op": "SWAP3"
    },
    "16824": {
      "op": "POP"
    },
    "16825": {
      "op": "SWAP3"
    },
    "16826": {
      "op": "POP"
    },
    "16827": {
      "op": "SWAP3"
    },
    "16828": {
      "jump": "o",
      "op": "JUMP"
    },
    "16829": {
      "op": "JUMPDEST"
    },
    "16830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16832": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16834": {
      "op": "DUP3"
    },
    "16835": {
      "op": "DUP5"
    },
    "16836": {
      "op": "SUB"
    },
    "16837": {
      "op": "SLT"
    },
    "16838": {
      "op": "ISZERO"
    },
    "16839": {
      "op": "PUSH2",
      "value": "0x41CE"
    },
    "16842": {
      "op": "JUMPI"
    },
    "16843": {
      "op": "DUP1"
    },
    "16844": {
      "op": "DUP2"
    },
    "16845": {
      "op": "REVERT"
    },
    "16846": {
      "op": "JUMPDEST"
    },
    "16847": {
      "op": "PUSH2",
      "value": "0x1E10"
    },
    "16850": {
      "op": "DUP3"
    },
    "16851": {
      "op": "PUSH2",
      "value": "0x3F11"
    },
    "16854": {
      "jump": "i",
      "op": "JUMP"
    },
    "16855": {
      "op": "JUMPDEST"
    },
    "16856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16858": {
      "op": "DUP1"
    },
    "16859": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16861": {
      "op": "DUP4"
    },
    "16862": {
      "op": "DUP6"
    },
    "16863": {
      "op": "SUB"
    },
    "16864": {
      "op": "SLT"
    },
    "16865": {
      "op": "ISZERO"
    },
    "16866": {
      "op": "PUSH2",
      "value": "0x41E9"
    },
    "16869": {
      "op": "JUMPI"
    },
    "16870": {
      "op": "DUP2"
    },
    "16871": {
      "op": "DUP3"
    },
    "16872": {
      "op": "REVERT"
    },
    "16873": {
      "op": "JUMPDEST"
    },
    "16874": {
      "op": "PUSH2",
      "value": "0x41F2"
    },
    "16877": {
      "op": "DUP4"
    },
    "16878": {
      "op": "PUSH2",
      "value": "0x3F11"
    },
    "16881": {
      "jump": "i",
      "op": "JUMP"
    },
    "16882": {
      "op": "JUMPDEST"
    },
    "16883": {
      "op": "SWAP2"
    },
    "16884": {
      "op": "POP"
    },
    "16885": {
      "op": "PUSH2",
      "value": "0x4081"
    },
    "16888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16890": {
      "op": "DUP5"
    },
    "16891": {
      "op": "ADD"
    },
    "16892": {
      "op": "PUSH2",
      "value": "0x3EAB"
    },
    "16895": {
      "jump": "i",
      "op": "JUMP"
    },
    "16896": {
      "op": "JUMPDEST"
    },
    "16897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16899": {
      "op": "DUP1"
    },
    "16900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16902": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "16904": {
      "op": "DUP5"
    },
    "16905": {
      "op": "DUP7"
    },
    "16906": {
      "op": "SUB"
    },
    "16907": {
      "op": "SLT"
    },
    "16908": {
      "op": "ISZERO"
    },
    "16909": {
      "op": "PUSH2",
      "value": "0x4214"
    },
    "16912": {
      "op": "JUMPI"
    },
    "16913": {
      "op": "DUP1"
    },
    "16914": {
      "op": "DUP2"
    },
    "16915": {
      "op": "REVERT"
    },
    "16916": {
      "op": "JUMPDEST"
    },
    "16917": {
      "op": "PUSH2",
      "value": "0x421D"
    },
    "16920": {
      "op": "DUP5"
    },
    "16921": {
      "op": "PUSH2",
      "value": "0x3F11"
    },
    "16924": {
      "jump": "i",
      "op": "JUMP"
    },
    "16925": {
      "op": "JUMPDEST"
    },
    "16926": {
      "op": "SWAP3"
    },
    "16927": {
      "op": "POP"
    },
    "16928": {
      "op": "PUSH2",
      "value": "0x422B"
    },
    "16931": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16933": {
      "op": "DUP6"
    },
    "16934": {
      "op": "ADD"
    },
    "16935": {
      "op": "PUSH2",
      "value": "0x3EAB"
    },
    "16938": {
      "jump": "i",
      "op": "JUMP"
    },
    "16939": {
      "op": "JUMPDEST"
    },
    "16940": {
      "op": "SWAP2"
    },
    "16941": {
      "op": "POP"
    },
    "16942": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "16944": {
      "op": "DUP5"
    },
    "16945": {
      "op": "ADD"
    },
    "16946": {
      "op": "CALLDATALOAD"
    },
    "16947": {
      "op": "SWAP1"
    },
    "16948": {
      "op": "POP"
    },
    "16949": {
      "op": "SWAP3"
    },
    "16950": {
      "op": "POP"
    },
    "16951": {
      "op": "SWAP3"
    },
    "16952": {
      "op": "POP"
    },
    "16953": {
      "op": "SWAP3"
    },
    "16954": {
      "jump": "o",
      "op": "JUMP"
    },
    "16955": {
      "op": "JUMPDEST"
    },
    "16956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16958": {
      "op": "DUP1"
    },
    "16959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16961": {
      "op": "DUP1"
    },
    "16962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16964": {
      "op": "DUP1"
    },
    "16965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "16967": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "16969": {
      "op": "DUP9"
    },
    "16970": {
      "op": "DUP11"
    },
    "16971": {
      "op": "SUB"
    },
    "16972": {
      "op": "SLT"
    },
    "16973": {
      "op": "ISZERO"
    },
    "16974": {
      "op": "PUSH2",
      "value": "0x4255"
    },
    "16977": {
      "op": "JUMPI"
    },
    "16978": {
      "op": "DUP1"
    },
    "16979": {
      "op": "DUP2"
    },
    "16980": {
      "op": "REVERT"
    },
    "16981": {
      "op": "JUMPDEST"
    },
    "16982": {
      "op": "PUSH2",
      "value": "0x425E"
    },
    "16985": {
      "op": "DUP9"
    },
    "16986": {
      "op": "PUSH2",
      "value": "0x3F11"
    },
    "16989": {
      "jump": "i",
      "op": "JUMP"
    },
    "16990": {
      "op": "JUMPDEST"
    },
    "16991": {
      "op": "SWAP7"
    },
    "16992": {
      "op": "POP"
    },
    "16993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "16995": {
      "op": "DUP9"
    },
    "16996": {
      "op": "ADD"
    },
    "16997": {
      "op": "CALLDATALOAD"
    },
    "16998": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "17007": {
      "op": "DUP1"
    },
    "17008": {
      "op": "DUP3"
    },
    "17009": {
      "op": "GT"
    },
    "17010": {
      "op": "ISZERO"
    },
    "17011": {
      "op": "PUSH2",
      "value": "0x427A"
    },
    "17014": {
      "op": "JUMPI"
    },
    "17015": {
      "op": "DUP3"
    },
    "17016": {
      "op": "DUP4"
    },
    "17017": {
      "op": "REVERT"
    },
    "17018": {
      "op": "JUMPDEST"
    },
    "17019": {
      "op": "PUSH2",
      "value": "0x4286"
    },
    "17022": {
      "op": "DUP12"
    },
    "17023": {
      "op": "DUP4"
    },
    "17024": {
      "op": "DUP13"
    },
    "17025": {
      "op": "ADD"
    },
    "17026": {
      "op": "PUSH2",
      "value": "0x3EC7"
    },
    "17029": {
      "jump": "i",
      "op": "JUMP"
    },
    "17030": {
      "op": "JUMPDEST"
    },
    "17031": {
      "op": "SWAP1"
    },
    "17032": {
      "op": "SWAP9"
    },
    "17033": {
      "op": "POP"
    },
    "17034": {
      "op": "SWAP7"
    },
    "17035": {
      "op": "POP"
    },
    "17036": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17038": {
      "op": "DUP11"
    },
    "17039": {
      "op": "ADD"
    },
    "17040": {
      "op": "CALLDATALOAD"
    },
    "17041": {
      "op": "SWAP2"
    },
    "17042": {
      "op": "POP"
    },
    "17043": {
      "op": "DUP1"
    },
    "17044": {
      "op": "DUP3"
    },
    "17045": {
      "op": "GT"
    },
    "17046": {
      "op": "ISZERO"
    },
    "17047": {
      "op": "PUSH2",
      "value": "0x429E"
    },
    "17050": {
      "op": "JUMPI"
    },
    "17051": {
      "op": "DUP3"
    },
    "17052": {
      "op": "DUP4"
    },
    "17053": {
      "op": "REVERT"
    },
    "17054": {
      "op": "JUMPDEST"
    },
    "17055": {
      "op": "PUSH2",
      "value": "0x42AA"
    },
    "17058": {
      "op": "DUP12"
    },
    "17059": {
      "op": "DUP4"
    },
    "17060": {
      "op": "DUP13"
    },
    "17061": {
      "op": "ADD"
    },
    "17062": {
      "op": "PUSH2",
      "value": "0x3EC7"
    },
    "17065": {
      "jump": "i",
      "op": "JUMP"
    },
    "17066": {
      "op": "JUMPDEST"
    },
    "17067": {
      "op": "SWAP1"
    },
    "17068": {
      "op": "SWAP7"
    },
    "17069": {
      "op": "POP"
    },
    "17070": {
      "op": "SWAP5"
    },
    "17071": {
      "op": "POP"
    },
    "17072": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17074": {
      "op": "DUP11"
    },
    "17075": {
      "op": "ADD"
    },
    "17076": {
      "op": "CALLDATALOAD"
    },
    "17077": {
      "op": "SWAP2"
    },
    "17078": {
      "op": "POP"
    },
    "17079": {
      "op": "DUP1"
    },
    "17080": {
      "op": "DUP3"
    },
    "17081": {
      "op": "GT"
    },
    "17082": {
      "op": "ISZERO"
    },
    "17083": {
      "op": "PUSH2",
      "value": "0x42C2"
    },
    "17086": {
      "op": "JUMPI"
    },
    "17087": {
      "op": "DUP3"
    },
    "17088": {
      "op": "DUP4"
    },
    "17089": {
      "op": "REVERT"
    },
    "17090": {
      "op": "JUMPDEST"
    },
    "17091": {
      "op": "POP"
    },
    "17092": {
      "op": "PUSH2",
      "value": "0x42CF"
    },
    "17095": {
      "op": "DUP11"
    },
    "17096": {
      "op": "DUP3"
    },
    "17097": {
      "op": "DUP12"
    },
    "17098": {
      "op": "ADD"
    },
    "17099": {
      "op": "PUSH2",
      "value": "0x3EC7"
    },
    "17102": {
      "jump": "i",
      "op": "JUMP"
    },
    "17103": {
      "op": "JUMPDEST"
    },
    "17104": {
      "op": "SWAP9"
    },
    "17105": {
      "op": "SWAP12"
    },
    "17106": {
      "op": "SWAP8"
    },
    "17107": {
      "op": "SWAP11"
    },
    "17108": {
      "op": "POP"
    },
    "17109": {
      "op": "SWAP6"
    },
    "17110": {
      "op": "SWAP9"
    },
    "17111": {
      "op": "POP"
    },
    "17112": {
      "op": "SWAP4"
    },
    "17113": {
      "op": "SWAP7"
    },
    "17114": {
      "op": "SWAP3"
    },
    "17115": {
      "op": "SWAP6"
    },
    "17116": {
      "op": "SWAP3"
    },
    "17117": {
      "op": "SWAP4"
    },
    "17118": {
      "op": "POP"
    },
    "17119": {
      "op": "POP"
    },
    "17120": {
      "op": "POP"
    },
    "17121": {
      "jump": "o",
      "op": "JUMP"
    },
    "17122": {
      "op": "JUMPDEST"
    },
    "17123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17125": {
      "op": "DUP1"
    },
    "17126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17128": {
      "op": "DUP1"
    },
    "17129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17131": {
      "op": "DUP1"
    },
    "17132": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "17134": {
      "op": "DUP8"
    },
    "17135": {
      "op": "DUP10"
    },
    "17136": {
      "op": "SUB"
    },
    "17137": {
      "op": "SLT"
    },
    "17138": {
      "op": "ISZERO"
    },
    "17139": {
      "op": "PUSH2",
      "value": "0x42FA"
    },
    "17142": {
      "op": "JUMPI"
    },
    "17143": {
      "op": "DUP4"
    },
    "17144": {
      "op": "DUP5"
    },
    "17145": {
      "op": "REVERT"
    },
    "17146": {
      "op": "JUMPDEST"
    },
    "17147": {
      "op": "PUSH2",
      "value": "0x4303"
    },
    "17150": {
      "op": "DUP8"
    },
    "17151": {
      "op": "PUSH2",
      "value": "0x3F11"
    },
    "17154": {
      "jump": "i",
      "op": "JUMP"
    },
    "17155": {
      "op": "JUMPDEST"
    },
    "17156": {
      "op": "SWAP6"
    },
    "17157": {
      "op": "POP"
    },
    "17158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17160": {
      "op": "DUP8"
    },
    "17161": {
      "op": "ADD"
    },
    "17162": {
      "op": "CALLDATALOAD"
    },
    "17163": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "17172": {
      "op": "DUP1"
    },
    "17173": {
      "op": "DUP3"
    },
    "17174": {
      "op": "GT"
    },
    "17175": {
      "op": "ISZERO"
    },
    "17176": {
      "op": "PUSH2",
      "value": "0x431F"
    },
    "17179": {
      "op": "JUMPI"
    },
    "17180": {
      "op": "DUP6"
    },
    "17181": {
      "op": "DUP7"
    },
    "17182": {
      "op": "REVERT"
    },
    "17183": {
      "op": "JUMPDEST"
    },
    "17184": {
      "op": "PUSH2",
      "value": "0x432B"
    },
    "17187": {
      "op": "DUP11"
    },
    "17188": {
      "op": "DUP4"
    },
    "17189": {
      "op": "DUP12"
    },
    "17190": {
      "op": "ADD"
    },
    "17191": {
      "op": "PUSH2",
      "value": "0x3EC7"
    },
    "17194": {
      "jump": "i",
      "op": "JUMP"
    },
    "17195": {
      "op": "JUMPDEST"
    },
    "17196": {
      "op": "SWAP1"
    },
    "17197": {
      "op": "SWAP8"
    },
    "17198": {
      "op": "POP"
    },
    "17199": {
      "op": "SWAP6"
    },
    "17200": {
      "op": "POP"
    },
    "17201": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17203": {
      "op": "DUP10"
    },
    "17204": {
      "op": "ADD"
    },
    "17205": {
      "op": "CALLDATALOAD"
    },
    "17206": {
      "op": "SWAP5"
    },
    "17207": {
      "op": "POP"
    },
    "17208": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17210": {
      "op": "DUP10"
    },
    "17211": {
      "op": "ADD"
    },
    "17212": {
      "op": "CALLDATALOAD"
    },
    "17213": {
      "op": "SWAP2"
    },
    "17214": {
      "op": "POP"
    },
    "17215": {
      "op": "DUP1"
    },
    "17216": {
      "op": "DUP3"
    },
    "17217": {
      "op": "GT"
    },
    "17218": {
      "op": "ISZERO"
    },
    "17219": {
      "op": "PUSH2",
      "value": "0x434A"
    },
    "17222": {
      "op": "JUMPI"
    },
    "17223": {
      "op": "DUP4"
    },
    "17224": {
      "op": "DUP5"
    },
    "17225": {
      "op": "REVERT"
    },
    "17226": {
      "op": "JUMPDEST"
    },
    "17227": {
      "op": "POP"
    },
    "17228": {
      "op": "PUSH2",
      "value": "0x4357"
    },
    "17231": {
      "op": "DUP10"
    },
    "17232": {
      "op": "DUP3"
    },
    "17233": {
      "op": "DUP11"
    },
    "17234": {
      "op": "ADD"
    },
    "17235": {
      "op": "PUSH2",
      "value": "0x3EC7"
    },
    "17238": {
      "jump": "i",
      "op": "JUMP"
    },
    "17239": {
      "op": "JUMPDEST"
    },
    "17240": {
      "op": "SWAP8"
    },
    "17241": {
      "op": "SWAP11"
    },
    "17242": {
      "op": "SWAP7"
    },
    "17243": {
      "op": "SWAP10"
    },
    "17244": {
      "op": "POP"
    },
    "17245": {
      "op": "SWAP5"
    },
    "17246": {
      "op": "SWAP8"
    },
    "17247": {
      "op": "POP"
    },
    "17248": {
      "op": "SWAP3"
    },
    "17249": {
      "op": "SWAP6"
    },
    "17250": {
      "op": "SWAP4"
    },
    "17251": {
      "op": "SWAP5"
    },
    "17252": {
      "op": "SWAP3"
    },
    "17253": {
      "op": "POP"
    },
    "17254": {
      "op": "POP"
    },
    "17255": {
      "op": "POP"
    },
    "17256": {
      "jump": "o",
      "op": "JUMP"
    },
    "17257": {
      "op": "JUMPDEST"
    },
    "17258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17260": {
      "op": "DUP1"
    },
    "17261": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17263": {
      "op": "DUP4"
    },
    "17264": {
      "op": "DUP6"
    },
    "17265": {
      "op": "SUB"
    },
    "17266": {
      "op": "SLT"
    },
    "17267": {
      "op": "ISZERO"
    },
    "17268": {
      "op": "PUSH2",
      "value": "0x437B"
    },
    "17271": {
      "op": "JUMPI"
    },
    "17272": {
      "op": "DUP2"
    },
    "17273": {
      "op": "DUP3"
    },
    "17274": {
      "op": "REVERT"
    },
    "17275": {
      "op": "JUMPDEST"
    },
    "17276": {
      "op": "PUSH2",
      "value": "0x3F5A"
    },
    "17279": {
      "op": "DUP4"
    },
    "17280": {
      "op": "PUSH2",
      "value": "0x3F11"
    },
    "17283": {
      "jump": "i",
      "op": "JUMP"
    },
    "17284": {
      "op": "JUMPDEST"
    },
    "17285": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17287": {
      "op": "DUP1"
    },
    "17288": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17290": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17292": {
      "op": "DUP5"
    },
    "17293": {
      "op": "DUP7"
    },
    "17294": {
      "op": "SUB"
    },
    "17295": {
      "op": "SLT"
    },
    "17296": {
      "op": "ISZERO"
    },
    "17297": {
      "op": "PUSH2",
      "value": "0x4398"
    },
    "17300": {
      "op": "JUMPI"
    },
    "17301": {
      "op": "DUP1"
    },
    "17302": {
      "op": "DUP2"
    },
    "17303": {
      "op": "REVERT"
    },
    "17304": {
      "op": "JUMPDEST"
    },
    "17305": {
      "op": "PUSH2",
      "value": "0x43A1"
    },
    "17308": {
      "op": "DUP5"
    },
    "17309": {
      "op": "PUSH2",
      "value": "0x3F11"
    },
    "17312": {
      "jump": "i",
      "op": "JUMP"
    },
    "17313": {
      "op": "JUMPDEST"
    },
    "17314": {
      "op": "SWAP6"
    },
    "17315": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17317": {
      "op": "DUP6"
    },
    "17318": {
      "op": "ADD"
    },
    "17319": {
      "op": "CALLDATALOAD"
    },
    "17320": {
      "op": "SWAP6"
    },
    "17321": {
      "op": "POP"
    },
    "17322": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17324": {
      "op": "SWAP1"
    },
    "17325": {
      "op": "SWAP5"
    },
    "17326": {
      "op": "ADD"
    },
    "17327": {
      "op": "CALLDATALOAD"
    },
    "17328": {
      "op": "SWAP4"
    },
    "17329": {
      "op": "SWAP3"
    },
    "17330": {
      "op": "POP"
    },
    "17331": {
      "op": "POP"
    },
    "17332": {
      "op": "POP"
    },
    "17333": {
      "jump": "o",
      "op": "JUMP"
    },
    "17334": {
      "op": "JUMPDEST"
    },
    "17335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17337": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17339": {
      "op": "DUP3"
    },
    "17340": {
      "op": "DUP5"
    },
    "17341": {
      "op": "SUB"
    },
    "17342": {
      "op": "SLT"
    },
    "17343": {
      "op": "ISZERO"
    },
    "17344": {
      "op": "PUSH2",
      "value": "0x43C7"
    },
    "17347": {
      "op": "JUMPI"
    },
    "17348": {
      "op": "DUP1"
    },
    "17349": {
      "op": "DUP2"
    },
    "17350": {
      "op": "REVERT"
    },
    "17351": {
      "op": "JUMPDEST"
    },
    "17352": {
      "op": "DUP2"
    },
    "17353": {
      "op": "CALLDATALOAD"
    },
    "17354": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17356": {
      "op": "DUP2"
    },
    "17357": {
      "op": "AND"
    },
    "17358": {
      "op": "DUP2"
    },
    "17359": {
      "op": "EQ"
    },
    "17360": {
      "op": "PUSH2",
      "value": "0x1E10"
    },
    "17363": {
      "op": "JUMPI"
    },
    "17364": {
      "op": "DUP2"
    },
    "17365": {
      "op": "DUP3"
    },
    "17366": {
      "op": "REVERT"
    },
    "17367": {
      "op": "JUMPDEST"
    },
    "17368": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17370": {
      "op": "DUP1"
    },
    "17371": {
      "op": "DUP3"
    },
    "17372": {
      "op": "MSTORE"
    },
    "17373": {
      "op": "DUP3"
    },
    "17374": {
      "op": "MLOAD"
    },
    "17375": {
      "op": "DUP3"
    },
    "17376": {
      "op": "DUP3"
    },
    "17377": {
      "op": "ADD"
    },
    "17378": {
      "op": "DUP2"
    },
    "17379": {
      "op": "SWAP1"
    },
    "17380": {
      "op": "MSTORE"
    },
    "17381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17383": {
      "op": "SWAP2"
    },
    "17384": {
      "op": "SWAP1"
    },
    "17385": {
      "op": "DUP5"
    },
    "17386": {
      "op": "DUP3"
    },
    "17387": {
      "op": "ADD"
    },
    "17388": {
      "op": "SWAP1"
    },
    "17389": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17391": {
      "op": "DUP6"
    },
    "17392": {
      "op": "ADD"
    },
    "17393": {
      "op": "SWAP1"
    },
    "17394": {
      "op": "DUP5"
    },
    "17395": {
      "op": "JUMPDEST"
    },
    "17396": {
      "op": "DUP2"
    },
    "17397": {
      "op": "DUP2"
    },
    "17398": {
      "op": "LT"
    },
    "17399": {
      "op": "ISZERO"
    },
    "17400": {
      "op": "PUSH2",
      "value": "0x4418"
    },
    "17403": {
      "op": "JUMPI"
    },
    "17404": {
      "op": "DUP4"
    },
    "17405": {
      "op": "MLOAD"
    },
    "17406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17412": {
      "op": "SHL"
    },
    "17413": {
      "op": "SUB"
    },
    "17414": {
      "op": "AND"
    },
    "17415": {
      "op": "DUP4"
    },
    "17416": {
      "op": "MSTORE"
    },
    "17417": {
      "op": "SWAP3"
    },
    "17418": {
      "op": "DUP5"
    },
    "17419": {
      "op": "ADD"
    },
    "17420": {
      "op": "SWAP3"
    },
    "17421": {
      "op": "SWAP2"
    },
    "17422": {
      "op": "DUP5"
    },
    "17423": {
      "op": "ADD"
    },
    "17424": {
      "op": "SWAP2"
    },
    "17425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17427": {
      "op": "ADD"
    },
    "17428": {
      "op": "PUSH2",
      "value": "0x43F3"
    },
    "17431": {
      "op": "JUMP"
    },
    "17432": {
      "op": "JUMPDEST"
    },
    "17433": {
      "op": "POP"
    },
    "17434": {
      "op": "SWAP1"
    },
    "17435": {
      "op": "SWAP7"
    },
    "17436": {
      "op": "SWAP6"
    },
    "17437": {
      "op": "POP"
    },
    "17438": {
      "op": "POP"
    },
    "17439": {
      "op": "POP"
    },
    "17440": {
      "op": "POP"
    },
    "17441": {
      "op": "POP"
    },
    "17442": {
      "op": "POP"
    },
    "17443": {
      "jump": "o",
      "op": "JUMP"
    },
    "17444": {
      "op": "JUMPDEST"
    },
    "17445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17447": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17449": {
      "op": "DUP1"
    },
    "17450": {
      "op": "DUP4"
    },
    "17451": {
      "op": "MSTORE"
    },
    "17452": {
      "op": "DUP4"
    },
    "17453": {
      "op": "MLOAD"
    },
    "17454": {
      "op": "DUP1"
    },
    "17455": {
      "op": "DUP3"
    },
    "17456": {
      "op": "DUP6"
    },
    "17457": {
      "op": "ADD"
    },
    "17458": {
      "op": "MSTORE"
    },
    "17459": {
      "op": "DUP3"
    },
    "17460": {
      "op": "JUMPDEST"
    },
    "17461": {
      "op": "DUP2"
    },
    "17462": {
      "op": "DUP2"
    },
    "17463": {
      "op": "LT"
    },
    "17464": {
      "op": "ISZERO"
    },
    "17465": {
      "op": "PUSH2",
      "value": "0x4450"
    },
    "17468": {
      "op": "JUMPI"
    },
    "17469": {
      "op": "DUP6"
    },
    "17470": {
      "op": "DUP2"
    },
    "17471": {
      "op": "ADD"
    },
    "17472": {
      "op": "DUP4"
    },
    "17473": {
      "op": "ADD"
    },
    "17474": {
      "op": "MLOAD"
    },
    "17475": {
      "op": "DUP6"
    },
    "17476": {
      "op": "DUP3"
    },
    "17477": {
      "op": "ADD"
    },
    "17478": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17480": {
      "op": "ADD"
    },
    "17481": {
      "op": "MSTORE"
    },
    "17482": {
      "op": "DUP3"
    },
    "17483": {
      "op": "ADD"
    },
    "17484": {
      "op": "PUSH2",
      "value": "0x4434"
    },
    "17487": {
      "op": "JUMP"
    },
    "17488": {
      "op": "JUMPDEST"
    },
    "17489": {
      "op": "DUP2"
    },
    "17490": {
      "op": "DUP2"
    },
    "17491": {
      "op": "GT"
    },
    "17492": {
      "op": "ISZERO"
    },
    "17493": {
      "op": "PUSH2",
      "value": "0x4461"
    },
    "17496": {
      "op": "JUMPI"
    },
    "17497": {
      "op": "DUP4"
    },
    "17498": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17500": {
      "op": "DUP4"
    },
    "17501": {
      "op": "DUP8"
    },
    "17502": {
      "op": "ADD"
    },
    "17503": {
      "op": "ADD"
    },
    "17504": {
      "op": "MSTORE"
    },
    "17505": {
      "op": "JUMPDEST"
    },
    "17506": {
      "op": "POP"
    },
    "17507": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17509": {
      "op": "ADD"
    },
    "17510": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "17512": {
      "op": "NOT"
    },
    "17513": {
      "op": "AND"
    },
    "17514": {
      "op": "SWAP3"
    },
    "17515": {
      "op": "SWAP1"
    },
    "17516": {
      "op": "SWAP3"
    },
    "17517": {
      "op": "ADD"
    },
    "17518": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17520": {
      "op": "ADD"
    },
    "17521": {
      "op": "SWAP4"
    },
    "17522": {
      "op": "SWAP3"
    },
    "17523": {
      "op": "POP"
    },
    "17524": {
      "op": "POP"
    },
    "17525": {
      "op": "POP"
    },
    "17526": {
      "jump": "o",
      "op": "JUMP"
    },
    "17527": {
      "op": "JUMPDEST"
    },
    "17528": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17530": {
      "op": "DUP1"
    },
    "17531": {
      "op": "DUP3"
    },
    "17532": {
      "op": "MSTORE"
    },
    "17533": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "17535": {
      "op": "SWAP1"
    },
    "17536": {
      "op": "DUP3"
    },
    "17537": {
      "op": "ADD"
    },
    "17538": {
      "op": "MSTORE"
    },
    "17539": {
      "op": "PUSH32",
      "value": "0x43616C6C657220697320756E617574686F72697A65642E000000000000000000"
    },
    "17572": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "17574": {
      "op": "DUP3"
    },
    "17575": {
      "op": "ADD"
    },
    "17576": {
      "op": "MSTORE"
    },
    "17577": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "17579": {
      "op": "ADD"
    },
    "17580": {
      "op": "SWAP1"
    },
    "17581": {
      "jump": "o",
      "op": "JUMP"
    },
    "17582": {
      "op": "JUMPDEST"
    },
    "17583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17585": {
      "op": "DUP3"
    },
    "17586": {
      "op": "NOT"
    },
    "17587": {
      "op": "DUP3"
    },
    "17588": {
      "op": "GT"
    },
    "17589": {
      "op": "ISZERO"
    },
    "17590": {
      "op": "PUSH2",
      "value": "0x44C1"
    },
    "17593": {
      "op": "JUMPI"
    },
    "17594": {
      "op": "PUSH2",
      "value": "0x44C1"
    },
    "17597": {
      "op": "PUSH2",
      "value": "0x45B9"
    },
    "17600": {
      "jump": "i",
      "op": "JUMP"
    },
    "17601": {
      "op": "JUMPDEST"
    },
    "17602": {
      "op": "POP"
    },
    "17603": {
      "op": "ADD"
    },
    "17604": {
      "op": "SWAP1"
    },
    "17605": {
      "jump": "o",
      "op": "JUMP"
    },
    "17606": {
      "op": "JUMPDEST"
    },
    "17607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17609": {
      "op": "DUP3"
    },
    "17610": {
      "op": "PUSH2",
      "value": "0x44E1"
    },
    "17613": {
      "op": "JUMPI"
    },
    "17614": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "17619": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17621": {
      "op": "SHL"
    },
    "17622": {
      "op": "DUP2"
    },
    "17623": {
      "op": "MSTORE"
    },
    "17624": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "17626": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "17628": {
      "op": "MSTORE"
    },
    "17629": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17631": {
      "op": "DUP2"
    },
    "17632": {
      "op": "REVERT"
    },
    "17633": {
      "op": "JUMPDEST"
    },
    "17634": {
      "op": "POP"
    },
    "17635": {
      "op": "DIV"
    },
    "17636": {
      "op": "SWAP1"
    },
    "17637": {
      "jump": "o",
      "op": "JUMP"
    },
    "17638": {
      "op": "JUMPDEST"
    },
    "17639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17641": {
      "op": "DUP2"
    },
    "17642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17644": {
      "op": "NOT"
    },
    "17645": {
      "op": "DIV"
    },
    "17646": {
      "op": "DUP4"
    },
    "17647": {
      "op": "GT"
    },
    "17648": {
      "op": "DUP3"
    },
    "17649": {
      "op": "ISZERO"
    },
    "17650": {
      "op": "ISZERO"
    },
    "17651": {
      "op": "AND"
    },
    "17652": {
      "op": "ISZERO"
    },
    "17653": {
      "op": "PUSH2",
      "value": "0x4500"
    },
    "17656": {
      "op": "JUMPI"
    },
    "17657": {
      "op": "PUSH2",
      "value": "0x4500"
    },
    "17660": {
      "op": "PUSH2",
      "value": "0x45B9"
    },
    "17663": {
      "jump": "i",
      "op": "JUMP"
    },
    "17664": {
      "op": "JUMPDEST"
    },
    "17665": {
      "op": "POP"
    },
    "17666": {
      "op": "MUL"
    },
    "17667": {
      "op": "SWAP1"
    },
    "17668": {
      "jump": "o",
      "op": "JUMP"
    },
    "17669": {
      "op": "JUMPDEST"
    },
    "17670": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17672": {
      "op": "DUP3"
    },
    "17673": {
      "op": "DUP3"
    },
    "17674": {
      "op": "LT"
    },
    "17675": {
      "op": "ISZERO"
    },
    "17676": {
      "op": "PUSH2",
      "value": "0x4517"
    },
    "17679": {
      "op": "JUMPI"
    },
    "17680": {
      "op": "PUSH2",
      "value": "0x4517"
    },
    "17683": {
      "op": "PUSH2",
      "value": "0x45B9"
    },
    "17686": {
      "jump": "i",
      "op": "JUMP"
    },
    "17687": {
      "op": "JUMPDEST"
    },
    "17688": {
      "op": "POP"
    },
    "17689": {
      "op": "SUB"
    },
    "17690": {
      "op": "SWAP1"
    },
    "17691": {
      "jump": "o",
      "op": "JUMP"
    },
    "17692": {
      "op": "JUMPDEST"
    },
    "17693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17695": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17697": {
      "op": "DUP3"
    },
    "17698": {
      "op": "AND"
    },
    "17699": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "17701": {
      "op": "DUP5"
    },
    "17702": {
      "op": "AND"
    },
    "17703": {
      "op": "DUP1"
    },
    "17704": {
      "op": "DUP3"
    },
    "17705": {
      "op": "LT"
    },
    "17706": {
      "op": "ISZERO"
    },
    "17707": {
      "op": "PUSH2",
      "value": "0x4536"
    },
    "17710": {
      "op": "JUMPI"
    },
    "17711": {
      "op": "PUSH2",
      "value": "0x4536"
    },
    "17714": {
      "op": "PUSH2",
      "value": "0x45B9"
    },
    "17717": {
      "jump": "i",
      "op": "JUMP"
    },
    "17718": {
      "op": "JUMPDEST"
    },
    "17719": {
      "op": "SWAP1"
    },
    "17720": {
      "op": "SUB"
    },
    "17721": {
      "op": "SWAP4"
    },
    "17722": {
      "op": "SWAP3"
    },
    "17723": {
      "op": "POP"
    },
    "17724": {
      "op": "POP"
    },
    "17725": {
      "op": "POP"
    },
    "17726": {
      "jump": "o",
      "op": "JUMP"
    },
    "17727": {
      "op": "JUMPDEST"
    },
    "17728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17730": {
      "op": "DUP2"
    },
    "17731": {
      "op": "DUP2"
    },
    "17732": {
      "op": "SHR"
    },
    "17733": {
      "op": "SWAP1"
    },
    "17734": {
      "op": "DUP3"
    },
    "17735": {
      "op": "AND"
    },
    "17736": {
      "op": "DUP1"
    },
    "17737": {
      "op": "PUSH2",
      "value": "0x4553"
    },
    "17740": {
      "op": "JUMPI"
    },
    "17741": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "17743": {
      "op": "DUP3"
    },
    "17744": {
      "op": "AND"
    },
    "17745": {
      "op": "SWAP2"
    },
    "17746": {
      "op": "POP"
    },
    "17747": {
      "op": "JUMPDEST"
    },
    "17748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "17750": {
      "op": "DUP3"
    },
    "17751": {
      "op": "LT"
    },
    "17752": {
      "op": "DUP2"
    },
    "17753": {
      "op": "EQ"
    },
    "17754": {
      "op": "ISZERO"
    },
    "17755": {
      "op": "PUSH2",
      "value": "0x4574"
    },
    "17758": {
      "op": "JUMPI"
    },
    "17759": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "17764": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17766": {
      "op": "SHL"
    },
    "17767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17769": {
      "op": "MSTORE"
    },
    "17770": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "17772": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "17774": {
      "op": "MSTORE"
    },
    "17775": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17779": {
      "op": "REVERT"
    },
    "17780": {
      "op": "JUMPDEST"
    },
    "17781": {
      "op": "POP"
    },
    "17782": {
      "op": "SWAP2"
    },
    "17783": {
      "op": "SWAP1"
    },
    "17784": {
      "op": "POP"
    },
    "17785": {
      "jump": "o",
      "op": "JUMP"
    },
    "17786": {
      "op": "JUMPDEST"
    },
    "17787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17791": {
      "op": "NOT"
    },
    "17792": {
      "op": "DUP3"
    },
    "17793": {
      "op": "EQ"
    },
    "17794": {
      "op": "ISZERO"
    },
    "17795": {
      "op": "PUSH2",
      "value": "0x458E"
    },
    "17798": {
      "op": "JUMPI"
    },
    "17799": {
      "op": "PUSH2",
      "value": "0x458E"
    },
    "17802": {
      "op": "PUSH2",
      "value": "0x45B9"
    },
    "17805": {
      "jump": "i",
      "op": "JUMP"
    },
    "17806": {
      "op": "JUMPDEST"
    },
    "17807": {
      "op": "POP"
    },
    "17808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17810": {
      "op": "ADD"
    },
    "17811": {
      "op": "SWAP1"
    },
    "17812": {
      "jump": "o",
      "op": "JUMP"
    },
    "17813": {
      "op": "JUMPDEST"
    },
    "17814": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17816": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "17821": {
      "op": "DUP1"
    },
    "17822": {
      "op": "DUP4"
    },
    "17823": {
      "op": "AND"
    },
    "17824": {
      "op": "DUP2"
    },
    "17825": {
      "op": "DUP2"
    },
    "17826": {
      "op": "EQ"
    },
    "17827": {
      "op": "ISZERO"
    },
    "17828": {
      "op": "PUSH2",
      "value": "0x45AF"
    },
    "17831": {
      "op": "JUMPI"
    },
    "17832": {
      "op": "PUSH2",
      "value": "0x45AF"
    },
    "17835": {
      "op": "PUSH2",
      "value": "0x45B9"
    },
    "17838": {
      "jump": "i",
      "op": "JUMP"
    },
    "17839": {
      "op": "JUMPDEST"
    },
    "17840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17842": {
      "op": "ADD"
    },
    "17843": {
      "op": "SWAP4"
    },
    "17844": {
      "op": "SWAP3"
    },
    "17845": {
      "op": "POP"
    },
    "17846": {
      "op": "POP"
    },
    "17847": {
      "op": "POP"
    },
    "17848": {
      "jump": "o",
      "op": "JUMP"
    },
    "17849": {
      "op": "JUMPDEST"
    },
    "17850": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "17855": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17857": {
      "op": "SHL"
    },
    "17858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17860": {
      "op": "MSTORE"
    },
    "17861": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "17863": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "17865": {
      "op": "MSTORE"
    },
    "17866": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "17868": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "17870": {
      "op": "REVERT"
    }
  },
  "sha1": "d4eb45533785a5339eec243883fbda03e047dc59",
  "source": "pragma solidity 0.8.4;\n\n// SPDX-License-Identifier: MIT\n\nimport './../interfaces/ICompetition.sol';\nimport './../interfaces/IToken.sol';\nimport './CompetitionStorage.sol';\nimport './AccessControlRci.sol';\nimport './standard/proxy/utils/Initializable.sol';\n\n/**\n * @title RCI Tournament(Competition) Contract\n * @author Rocket Capital Investment Pte Ltd\n * @dev This contract manages registration and reward payouts for the RCI Tournament.\n * @dev IPFS hash format: Hash Identifier (2 bytes), Actual Hash (May eventually take on other formats but currently 32 bytes)\n *\n */\ncontract Competition is AccessControlRci, ICompetition, CompetitionStorage, Initializable {\n\n    constructor(){}\n\n    function initialize(uint256 stakeThreshold_, uint256 rewardsThreshold_, address tokenAddress_)\n    external\n    initializer\n    {\n        require(tokenAddress_ != address(0), \"No token address found.\");\n        _initializeRciAdmin();\n        _stakeThreshold = stakeThreshold_;\n        _rewardsThreshold = rewardsThreshold_;\n        _token = IToken(tokenAddress_);\n        _challengeCounter = 0;\n        _challenges[_challengeCounter].phase = 4;\n        _challengeRewardsPercentageInWei = 20e16;\n        _tournamentRewardsPercentageInWei = 60e16;\n    }\n\n    /**\n    PARTICIPANT WRITE METHODS\n    **/\n\n    function increaseStake(address staker, uint256 amountToken)\n    external override\n    returns (bool success)\n    {\n        uint32 challengeNumber = _challengeCounter;\n        require(msg.sender == address(_token), \"Competition - increaseStake: Please call this function via the token contract.\");\n        require(_challenges[challengeNumber].phase != 2, \"Competition - increaseStake: Please wait for the staking period to unlock before modifying your stake.\");\n\n        uint256 currentBal = _stakes[staker];\n        if (_challenges[challengeNumber].submitterInfo[staker].submission != bytes32(0)){\n            _challenges[challengeNumber].submitterInfo[staker].staked = currentBal + amountToken;\n        }\n\n        _stakes[staker] = currentBal + amountToken;\n        _currentTotalStaked += amountToken;\n\n        success = true;\n\n        emit StakeIncreased(staker, amountToken);\n    }\n\n    function decreaseStake(address staker, uint256 amountToken)\n    external override\n    returns (bool success)\n    {\n        uint32 challengeNumber = _challengeCounter;\n        require(msg.sender == address(_token), \"Competition - decreaseStake: Please call this function via the token contract.\");\n        require(_challenges[_challengeCounter].phase != 2, \"Competition - decreaseStake: Please wait for the staking period to unlock before modifying your stake.\");\n\n        uint256 currentBal = _stakes[staker];\n        require(amountToken <= currentBal, \"Competition - decreaseStake: Insufficient funds for withdrawal.\");\n\n        if (_challenges[challengeNumber].submitterInfo[staker].submission != bytes32(0)){\n            require((currentBal - amountToken) >= _stakeThreshold, \"Competition - decreaseStake: You may not lower your stake below the threshold while you have an existing submission.\");\n            _challenges[challengeNumber].submitterInfo[staker].staked = currentBal - amountToken;\n        }\n\n        _stakes[staker] = currentBal - amountToken;\n        _currentTotalStaked -= amountToken;\n        success = _token.transfer(staker, amountToken);\n\n        emit StakeDecreased(staker, amountToken);\n    }\n\n    function submitNewPredictions(bytes32 submissionHash)\n    external override\n    returns (uint32 challengeNumber)\n    {\n        uint256 currentBal = _stakes[msg.sender];\n        require(currentBal >= _stakeThreshold, \"Competition - submitNewPredictions: Stake is below threshold.\");\n        challengeNumber = _updateSubmission(bytes32(0), submissionHash);\n        EnumerableSet.add(_challenges[challengeNumber].submitters, msg.sender);\n        _challenges[challengeNumber].submitterInfo[msg.sender].staked = currentBal;\n    }\n\n    function updateSubmission(bytes32 oldSubmissionHash, bytes32 newSubmissionHash)\n    external override\n    returns (uint32 challengeNumber)\n    {\n        require(oldSubmissionHash != bytes32(0), \"Competition - updateSubmission: Must have pre-existing submission.\");\n        challengeNumber = _updateSubmission(oldSubmissionHash, newSubmissionHash);\n\n        if (newSubmissionHash == bytes32(0)){\n            EnumerableSet.remove(_challenges[challengeNumber].submitters, msg.sender);\n            _challenges[challengeNumber].submitterInfo[msg.sender].staked = 0;\n        }\n    }\n\n    function _updateSubmission(bytes32 oldSubmissionHash, bytes32 newSubmissionHash)\n    private\n    returns (uint32 challengeNumber)\n    {\n        challengeNumber = _challengeCounter;\n        require(_challenges[challengeNumber].phase == 1, \"Competition - updateSubmission: Not available for submissions.\");\n        require(oldSubmissionHash != newSubmissionHash, \"Competition - updateSubmission: Cannot update with the same hash as before.\");\n        require(_challenges[challengeNumber].submitterInfo[msg.sender].submission == oldSubmissionHash,\n                \"Competition - updateSubmission: Clash in existing submission hash.\");\n        _challenges[challengeNumber].submitterInfo[msg.sender].submission = newSubmissionHash;\n\n        emit SubmissionUpdated(challengeNumber, msg.sender, newSubmissionHash);\n    }\n\n    /**\n    ORGANIZER WRITE METHODS\n    **/\n    function updateMessage(string calldata newMessage)\n    external override onlyAdmin\n    returns (bool success)\n    {\n        _message = newMessage;\n        success = true;\n\n        emit MessageUpdated();\n    }\n\n    function updateDeadlines(uint32 challengeNumber, uint256 index, uint256 timestamp)\n    external override onlyAdmin\n    returns (bool success)\n    {\n        success = _updateDeadlines(challengeNumber, index, timestamp);\n    }\n\n    function _updateDeadlines(uint32 challengeNumber, uint256 index, uint256 timestamp)\n    private\n    returns (bool success)\n    {\n        _challenges[challengeNumber].deadlines[index] = timestamp;\n        success = true;\n    }\n\n    function updateRewardsThreshold(uint256 newThreshold)\n    external override onlyAdmin\n    returns (bool success)\n    {\n        _rewardsThreshold = newThreshold;\n        success = true;\n\n        emit RewardsThresholdUpdated(newThreshold);\n    }\n\n    function updateStakeThreshold(uint256 newStakeThreshold)\n    external override onlyAdmin\n    returns (bool success)\n    {\n        _stakeThreshold = newStakeThreshold;\n        success = true;\n\n        emit StakeThresholdUpdated(newStakeThreshold);\n    }\n\n    function updateChallengeRewardsPercentageInWei(uint256 newPercentage)\n    external override onlyAdmin\n    returns (bool success)\n    {\n        _challengeRewardsPercentageInWei = newPercentage;\n        success = true;\n\n        emit ChallengeRewardsPercentageInWeiUpdated(newPercentage);\n    }\n\n    function updateTournamentRewardsPercentageInWei(uint256 newPercentage)\n    external override onlyAdmin\n    returns (bool success)\n    {\n        _tournamentRewardsPercentageInWei = newPercentage;\n        success = true;\n\n        emit TournamentRewardsPercentageInWeiUpdated(newPercentage);\n    }\n\n\n    function updatePrivateKey(uint32 challengeNumber, bytes32 newKeyHash)\n    external override onlyAdmin\n    returns (bool success)\n    {\n        _challenges[challengeNumber].privateKey = newKeyHash;\n        success = true;\n\n        emit PrivateKeyUpdated(newKeyHash);\n    }\n\n    function openChallenge(bytes32 datasetHash, bytes32 keyHash, uint256 submissionCloseDeadline, uint256 nextChallengeDeadline)\n    external override onlyAdmin\n    returns (bool success)\n    {\n        uint32 challengeNumber = _challengeCounter;\n        require(_challenges[challengeNumber].phase == 4, \"Competition - openChallenge: Previous phase is incomplete.\");\n        require(_competitionPool >= _rewardsThreshold, \"Competiton - openChallenge: Not enough rewards.\");\n\n        challengeNumber++;\n\n        _challenges[challengeNumber].phase = 1;\n        _challengeCounter = challengeNumber;\n\n        _updateDataset(challengeNumber, bytes32(0), datasetHash);\n        _updateKey(challengeNumber, bytes32(0), keyHash);\n\n        _currentChallengeRewardsBudget = _competitionPool * _challengeRewardsPercentageInWei/(1e18);\n        _currentTournamentRewardsBudget = _competitionPool * _tournamentRewardsPercentageInWei/(1e18);\n        _currentStakingRewardsBudget = _competitionPool - _currentChallengeRewardsBudget - _currentTournamentRewardsBudget;\n\n        _updateDeadlines(challengeNumber, 0, submissionCloseDeadline);\n        _updateDeadlines(challengeNumber, 1, nextChallengeDeadline);\n\n        success = true;\n\n        emit ChallengeOpened(challengeNumber);\n    }\n\n    function updateDataset(bytes32 oldDatasetHash, bytes32 newDatasetHash)\n    external override onlyAdmin\n    returns (bool success)\n    {\n        uint32 challengeNumber = _challengeCounter;\n        require(_challenges[challengeNumber].phase == 1, \"Competition - updateDataset: Challenge is closed.\");\n        require(oldDatasetHash != bytes32(0), \"Competition - updateDataset: Must have pre-existing dataset.\");\n        success = _updateDataset(challengeNumber, oldDatasetHash, newDatasetHash);\n    }\n\n    function updateKey(bytes32 oldKeyHash, bytes32 newKeyHash)\n    external override onlyAdmin\n    returns (bool success)\n    {\n        uint32 challengeNumber = _challengeCounter;\n        require(_challenges[challengeNumber].phase == 1, \"Competition - updateKey: Challenge is closed.\");\n        require(oldKeyHash != bytes32(0), \"Competition - updateKey: Must have pre-existing key.\");\n        success = _updateKey(challengeNumber, oldKeyHash, newKeyHash);\n    }\n\n    function _updateDataset(uint32 challengeNumber, bytes32 oldDatasetHash, bytes32 newDatasetHash)\n    private\n    returns (bool success)\n    {\n        require(oldDatasetHash != newDatasetHash, \"Competition - updateDataset: Cannot update with the same hash as before.\");\n        require(_challenges[challengeNumber].dataset == oldDatasetHash, \"Competition - updateDataset: Incorrect old dataset reference.\");\n        _challenges[challengeNumber].dataset = newDatasetHash;\n        success = true;\n\n        emit DatasetUpdated(challengeNumber, oldDatasetHash, newDatasetHash);\n    }\n\n    function _updateKey(uint32 challengeNumber, bytes32 oldKeyHash, bytes32 newKeyHash)\n    private\n    returns (bool success)\n    {\n        require(oldKeyHash != newKeyHash, \"Competition - _updateKey: Cannot update with the same hash as before.\");\n        require(_challenges[challengeNumber].key == oldKeyHash, \"Competition - _updateKey: Incorrect old key reference.\");\n        _challenges[challengeNumber].key = newKeyHash;\n        success = true;\n\n        emit KeyUpdated(challengeNumber, oldKeyHash, newKeyHash);\n    }\n\n    function closeSubmission()\n    external override onlyAdmin\n    returns (bool success)\n    {\n        uint32 challengeNumber = _challengeCounter;\n        require(_challenges[challengeNumber].phase == 1, \"Competition - closeSubmission: Challenge in unexpected state.\");\n        _challenges[challengeNumber].phase = 2;\n        success = true;\n\n        emit SubmissionClosed(challengeNumber);\n    }\n\n    function submitResults(bytes32 resultsHash)\n    external override onlyAdmin\n    returns (bool success)\n    {\n        success = _updateResults(bytes32(0), resultsHash);\n    }\n\n    function updateResults(bytes32 oldResultsHash, bytes32 newResultsHash)\n    external override onlyAdmin\n    returns (bool success)\n    {\n        require(oldResultsHash != bytes32(0), \"Competition - updateResults: Must have pre-existing results.\");\n        success = _updateResults(oldResultsHash, newResultsHash);\n    }\n\n    function _updateResults(bytes32 oldResultsHash, bytes32 newResultsHash)\n    private\n    returns (bool success)\n    {\n        require(oldResultsHash != newResultsHash, \"Competition - updateResults: Cannot update with the same hash as before.\");\n        uint32 challengeNumber = _challengeCounter;\n        require(_challenges[challengeNumber].phase >= 3, \"Competition - updateResults: Challenge in unexpected state.\");\n        require(_challenges[challengeNumber].results == oldResultsHash, \"Competition - updateResults: Clash in existing results hash.\");\n        _challenges[challengeNumber].results = newResultsHash;\n        success = true;\n\n        emit ResultsUpdated(challengeNumber, oldResultsHash, newResultsHash);\n    }\n\n    function payRewards(address[] calldata submitters, uint256[] calldata stakingRewards, uint256[] calldata challengeRewards, uint256[] calldata tournamentRewards)\n    external override onlyAdmin\n    returns (bool success)\n    {\n        success = _payRewards(_challengeCounter, submitters, stakingRewards, challengeRewards, tournamentRewards);\n    }\n\n    function _payRewards(uint32 challengeNumber, address[] calldata submitters, uint256[] calldata stakingRewards, uint256[] calldata challengeRewards, uint256[] calldata tournamentRewards)\n    private\n    returns (bool success)\n    {\n        require(_challenges[challengeNumber].phase >= 3, \"Competition - payRewards: Challenge is in unexpected state.\");\n        require((submitters.length == stakingRewards.length) &&\n            (submitters.length == challengeRewards.length) &&\n            (submitters.length == tournamentRewards.length),\n            \"Competition - payRewards: Number of submitters and rewards are different.\");\n\n        uint256 totalStakingAmount;\n        uint256 totalChallengeAmount;\n        uint256 totalTournamentAmount;\n\n        for (uint i = 0; i < submitters.length; i++)\n        {\n            // read directly from the list since the list is already in memory(calldata), and to avoid stack too deep errors.\n            totalStakingAmount += stakingRewards[i];\n            totalChallengeAmount += challengeRewards[i];\n            totalTournamentAmount += tournamentRewards[i];\n\n            _paySingleAddress(challengeNumber, submitters[i], stakingRewards[i], challengeRewards[i], tournamentRewards[i]);\n        }\n\n        // allow for reverting on underflow\n        _currentStakingRewardsBudget -= totalStakingAmount;\n        _currentChallengeRewardsBudget -= totalChallengeAmount;\n        _currentTournamentRewardsBudget -= totalTournamentAmount;\n\n        _competitionPool -= totalStakingAmount + totalChallengeAmount + totalTournamentAmount;\n        _currentTotalStaked += totalStakingAmount + totalChallengeAmount + totalTournamentAmount;\n        success = true;\n\n        _logRewardsPaid(challengeNumber, totalStakingAmount, totalChallengeAmount, totalTournamentAmount);\n    }\n\n    function _paySingleAddress(uint32 challengeNumber, address submitter, uint256 stakingReward, uint256 challengeReward, uint256 tournamentReward)\n    private\n    {\n        _stakes[submitter] += stakingReward + challengeReward + tournamentReward;\n\n        if (stakingReward > 0){\n            _challenges[challengeNumber].submitterInfo[submitter].stakingRewards += stakingReward;\n        }\n\n        if (challengeReward > 0){\n            _challenges[challengeNumber].submitterInfo[submitter].challengeRewards += challengeReward;\n        }\n\n        if (tournamentReward > 0){\n            _challenges[challengeNumber].submitterInfo[submitter].tournamentRewards += tournamentReward;\n        }\n\n        emit RewardsPayment(challengeNumber, submitter, stakingReward, challengeReward, tournamentReward);\n    }\n\n    function _logRewardsPaid(uint32 challengeNumber, uint256 totalStakingAmount, uint256 totalChallengeAmount, uint256 totalTournamentAmount)\n    private\n    {\n        emit TotalRewardsPaid(challengeNumber, totalStakingAmount, totalChallengeAmount, totalTournamentAmount);\n    }\n\n    function updateChallengeAndTournamentScores(uint32 challengeNumber, address[] calldata participants, uint256[] calldata challengeScores, uint256[] calldata tournamentScores)\n    external override onlyAdmin\n    returns (bool success)\n    {\n        require(_challenges[challengeNumber].phase >= 3, \"Competition - updateChallengeAndTournamentScores: Challenge is in unexpected state.\");\n        require((participants.length == challengeScores.length) && (participants.length == tournamentScores.length), \"Competition - updateChallengeAndTournamentScores: Number of participants and scores are different.\");\n\n        for (uint i = 0; i < participants.length; i++)\n        {\n        // read directly from the list since the list is already in memory(calldata), and to avoid stack too deep errors.\n\n            _challenges[challengeNumber].submitterInfo[participants[i]].challengeScores = challengeScores[i];\n            _challenges[challengeNumber].submitterInfo[participants[i]].tournamentScores = tournamentScores[i];\n        }\n\n        success = true;\n\n        emit ChallengeAndTournamentScoresUpdated(challengeNumber);\n    }\n\n    function updateInformationBatch(uint32 challengeNumber, address[] calldata participants, uint256 itemNumber, uint[] calldata values)\n    external override onlyAdmin\n    returns (bool success)\n    {\n        require(_challenges[challengeNumber].phase >= 3, \"Competition - updateInformationBatch: Challenge is in unexpected state.\");\n        require(participants.length == values.length, \"Competition - updateInformationBatch: Number of participants and values are different.\");\n\n        for (uint i = 0; i < participants.length; i++)\n        {\n            _challenges[challengeNumber].submitterInfo[participants[i]].info[itemNumber] = values[i];\n        }\n        success = true;\n\n        emit BatchInformationUpdated(challengeNumber, itemNumber);\n    }\n\n    function advanceToPhase(uint8 phase)\n    external override onlyAdmin\n    returns (bool success)\n    {\n        uint32 challengeNumber = _challengeCounter;\n        require((2 < phase) && (phase < 5), \"Competition - advanceToPhase: You may only use this method for advancing to phases 3 or 4.\" );\n        require((phase-1) == _challenges[challengeNumber].phase, \"Competition - advanceToPhase: You may only advance to the next phase.\");\n        _challenges[challengeNumber].phase = phase;\n\n        success = true;\n    }\n\n    function moveRemainderToPool()\n    external override onlyAdmin\n    returns (bool success)\n    {\n        require(_challenges[_challengeCounter].phase == 4, \"Competition - moveRemainderToPool: PLease wait for the challenge to complete before sponsoring.\");\n        uint256 remainder = getRemainder();\n        require(remainder > 0, \"Competition - moveRemainderToPool: No remainder to move.\");\n        _competitionPool += remainder;\n        success = true;\n\n        emit RemainderMovedToPool(remainder);\n    }\n\n    /**\n    READ METHODS\n    **/\n\n    function getCompetitionPool()\n    view external override\n    returns (uint256 competitionPool)\n    {\n        competitionPool = _competitionPool;\n    }\n\n    function getRewardsThreshold()\n    view external override\n    returns (uint256 rewardsThreshold)\n    {\n        rewardsThreshold = _rewardsThreshold;\n    }\n\n    function getCurrentTotalStaked()\n    view external override\n    returns (uint256 currentTotalStaked)\n    {\n        currentTotalStaked = _currentTotalStaked;\n    }\n\n    function getCurrentStakingRewardsBudget()\n    view external override\n    returns (uint256 currentStakingRewardsBudget)\n    {\n        currentStakingRewardsBudget = _currentStakingRewardsBudget;\n    }\n\n    function getCurrentChallengeRewardsBudget()\n    view external override\n    returns (uint256 currentChallengeRewardsBudget)\n    {\n        currentChallengeRewardsBudget = _currentChallengeRewardsBudget;\n    }\n\n    function getCurrentTournamentRewardsBudget()\n    view external override\n    returns (uint256 currentTournamentRewardsBudget)\n    {\n        currentTournamentRewardsBudget = _currentTournamentRewardsBudget;\n    }\n\n    function getChallengeRewardsPercentageInWei()\n    view external override\n    returns (uint256 challengeRewardsPercentageInWei)\n    {\n        challengeRewardsPercentageInWei = _challengeRewardsPercentageInWei;\n    }\n\n    function getTournamentRewardsPercentageInWei()\n    view external override\n    returns (uint256 tournamentRewardsPercentageInWei)\n    {\n        tournamentRewardsPercentageInWei = _tournamentRewardsPercentageInWei;\n    }\n\n    function getLatestChallengeNumber()\n    view external override\n    returns (uint32 latestChallengeNumber)\n    {\n        latestChallengeNumber = _challengeCounter;\n    }\n\n    function getDatasetHash(uint32 challengeNumber)\n    view external override\n    returns (bytes32 dataset)\n    {\n        dataset = _challenges[challengeNumber].dataset;\n    }\n\n    function getResultsHash(uint32 challengeNumber)\n    view external override\n    returns (bytes32 results)\n    {\n        results = _challenges[challengeNumber].results;\n    }\n\n    function getKeyHash(uint32 challengeNumber)\n    view external override\n    returns (bytes32 key)\n    {\n        key = _challenges[challengeNumber].key;\n    }\n\n    function getPrivateKeyHash(uint32 challengeNumber)\n    view external override\n    returns (bytes32 privateKey)\n    {\n        privateKey = _challenges[challengeNumber].privateKey;\n    }\n\n    function getSubmissionCounter(uint32 challengeNumber)\n    view external override\n    returns (uint256 submissionCounter)\n    {\n        submissionCounter = EnumerableSet.length(_challenges[challengeNumber].submitters);\n    }\n\n    function getSubmitters(uint32 challengeNumber, uint256 startIndex, uint256 endIndex)\n    view external override\n    returns (address[] memory)\n    {\n        address[] memory submitters = new address[](endIndex - startIndex);\n        EnumerableSet.AddressSet storage submittersSet = _challenges[challengeNumber].submitters;\n        for (uint i = startIndex; i < endIndex; i++) {\n            submitters[i - startIndex] = (EnumerableSet.at(submittersSet, i));\n        }\n\n        return submitters;\n    }\n\n    function getPhase(uint32 challengeNumber)\n    view external override\n    returns (uint8 phase)\n    {\n        phase = _challenges[challengeNumber].phase;\n    }\n\n    function getStakeThreshold()\n    view external override\n    returns (uint256 stakeThreshold)\n    {\n        stakeThreshold = _stakeThreshold;\n    }\n\n    function getStake(address participant)\n    view external override\n    returns (uint256 stake)\n    {\n        stake = _stakes[participant];\n    }\n\n    function getTokenAddress()\n    view external override\n    returns (address tokenAddress)\n    {\n        tokenAddress = address(_token);\n    }\n\n    function getSubmission(uint32 challengeNumber, address participant)\n    view external override\n    returns (bytes32 submissionHash)\n    {\n        submissionHash = _challenges[challengeNumber].submitterInfo[participant].submission;\n    }\n\n    function getStakedAmountForChallenge(uint32 challengeNumber, address participant)\n    view external override\n    returns (uint256 staked)\n    {\n        staked = _challenges[challengeNumber].submitterInfo[participant].staked;\n    }\n\n    function getStakingRewards(uint32 challengeNumber, address participant)\n    view external override\n    returns (uint256 stakingRewards)\n    {\n        stakingRewards = _challenges[challengeNumber].submitterInfo[participant].stakingRewards;\n    }\n\n    function getChallengeRewards(uint32 challengeNumber, address participant)\n    view external override\n    returns (uint256 challengeRewards)\n    {\n        challengeRewards = _challenges[challengeNumber].submitterInfo[participant].challengeRewards;\n    }\n\n    function getTournamentRewards(uint32 challengeNumber, address participant)\n    view external override\n    returns (uint256 tournamentRewards)\n    {\n        tournamentRewards = _challenges[challengeNumber].submitterInfo[participant].tournamentRewards;\n    }\n\n    function getOverallRewards(uint32 challengeNumber, address participant)\n    view external override\n    returns (uint256 overallRewards)\n    {\n        overallRewards =\n        _challenges[challengeNumber].submitterInfo[participant].stakingRewards\n        + _challenges[challengeNumber].submitterInfo[participant].challengeRewards\n        + _challenges[challengeNumber].submitterInfo[participant].tournamentRewards;\n    }\n\n    function getChallengeScores(uint32 challengeNumber, address participant)\n    view external override\n    returns (uint256 challengeScores)\n    {\n        challengeScores = _challenges[challengeNumber].submitterInfo[participant].challengeScores;\n    }\n\n    function getTournamentScores(uint32 challengeNumber, address participant)\n    view external override\n    returns (uint256 tournamentScores)\n    {\n        tournamentScores = _challenges[challengeNumber].submitterInfo[participant].tournamentScores;\n    }\n\n    function getInformation(uint32 challengeNumber, address participant, uint256 itemNumber)\n    view external override\n    returns (uint value)\n    {\n        value = _challenges[challengeNumber].submitterInfo[participant].info[itemNumber];\n    }\n\n    function getDeadlines(uint32 challengeNumber, uint256 index)\n    external view override\n    returns (uint256 deadline)\n    {\n        deadline = _challenges[challengeNumber].deadlines[index];\n    }\n\n    function getRemainder()\n    public view override\n    returns (uint256 remainder)\n    {\n        remainder = _token.balanceOf(address(this)) - _currentTotalStaked - _competitionPool;\n    }\n\n    function getMessage()\n    external view override\n    returns (string memory message)\n    {\n        message = _message;\n    }\n\n    /**\n    METHODS CALLABLE BY BOTH ADMIN AND PARTICIPANTS.\n    **/\n\n    function sponsor(uint256 amountToken)\n    external override\n    returns (bool success)\n    {\n        require(_challenges[_challengeCounter].phase == 4, \"Competition - sponsor: PLease wait for the challenge to complete before sponsoring.\");\n        uint256 currentCompPoolAmt = _competitionPool;\n        _competitionPool = currentCompPoolAmt + amountToken;\n        success = _token.transferFrom(msg.sender, address(this), amountToken);\n\n        emit Sponsor(msg.sender, amountToken, currentCompPoolAmt + amountToken);\n    }\n}",
  "sourceMap": "573:25384:2:-:0;;;670:15;;;;;;;;;;573:25384;;;;;;",
  "sourcePath": "contracts/Competition.sol",
  "type": "contract"
}